syntax = "proto3";
package services;
option go_package =".;services";
import "common/base.proto";
import "flowService.proto";
import "flowProcessService.proto";
import "flowNodeService.proto";

//流程实例
service ExampleService {
    rpc Create (Example) returns (ExampleResponse) {}
    rpc Delete (Example) returns (ExampleResponse) {}
    rpc Get (Example) returns (ExampleResponse) {}
    rpc Search (ExampleRequest) returns (ExampleResponse) {}
    rpc Submit (Example) returns (ExampleResponse) {}
    rpc MySearch (ExampleRequest) returns (ExampleResponse) {}
}


message Example {
    int64	id	=1;
    string	title	=2;
    int64	business_id	=3;
    string	business_type	=4;
    int64	flow_id	=5;
    int64	node_id	=6;
    int64   next_node_id = 7;
    string  approval_id = 8;
    string  approval_name = 9;
    string	memo	=10;
    string	status	=11;
    int64	user_id	=12;
    string  user_name = 13;
    string  hand_time = 14;
    string	created_at	=15;
    string	updated_at	=16;
    Flow flow =17;
    repeated FlowProcess processes=18;
    FlowNode flow_node = 19;
}


message ExampleRequest {
    int32 paged = 1;
    int32 page_size = 2;
    int32 top = 3;
    //my self
    int32	id	=4;
    string	title	=5;
    int32	user_id	=6;
    string	status	=7;
    string	owner_type	=8;
    string  approval_id = 9;
}

message ExampleData{
    Example entity = 1;
    common.Pager pager =2;
    repeated Example items = 3;
    map<string,string> params = 4;
    common.Info info =5;
}

message ExampleResponse {
    common.Error error = 1;
    ExampleData data =2;
}
