// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.11.4
// source: flowLineService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type FlowLine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	PrevNodeId int64  `protobuf:"varint,3,opt,name=prev_node_id,json=prevNodeId,proto3" json:"prev_node_id"`
	NextNodeId int64  `protobuf:"varint,4,opt,name=next_node_id,json=nextNodeId,proto3" json:"next_node_id"`
	CreatedAt  string `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt  string `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
}

func (x *FlowLine) Reset() {
	*x = FlowLine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowLineService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowLine) ProtoMessage() {}

func (x *FlowLine) ProtoReflect() protoreflect.Message {
	mi := &file_flowLineService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowLine.ProtoReflect.Descriptor instead.
func (*FlowLine) Descriptor() ([]byte, []int) {
	return file_flowLineService_proto_rawDescGZIP(), []int{0}
}

func (x *FlowLine) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FlowLine) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FlowLine) GetPrevNodeId() int64 {
	if x != nil {
		return x.PrevNodeId
	}
	return 0
}

func (x *FlowLine) GetNextNodeId() int64 {
	if x != nil {
		return x.NextNodeId
	}
	return 0
}

func (x *FlowLine) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *FlowLine) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type FlowLineRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged    int32 `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Top      int32 `protobuf:"varint,3,opt,name=top,proto3" json:"top"`
	//my self
	Id   int32  `protobuf:"varint,4,opt,name=id,proto3" json:"id"`
	Name string `protobuf:"bytes,5,opt,name=name,proto3" json:"name"`
}

func (x *FlowLineRequest) Reset() {
	*x = FlowLineRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowLineService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowLineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowLineRequest) ProtoMessage() {}

func (x *FlowLineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flowLineService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowLineRequest.ProtoReflect.Descriptor instead.
func (*FlowLineRequest) Descriptor() ([]byte, []int) {
	return file_flowLineService_proto_rawDescGZIP(), []int{1}
}

func (x *FlowLineRequest) GetPaged() int32 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *FlowLineRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *FlowLineRequest) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *FlowLineRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FlowLineRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type FlowLineData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *FlowLine         `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager     `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*FlowLine       `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Params map[string]string `protobuf:"bytes,4,rep,name=params,proto3" json:"params" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Info   *common.Info      `protobuf:"bytes,5,opt,name=info,proto3" json:"info"`
}

func (x *FlowLineData) Reset() {
	*x = FlowLineData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowLineService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowLineData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowLineData) ProtoMessage() {}

func (x *FlowLineData) ProtoReflect() protoreflect.Message {
	mi := &file_flowLineService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowLineData.ProtoReflect.Descriptor instead.
func (*FlowLineData) Descriptor() ([]byte, []int) {
	return file_flowLineService_proto_rawDescGZIP(), []int{2}
}

func (x *FlowLineData) GetEntity() *FlowLine {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *FlowLineData) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *FlowLineData) GetItems() []*FlowLine {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *FlowLineData) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *FlowLineData) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

type FlowLineResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error *common.Error `protobuf:"bytes,1,opt,name=error,proto3" json:"error"`
	Data  *FlowLineData `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *FlowLineResponse) Reset() {
	*x = FlowLineResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flowLineService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FlowLineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlowLineResponse) ProtoMessage() {}

func (x *FlowLineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flowLineService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlowLineResponse.ProtoReflect.Descriptor instead.
func (*FlowLineResponse) Descriptor() ([]byte, []int) {
	return file_flowLineService_proto_rawDescGZIP(), []int{3}
}

func (x *FlowLineResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *FlowLineResponse) GetData() *FlowLineData {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_flowLineService_proto protoreflect.FileDescriptor

var file_flowLineService_proto_rawDesc = []byte{
	0x0a, 0x15, 0x66, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb0, 0x01, 0x0a, 0x08, 0x46, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x6e,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x72, 0x65, 0x76, 0x5f, 0x6e, 0x6f,
	0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x72, 0x65,
	0x76, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6e,
	0x65, 0x78, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x7a, 0x0a, 0x0f, 0x46, 0x6c, 0x6f, 0x77, 0x4c,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61,
	0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0xa2, 0x02, 0x0a, 0x0c, 0x46, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x6e, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x46, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x46, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x3a, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x4c,
	0x69, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x1a, 0x39, 0x0a,
	0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x63, 0x0a, 0x10, 0x46, 0x6c, 0x6f, 0x77,
	0x4c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x2a, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x4c,
	0x69, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0x82, 0x03,
	0x0a, 0x0f, 0x46, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x3a, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x6e, 0x65, 0x1a,
	0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x4c,
	0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a,
	0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x6e, 0x65, 0x1a, 0x1a, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x6e, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x06, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x46,
	0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x6e, 0x65, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x12, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x6e, 0x65,
	0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x6c, 0x6f, 0x77,
	0x4c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f,
	0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x6c, 0x6f,
	0x77, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x41, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x46, 0x6c, 0x6f, 0x77, 0x4c, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_flowLineService_proto_rawDescOnce sync.Once
	file_flowLineService_proto_rawDescData = file_flowLineService_proto_rawDesc
)

func file_flowLineService_proto_rawDescGZIP() []byte {
	file_flowLineService_proto_rawDescOnce.Do(func() {
		file_flowLineService_proto_rawDescData = protoimpl.X.CompressGZIP(file_flowLineService_proto_rawDescData)
	})
	return file_flowLineService_proto_rawDescData
}

var file_flowLineService_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_flowLineService_proto_goTypes = []interface{}{
	(*FlowLine)(nil),         // 0: services.FlowLine
	(*FlowLineRequest)(nil),  // 1: services.FlowLineRequest
	(*FlowLineData)(nil),     // 2: services.FlowLineData
	(*FlowLineResponse)(nil), // 3: services.FlowLineResponse
	nil,                      // 4: services.FlowLineData.ParamsEntry
	(*common.Pager)(nil),     // 5: common.Pager
	(*common.Info)(nil),      // 6: common.Info
	(*common.Error)(nil),     // 7: common.Error
}
var file_flowLineService_proto_depIdxs = []int32{
	0,  // 0: services.FlowLineData.entity:type_name -> services.FlowLine
	5,  // 1: services.FlowLineData.pager:type_name -> common.Pager
	0,  // 2: services.FlowLineData.items:type_name -> services.FlowLine
	4,  // 3: services.FlowLineData.params:type_name -> services.FlowLineData.ParamsEntry
	6,  // 4: services.FlowLineData.info:type_name -> common.Info
	7,  // 5: services.FlowLineResponse.error:type_name -> common.Error
	2,  // 6: services.FlowLineResponse.data:type_name -> services.FlowLineData
	0,  // 7: services.FlowLineService.Create:input_type -> services.FlowLine
	0,  // 8: services.FlowLineService.Update:input_type -> services.FlowLine
	0,  // 9: services.FlowLineService.Delete:input_type -> services.FlowLine
	0,  // 10: services.FlowLineService.Get:input_type -> services.FlowLine
	1,  // 11: services.FlowLineService.List:input_type -> services.FlowLineRequest
	1,  // 12: services.FlowLineService.Search:input_type -> services.FlowLineRequest
	3,  // 13: services.FlowLineService.Create:output_type -> services.FlowLineResponse
	3,  // 14: services.FlowLineService.Update:output_type -> services.FlowLineResponse
	3,  // 15: services.FlowLineService.Delete:output_type -> services.FlowLineResponse
	3,  // 16: services.FlowLineService.Get:output_type -> services.FlowLineResponse
	3,  // 17: services.FlowLineService.List:output_type -> services.FlowLineResponse
	3,  // 18: services.FlowLineService.Search:output_type -> services.FlowLineResponse
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_flowLineService_proto_init() }
func file_flowLineService_proto_init() {
	if File_flowLineService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_flowLineService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowLine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowLineService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowLineRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowLineService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowLineData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flowLineService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FlowLineResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_flowLineService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_flowLineService_proto_goTypes,
		DependencyIndexes: file_flowLineService_proto_depIdxs,
		MessageInfos:      file_flowLineService_proto_msgTypes,
	}.Build()
	File_flowLineService_proto = out.File
	file_flowLineService_proto_rawDesc = nil
	file_flowLineService_proto_goTypes = nil
	file_flowLineService_proto_depIdxs = nil
}
