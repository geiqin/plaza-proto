syntax = "proto3";
package services;
option go_package =".;services";
import "common/base.proto";

service FlowProcessService {
    rpc Create (FlowProcess) returns (FlowProcessResponse) {}
    rpc Update (FlowProcess) returns (FlowProcessResponse) {}
    rpc Delete (FlowProcess) returns (FlowProcessResponse) {}
    rpc Get (FlowProcess) returns (FlowProcessResponse) {}
    rpc Search (FlowProcessRequest) returns (FlowProcessResponse) {}
}


message FlowProcess {
    int64	id	=1;
    string	name	=2;
    int64	example_id	=3;
    int64	node_id	=4;
    int64	user_id	=5;
    string	user_name = 6;
    int64   next_node_id = 7;
    string  next_user_id = 8;
    string  next_user_name = 9;
    string	status	=10;
    int32   is_agree = 11;
    string	content	= 12;
    string	created_at	=13;
    string	updated_at	=14;
}


message FlowProcessRequest {
    int32 paged = 1;
    int32 page_size = 2;
    int32 top = 3;
    //my self
    int32	id	=4;
    string	name	=5;
    int32	example_id	=6;
    int32	status	=7;
    string	owner_type	=8;
}

message FlowProcessData{
    FlowProcess entity = 1;
    common.Pager pager =2;
    repeated FlowProcess items = 3;
    map<string,string> params = 4;
    common.Info info =5;
}

message FlowProcessResponse {
    common.Error error = 1;
    FlowProcessData data =2;
}
