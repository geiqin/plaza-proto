// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: stockWarnService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StockWarn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	SkuId     int64    `protobuf:"varint,2,opt,name=sku_id,json=skuId,proto3" json:"sku_id"`
	MinNum    int32    `protobuf:"varint,3,opt,name=min_num,json=minNum,proto3" json:"min_num"`
	MaxNum    int32    `protobuf:"varint,4,opt,name=max_num,json=maxNum,proto3" json:"max_num"`
	StockNum  int32    `protobuf:"varint,5,opt,name=stock_num,json=stockNum,proto3" json:"stock_num"`
	WarnType  string   `protobuf:"bytes,6,opt,name=warn_type,json=warnType,proto3" json:"warn_type"`
	WarnValue int32    `protobuf:"varint,7,opt,name=warn_value,json=warnValue,proto3" json:"warn_value"`
	CreatedAt string   `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt string   `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	Sku       *SkuInfo `protobuf:"bytes,10,opt,name=sku,proto3" json:"sku"`
}

func (x *StockWarn) Reset() {
	*x = StockWarn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stockWarnService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StockWarn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockWarn) ProtoMessage() {}

func (x *StockWarn) ProtoReflect() protoreflect.Message {
	mi := &file_stockWarnService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockWarn.ProtoReflect.Descriptor instead.
func (*StockWarn) Descriptor() ([]byte, []int) {
	return file_stockWarnService_proto_rawDescGZIP(), []int{0}
}

func (x *StockWarn) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StockWarn) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *StockWarn) GetMinNum() int32 {
	if x != nil {
		return x.MinNum
	}
	return 0
}

func (x *StockWarn) GetMaxNum() int32 {
	if x != nil {
		return x.MaxNum
	}
	return 0
}

func (x *StockWarn) GetStockNum() int32 {
	if x != nil {
		return x.StockNum
	}
	return 0
}

func (x *StockWarn) GetWarnType() string {
	if x != nil {
		return x.WarnType
	}
	return ""
}

func (x *StockWarn) GetWarnValue() int32 {
	if x != nil {
		return x.WarnValue
	}
	return 0
}

func (x *StockWarn) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *StockWarn) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *StockWarn) GetSku() *SkuInfo {
	if x != nil {
		return x.Sku
	}
	return nil
}

type StockWarnRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged    int32   `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize int32   `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Sorting  string  `protobuf:"bytes,3,opt,name=sorting,proto3" json:"sorting"`
	Id       int64   `protobuf:"varint,4,opt,name=id,proto3" json:"id"`
	SkuId    int64   `protobuf:"varint,5,opt,name=sku_id,json=skuId,proto3" json:"sku_id"`
	MinNum   int32   `protobuf:"varint,6,opt,name=min_num,json=minNum,proto3" json:"min_num"`
	MaxNum   int32   `protobuf:"varint,7,opt,name=max_num,json=maxNum,proto3" json:"max_num"`
	SkuSn    string  `protobuf:"bytes,8,opt,name=sku_sn,json=skuSn,proto3" json:"sku_sn"`
	WarnType string  `protobuf:"bytes,9,opt,name=warn_type,json=warnType,proto3" json:"warn_type"`
	Ids      []int64 `protobuf:"varint,10,rep,packed,name=ids,proto3" json:"ids"`
	SkuIds   []int64 `protobuf:"varint,11,rep,packed,name=sku_ids,json=skuIds,proto3" json:"sku_ids"`
}

func (x *StockWarnRequest) Reset() {
	*x = StockWarnRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stockWarnService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StockWarnRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockWarnRequest) ProtoMessage() {}

func (x *StockWarnRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stockWarnService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockWarnRequest.ProtoReflect.Descriptor instead.
func (*StockWarnRequest) Descriptor() ([]byte, []int) {
	return file_stockWarnService_proto_rawDescGZIP(), []int{1}
}

func (x *StockWarnRequest) GetPaged() int32 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *StockWarnRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *StockWarnRequest) GetSorting() string {
	if x != nil {
		return x.Sorting
	}
	return ""
}

func (x *StockWarnRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StockWarnRequest) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *StockWarnRequest) GetMinNum() int32 {
	if x != nil {
		return x.MinNum
	}
	return 0
}

func (x *StockWarnRequest) GetMaxNum() int32 {
	if x != nil {
		return x.MaxNum
	}
	return 0
}

func (x *StockWarnRequest) GetSkuSn() string {
	if x != nil {
		return x.SkuSn
	}
	return ""
}

func (x *StockWarnRequest) GetWarnType() string {
	if x != nil {
		return x.WarnType
	}
	return ""
}

func (x *StockWarnRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *StockWarnRequest) GetSkuIds() []int64 {
	if x != nil {
		return x.SkuIds
	}
	return nil
}

type StockWarnData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *StockWarn    `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*StockWarn  `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Info   *common.Info  `protobuf:"bytes,4,opt,name=info,proto3" json:"info"`
}

func (x *StockWarnData) Reset() {
	*x = StockWarnData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stockWarnService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StockWarnData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockWarnData) ProtoMessage() {}

func (x *StockWarnData) ProtoReflect() protoreflect.Message {
	mi := &file_stockWarnService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockWarnData.ProtoReflect.Descriptor instead.
func (*StockWarnData) Descriptor() ([]byte, []int) {
	return file_stockWarnService_proto_rawDescGZIP(), []int{2}
}

func (x *StockWarnData) GetEntity() *StockWarn {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *StockWarnData) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *StockWarnData) GetItems() []*StockWarn {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *StockWarnData) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

type StockWarnResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *StockWarnData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error  `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *StockWarnResponse) Reset() {
	*x = StockWarnResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stockWarnService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StockWarnResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockWarnResponse) ProtoMessage() {}

func (x *StockWarnResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stockWarnService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockWarnResponse.ProtoReflect.Descriptor instead.
func (*StockWarnResponse) Descriptor() ([]byte, []int) {
	return file_stockWarnService_proto_rawDescGZIP(), []int{3}
}

func (x *StockWarnResponse) GetData() *StockWarnData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *StockWarnResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_stockWarnService_proto protoreflect.FileDescriptor

var file_stockWarnService_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x72, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa0, 0x02, 0x0a,
	0x09, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x72, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b,
	0x75, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61,
	0x78, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x61, 0x78,
	0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d,
	0x12, 0x1b, 0x0a, 0x09, 0x77, 0x61, 0x72, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x77, 0x61, 0x72, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x77, 0x61, 0x72, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x23, 0x0a, 0x03, 0x73, 0x6b,
	0x75, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x73, 0x6b, 0x75, 0x22,
	0x97, 0x02, 0x0a, 0x10, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x72, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69,
	0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x5f,
	0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x69, 0x6e, 0x4e, 0x75,
	0x6d, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x61, 0x78, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b,
	0x75, 0x5f, 0x73, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x53,
	0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x61, 0x72, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x61, 0x72, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x73, 0x22, 0xae, 0x01, 0x0a, 0x0d, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x57, 0x61, 0x72, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x06, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x72, 0x6e,
	0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x29, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x72,
	0x6e, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x65, 0x0a, 0x11, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x57, 0x61, 0x72, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61,
	0x72, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x32, 0x90, 0x02, 0x0a, 0x10, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x72, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x12, 0x13, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61,
	0x72, 0x6e, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x57, 0x61, 0x72, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x39, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x72, 0x6e, 0x1a, 0x1b, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61,
	0x72, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x04,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x72, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x57, 0x61, 0x72, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x43, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x72, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x57, 0x61, 0x72, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_stockWarnService_proto_rawDescOnce sync.Once
	file_stockWarnService_proto_rawDescData = file_stockWarnService_proto_rawDesc
)

func file_stockWarnService_proto_rawDescGZIP() []byte {
	file_stockWarnService_proto_rawDescOnce.Do(func() {
		file_stockWarnService_proto_rawDescData = protoimpl.X.CompressGZIP(file_stockWarnService_proto_rawDescData)
	})
	return file_stockWarnService_proto_rawDescData
}

var file_stockWarnService_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_stockWarnService_proto_goTypes = []interface{}{
	(*StockWarn)(nil),         // 0: services.StockWarn
	(*StockWarnRequest)(nil),  // 1: services.StockWarnRequest
	(*StockWarnData)(nil),     // 2: services.StockWarnData
	(*StockWarnResponse)(nil), // 3: services.StockWarnResponse
	(*SkuInfo)(nil),           // 4: services.SkuInfo
	(*common.Pager)(nil),      // 5: common.Pager
	(*common.Info)(nil),       // 6: common.Info
	(*common.Error)(nil),      // 7: common.Error
}
var file_stockWarnService_proto_depIdxs = []int32{
	4,  // 0: services.StockWarn.sku:type_name -> services.SkuInfo
	0,  // 1: services.StockWarnData.entity:type_name -> services.StockWarn
	5,  // 2: services.StockWarnData.pager:type_name -> common.Pager
	0,  // 3: services.StockWarnData.items:type_name -> services.StockWarn
	6,  // 4: services.StockWarnData.info:type_name -> common.Info
	2,  // 5: services.StockWarnResponse.data:type_name -> services.StockWarnData
	7,  // 6: services.StockWarnResponse.error:type_name -> common.Error
	0,  // 7: services.StockWarnService.Set:input_type -> services.StockWarn
	0,  // 8: services.StockWarnService.Get:input_type -> services.StockWarn
	1,  // 9: services.StockWarnService.List:input_type -> services.StockWarnRequest
	1,  // 10: services.StockWarnService.Search:input_type -> services.StockWarnRequest
	3,  // 11: services.StockWarnService.Set:output_type -> services.StockWarnResponse
	3,  // 12: services.StockWarnService.Get:output_type -> services.StockWarnResponse
	3,  // 13: services.StockWarnService.List:output_type -> services.StockWarnResponse
	3,  // 14: services.StockWarnService.Search:output_type -> services.StockWarnResponse
	11, // [11:15] is the sub-list for method output_type
	7,  // [7:11] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_stockWarnService_proto_init() }
func file_stockWarnService_proto_init() {
	if File_stockWarnService_proto != nil {
		return
	}
	file_baseInfoService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_stockWarnService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StockWarn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stockWarnService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StockWarnRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stockWarnService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StockWarnData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stockWarnService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StockWarnResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_stockWarnService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stockWarnService_proto_goTypes,
		DependencyIndexes: file_stockWarnService_proto_depIdxs,
		MessageInfos:      file_stockWarnService_proto_msgTypes,
	}.Build()
	File_stockWarnService_proto = out.File
	file_stockWarnService_proto_rawDesc = nil
	file_stockWarnService_proto_goTypes = nil
	file_stockWarnService_proto_depIdxs = nil
}
