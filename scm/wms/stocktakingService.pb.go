// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: stocktakingService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Stocktaking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64                `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	StocktakingSn      string               `protobuf:"bytes,2,opt,name=stocktaking_sn,json=stocktakingSn,proto3" json:"stocktaking_sn"`
	Type               string               `protobuf:"bytes,3,opt,name=type,proto3" json:"type"`
	WarehouseId        int64                `protobuf:"varint,4,opt,name=warehouse_id,json=warehouseId,proto3" json:"warehouse_id"`
	TotalNum           int32                `protobuf:"varint,5,opt,name=total_num,json=totalNum,proto3" json:"total_num"`
	TotalCost          int64                `protobuf:"varint,6,opt,name=total_cost,json=totalCost,proto3" json:"total_cost"`
	TotalBalanceNum    int32                `protobuf:"varint,7,opt,name=total_balance_num,json=totalBalanceNum,proto3" json:"total_balance_num"`
	TotalBalanceAmount int64                `protobuf:"varint,8,opt,name=total_balance_amount,json=totalBalanceAmount,proto3" json:"total_balance_amount"`
	FailReason         string               `protobuf:"bytes,9,opt,name=fail_reason,json=failReason,proto3" json:"fail_reason"`
	Memo               string               `protobuf:"bytes,10,opt,name=memo,proto3" json:"memo"`
	Status             string               `protobuf:"bytes,11,opt,name=status,proto3" json:"status"`
	OperatorId         int64                `protobuf:"varint,12,opt,name=operator_id,json=operatorId,proto3" json:"operator_id"`
	CreatedAt          string               `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt          string               `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	Details            []*StocktakingDetail `protobuf:"bytes,15,rep,name=details,proto3" json:"details"`
	Warehouse          *Warehouse           `protobuf:"bytes,16,opt,name=warehouse,proto3" json:"warehouse"`
}

func (x *Stocktaking) Reset() {
	*x = Stocktaking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stocktakingService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stocktaking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stocktaking) ProtoMessage() {}

func (x *Stocktaking) ProtoReflect() protoreflect.Message {
	mi := &file_stocktakingService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stocktaking.ProtoReflect.Descriptor instead.
func (*Stocktaking) Descriptor() ([]byte, []int) {
	return file_stocktakingService_proto_rawDescGZIP(), []int{0}
}

func (x *Stocktaking) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Stocktaking) GetStocktakingSn() string {
	if x != nil {
		return x.StocktakingSn
	}
	return ""
}

func (x *Stocktaking) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Stocktaking) GetWarehouseId() int64 {
	if x != nil {
		return x.WarehouseId
	}
	return 0
}

func (x *Stocktaking) GetTotalNum() int32 {
	if x != nil {
		return x.TotalNum
	}
	return 0
}

func (x *Stocktaking) GetTotalCost() int64 {
	if x != nil {
		return x.TotalCost
	}
	return 0
}

func (x *Stocktaking) GetTotalBalanceNum() int32 {
	if x != nil {
		return x.TotalBalanceNum
	}
	return 0
}

func (x *Stocktaking) GetTotalBalanceAmount() int64 {
	if x != nil {
		return x.TotalBalanceAmount
	}
	return 0
}

func (x *Stocktaking) GetFailReason() string {
	if x != nil {
		return x.FailReason
	}
	return ""
}

func (x *Stocktaking) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *Stocktaking) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Stocktaking) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *Stocktaking) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Stocktaking) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Stocktaking) GetDetails() []*StocktakingDetail {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *Stocktaking) GetWarehouse() *Warehouse {
	if x != nil {
		return x.Warehouse
	}
	return nil
}

type StocktakingDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	StocktakingId int64    `protobuf:"varint,2,opt,name=stocktaking_id,json=stocktakingId,proto3" json:"stocktaking_id"`
	SpuId         int64    `protobuf:"varint,3,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`
	SkuId         int64    `protobuf:"varint,4,opt,name=sku_id,json=skuId,proto3" json:"sku_id"`
	StockNum      int32    `protobuf:"varint,5,opt,name=stock_num,json=stockNum,proto3" json:"stock_num"`
	CheckNum      int32    `protobuf:"varint,6,opt,name=check_num,json=checkNum,proto3" json:"check_num"`
	BalanceNum    int32    `protobuf:"varint,7,opt,name=balance_num,json=balanceNum,proto3" json:"balance_num"`
	CostPrice     int64    `protobuf:"varint,8,opt,name=cost_price,json=costPrice,proto3" json:"cost_price"`
	BalanceAmount int64    `protobuf:"varint,9,opt,name=balance_amount,json=balanceAmount,proto3" json:"balance_amount"`
	Memo          string   `protobuf:"bytes,10,opt,name=memo,proto3" json:"memo"`
	CreatedAt     string   `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt     string   `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	Sku           *SkuInfo `protobuf:"bytes,13,opt,name=sku,proto3" json:"sku"`
}

func (x *StocktakingDetail) Reset() {
	*x = StocktakingDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stocktakingService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StocktakingDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StocktakingDetail) ProtoMessage() {}

func (x *StocktakingDetail) ProtoReflect() protoreflect.Message {
	mi := &file_stocktakingService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StocktakingDetail.ProtoReflect.Descriptor instead.
func (*StocktakingDetail) Descriptor() ([]byte, []int) {
	return file_stocktakingService_proto_rawDescGZIP(), []int{1}
}

func (x *StocktakingDetail) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StocktakingDetail) GetStocktakingId() int64 {
	if x != nil {
		return x.StocktakingId
	}
	return 0
}

func (x *StocktakingDetail) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *StocktakingDetail) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *StocktakingDetail) GetStockNum() int32 {
	if x != nil {
		return x.StockNum
	}
	return 0
}

func (x *StocktakingDetail) GetCheckNum() int32 {
	if x != nil {
		return x.CheckNum
	}
	return 0
}

func (x *StocktakingDetail) GetBalanceNum() int32 {
	if x != nil {
		return x.BalanceNum
	}
	return 0
}

func (x *StocktakingDetail) GetCostPrice() int64 {
	if x != nil {
		return x.CostPrice
	}
	return 0
}

func (x *StocktakingDetail) GetBalanceAmount() int64 {
	if x != nil {
		return x.BalanceAmount
	}
	return 0
}

func (x *StocktakingDetail) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *StocktakingDetail) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *StocktakingDetail) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *StocktakingDetail) GetSku() *SkuInfo {
	if x != nil {
		return x.Sku
	}
	return nil
}

type StocktakingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged         int32   `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize      int32   `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Id            int64   `protobuf:"varint,3,opt,name=id,proto3" json:"id"`
	Type          string  `protobuf:"bytes,5,opt,name=type,proto3" json:"type"`
	SheetType     int32   `protobuf:"varint,6,opt,name=sheet_type,json=sheetType,proto3" json:"sheet_type"`
	Status        string  `protobuf:"bytes,7,opt,name=status,proto3" json:"status"`
	WarehouseId   int64   `protobuf:"varint,8,opt,name=warehouse_id,json=warehouseId,proto3" json:"warehouse_id"`
	Failure       string  `protobuf:"bytes,9,opt,name=failure,proto3" json:"failure"`
	StocktakingId int64   `protobuf:"varint,10,opt,name=stocktaking_id,json=stocktakingId,proto3" json:"stocktaking_id"`
	Ids           []int64 `protobuf:"varint,4,rep,packed,name=ids,proto3" json:"ids"`
}

func (x *StocktakingRequest) Reset() {
	*x = StocktakingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stocktakingService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StocktakingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StocktakingRequest) ProtoMessage() {}

func (x *StocktakingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stocktakingService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StocktakingRequest.ProtoReflect.Descriptor instead.
func (*StocktakingRequest) Descriptor() ([]byte, []int) {
	return file_stocktakingService_proto_rawDescGZIP(), []int{2}
}

func (x *StocktakingRequest) GetPaged() int32 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *StocktakingRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *StocktakingRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StocktakingRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *StocktakingRequest) GetSheetType() int32 {
	if x != nil {
		return x.SheetType
	}
	return 0
}

func (x *StocktakingRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *StocktakingRequest) GetWarehouseId() int64 {
	if x != nil {
		return x.WarehouseId
	}
	return 0
}

func (x *StocktakingRequest) GetFailure() string {
	if x != nil {
		return x.Failure
	}
	return ""
}

func (x *StocktakingRequest) GetStocktakingId() int64 {
	if x != nil {
		return x.StocktakingId
	}
	return 0
}

func (x *StocktakingRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type StocktakingData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity  *Stocktaking         `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager   *common.Pager        `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items   []*Stocktaking       `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Details []*StocktakingDetail `protobuf:"bytes,4,rep,name=details,proto3" json:"details"`
	Info    *common.Info         `protobuf:"bytes,5,opt,name=info,proto3" json:"info"`
}

func (x *StocktakingData) Reset() {
	*x = StocktakingData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stocktakingService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StocktakingData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StocktakingData) ProtoMessage() {}

func (x *StocktakingData) ProtoReflect() protoreflect.Message {
	mi := &file_stocktakingService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StocktakingData.ProtoReflect.Descriptor instead.
func (*StocktakingData) Descriptor() ([]byte, []int) {
	return file_stocktakingService_proto_rawDescGZIP(), []int{3}
}

func (x *StocktakingData) GetEntity() *Stocktaking {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *StocktakingData) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *StocktakingData) GetItems() []*Stocktaking {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *StocktakingData) GetDetails() []*StocktakingDetail {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *StocktakingData) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

type StocktakingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *StocktakingData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error    `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *StocktakingResponse) Reset() {
	*x = StocktakingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stocktakingService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StocktakingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StocktakingResponse) ProtoMessage() {}

func (x *StocktakingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stocktakingService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StocktakingResponse.ProtoReflect.Descriptor instead.
func (*StocktakingResponse) Descriptor() ([]byte, []int) {
	return file_stocktakingService_proto_rawDescGZIP(), []int{4}
}

func (x *StocktakingResponse) GetData() *StocktakingData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *StocktakingResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_stocktakingService_proto protoreflect.FileDescriptor

var file_stocktakingService_proto_rawDesc = []byte{
	0x0a, 0x18, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16,
	0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xab, 0x04, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x74,
	0x61, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75,
	0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x73, 0x74, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x73, 0x74,
	0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x30, 0x0a, 0x14,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x66, 0x61, 0x69, 0x6c, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d,
	0x65, 0x6d, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x35, 0x0a, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x74, 0x61, 0x6b, 0x69,
	0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x31, 0x0a, 0x09, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x09, 0x77, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x22, 0x90, 0x03, 0x0a, 0x11, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x74, 0x61,
	0x6b, 0x69, 0x6e, 0x67, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x49,
	0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x70, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x73, 0x70, 0x75, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f,
	0x73, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6d, 0x65, 0x6d, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x23, 0x0a, 0x03, 0x73, 0x6b, 0x75, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x6b, 0x75, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x03, 0x73, 0x6b, 0x75, 0x22, 0x98, 0x02, 0x0a, 0x12, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x65, 0x65, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x68, 0x65, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x66, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x6f,
	0x63, 0x6b, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x22, 0xeb, 0x01, 0x0a, 0x0f, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x74, 0x61, 0x6b, 0x69,
	0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61,
	0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x35, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x20,
	0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x22, 0x69, 0x0a, 0x13, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xa5, 0x03, 0x0a, 0x12,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x74, 0x61, 0x6b,
	0x69, 0x6e, 0x67, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x15,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x74,
	0x61, 0x6b, 0x69, 0x6e, 0x67, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x74, 0x61, 0x6b, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x03, 0x47,
	0x65, 0x74, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x06, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_stocktakingService_proto_rawDescOnce sync.Once
	file_stocktakingService_proto_rawDescData = file_stocktakingService_proto_rawDesc
)

func file_stocktakingService_proto_rawDescGZIP() []byte {
	file_stocktakingService_proto_rawDescOnce.Do(func() {
		file_stocktakingService_proto_rawDescData = protoimpl.X.CompressGZIP(file_stocktakingService_proto_rawDescData)
	})
	return file_stocktakingService_proto_rawDescData
}

var file_stocktakingService_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_stocktakingService_proto_goTypes = []interface{}{
	(*Stocktaking)(nil),         // 0: services.Stocktaking
	(*StocktakingDetail)(nil),   // 1: services.StocktakingDetail
	(*StocktakingRequest)(nil),  // 2: services.StocktakingRequest
	(*StocktakingData)(nil),     // 3: services.StocktakingData
	(*StocktakingResponse)(nil), // 4: services.StocktakingResponse
	(*Warehouse)(nil),           // 5: services.Warehouse
	(*SkuInfo)(nil),             // 6: services.SkuInfo
	(*common.Pager)(nil),        // 7: common.Pager
	(*common.Info)(nil),         // 8: common.Info
	(*common.Error)(nil),        // 9: common.Error
}
var file_stocktakingService_proto_depIdxs = []int32{
	1,  // 0: services.Stocktaking.details:type_name -> services.StocktakingDetail
	5,  // 1: services.Stocktaking.warehouse:type_name -> services.Warehouse
	6,  // 2: services.StocktakingDetail.sku:type_name -> services.SkuInfo
	0,  // 3: services.StocktakingData.entity:type_name -> services.Stocktaking
	7,  // 4: services.StocktakingData.pager:type_name -> common.Pager
	0,  // 5: services.StocktakingData.items:type_name -> services.Stocktaking
	1,  // 6: services.StocktakingData.details:type_name -> services.StocktakingDetail
	8,  // 7: services.StocktakingData.info:type_name -> common.Info
	3,  // 8: services.StocktakingResponse.data:type_name -> services.StocktakingData
	9,  // 9: services.StocktakingResponse.error:type_name -> common.Error
	0,  // 10: services.StocktakingService.Create:input_type -> services.Stocktaking
	0,  // 11: services.StocktakingService.Update:input_type -> services.Stocktaking
	0,  // 12: services.StocktakingService.Delete:input_type -> services.Stocktaking
	0,  // 13: services.StocktakingService.Confirm:input_type -> services.Stocktaking
	0,  // 14: services.StocktakingService.Get:input_type -> services.Stocktaking
	2,  // 15: services.StocktakingService.Search:input_type -> services.StocktakingRequest
	4,  // 16: services.StocktakingService.Create:output_type -> services.StocktakingResponse
	4,  // 17: services.StocktakingService.Update:output_type -> services.StocktakingResponse
	4,  // 18: services.StocktakingService.Delete:output_type -> services.StocktakingResponse
	4,  // 19: services.StocktakingService.Confirm:output_type -> services.StocktakingResponse
	4,  // 20: services.StocktakingService.Get:output_type -> services.StocktakingResponse
	4,  // 21: services.StocktakingService.Search:output_type -> services.StocktakingResponse
	16, // [16:22] is the sub-list for method output_type
	10, // [10:16] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_stocktakingService_proto_init() }
func file_stocktakingService_proto_init() {
	if File_stocktakingService_proto != nil {
		return
	}
	file_baseInfoService_proto_init()
	file_warehouseService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_stocktakingService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stocktaking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stocktakingService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StocktakingDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stocktakingService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StocktakingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stocktakingService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StocktakingData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stocktakingService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StocktakingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_stocktakingService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stocktakingService_proto_goTypes,
		DependencyIndexes: file_stocktakingService_proto_depIdxs,
		MessageInfos:      file_stocktakingService_proto_msgTypes,
	}.Build()
	File_stocktakingService_proto = out.File
	file_stocktakingService_proto_rawDesc = nil
	file_stocktakingService_proto_goTypes = nil
	file_stocktakingService_proto_depIdxs = nil
}
