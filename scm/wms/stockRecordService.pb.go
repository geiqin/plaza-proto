// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: stockRecordService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StockRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	SkuId       int64      `protobuf:"varint,2,opt,name=sku_id,json=skuId,proto3" json:"sku_id"`
	Type        string     `protobuf:"bytes,3,opt,name=type,proto3" json:"type"`
	SheetTypeId int32      `protobuf:"varint,4,opt,name=sheet_type_id,json=sheetTypeId,proto3" json:"sheet_type_id"`
	CostPrice   int64      `protobuf:"varint,5,opt,name=cost_price,json=costPrice,proto3" json:"cost_price"`
	OriginId    int64      `protobuf:"varint,6,opt,name=origin_id,json=originId,proto3" json:"origin_id"`
	OriginCode  string     `protobuf:"bytes,7,opt,name=origin_code,json=originCode,proto3" json:"origin_code"`
	WarehouseId int32      `protobuf:"varint,8,opt,name=warehouse_id,json=warehouseId,proto3" json:"warehouse_id"`
	ChangeNum   int32      `protobuf:"varint,10,opt,name=change_num,json=changeNum,proto3" json:"change_num"`
	BalanceNum  int32      `protobuf:"varint,11,opt,name=balance_num,json=balanceNum,proto3" json:"balance_num"`
	CreatedAt   string     `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt   string     `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	Sku         *SkuInfo   `protobuf:"bytes,14,opt,name=sku,proto3" json:"sku"`
	SheetType   *SheetType `protobuf:"bytes,15,opt,name=sheet_type,json=sheetType,proto3" json:"sheet_type"`
	Warehouse   *Warehouse `protobuf:"bytes,16,opt,name=warehouse,proto3" json:"warehouse"`
}

func (x *StockRecord) Reset() {
	*x = StockRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stockRecordService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StockRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockRecord) ProtoMessage() {}

func (x *StockRecord) ProtoReflect() protoreflect.Message {
	mi := &file_stockRecordService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockRecord.ProtoReflect.Descriptor instead.
func (*StockRecord) Descriptor() ([]byte, []int) {
	return file_stockRecordService_proto_rawDescGZIP(), []int{0}
}

func (x *StockRecord) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StockRecord) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *StockRecord) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *StockRecord) GetSheetTypeId() int32 {
	if x != nil {
		return x.SheetTypeId
	}
	return 0
}

func (x *StockRecord) GetCostPrice() int64 {
	if x != nil {
		return x.CostPrice
	}
	return 0
}

func (x *StockRecord) GetOriginId() int64 {
	if x != nil {
		return x.OriginId
	}
	return 0
}

func (x *StockRecord) GetOriginCode() string {
	if x != nil {
		return x.OriginCode
	}
	return ""
}

func (x *StockRecord) GetWarehouseId() int32 {
	if x != nil {
		return x.WarehouseId
	}
	return 0
}

func (x *StockRecord) GetChangeNum() int32 {
	if x != nil {
		return x.ChangeNum
	}
	return 0
}

func (x *StockRecord) GetBalanceNum() int32 {
	if x != nil {
		return x.BalanceNum
	}
	return 0
}

func (x *StockRecord) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *StockRecord) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *StockRecord) GetSku() *SkuInfo {
	if x != nil {
		return x.Sku
	}
	return nil
}

func (x *StockRecord) GetSheetType() *SheetType {
	if x != nil {
		return x.SheetType
	}
	return nil
}

func (x *StockRecord) GetWarehouse() *Warehouse {
	if x != nil {
		return x.Warehouse
	}
	return nil
}

type StockRecordRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged       int32   `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize    int32   `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Sorting     string  `protobuf:"bytes,3,opt,name=sorting,proto3" json:"sorting"`
	Id          int64   `protobuf:"varint,4,opt,name=id,proto3" json:"id"`
	SkuId       int64   `protobuf:"varint,5,opt,name=sku_id,json=skuId,proto3" json:"sku_id"`
	SkuSn       string  `protobuf:"bytes,6,opt,name=sku_sn,json=skuSn,proto3" json:"sku_sn"`
	Type        string  `protobuf:"bytes,7,opt,name=type,proto3" json:"type"`
	SheetTypeId int32   `protobuf:"varint,8,opt,name=sheet_type_id,json=sheetTypeId,proto3" json:"sheet_type_id"`
	WarehouseId int32   `protobuf:"varint,9,opt,name=warehouse_id,json=warehouseId,proto3" json:"warehouse_id"`
	Ids         []int64 `protobuf:"varint,10,rep,packed,name=ids,proto3" json:"ids"`
}

func (x *StockRecordRequest) Reset() {
	*x = StockRecordRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stockRecordService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StockRecordRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockRecordRequest) ProtoMessage() {}

func (x *StockRecordRequest) ProtoReflect() protoreflect.Message {
	mi := &file_stockRecordService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockRecordRequest.ProtoReflect.Descriptor instead.
func (*StockRecordRequest) Descriptor() ([]byte, []int) {
	return file_stockRecordService_proto_rawDescGZIP(), []int{1}
}

func (x *StockRecordRequest) GetPaged() int32 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *StockRecordRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *StockRecordRequest) GetSorting() string {
	if x != nil {
		return x.Sorting
	}
	return ""
}

func (x *StockRecordRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *StockRecordRequest) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *StockRecordRequest) GetSkuSn() string {
	if x != nil {
		return x.SkuSn
	}
	return ""
}

func (x *StockRecordRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *StockRecordRequest) GetSheetTypeId() int32 {
	if x != nil {
		return x.SheetTypeId
	}
	return 0
}

func (x *StockRecordRequest) GetWarehouseId() int32 {
	if x != nil {
		return x.WarehouseId
	}
	return 0
}

func (x *StockRecordRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type StockRecordData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *StockRecord   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager  `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*StockRecord `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Info   *common.Info   `protobuf:"bytes,4,opt,name=info,proto3" json:"info"`
}

func (x *StockRecordData) Reset() {
	*x = StockRecordData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stockRecordService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StockRecordData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockRecordData) ProtoMessage() {}

func (x *StockRecordData) ProtoReflect() protoreflect.Message {
	mi := &file_stockRecordService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockRecordData.ProtoReflect.Descriptor instead.
func (*StockRecordData) Descriptor() ([]byte, []int) {
	return file_stockRecordService_proto_rawDescGZIP(), []int{2}
}

func (x *StockRecordData) GetEntity() *StockRecord {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *StockRecordData) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *StockRecordData) GetItems() []*StockRecord {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *StockRecordData) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

type StockRecordResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *StockRecordData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error    `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *StockRecordResponse) Reset() {
	*x = StockRecordResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_stockRecordService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StockRecordResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StockRecordResponse) ProtoMessage() {}

func (x *StockRecordResponse) ProtoReflect() protoreflect.Message {
	mi := &file_stockRecordService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StockRecordResponse.ProtoReflect.Descriptor instead.
func (*StockRecordResponse) Descriptor() ([]byte, []int) {
	return file_stockRecordService_proto_rawDescGZIP(), []int{3}
}

func (x *StockRecordResponse) GetData() *StockRecordData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *StockRecordResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_stockRecordService_proto protoreflect.FileDescriptor

var file_stockRecordService_proto_rawDesc = []byte{
	0x0a, 0x18, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16,
	0x73, 0x68, 0x65, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf6,
	0x03, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x68, 0x65,
	0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x73, 0x68, 0x65, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61,
	0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0b,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x23, 0x0a, 0x03, 0x73,
	0x6b, 0x75, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x73, 0x6b, 0x75,
	0x12, 0x32, 0x0a, 0x0a, 0x73, 0x68, 0x65, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x53, 0x68, 0x65, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x73, 0x68, 0x65, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73,
	0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x52, 0x09, 0x77, 0x61,
	0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x22, 0x8c, 0x02, 0x0a, 0x12, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73,
	0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75,
	0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x6e, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x53, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a,
	0x0d, 0x73, 0x68, 0x65, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x68, 0x65, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0xb4, 0x01, 0x0a, 0x0f, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x06, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x2b,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x69, 0x0a,
	0x13, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xe3, 0x01, 0x0a, 0x12, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x3d, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x1a, 0x1d, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45,
	0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12,
	0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d,
	0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_stockRecordService_proto_rawDescOnce sync.Once
	file_stockRecordService_proto_rawDescData = file_stockRecordService_proto_rawDesc
)

func file_stockRecordService_proto_rawDescGZIP() []byte {
	file_stockRecordService_proto_rawDescOnce.Do(func() {
		file_stockRecordService_proto_rawDescData = protoimpl.X.CompressGZIP(file_stockRecordService_proto_rawDescData)
	})
	return file_stockRecordService_proto_rawDescData
}

var file_stockRecordService_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_stockRecordService_proto_goTypes = []interface{}{
	(*StockRecord)(nil),         // 0: services.StockRecord
	(*StockRecordRequest)(nil),  // 1: services.StockRecordRequest
	(*StockRecordData)(nil),     // 2: services.StockRecordData
	(*StockRecordResponse)(nil), // 3: services.StockRecordResponse
	(*SkuInfo)(nil),             // 4: services.SkuInfo
	(*SheetType)(nil),           // 5: services.SheetType
	(*Warehouse)(nil),           // 6: services.Warehouse
	(*common.Pager)(nil),        // 7: common.Pager
	(*common.Info)(nil),         // 8: common.Info
	(*common.Error)(nil),        // 9: common.Error
}
var file_stockRecordService_proto_depIdxs = []int32{
	4,  // 0: services.StockRecord.sku:type_name -> services.SkuInfo
	5,  // 1: services.StockRecord.sheet_type:type_name -> services.SheetType
	6,  // 2: services.StockRecord.warehouse:type_name -> services.Warehouse
	0,  // 3: services.StockRecordData.entity:type_name -> services.StockRecord
	7,  // 4: services.StockRecordData.pager:type_name -> common.Pager
	0,  // 5: services.StockRecordData.items:type_name -> services.StockRecord
	8,  // 6: services.StockRecordData.info:type_name -> common.Info
	2,  // 7: services.StockRecordResponse.data:type_name -> services.StockRecordData
	9,  // 8: services.StockRecordResponse.error:type_name -> common.Error
	0,  // 9: services.StockRecordService.Get:input_type -> services.StockRecord
	1,  // 10: services.StockRecordService.List:input_type -> services.StockRecordRequest
	1,  // 11: services.StockRecordService.Search:input_type -> services.StockRecordRequest
	3,  // 12: services.StockRecordService.Get:output_type -> services.StockRecordResponse
	3,  // 13: services.StockRecordService.List:output_type -> services.StockRecordResponse
	3,  // 14: services.StockRecordService.Search:output_type -> services.StockRecordResponse
	12, // [12:15] is the sub-list for method output_type
	9,  // [9:12] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_stockRecordService_proto_init() }
func file_stockRecordService_proto_init() {
	if File_stockRecordService_proto != nil {
		return
	}
	file_baseInfoService_proto_init()
	file_sheetTypeService_proto_init()
	file_warehouseService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_stockRecordService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StockRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stockRecordService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StockRecordRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stockRecordService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StockRecordData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_stockRecordService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StockRecordResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_stockRecordService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stockRecordService_proto_goTypes,
		DependencyIndexes: file_stockRecordService_proto_depIdxs,
		MessageInfos:      file_stockRecordService_proto_msgTypes,
	}.Build()
	File_stockRecordService_proto = out.File
	file_stockRecordService_proto_rawDesc = nil
	file_stockRecordService_proto_goTypes = nil
	file_stockRecordService_proto_depIdxs = nil
}
