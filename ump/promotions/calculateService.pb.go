// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: calculateService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

//计算结果方案
type Calculate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency            string                 `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`                                                     //货币类型
	TotalDiscountAmount int64                  `protobuf:"varint,3,opt,name=total_discount_amount,json=totalDiscountAmount,proto3" json:"total_discount_amount,omitempty"` //总优惠金额
	TotalPresentNum     int32                  `protobuf:"varint,4,opt,name=total_present_num,json=totalPresentNum,proto3" json:"total_present_num,omitempty"`             //总赠品数量
	Products            []*CalculateProduct    `protobuf:"bytes,5,rep,name=products,proto3" json:"products,omitempty"`                                                     //商品列表
	Adjustments         []*CalculateAdjustment `protobuf:"bytes,6,rep,name=adjustments,proto3" json:"adjustments,omitempty"`                                               //价格变动记录
	Presents            []*CalculatePresent    `protobuf:"bytes,7,rep,name=presents,proto3" json:"presents,omitempty"`                                                     //赠品列表
}

func (x *Calculate) Reset() {
	*x = Calculate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculateService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Calculate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Calculate) ProtoMessage() {}

func (x *Calculate) ProtoReflect() protoreflect.Message {
	mi := &file_calculateService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Calculate.ProtoReflect.Descriptor instead.
func (*Calculate) Descriptor() ([]byte, []int) {
	return file_calculateService_proto_rawDescGZIP(), []int{0}
}

func (x *Calculate) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Calculate) GetTotalDiscountAmount() int64 {
	if x != nil {
		return x.TotalDiscountAmount
	}
	return 0
}

func (x *Calculate) GetTotalPresentNum() int32 {
	if x != nil {
		return x.TotalPresentNum
	}
	return 0
}

func (x *Calculate) GetProducts() []*CalculateProduct {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *Calculate) GetAdjustments() []*CalculateAdjustment {
	if x != nil {
		return x.Adjustments
	}
	return nil
}

func (x *Calculate) GetPresents() []*CalculatePresent {
	if x != nil {
		return x.Presents
	}
	return nil
}

type CalculateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalNum         int32           `protobuf:"varint,1,opt,name=total_num,json=totalNum,proto3" json:"total_num,omitempty"`
	TotalWeight      int64           `protobuf:"varint,2,opt,name=total_weight,json=totalWeight,proto3" json:"total_weight,omitempty"`
	Currency         string          `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency,omitempty"`
	GoodsAmount      int64           `protobuf:"varint,4,opt,name=goods_amount,json=goodsAmount,proto3" json:"goods_amount,omitempty"`
	DiscountAmount   int64           `protobuf:"varint,5,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount,omitempty"`
	ShipAreaId       int64           `protobuf:"varint,6,opt,name=ship_area_id,json=shipAreaId,proto3" json:"ship_area_id,omitempty"`
	CouponId         int64           `protobuf:"varint,7,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id,omitempty"`
	MemberId         int64           `protobuf:"varint,8,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	MemberRankId     int32           `protobuf:"varint,9,opt,name=member_rank_id,json=memberRankId,proto3" json:"member_rank_id,omitempty"`
	CalculateSkuId   int64           `protobuf:"varint,10,opt,name=calculate_sku_id,json=calculateSkuId,proto3" json:"calculate_sku_id,omitempty"`                                                                                                //单个商品计算
	CalculateSkuList map[int64]int32 `protobuf:"bytes,12,rep,name=calculate_sku_list,json=calculateSkuList,proto3" json:"calculate_sku_list,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //多个商品计算（商品ID/数量)
	Skus             []*SkuInfo      `protobuf:"bytes,13,rep,name=skus,proto3" json:"skus,omitempty"`                                                                                                                                             //原始sku数据
}

func (x *CalculateRequest) Reset() {
	*x = CalculateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculateService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateRequest) ProtoMessage() {}

func (x *CalculateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calculateService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateRequest.ProtoReflect.Descriptor instead.
func (*CalculateRequest) Descriptor() ([]byte, []int) {
	return file_calculateService_proto_rawDescGZIP(), []int{1}
}

func (x *CalculateRequest) GetTotalNum() int32 {
	if x != nil {
		return x.TotalNum
	}
	return 0
}

func (x *CalculateRequest) GetTotalWeight() int64 {
	if x != nil {
		return x.TotalWeight
	}
	return 0
}

func (x *CalculateRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *CalculateRequest) GetGoodsAmount() int64 {
	if x != nil {
		return x.GoodsAmount
	}
	return 0
}

func (x *CalculateRequest) GetDiscountAmount() int64 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *CalculateRequest) GetShipAreaId() int64 {
	if x != nil {
		return x.ShipAreaId
	}
	return 0
}

func (x *CalculateRequest) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *CalculateRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *CalculateRequest) GetMemberRankId() int32 {
	if x != nil {
		return x.MemberRankId
	}
	return 0
}

func (x *CalculateRequest) GetCalculateSkuId() int64 {
	if x != nil {
		return x.CalculateSkuId
	}
	return 0
}

func (x *CalculateRequest) GetCalculateSkuList() map[int64]int32 {
	if x != nil {
		return x.CalculateSkuList
	}
	return nil
}

func (x *CalculateRequest) GetSkus() []*SkuInfo {
	if x != nil {
		return x.Skus
	}
	return nil
}

type CalculateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *Calculate   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Skus   []*SkuInfo   `protobuf:"bytes,2,rep,name=skus,proto3" json:"skus,omitempty"`
	Info   *common.Info `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *CalculateData) Reset() {
	*x = CalculateData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculateService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateData) ProtoMessage() {}

func (x *CalculateData) ProtoReflect() protoreflect.Message {
	mi := &file_calculateService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateData.ProtoReflect.Descriptor instead.
func (*CalculateData) Descriptor() ([]byte, []int) {
	return file_calculateService_proto_rawDescGZIP(), []int{2}
}

func (x *CalculateData) GetEntity() *Calculate {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *CalculateData) GetSkus() []*SkuInfo {
	if x != nil {
		return x.Skus
	}
	return nil
}

func (x *CalculateData) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

type CalculateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *CalculateData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Error *common.Error  `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CalculateResponse) Reset() {
	*x = CalculateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculateService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateResponse) ProtoMessage() {}

func (x *CalculateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calculateService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateResponse.ProtoReflect.Descriptor instead.
func (*CalculateResponse) Descriptor() ([]byte, []int) {
	return file_calculateService_proto_rawDescGZIP(), []int{3}
}

func (x *CalculateResponse) GetData() *CalculateData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CalculateResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type CalculateAdjustment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuId        int64  `protobuf:"varint,1,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`                      //商品ID
	Type         string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`                                      //类型
	Label        string `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`                                    //标签内容
	OriginCode   string `protobuf:"bytes,4,opt,name=origin_code,json=originCode,proto3" json:"origin_code,omitempty"`        //来源编码
	ChangeAmount int64  `protobuf:"varint,5,opt,name=change_amount,json=changeAmount,proto3" json:"change_amount,omitempty"` //变动金额
	Included     bool   `protobuf:"varint,6,opt,name=included,proto3" json:"included,omitempty"`                             ////是否会影响最终订单需要支付的价格
	Memo         string `protobuf:"bytes,7,opt,name=memo,proto3" json:"memo,omitempty"`                                      //备注
}

func (x *CalculateAdjustment) Reset() {
	*x = CalculateAdjustment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculateService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateAdjustment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateAdjustment) ProtoMessage() {}

func (x *CalculateAdjustment) ProtoReflect() protoreflect.Message {
	mi := &file_calculateService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateAdjustment.ProtoReflect.Descriptor instead.
func (*CalculateAdjustment) Descriptor() ([]byte, []int) {
	return file_calculateService_proto_rawDescGZIP(), []int{0, 0}
}

func (x *CalculateAdjustment) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *CalculateAdjustment) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CalculateAdjustment) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *CalculateAdjustment) GetOriginCode() string {
	if x != nil {
		return x.OriginCode
	}
	return ""
}

func (x *CalculateAdjustment) GetChangeAmount() int64 {
	if x != nil {
		return x.ChangeAmount
	}
	return 0
}

func (x *CalculateAdjustment) GetIncluded() bool {
	if x != nil {
		return x.Included
	}
	return false
}

func (x *CalculateAdjustment) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

type CalculateProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuId          int64 `protobuf:"varint,1,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	Num            int32 `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	Price          int64 `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
	PromotionPrice int64 `protobuf:"varint,4,opt,name=promotion_price,json=promotionPrice,proto3" json:"promotion_price,omitempty"`
	DiscountMoney  int64 `protobuf:"varint,5,opt,name=discount_money,json=discountMoney,proto3" json:"discount_money,omitempty"`
	RowAmount      int64 `protobuf:"varint,6,opt,name=row_amount,json=rowAmount,proto3" json:"row_amount,omitempty"`
}

func (x *CalculateProduct) Reset() {
	*x = CalculateProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculateService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculateProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculateProduct) ProtoMessage() {}

func (x *CalculateProduct) ProtoReflect() protoreflect.Message {
	mi := &file_calculateService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculateProduct.ProtoReflect.Descriptor instead.
func (*CalculateProduct) Descriptor() ([]byte, []int) {
	return file_calculateService_proto_rawDescGZIP(), []int{0, 1}
}

func (x *CalculateProduct) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *CalculateProduct) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *CalculateProduct) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *CalculateProduct) GetPromotionPrice() int64 {
	if x != nil {
		return x.PromotionPrice
	}
	return 0
}

func (x *CalculateProduct) GetDiscountMoney() int64 {
	if x != nil {
		return x.DiscountMoney
	}
	return 0
}

func (x *CalculateProduct) GetRowAmount() int64 {
	if x != nil {
		return x.RowAmount
	}
	return 0
}

type CalculatePresent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuId int64 `protobuf:"varint,1,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	Num   int32 `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
}

func (x *CalculatePresent) Reset() {
	*x = CalculatePresent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculateService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculatePresent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculatePresent) ProtoMessage() {}

func (x *CalculatePresent) ProtoReflect() protoreflect.Message {
	mi := &file_calculateService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculatePresent.ProtoReflect.Descriptor instead.
func (*CalculatePresent) Descriptor() ([]byte, []int) {
	return file_calculateService_proto_rawDescGZIP(), []int{0, 2}
}

func (x *CalculatePresent) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *CalculatePresent) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

var File_calculateService_proto protoreflect.FileDescriptor

var file_calculateService_proto_rawDesc = []byte{
	0x0a, 0x16, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x73, 0x6b, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xef, 0x05, 0x0a, 0x09,
	0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x32, 0x0a, 0x15, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x65, 0x73, 0x65,
	0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x37, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x40,
	0x0a, 0x0b, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x37, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x52,
	0x08, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0xc3, 0x01, 0x0a, 0x0a, 0x61, 0x64,
	0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d,
	0x65, 0x6d, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x1a,
	0xb7, 0x01, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x73,
	0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75,
	0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x6e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f,
	0x77, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x72, 0x6f, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x32, 0x0a, 0x07, 0x70, 0x72, 0x65,
	0x73, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e,
	0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0xb2, 0x04,
	0x0a, 0x10, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x12,
	0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x21,
	0x0a, 0x0c, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x68,
	0x69, 0x70, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x41, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10,
	0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x65, 0x53, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x5e, 0x0a, 0x12, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x30, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43,
	0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x6b, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x10, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x53,
	0x6b, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x73, 0x6b, 0x75, 0x73, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x53, 0x6b, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x73, 0x6b, 0x75, 0x73, 0x1a, 0x43, 0x0a,
	0x15, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x6b, 0x75, 0x4c, 0x69, 0x73,
	0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x85, 0x01, 0x0a, 0x0d, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x25, 0x0a, 0x04, 0x73, 0x6b, 0x75, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x6b, 0x75, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x73, 0x6b, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x65, 0x0a, 0x11, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x32, 0xe5, 0x01, 0x0a, 0x10, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x08,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_calculateService_proto_rawDescOnce sync.Once
	file_calculateService_proto_rawDescData = file_calculateService_proto_rawDesc
)

func file_calculateService_proto_rawDescGZIP() []byte {
	file_calculateService_proto_rawDescOnce.Do(func() {
		file_calculateService_proto_rawDescData = protoimpl.X.CompressGZIP(file_calculateService_proto_rawDescData)
	})
	return file_calculateService_proto_rawDescData
}

var file_calculateService_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_calculateService_proto_goTypes = []interface{}{
	(*Calculate)(nil),           // 0: services.Calculate
	(*CalculateRequest)(nil),    // 1: services.CalculateRequest
	(*CalculateData)(nil),       // 2: services.CalculateData
	(*CalculateResponse)(nil),   // 3: services.CalculateResponse
	(*CalculateAdjustment)(nil), // 4: services.Calculate.adjustment
	(*CalculateProduct)(nil),    // 5: services.Calculate.product
	(*CalculatePresent)(nil),    // 6: services.Calculate.present
	nil,                         // 7: services.CalculateRequest.CalculateSkuListEntry
	(*SkuInfo)(nil),             // 8: services.SkuInfo
	(*common.Info)(nil),         // 9: common.Info
	(*common.Error)(nil),        // 10: common.Error
}
var file_calculateService_proto_depIdxs = []int32{
	5,  // 0: services.Calculate.products:type_name -> services.Calculate.product
	4,  // 1: services.Calculate.adjustments:type_name -> services.Calculate.adjustment
	6,  // 2: services.Calculate.presents:type_name -> services.Calculate.present
	7,  // 3: services.CalculateRequest.calculate_sku_list:type_name -> services.CalculateRequest.CalculateSkuListEntry
	8,  // 4: services.CalculateRequest.skus:type_name -> services.SkuInfo
	0,  // 5: services.CalculateData.entity:type_name -> services.Calculate
	8,  // 6: services.CalculateData.skus:type_name -> services.SkuInfo
	9,  // 7: services.CalculateData.info:type_name -> common.Info
	2,  // 8: services.CalculateResponse.data:type_name -> services.CalculateData
	10, // 9: services.CalculateResponse.error:type_name -> common.Error
	1,  // 10: services.CalculateService.Display:input_type -> services.CalculateRequest
	1,  // 11: services.CalculateService.Purchase:input_type -> services.CalculateRequest
	1,  // 12: services.CalculateService.Payment:input_type -> services.CalculateRequest
	3,  // 13: services.CalculateService.Display:output_type -> services.CalculateResponse
	3,  // 14: services.CalculateService.Purchase:output_type -> services.CalculateResponse
	3,  // 15: services.CalculateService.Payment:output_type -> services.CalculateResponse
	13, // [13:16] is the sub-list for method output_type
	10, // [10:13] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_calculateService_proto_init() }
func file_calculateService_proto_init() {
	if File_calculateService_proto != nil {
		return
	}
	file_skuInfoService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_calculateService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Calculate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculateService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculateService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculateService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculateService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateAdjustment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculateService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculateProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculateService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculatePresent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_calculateService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_calculateService_proto_goTypes,
		DependencyIndexes: file_calculateService_proto_depIdxs,
		MessageInfos:      file_calculateService_proto_msgTypes,
	}.Build()
	File_calculateService_proto = out.File
	file_calculateService_proto_rawDesc = nil
	file_calculateService_proto_goTypes = nil
	file_calculateService_proto_depIdxs = nil
}
