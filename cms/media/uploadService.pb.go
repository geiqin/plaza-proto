// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: uploadService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//上传数据
type UploadBytesInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        string `protobuf:"bytes,1,opt,name=type,proto3" json:"type"`
	Content     []byte `protobuf:"bytes,2,opt,name=content,proto3" json:"content"`
	FileName    string `protobuf:"bytes,3,opt,name=file_name,json=fileName,proto3" json:"file_name"`
	RawName     string `protobuf:"bytes,4,opt,name=raw_name,json=rawName,proto3" json:"raw_name"`
	Path        string `protobuf:"bytes,5,opt,name=path,proto3" json:"path"`
	Url         string `protobuf:"bytes,6,opt,name=url,proto3" json:"url"`
	MimeType    string `protobuf:"bytes,7,opt,name=mime_type,json=mimeType,proto3" json:"mime_type"`
	Size        int64  `protobuf:"varint,8,opt,name=size,proto3" json:"size"`
	Width       int64  `protobuf:"varint,9,opt,name=width,proto3" json:"width"`
	Height      int64  `protobuf:"varint,10,opt,name=height,proto3" json:"height"`
	Length      int64  `protobuf:"varint,11,opt,name=length,proto3" json:"length"`
	Pixel       int64  `protobuf:"varint,12,opt,name=pixel,proto3" json:"pixel"`
	CreatorType string `protobuf:"bytes,13,opt,name=creator_type,json=creatorType,proto3" json:"creator_type"`
	CreatorId   int64  `protobuf:"varint,14,opt,name=creator_id,json=creatorId,proto3" json:"creator_id"`
	CreatorName string `protobuf:"bytes,15,opt,name=creator_name,json=creatorName,proto3" json:"creator_name"`
}

func (x *UploadBytesInfo) Reset() {
	*x = UploadBytesInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uploadService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadBytesInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadBytesInfo) ProtoMessage() {}

func (x *UploadBytesInfo) ProtoReflect() protoreflect.Message {
	mi := &file_uploadService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadBytesInfo.ProtoReflect.Descriptor instead.
func (*UploadBytesInfo) Descriptor() ([]byte, []int) {
	return file_uploadService_proto_rawDescGZIP(), []int{0}
}

func (x *UploadBytesInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UploadBytesInfo) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *UploadBytesInfo) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadBytesInfo) GetRawName() string {
	if x != nil {
		return x.RawName
	}
	return ""
}

func (x *UploadBytesInfo) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *UploadBytesInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *UploadBytesInfo) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *UploadBytesInfo) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *UploadBytesInfo) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *UploadBytesInfo) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *UploadBytesInfo) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *UploadBytesInfo) GetPixel() int64 {
	if x != nil {
		return x.Pixel
	}
	return 0
}

func (x *UploadBytesInfo) GetCreatorType() string {
	if x != nil {
		return x.CreatorType
	}
	return ""
}

func (x *UploadBytesInfo) GetCreatorId() int64 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *UploadBytesInfo) GetCreatorName() string {
	if x != nil {
		return x.CreatorName
	}
	return ""
}

// 修改文件请求信息
type UploadRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged    int64 `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Top      int64 `protobuf:"varint,3,opt,name=top,proto3" json:"top"`
	Keywords int32 `protobuf:"varint,4,opt,name=keywords,proto3" json:"keywords"`
	//file params
	Id          int64    `protobuf:"varint,5,opt,name=id,proto3" json:"id"`
	Title       string   `protobuf:"bytes,6,opt,name=title,proto3" json:"title"`
	CatId       int64    `protobuf:"varint,7,opt,name=cat_id,json=catId,proto3" json:"cat_id"`
	Type        string   `protobuf:"bytes,8,opt,name=type,proto3" json:"type"`
	MimeType    string   `protobuf:"bytes,9,opt,name=mime_type,json=mimeType,proto3" json:"mime_type"`
	FileName    string   `protobuf:"bytes,10,opt,name=file_name,json=fileName,proto3" json:"file_name"`
	RawName     string   `protobuf:"bytes,11,opt,name=raw_name,json=rawName,proto3" json:"raw_name"`
	Hash        string   `protobuf:"bytes,12,opt,name=hash,proto3" json:"hash"`
	Flag        string   `protobuf:"bytes,13,opt,name=flag,proto3" json:"flag"`
	IsBigFile   bool     `protobuf:"varint,14,opt,name=is_big_file,json=isBigFile,proto3" json:"is_big_file"`
	IsNotCat    bool     `protobuf:"varint,15,opt,name=is_not_cat,json=isNotCat,proto3" json:"is_not_cat"`
	IsPrivate   bool     `protobuf:"varint,16,opt,name=is_private,json=isPrivate,proto3" json:"is_private"`
	CreatorType string   `protobuf:"bytes,17,opt,name=creator_type,json=creatorType,proto3" json:"creator_type"`
	CreatorId   int64    `protobuf:"varint,18,opt,name=creator_id,json=creatorId,proto3" json:"creator_id"`
	Memo        string   `protobuf:"bytes,19,opt,name=memo,proto3" json:"memo"`
	CoverId     int64    `protobuf:"varint,20,opt,name=cover_id,json=coverId,proto3" json:"cover_id"`
	CoverUrl    string   `protobuf:"bytes,21,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url"`
	Code        string   `protobuf:"bytes,22,opt,name=code,proto3" json:"code"`
	CatSlug     string   `protobuf:"bytes,23,opt,name=cat_slug,json=catSlug,proto3" json:"cat_slug"`
	Types       []string `protobuf:"bytes,24,rep,name=types,proto3" json:"types"`
	Codes       []string `protobuf:"bytes,25,rep,name=codes,proto3" json:"codes"`
	Ids         []int64  `protobuf:"varint,26,rep,packed,name=ids,proto3" json:"ids"`
}

func (x *UploadRequest) Reset() {
	*x = UploadRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uploadService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadRequest) ProtoMessage() {}

func (x *UploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_uploadService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadRequest.ProtoReflect.Descriptor instead.
func (*UploadRequest) Descriptor() ([]byte, []int) {
	return file_uploadService_proto_rawDescGZIP(), []int{1}
}

func (x *UploadRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *UploadRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *UploadRequest) GetTop() int64 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *UploadRequest) GetKeywords() int32 {
	if x != nil {
		return x.Keywords
	}
	return 0
}

func (x *UploadRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UploadRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UploadRequest) GetCatId() int64 {
	if x != nil {
		return x.CatId
	}
	return 0
}

func (x *UploadRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UploadRequest) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *UploadRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadRequest) GetRawName() string {
	if x != nil {
		return x.RawName
	}
	return ""
}

func (x *UploadRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *UploadRequest) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

func (x *UploadRequest) GetIsBigFile() bool {
	if x != nil {
		return x.IsBigFile
	}
	return false
}

func (x *UploadRequest) GetIsNotCat() bool {
	if x != nil {
		return x.IsNotCat
	}
	return false
}

func (x *UploadRequest) GetIsPrivate() bool {
	if x != nil {
		return x.IsPrivate
	}
	return false
}

func (x *UploadRequest) GetCreatorType() string {
	if x != nil {
		return x.CreatorType
	}
	return ""
}

func (x *UploadRequest) GetCreatorId() int64 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *UploadRequest) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *UploadRequest) GetCoverId() int64 {
	if x != nil {
		return x.CoverId
	}
	return 0
}

func (x *UploadRequest) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *UploadRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *UploadRequest) GetCatSlug() string {
	if x != nil {
		return x.CatSlug
	}
	return ""
}

func (x *UploadRequest) GetTypes() []string {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *UploadRequest) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

func (x *UploadRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type UploadData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *File             `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Params map[string]string `protobuf:"bytes,5,rep,name=params,proto3" json:"params" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *UploadData) Reset() {
	*x = UploadData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uploadService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadData) ProtoMessage() {}

func (x *UploadData) ProtoReflect() protoreflect.Message {
	mi := &file_uploadService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadData.ProtoReflect.Descriptor instead.
func (*UploadData) Descriptor() ([]byte, []int) {
	return file_uploadService_proto_rawDescGZIP(), []int{2}
}

func (x *UploadData) GetEntity() *File {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *UploadData) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

type UploadResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *UploadData   `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *UploadResponse) Reset() {
	*x = UploadResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_uploadService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadResponse) ProtoMessage() {}

func (x *UploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_uploadService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadResponse.ProtoReflect.Descriptor instead.
func (*UploadResponse) Descriptor() ([]byte, []int) {
	return file_uploadService_proto_rawDescGZIP(), []int{3}
}

func (x *UploadResponse) GetData() *UploadData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *UploadResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_uploadService_proto protoreflect.FileDescriptor

var file_uploadService_proto_rawDesc = []byte{
	0x0a, 0x13, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a,
	0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x11, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8f, 0x03, 0x0a, 0x0f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x42, 0x79, 0x74, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x77, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x61, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x69, 0x78, 0x65, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x69, 0x78,
	0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x96, 0x05, 0x0a, 0x0d, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x12, 0x1a,
	0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x15, 0x0a, 0x06, 0x63, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x63, 0x61, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x72, 0x61, 0x77, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x61, 0x77, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x68, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x62,
	0x69, 0x67, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x42, 0x69, 0x67, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x6e,
	0x6f, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73,
	0x4e, 0x6f, 0x74, 0x43, 0x61, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x5f, 0x73,
	0x6c, 0x75, 0x67, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x74, 0x53, 0x6c,
	0x75, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x18, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65,
	0x73, 0x18, 0x19, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x22, 0xa9, 0x01, 0x0a, 0x0a, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x26, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52,
	0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x5f, 0x0a, 0x0e,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0x55, 0x0a,
	0x0d, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44,
	0x0a, 0x0b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x79, 0x74, 0x65, 0x73, 0x12, 0x19, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_uploadService_proto_rawDescOnce sync.Once
	file_uploadService_proto_rawDescData = file_uploadService_proto_rawDesc
)

func file_uploadService_proto_rawDescGZIP() []byte {
	file_uploadService_proto_rawDescOnce.Do(func() {
		file_uploadService_proto_rawDescData = protoimpl.X.CompressGZIP(file_uploadService_proto_rawDescData)
	})
	return file_uploadService_proto_rawDescData
}

var file_uploadService_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_uploadService_proto_goTypes = []interface{}{
	(*UploadBytesInfo)(nil), // 0: services.UploadBytesInfo
	(*UploadRequest)(nil),   // 1: services.UploadRequest
	(*UploadData)(nil),      // 2: services.UploadData
	(*UploadResponse)(nil),  // 3: services.UploadResponse
	nil,                     // 4: services.UploadData.ParamsEntry
	(*File)(nil),            // 5: services.File
	(*common.Error)(nil),    // 6: common.Error
}
var file_uploadService_proto_depIdxs = []int32{
	5, // 0: services.UploadData.entity:type_name -> services.File
	4, // 1: services.UploadData.params:type_name -> services.UploadData.ParamsEntry
	2, // 2: services.UploadResponse.data:type_name -> services.UploadData
	6, // 3: services.UploadResponse.error:type_name -> common.Error
	0, // 4: services.UploadService.UploadBytes:input_type -> services.UploadBytesInfo
	3, // 5: services.UploadService.UploadBytes:output_type -> services.UploadResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_uploadService_proto_init() }
func file_uploadService_proto_init() {
	if File_uploadService_proto != nil {
		return
	}
	file_fileService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_uploadService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadBytesInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uploadService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uploadService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_uploadService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_uploadService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_uploadService_proto_goTypes,
		DependencyIndexes: file_uploadService_proto_depIdxs,
		MessageInfos:      file_uploadService_proto_msgTypes,
	}.Build()
	File_uploadService_proto = out.File
	file_uploadService_proto_rawDesc = nil
	file_uploadService_proto_goTypes = nil
	file_uploadService_proto_depIdxs = nil
}
