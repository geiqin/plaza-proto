// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: qrcodeService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 二维码信息
type Qrcode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                             //ID
	Hash      string `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash"`                          //文件Hash
	Title     string `protobuf:"bytes,3,opt,name=title,proto3" json:"title"`                        //标题
	Platform  string `protobuf:"bytes,4,opt,name=platform,proto3" json:"platform"`                  //所属平台: weixin 微信
	Type      string `protobuf:"bytes,5,opt,name=type,proto3" json:"type"`                          //类型: appmini_weixin 微信小程序二维码
	Driver    string `protobuf:"bytes,6,opt,name=driver,proto3" json:"driver"`                      //来源：比如：qiniu 七牛云 aliyun 阿里云, local 本地等
	FileName  string `protobuf:"bytes,7,opt,name=file_name,json=fileName,proto3" json:"file_name"`  //文件名称
	SavePath  string `protobuf:"bytes,8,opt,name=save_path,json=savePath,proto3" json:"save_path"`  //文件储存相对路径
	Url       string `protobuf:"bytes,9,opt,name=url,proto3" json:"url"`                            //文件完整路径
	MimeType  string `protobuf:"bytes,10,opt,name=mime_type,json=mimeType,proto3" json:"mime_type"` //文件类型
	Size      int64  `protobuf:"varint,11,opt,name=size,proto3" json:"size"`                        //文件大小
	Width     int64  `protobuf:"varint,12,opt,name=width,proto3" json:"width"`                      //图片宽
	Height    int64  `protobuf:"varint,13,opt,name=height,proto3" json:"height"`                    //图片高
	UserType  string `protobuf:"bytes,14,opt,name=user_type,json=userType,proto3" json:"user_type"` //用户类型
	UserId    int64  `protobuf:"varint,15,opt,name=user_id,json=userId,proto3" json:"user_id"`      //用户Id
	IsDelete  string `protobuf:"bytes,16,opt,name=is_delete,json=isDelete,proto3" json:"is_delete"` //是否删除（0否，1是）
	CreatedAt string `protobuf:"bytes,17,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt string `protobuf:"bytes,18,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
}

func (x *Qrcode) Reset() {
	*x = Qrcode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrcodeService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Qrcode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Qrcode) ProtoMessage() {}

func (x *Qrcode) ProtoReflect() protoreflect.Message {
	mi := &file_qrcodeService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Qrcode.ProtoReflect.Descriptor instead.
func (*Qrcode) Descriptor() ([]byte, []int) {
	return file_qrcodeService_proto_rawDescGZIP(), []int{0}
}

func (x *Qrcode) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Qrcode) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *Qrcode) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Qrcode) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *Qrcode) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Qrcode) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *Qrcode) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *Qrcode) GetSavePath() string {
	if x != nil {
		return x.SavePath
	}
	return ""
}

func (x *Qrcode) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Qrcode) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *Qrcode) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Qrcode) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Qrcode) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Qrcode) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

func (x *Qrcode) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Qrcode) GetIsDelete() string {
	if x != nil {
		return x.IsDelete
	}
	return ""
}

func (x *Qrcode) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Qrcode) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// 修改文件请求信息
type QrcodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged    int64 `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Top      int64 `protobuf:"varint,3,opt,name=top,proto3" json:"top"`
	Keywords int32 `protobuf:"varint,4,opt,name=keywords,proto3" json:"keywords"`
	//params
	Id       int64   `protobuf:"varint,5,opt,name=id,proto3" json:"id"`
	Title    string  `protobuf:"bytes,6,opt,name=title,proto3" json:"title"`
	Type     string  `protobuf:"bytes,8,opt,name=type,proto3" json:"type"`
	MimeType string  `protobuf:"bytes,9,opt,name=mime_type,json=mimeType,proto3" json:"mime_type"`
	FileName string  `protobuf:"bytes,10,opt,name=file_name,json=fileName,proto3" json:"file_name"`
	Platform string  `protobuf:"bytes,11,opt,name=platform,proto3" json:"platform"`
	Hash     string  `protobuf:"bytes,12,opt,name=hash,proto3" json:"hash"`
	UserType string  `protobuf:"bytes,17,opt,name=user_type,json=userType,proto3" json:"user_type"`
	UserId   int64   `protobuf:"varint,18,opt,name=user_id,json=userId,proto3" json:"user_id"`
	Ids      []int64 `protobuf:"varint,26,rep,packed,name=ids,proto3" json:"ids"`
}

func (x *QrcodeRequest) Reset() {
	*x = QrcodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrcodeService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QrcodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QrcodeRequest) ProtoMessage() {}

func (x *QrcodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_qrcodeService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QrcodeRequest.ProtoReflect.Descriptor instead.
func (*QrcodeRequest) Descriptor() ([]byte, []int) {
	return file_qrcodeService_proto_rawDescGZIP(), []int{1}
}

func (x *QrcodeRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *QrcodeRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QrcodeRequest) GetTop() int64 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *QrcodeRequest) GetKeywords() int32 {
	if x != nil {
		return x.Keywords
	}
	return 0
}

func (x *QrcodeRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QrcodeRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *QrcodeRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *QrcodeRequest) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *QrcodeRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *QrcodeRequest) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *QrcodeRequest) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *QrcodeRequest) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

func (x *QrcodeRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *QrcodeRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type QrcodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *Qrcode       `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*Qrcode     `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Info   string        `protobuf:"bytes,4,opt,name=info,proto3" json:"info"`
}

func (x *QrcodeResponse) Reset() {
	*x = QrcodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qrcodeService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QrcodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QrcodeResponse) ProtoMessage() {}

func (x *QrcodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_qrcodeService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QrcodeResponse.ProtoReflect.Descriptor instead.
func (*QrcodeResponse) Descriptor() ([]byte, []int) {
	return file_qrcodeService_proto_rawDescGZIP(), []int{2}
}

func (x *QrcodeResponse) GetEntity() *Qrcode {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *QrcodeResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *QrcodeResponse) GetItems() []*Qrcode {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *QrcodeResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

var File_qrcodeService_proto protoreflect.FileDescriptor

var file_qrcodeService_proto_rawDesc = []byte{
	0x0a, 0x13, 0x71, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a,
	0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0xc6, 0x03, 0x0a, 0x06, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61, 0x73,
	0x68, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65,
	0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12,
	0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x61, 0x76, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x61, 0x76, 0x65, 0x50, 0x61, 0x74, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xdc, 0x02, 0x0a, 0x0d,
	0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61,
	0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74,
	0x6f, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x12,
	0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x61,
	0x73, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x1a, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x0e, 0x51,
	0x72, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a,
	0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x52,
	0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x32, 0xf6, 0x02, 0x0a, 0x0d, 0x51, 0x72, 0x63,
	0x6f, 0x64, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x06, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x36, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x10, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0x18,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x06, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x03, 0x47, 0x65, 0x74,
	0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x51, 0x72, 0x63, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x3d, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x17, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x51, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_qrcodeService_proto_rawDescOnce sync.Once
	file_qrcodeService_proto_rawDescData = file_qrcodeService_proto_rawDesc
)

func file_qrcodeService_proto_rawDescGZIP() []byte {
	file_qrcodeService_proto_rawDescOnce.Do(func() {
		file_qrcodeService_proto_rawDescData = protoimpl.X.CompressGZIP(file_qrcodeService_proto_rawDescData)
	})
	return file_qrcodeService_proto_rawDescData
}

var file_qrcodeService_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_qrcodeService_proto_goTypes = []interface{}{
	(*Qrcode)(nil),         // 0: services.Qrcode
	(*QrcodeRequest)(nil),  // 1: services.QrcodeRequest
	(*QrcodeResponse)(nil), // 2: services.QrcodeResponse
	(*common.Pager)(nil),   // 3: common.Pager
}
var file_qrcodeService_proto_depIdxs = []int32{
	0, // 0: services.QrcodeResponse.entity:type_name -> services.Qrcode
	3, // 1: services.QrcodeResponse.pager:type_name -> common.Pager
	0, // 2: services.QrcodeResponse.items:type_name -> services.Qrcode
	0, // 3: services.QrcodeService.Create:input_type -> services.Qrcode
	0, // 4: services.QrcodeService.Update:input_type -> services.Qrcode
	1, // 5: services.QrcodeService.Delete:input_type -> services.QrcodeRequest
	1, // 6: services.QrcodeService.Get:input_type -> services.QrcodeRequest
	1, // 7: services.QrcodeService.List:input_type -> services.QrcodeRequest
	1, // 8: services.QrcodeService.Search:input_type -> services.QrcodeRequest
	2, // 9: services.QrcodeService.Create:output_type -> services.QrcodeResponse
	2, // 10: services.QrcodeService.Update:output_type -> services.QrcodeResponse
	2, // 11: services.QrcodeService.Delete:output_type -> services.QrcodeResponse
	2, // 12: services.QrcodeService.Get:output_type -> services.QrcodeResponse
	2, // 13: services.QrcodeService.List:output_type -> services.QrcodeResponse
	2, // 14: services.QrcodeService.Search:output_type -> services.QrcodeResponse
	9, // [9:15] is the sub-list for method output_type
	3, // [3:9] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_qrcodeService_proto_init() }
func file_qrcodeService_proto_init() {
	if File_qrcodeService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_qrcodeService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Qrcode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrcodeService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QrcodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qrcodeService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QrcodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_qrcodeService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_qrcodeService_proto_goTypes,
		DependencyIndexes: file_qrcodeService_proto_depIdxs,
		MessageInfos:      file_qrcodeService_proto_msgTypes,
	}.Build()
	File_qrcodeService_proto = out.File
	file_qrcodeService_proto_rawDesc = nil
	file_qrcodeService_proto_goTypes = nil
	file_qrcodeService_proto_depIdxs = nil
}
