// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: fileBatchService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 标签信息
type FileBatch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                                                                                   //ID
	Code       string            `protobuf:"bytes,2,opt,name=code,proto3" json:"code"`                                                                                                //批次code
	Channel    string            `protobuf:"bytes,3,opt,name=channel,proto3" json:"channel"`                                                                                          //通道名称
	Driver     string            `protobuf:"bytes,4,opt,name=driver,proto3" json:"driver"`                                                                                            //来源：比如：qiniu 七牛云 aliyun 阿里云, local 本地等
	Bucket     string            `protobuf:"bytes,5,opt,name=bucket,proto3" json:"bucket"`                                                                                            //来源Bucket
	HostUrl    string            `protobuf:"bytes,6,opt,name=host_url,json=hostUrl,proto3" json:"host_url"`                                                                           //HostUrl
	CatId      int64             `protobuf:"varint,7,opt,name=cat_id,json=catId,proto3" json:"cat_id"`                                                                                //分类Id
	UserId     int64             `protobuf:"varint,8,opt,name=user_id,json=userId,proto3" json:"user_id"`                                                                             //用户Id
	UserType   string            `protobuf:"bytes,9,opt,name=user_type,json=userType,proto3" json:"user_type"`                                                                        //用户类型
	UserName   string            `protobuf:"bytes,10,opt,name=user_name,json=userName,proto3" json:"user_name"`                                                                       //用户名称
	FinishTime string            `protobuf:"bytes,11,opt,name=finish_time,json=finishTime,proto3" json:"finish_time"`                                                                 //完成时间
	ClientIp   string            `protobuf:"bytes,12,opt,name=client_ip,json=clientIp,proto3" json:"client_ip"`                                                                       //上传批次
	Status     string            `protobuf:"bytes,13,opt,name=status,proto3" json:"status"`                                                                                           //状态：0 待上传 ，1已上传， 2已失败
	Extends    map[string]string `protobuf:"bytes,14,rep,name=extends,proto3" json:"extends" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //扩展信息
	CreatedAt  string            `protobuf:"bytes,15,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt  string            `protobuf:"bytes,16,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
}

func (x *FileBatch) Reset() {
	*x = FileBatch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileBatchService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileBatch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileBatch) ProtoMessage() {}

func (x *FileBatch) ProtoReflect() protoreflect.Message {
	mi := &file_fileBatchService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileBatch.ProtoReflect.Descriptor instead.
func (*FileBatch) Descriptor() ([]byte, []int) {
	return file_fileBatchService_proto_rawDescGZIP(), []int{0}
}

func (x *FileBatch) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FileBatch) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *FileBatch) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *FileBatch) GetDriver() string {
	if x != nil {
		return x.Driver
	}
	return ""
}

func (x *FileBatch) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *FileBatch) GetHostUrl() string {
	if x != nil {
		return x.HostUrl
	}
	return ""
}

func (x *FileBatch) GetCatId() int64 {
	if x != nil {
		return x.CatId
	}
	return 0
}

func (x *FileBatch) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *FileBatch) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

func (x *FileBatch) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *FileBatch) GetFinishTime() string {
	if x != nil {
		return x.FinishTime
	}
	return ""
}

func (x *FileBatch) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *FileBatch) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FileBatch) GetExtends() map[string]string {
	if x != nil {
		return x.Extends
	}
	return nil
}

func (x *FileBatch) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *FileBatch) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type FileBatchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged    int64 `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Top      int64 `protobuf:"varint,3,opt,name=top,proto3" json:"top"`
	//file params
	Id       int64   `protobuf:"varint,4,opt,name=id,proto3" json:"id"`
	Channel  string  `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel"`
	Code     string  `protobuf:"bytes,6,opt,name=code,proto3" json:"code"`
	UserId   int64   `protobuf:"varint,7,opt,name=user_id,json=userId,proto3" json:"user_id"`
	UserType string  `protobuf:"bytes,8,opt,name=user_type,json=userType,proto3" json:"user_type"`
	Status   string  `protobuf:"bytes,9,opt,name=status,proto3" json:"status"`
	Ids      []int64 `protobuf:"varint,15,rep,packed,name=ids,proto3" json:"ids"`
}

func (x *FileBatchRequest) Reset() {
	*x = FileBatchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileBatchService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileBatchRequest) ProtoMessage() {}

func (x *FileBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fileBatchService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileBatchRequest.ProtoReflect.Descriptor instead.
func (*FileBatchRequest) Descriptor() ([]byte, []int) {
	return file_fileBatchService_proto_rawDescGZIP(), []int{1}
}

func (x *FileBatchRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *FileBatchRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *FileBatchRequest) GetTop() int64 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *FileBatchRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FileBatchRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *FileBatchRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *FileBatchRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *FileBatchRequest) GetUserType() string {
	if x != nil {
		return x.UserType
	}
	return ""
}

func (x *FileBatchRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FileBatchRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type FileBatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *FileBatch    `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*FileBatch  `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Info   string        `protobuf:"bytes,5,opt,name=info,proto3" json:"info"`
}

func (x *FileBatchResponse) Reset() {
	*x = FileBatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fileBatchService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileBatchResponse) ProtoMessage() {}

func (x *FileBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fileBatchService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileBatchResponse.ProtoReflect.Descriptor instead.
func (*FileBatchResponse) Descriptor() ([]byte, []int) {
	return file_fileBatchService_proto_rawDescGZIP(), []int{2}
}

func (x *FileBatchResponse) GetEntity() *FileBatch {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *FileBatchResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *FileBatchResponse) GetItems() []*FileBatch {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *FileBatchResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

var File_fileBatchService_proto protoreflect.FileDescriptor

var file_fileBatchService_proto_rawDesc = []byte{
	0x0a, 0x16, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8a, 0x04, 0x0a, 0x09, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x61,
	0x74, 0x63, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x64, 0x72, 0x69, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x63,
	0x6b, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x75, 0x63, 0x6b, 0x65,
	0x74, 0x12, 0x19, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x6f, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x15, 0x0a, 0x06,
	0x63, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x63, 0x61,
	0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x70, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x49, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3a, 0x0a, 0x07,
	0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x07, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x1a, 0x3a, 0x0a, 0x0c, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xf5, 0x01, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x0f, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0xa4, 0x01, 0x0a, 0x11, 0x46,
	0x69, 0x6c, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2b, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65,
	0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x72, 0x12, 0x29, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x32, 0x92, 0x01, 0x0a, 0x10, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x13, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x61, 0x74,
	0x63, 0x68, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x69,
	0x6c, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x43, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1a, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_fileBatchService_proto_rawDescOnce sync.Once
	file_fileBatchService_proto_rawDescData = file_fileBatchService_proto_rawDesc
)

func file_fileBatchService_proto_rawDescGZIP() []byte {
	file_fileBatchService_proto_rawDescOnce.Do(func() {
		file_fileBatchService_proto_rawDescData = protoimpl.X.CompressGZIP(file_fileBatchService_proto_rawDescData)
	})
	return file_fileBatchService_proto_rawDescData
}

var file_fileBatchService_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_fileBatchService_proto_goTypes = []interface{}{
	(*FileBatch)(nil),         // 0: services.FileBatch
	(*FileBatchRequest)(nil),  // 1: services.FileBatchRequest
	(*FileBatchResponse)(nil), // 2: services.FileBatchResponse
	nil,                       // 3: services.FileBatch.ExtendsEntry
	(*common.Pager)(nil),      // 4: common.Pager
}
var file_fileBatchService_proto_depIdxs = []int32{
	3, // 0: services.FileBatch.extends:type_name -> services.FileBatch.ExtendsEntry
	0, // 1: services.FileBatchResponse.entity:type_name -> services.FileBatch
	4, // 2: services.FileBatchResponse.pager:type_name -> common.Pager
	0, // 3: services.FileBatchResponse.items:type_name -> services.FileBatch
	0, // 4: services.FileBatchService.Get:input_type -> services.FileBatch
	1, // 5: services.FileBatchService.Search:input_type -> services.FileBatchRequest
	2, // 6: services.FileBatchService.Get:output_type -> services.FileBatchResponse
	2, // 7: services.FileBatchService.Search:output_type -> services.FileBatchResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_fileBatchService_proto_init() }
func file_fileBatchService_proto_init() {
	if File_fileBatchService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_fileBatchService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileBatch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fileBatchService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileBatchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fileBatchService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileBatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fileBatchService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fileBatchService_proto_goTypes,
		DependencyIndexes: file_fileBatchService_proto_depIdxs,
		MessageInfos:      file_fileBatchService_proto_msgTypes,
	}.Build()
	File_fileBatchService_proto = out.File
	file_fileBatchService_proto_rawDesc = nil
	file_fileBatchService_proto_goTypes = nil
	file_fileBatchService_proto_depIdxs = nil
}
