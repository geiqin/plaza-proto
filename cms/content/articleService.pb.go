// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: articleService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 文章信息
type Article struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                                                                                   //ID
	Title        string            `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`                                                                                              //标题
	Code         string            `protobuf:"bytes,3,opt,name=code,proto3" json:"code"`                                                                                                //代码标识
	Type         string            `protobuf:"bytes,4,opt,name=type,proto3" json:"type"`                                                                                                //类型: article 文章 page 页面
	MimeType     string            `protobuf:"bytes,5,opt,name=mime_type,json=mimeType,proto3" json:"mime_type"`                                                                        //Mine类型:imgtxt图文，link链接，video视频，photo相册
	TitleColor   string            `protobuf:"bytes,6,opt,name=title_color,json=titleColor,proto3" json:"title_color"`                                                                  //标题颜色
	Content      string            `protobuf:"bytes,7,opt,name=content,proto3" json:"content"`                                                                                          //文章内容
	Excerpt      string            `protobuf:"bytes,8,opt,name=excerpt,proto3" json:"excerpt"`                                                                                          //摘要
	JumpUrl      string            `protobuf:"bytes,9,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url"`                                                                           //跳转url地址
	CoverUrl     string            `protobuf:"bytes,10,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url"`                                                                       //封面图URL
	VideoUrl     string            `protobuf:"bytes,11,opt,name=video_url,json=videoUrl,proto3" json:"video_url"`                                                                       //短视频url
	ParentId     int64             `protobuf:"varint,12,opt,name=parent_id,json=parentId,proto3" json:"parent_id"`                                                                      //父级ID
	ShopId       int64             `protobuf:"varint,13,opt,name=shop_id,json=shopId,proto3" json:"shop_id"`                                                                            //分店ID
	RealstoreId  int64             `protobuf:"varint,14,opt,name=realstore_id,json=realstoreId,proto3" json:"realstore_id"`                                                             //门店ID
	AreaId       int64             `protobuf:"varint,15,opt,name=area_id,json=areaId,proto3" json:"area_id"`                                                                            //区域ID(预留专用)
	ImagesCount  int32             `protobuf:"varint,16,opt,name=images_count,json=imagesCount,proto3" json:"images_count"`                                                             //图片数量
	CommentCount int32             `protobuf:"varint,17,opt,name=comment_count,json=commentCount,proto3" json:"comment_count"`                                                          //评论数量
	AccessCount  int32             `protobuf:"varint,18,opt,name=access_count,json=accessCount,proto3" json:"access_count"`                                                             //访问次数
	Sort         int32             `protobuf:"varint,19,opt,name=sort,proto3" json:"sort"`                                                                                              //排序值
	SeoTitle     string            `protobuf:"bytes,20,opt,name=seo_title,json=seoTitle,proto3" json:"seo_title"`                                                                       //SEO标题
	SeoKeywords  string            `protobuf:"bytes,21,opt,name=seo_keywords,json=seoKeywords,proto3" json:"seo_keywords"`                                                              //SEO关键字
	SeoDesc      string            `protobuf:"bytes,22,opt,name=seo_desc,json=seoDesc,proto3" json:"seo_desc"`                                                                          //SEO描述
	AuthorType   string            `protobuf:"bytes,23,opt,name=author_type,json=authorType,proto3" json:"author_type"`                                                                 //发布者类型
	AuthorId     int64             `protobuf:"varint,24,opt,name=author_id,json=authorId,proto3" json:"author_id"`                                                                      //发布者ID
	Status       string            `protobuf:"bytes,25,opt,name=status,proto3" json:"status"`                                                                                           //状态:0隐藏，1显示，2草稿
	PublishedAt  string            `protobuf:"bytes,26,opt,name=published_at,json=publishedAt,proto3" json:"published_at"`                                                              //发布时间
	Images       []string          `protobuf:"bytes,27,rep,name=images,proto3" json:"images"`                                                                                           //文章相册
	Extends      map[string]string `protobuf:"bytes,28,rep,name=extends,proto3" json:"extends" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //扩展元素
	CreatedAt    string            `protobuf:"bytes,29,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt    string            `protobuf:"bytes,30,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	PreArticle   *Article          `protobuf:"bytes,31,opt,name=pre_article,json=preArticle,proto3" json:"pre_article"`    //前一篇
	NextArticle  *Article          `protobuf:"bytes,32,opt,name=next_article,json=nextArticle,proto3" json:"next_article"` //后一篇
	Cats         []*Cat            `protobuf:"bytes,33,rep,name=cats,proto3" json:"cats"`
	Tags         []*Tag            `protobuf:"bytes,34,rep,name=tags,proto3" json:"tags"`
	TypeName     string            `protobuf:"bytes,35,opt,name=type_name,json=typeName,proto3" json:"type_name"`
	MimeTypeName string            `protobuf:"bytes,36,opt,name=mime_type_name,json=mimeTypeName,proto3" json:"mime_type_name"`
	StatusName   string            `protobuf:"bytes,37,opt,name=status_name,json=statusName,proto3" json:"status_name"`
}

func (x *Article) Reset() {
	*x = Article{}
	if protoimpl.UnsafeEnabled {
		mi := &file_articleService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Article) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Article) ProtoMessage() {}

func (x *Article) ProtoReflect() protoreflect.Message {
	mi := &file_articleService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Article.ProtoReflect.Descriptor instead.
func (*Article) Descriptor() ([]byte, []int) {
	return file_articleService_proto_rawDescGZIP(), []int{0}
}

func (x *Article) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Article) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Article) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Article) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Article) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *Article) GetTitleColor() string {
	if x != nil {
		return x.TitleColor
	}
	return ""
}

func (x *Article) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Article) GetExcerpt() string {
	if x != nil {
		return x.Excerpt
	}
	return ""
}

func (x *Article) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

func (x *Article) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *Article) GetVideoUrl() string {
	if x != nil {
		return x.VideoUrl
	}
	return ""
}

func (x *Article) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *Article) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *Article) GetRealstoreId() int64 {
	if x != nil {
		return x.RealstoreId
	}
	return 0
}

func (x *Article) GetAreaId() int64 {
	if x != nil {
		return x.AreaId
	}
	return 0
}

func (x *Article) GetImagesCount() int32 {
	if x != nil {
		return x.ImagesCount
	}
	return 0
}

func (x *Article) GetCommentCount() int32 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

func (x *Article) GetAccessCount() int32 {
	if x != nil {
		return x.AccessCount
	}
	return 0
}

func (x *Article) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *Article) GetSeoTitle() string {
	if x != nil {
		return x.SeoTitle
	}
	return ""
}

func (x *Article) GetSeoKeywords() string {
	if x != nil {
		return x.SeoKeywords
	}
	return ""
}

func (x *Article) GetSeoDesc() string {
	if x != nil {
		return x.SeoDesc
	}
	return ""
}

func (x *Article) GetAuthorType() string {
	if x != nil {
		return x.AuthorType
	}
	return ""
}

func (x *Article) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *Article) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Article) GetPublishedAt() string {
	if x != nil {
		return x.PublishedAt
	}
	return ""
}

func (x *Article) GetImages() []string {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *Article) GetExtends() map[string]string {
	if x != nil {
		return x.Extends
	}
	return nil
}

func (x *Article) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Article) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Article) GetPreArticle() *Article {
	if x != nil {
		return x.PreArticle
	}
	return nil
}

func (x *Article) GetNextArticle() *Article {
	if x != nil {
		return x.NextArticle
	}
	return nil
}

func (x *Article) GetCats() []*Cat {
	if x != nil {
		return x.Cats
	}
	return nil
}

func (x *Article) GetTags() []*Tag {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Article) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *Article) GetMimeTypeName() string {
	if x != nil {
		return x.MimeTypeName
	}
	return ""
}

func (x *Article) GetStatusName() string {
	if x != nil {
		return x.StatusName
	}
	return ""
}

// 文章查询参数
type ArticleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged     int64    `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize  int64    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Top       int32    `protobuf:"varint,3,opt,name=top,proto3" json:"top"`
	Id        int64    `protobuf:"varint,4,opt,name=id,proto3" json:"id"`
	Title     string   `protobuf:"bytes,5,opt,name=title,proto3" json:"title"`
	Type      string   `protobuf:"bytes,6,opt,name=type,proto3" json:"type"`
	MimeType  string   `protobuf:"bytes,7,opt,name=mime_type,json=mimeType,proto3" json:"mime_type"`
	Code      string   `protobuf:"bytes,9,opt,name=code,proto3" json:"code"`
	CatId     int64    `protobuf:"varint,10,opt,name=cat_id,json=catId,proto3" json:"cat_id"`
	CatCode   string   `protobuf:"bytes,11,opt,name=cat_code,json=catCode,proto3" json:"cat_code"`
	Codes     []string `protobuf:"bytes,12,rep,name=codes,proto3" json:"codes"`
	IsInclude string   `protobuf:"bytes,13,opt,name=is_include,json=isInclude,proto3" json:"is_include"` // 是否包含上一篇、下一篇文章
	Status    string   `protobuf:"bytes,14,opt,name=status,proto3" json:"status"`
	Ids       []int64  `protobuf:"varint,15,rep,packed,name=ids,proto3" json:"ids"`
	CatCodes  []string `protobuf:"bytes,16,rep,name=cat_codes,json=catCodes,proto3" json:"cat_codes"`
}

func (x *ArticleRequest) Reset() {
	*x = ArticleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_articleService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleRequest) ProtoMessage() {}

func (x *ArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_articleService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleRequest.ProtoReflect.Descriptor instead.
func (*ArticleRequest) Descriptor() ([]byte, []int) {
	return file_articleService_proto_rawDescGZIP(), []int{1}
}

func (x *ArticleRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *ArticleRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ArticleRequest) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *ArticleRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ArticleRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ArticleRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ArticleRequest) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *ArticleRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ArticleRequest) GetCatId() int64 {
	if x != nil {
		return x.CatId
	}
	return 0
}

func (x *ArticleRequest) GetCatCode() string {
	if x != nil {
		return x.CatCode
	}
	return ""
}

func (x *ArticleRequest) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

func (x *ArticleRequest) GetIsInclude() string {
	if x != nil {
		return x.IsInclude
	}
	return ""
}

func (x *ArticleRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ArticleRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ArticleRequest) GetCatCodes() []string {
	if x != nil {
		return x.CatCodes
	}
	return nil
}

type ArticleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity     *Article      `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	CurrentCat *Cat          `protobuf:"bytes,2,opt,name=current_cat,json=currentCat,proto3" json:"current_cat"`
	Pager      *common.Pager `protobuf:"bytes,3,opt,name=pager,proto3" json:"pager"`
	Items      []*Article    `protobuf:"bytes,4,rep,name=items,proto3" json:"items"`
	Info       string        `protobuf:"bytes,5,opt,name=info,proto3" json:"info"`
}

func (x *ArticleResponse) Reset() {
	*x = ArticleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_articleService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleResponse) ProtoMessage() {}

func (x *ArticleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_articleService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleResponse.ProtoReflect.Descriptor instead.
func (*ArticleResponse) Descriptor() ([]byte, []int) {
	return file_articleService_proto_rawDescGZIP(), []int{2}
}

func (x *ArticleResponse) GetEntity() *Article {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *ArticleResponse) GetCurrentCat() *Cat {
	if x != nil {
		return x.CurrentCat
	}
	return nil
}

func (x *ArticleResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *ArticleResponse) GetItems() []*Article {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ArticleResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

var File_articleService_proto protoreflect.FileDescriptor

var file_articleService_proto_rawDesc = []byte{
	0x0a, 0x14, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x63, 0x61, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x74, 0x61, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc3, 0x09, 0x0a, 0x07, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x78, 0x63,
	0x65, 0x72, 0x70, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x78, 0x63, 0x65,
	0x72, 0x70, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6f,
	0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65,
	0x6f, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x6f, 0x5f, 0x6b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65,
	0x6f, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x6f,
	0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x6f,
	0x44, 0x65, 0x73, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x19, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x1b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x38, 0x0a, 0x07, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x73,
	0x18, 0x1c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x1d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x1e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x32, 0x0a,
	0x0b, 0x70, 0x72, 0x65, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x1f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x0a, 0x70, 0x72, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x12, 0x34, 0x0a, 0x0c, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x63, 0x61, 0x74, 0x73, 0x18,
	0x21, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x43, 0x61, 0x74, 0x52, 0x04, 0x63, 0x61, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x04, 0x74, 0x61,
	0x67, 0x73, 0x18, 0x22, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x54, 0x61, 0x67, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x69,
	0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x24, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x1a, 0x3a, 0x0a, 0x0c, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xee, 0x02,
	0x0a, 0x0e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x74, 0x6f, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6d, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x15, 0x0a, 0x06, 0x63, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x63, 0x61, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x74, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x69,
	0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73,
	0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x10,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xce,
	0x01, 0x0a, 0x0f, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2e, 0x0a,
	0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61,
	0x74, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x61, 0x74, 0x12, 0x23, 0x0a,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x72, 0x12, 0x27, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x32,
	0xbd, 0x03, 0x0a, 0x0e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x11, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x1a,
	0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x06,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3c, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f,
	0x0a, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x3f, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3d, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_articleService_proto_rawDescOnce sync.Once
	file_articleService_proto_rawDescData = file_articleService_proto_rawDesc
)

func file_articleService_proto_rawDescGZIP() []byte {
	file_articleService_proto_rawDescOnce.Do(func() {
		file_articleService_proto_rawDescData = protoimpl.X.CompressGZIP(file_articleService_proto_rawDescData)
	})
	return file_articleService_proto_rawDescData
}

var file_articleService_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_articleService_proto_goTypes = []interface{}{
	(*Article)(nil),         // 0: services.Article
	(*ArticleRequest)(nil),  // 1: services.ArticleRequest
	(*ArticleResponse)(nil), // 2: services.ArticleResponse
	nil,                     // 3: services.Article.ExtendsEntry
	(*Cat)(nil),             // 4: services.Cat
	(*Tag)(nil),             // 5: services.Tag
	(*common.Pager)(nil),    // 6: common.Pager
}
var file_articleService_proto_depIdxs = []int32{
	3,  // 0: services.Article.extends:type_name -> services.Article.ExtendsEntry
	0,  // 1: services.Article.pre_article:type_name -> services.Article
	0,  // 2: services.Article.next_article:type_name -> services.Article
	4,  // 3: services.Article.cats:type_name -> services.Cat
	5,  // 4: services.Article.tags:type_name -> services.Tag
	0,  // 5: services.ArticleResponse.entity:type_name -> services.Article
	4,  // 6: services.ArticleResponse.current_cat:type_name -> services.Cat
	6,  // 7: services.ArticleResponse.pager:type_name -> common.Pager
	0,  // 8: services.ArticleResponse.items:type_name -> services.Article
	0,  // 9: services.ArticleService.Create:input_type -> services.Article
	0,  // 10: services.ArticleService.Update:input_type -> services.Article
	0,  // 11: services.ArticleService.Delete:input_type -> services.Article
	1,  // 12: services.ArticleService.Get:input_type -> services.ArticleRequest
	1,  // 13: services.ArticleService.Detail:input_type -> services.ArticleRequest
	1,  // 14: services.ArticleService.Search:input_type -> services.ArticleRequest
	1,  // 15: services.ArticleService.List:input_type -> services.ArticleRequest
	2,  // 16: services.ArticleService.Create:output_type -> services.ArticleResponse
	2,  // 17: services.ArticleService.Update:output_type -> services.ArticleResponse
	2,  // 18: services.ArticleService.Delete:output_type -> services.ArticleResponse
	2,  // 19: services.ArticleService.Get:output_type -> services.ArticleResponse
	2,  // 20: services.ArticleService.Detail:output_type -> services.ArticleResponse
	2,  // 21: services.ArticleService.Search:output_type -> services.ArticleResponse
	2,  // 22: services.ArticleService.List:output_type -> services.ArticleResponse
	16, // [16:23] is the sub-list for method output_type
	9,  // [9:16] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_articleService_proto_init() }
func file_articleService_proto_init() {
	if File_articleService_proto != nil {
		return
	}
	file_catService_proto_init()
	file_tagService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_articleService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Article); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_articleService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_articleService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_articleService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_articleService_proto_goTypes,
		DependencyIndexes: file_articleService_proto_depIdxs,
		MessageInfos:      file_articleService_proto_msgTypes,
	}.Build()
	File_articleService_proto = out.File
	file_articleService_proto_rawDesc = nil
	file_articleService_proto_goTypes = nil
	file_articleService_proto_depIdxs = nil
}
