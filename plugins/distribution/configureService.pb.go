// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: configureService.proto

package services

import (
	common "../common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//分销全局配置
type BaseConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	H5Url                          string `protobuf:"bytes,1,opt,name=h5_url,json=h5Url,proto3" json:"h5_url,omitempty"`                                                                                    //H5自定义地址
	MobileHomePage                 string `protobuf:"bytes,2,opt,name=mobile_home_page,json=mobileHomePage,proto3" json:"mobile_home_page,omitempty"`                                                       //手机端首页地址
	UserPosterTopDesc              string `protobuf:"bytes,3,opt,name=user_poster_top_desc,json=userPosterTopDesc,proto3" json:"user_poster_top_desc,omitempty"`                                            //用户海报页面顶部描述
	UserPosterShareTitle           string `protobuf:"bytes,4,opt,name=user_poster_share_title,json=userPosterShareTitle,proto3" json:"user_poster_share_title,omitempty"`                                   //用户海报分享标题(空则读取站点页面名称)
	UserPosterShareDesc            string `protobuf:"bytes,5,opt,name=user_poster_share_desc,json=userPosterShareDesc,proto3" json:"user_poster_share_desc,omitempty"`                                      //用户海报分享描述
	IsUpperReturn                  string `protobuf:"bytes,6,opt,name=is_upper_return,json=isUpperReturn,proto3" json:"is_upper_return,omitempty"`                                                          //向上返佣,默认关闭
	Level                          int32  `protobuf:"varint,7,opt,name=level,proto3" json:"level,omitempty"`                                                                                                //分销层级,默认三级
	SelfBuy                        string `protobuf:"bytes,8,opt,name=self_buy,json=selfBuy,proto3" json:"self_buy,omitempty"`                                                                              //分销商内购,默认关闭
	AutoLevelType                  string `protobuf:"bytes,9,opt,name=auto_level_type,json=autoLevelType,proto3" json:"auto_level_type,omitempty"`                                                          //自动升级分销等级类型
	IsDownReturn                   string `protobuf:"bytes,10,opt,name=is_down_return,json=isDownReturn,proto3" json:"is_down_return,omitempty"`                                                            //向下返佣
	DownReturnNumber               int32  `protobuf:"varint,11,opt,name=down_return_number,json=downReturnNumber,proto3" json:"down_return_number,omitempty"`                                               //最多分摊佣金人数
	IsUpperReturnIntegral          string `protobuf:"bytes,12,opt,name=is_upper_return_integral,json=isUpperReturnIntegral,proto3" json:"is_upper_return_integral,omitempty"`                               //向上返积分
	UpperReturnIntegral            int64  `protobuf:"varint,13,opt,name=upper_return_integral,json=upperReturnIntegral,proto3" json:"upper_return_integral,omitempty"`                                      //向上返积分数量
	IsDownReturnIntegral           string `protobuf:"bytes,14,opt,name=is_down_return_integral,json=isDownReturnIntegral,proto3" json:"is_down_return_integral,omitempty"`                                  //向下返积分
	DownReturnIntegral             int64  `protobuf:"varint,15,opt,name=down_return_integral,json=downReturnIntegral,proto3" json:"down_return_integral,omitempty"`                                         //向下返积分数量
	DownReturnIntegralPeople       int32  `protobuf:"varint,16,opt,name=down_return_integral_people,json=downReturnIntegralPeople,proto3" json:"down_return_integral_people,omitempty"`                     //最多分摊积分人数
	IsAppointGoods                 string `protobuf:"bytes,17,opt,name=is_appoint_goods,json=isAppointGoods,proto3" json:"is_appoint_goods,omitempty"`                                                      //指定商品返佣折扣
	AppointLevelOrderMinNumber     int32  `protobuf:"varint,18,opt,name=appoint_level_order_min_number,json=appointLevelOrderMinNumber,proto3" json:"appoint_level_order_min_number,omitempty"`             //购买指定商品成为指定分销等级(需要满足订单数量)
	AppointLevelGoodsMinNumber     int32  `protobuf:"varint,19,opt,name=appoint_level_goods_min_number,json=appointLevelGoodsMinNumber,proto3" json:"appoint_level_goods_min_number,omitempty"`             //购买指定商品成为指定分销等级(需要满足商品购买数量)
	AppointGoodsProfitNumber       int32  `protobuf:"varint,20,opt,name=appoint_goods_profit_number,json=appointGoodsProfitNumber,proto3" json:"appoint_goods_profit_number,omitempty"`                     //推荐多少个用户购买指定商品后返现商品的金额(指定用户数量)
	AppointGoodsSaleNumber         int32  `protobuf:"varint,21,opt,name=appoint_goods_sale_number,json=appointGoodsSaleNumber,proto3" json:"appoint_goods_sale_number,omitempty"`                           //指定商品满足销售数量后返佣（商品购买最低数量）
	AppointGoodsSalePrice          int64  `protobuf:"varint,22,opt,name=appoint_goods_sale_price,json=appointGoodsSalePrice,proto3" json:"appoint_goods_sale_price,omitempty"`                              //指定商品满足销售数量后返佣（返佣固定金额）
	AppointGoodsSaleRate           int32  `protobuf:"varint,23,opt,name=appoint_goods_sale_rate,json=appointGoodsSaleRate,proto3" json:"appoint_goods_sale_rate,omitempty"`                                 //指定商品满足销售数量后返佣 (返佣比例 0~100 的数字)
	AppointGoodsRepurchaseDiscount string `protobuf:"bytes,24,opt,name=appoint_goods_repurchase_discount,json=appointGoodsRepurchaseDiscount,proto3" json:"appoint_goods_repurchase_discount,omitempty"`    //指定商品复购折扣优惠(指定商品复购折扣优惠 0~1 的数字)
	GoodsDetailIcon                string `protobuf:"bytes,25,opt,name=goods_detail_icon,json=goodsDetailIcon,proto3" json:"goods_detail_icon,omitempty"`                                                   //指定商品复购折扣优惠(商品详情折扣图标名称)
	AppointGoodsLadderIntervalTime int64  `protobuf:"varint,26,opt,name=appoint_goods_ladder_interval_time,json=appointGoodsLadderIntervalTime,proto3" json:"appoint_goods_ladder_interval_time,omitempty"` //指定商品阶梯返佣(阶梯间隔时间)
	IsEnableSelfExtraction         string `protobuf:"bytes,27,opt,name=is_enable_self_extraction,json=isEnableSelfExtraction,proto3" json:"is_enable_self_extraction,omitempty"`                            //自提取货点申请(0关闭/1开启)
	IsBuyDefaultExtractionAddress  string `protobuf:"bytes,28,opt,name=is_buy_default_extraction_address,json=isBuyDefaultExtractionAddress,proto3" json:"is_buy_default_extraction_address,omitempty"`     //下单默认取货地址(0关闭/1开启)
	IsSelfExtraction               string `protobuf:"bytes,29,opt,name=is_self_extraction,json=isSelfExtraction,proto3" json:"is_self_extraction,omitempty"`                                                //取货点返佣(0关闭/1开启)
	IsSelfExtractionCloseUpper     string `protobuf:"bytes,30,opt,name=is_self_extraction_close_upper,json=isSelfExtractionCloseUpper,proto3" json:"is_self_extraction_close_upper,omitempty"`              //取货点返佣后不再向上返佣逻辑(0关闭/1开启)
	ExtractionProfitLevel          string `protobuf:"bytes,31,opt,name=extraction_profit_level,json=extractionProfitLevel,proto3" json:"extraction_profit_level,omitempty"`                                 //取货点返佣层级(0关闭/1开启)
	SelfExtractionApplyDesc        string `protobuf:"bytes,32,opt,name=self_extraction_apply_desc,json=selfExtractionApplyDesc,proto3" json:"self_extraction_apply_desc,omitempty"`                         //自提取货点申请介绍
	SelfExtractionCommonNotice     string `protobuf:"bytes,33,opt,name=self_extraction_common_notice,json=selfExtractionCommonNotice,proto3" json:"self_extraction_common_notice,omitempty"`                //自提取货点顶部公告
	ProfitType                     string `protobuf:"bytes,34,opt,name=profit_type,json=profitType,proto3" json:"profit_type,omitempty"`                                                                    //返佣类型（1所有订单，2首单）
	ProfitSettlementLimitTime      string `protobuf:"bytes,35,opt,name=profit_settlement_limit_time,json=profitSettlementLimitTime,proto3" json:"profit_settlement_limit_time,omitempty"`                   //佣金结算周期
	IsShowIntroduce                string `protobuf:"bytes,36,opt,name=is_show_introduce,json=isShowIntroduce,proto3" json:"is_show_introduce,omitempty"`                                                   //分销中心开启等级介绍(0关闭/1开启)
	UserCenterLevelDesc            string `protobuf:"bytes,37,opt,name=user_center_level_desc,json=userCenterLevelDesc,proto3" json:"user_center_level_desc,omitempty"`                                     //等级介绍顶部描述
	NonConformityDesc              string `protobuf:"bytes,38,opt,name=non_conformity_desc,json=nonConformityDesc,proto3" json:"non_conformity_desc,omitempty"`                                             //不符合分销条件描述
	UserCenterNotice               string `protobuf:"bytes,39,opt,name=user_center_notice,json=userCenterNotice,proto3" json:"user_center_notice,omitempty"`                                                //分销中心公告
	AppointLevelId                 int32  `protobuf:"varint,40,opt,name=appoint_level_id,json=appointLevelId,proto3" json:"appoint_level_id,omitempty"`                                                     //
	IsAdminUserLevelShow           string `protobuf:"bytes,41,opt,name=is_admin_user_level_show,json=isAdminUserLevelShow,proto3" json:"is_admin_user_level_show,omitempty"`                                //用户列表展示等级
	IsAdminOrderUserReferrerShow   string `protobuf:"bytes,42,opt,name=is_admin_order_user_referrer_show,json=isAdminOrderUserReferrerShow,proto3" json:"is_admin_order_user_referrer_show,omitempty"`      //订单列表展示邀请用户
	IsUserMenu                     string `protobuf:"bytes,43,opt,name=is_user_menu,json=isUserMenu,proto3" json:"is_user_menu,omitempty"`                                                                  //开启用户中心菜单入口
	IsUserExtractionSwitch         string `protobuf:"bytes,44,opt,name=is_user_extraction_switch,json=isUserExtractionSwitch,proto3" json:"is_user_extraction_switch,omitempty"`
	IsFixedPriceMultiple           string `protobuf:"bytes,45,opt,name=is_fixed_price_multiple,json=isFixedPriceMultiple,proto3" json:"is_fixed_price_multiple,omitempty"`
	IsShowSuperior                 string `protobuf:"bytes,46,opt,name=is_show_superior,json=isShowSuperior,proto3" json:"is_show_superior,omitempty"`
	IsGoodsDetailPoster            string `protobuf:"bytes,47,opt,name=is_goods_detail_poster,json=isGoodsDetailPoster,proto3" json:"is_goods_detail_poster,omitempty"`
	IsRealstoreOrderNotProfit      string `protobuf:"bytes,48,opt,name=is_realstore_order_not_profit,json=isRealstoreOrderNotProfit,proto3" json:"is_realstore_order_not_profit,omitempty"`
	IsProfitShop                   string `protobuf:"bytes,49,opt,name=is_profit_shop,json=isProfitShop,proto3" json:"is_profit_shop,omitempty"`
	AppointGoodsSaleIsUser         string `protobuf:"bytes,50,opt,name=appoint_goods_sale_is_user,json=appointGoodsSaleIsUser,proto3" json:"appoint_goods_sale_is_user,omitempty"`
	IsShowProfitLadderTips         string `protobuf:"bytes,51,opt,name=is_show_profit_ladder_tips,json=isShowProfitLadderTips,proto3" json:"is_show_profit_ladder_tips,omitempty"`
	SystemType                     string `protobuf:"bytes,52,opt,name=system_type,json=systemType,proto3" json:"system_type,omitempty"`
	DefaultLevelImageUrl           string `protobuf:"bytes,53,opt,name=default_level_image_url,json=defaultLevelImageUrl,proto3" json:"default_level_image_url,omitempty"` //默认等级图标
	DefaultQrcodeLogoUrl           string `protobuf:"bytes,54,opt,name=default_qrcode_logo_url,json=defaultQrcodeLogoUrl,proto3" json:"default_qrcode_logo_url,omitempty"` //默认二维码logo
	PosterData                     string `protobuf:"bytes,55,opt,name=poster_data,json=posterData,proto3" json:"poster_data,omitempty"`
}

func (x *BaseConfig) Reset() {
	*x = BaseConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BaseConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BaseConfig) ProtoMessage() {}

func (x *BaseConfig) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BaseConfig.ProtoReflect.Descriptor instead.
func (*BaseConfig) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{0}
}

func (x *BaseConfig) GetH5Url() string {
	if x != nil {
		return x.H5Url
	}
	return ""
}

func (x *BaseConfig) GetMobileHomePage() string {
	if x != nil {
		return x.MobileHomePage
	}
	return ""
}

func (x *BaseConfig) GetUserPosterTopDesc() string {
	if x != nil {
		return x.UserPosterTopDesc
	}
	return ""
}

func (x *BaseConfig) GetUserPosterShareTitle() string {
	if x != nil {
		return x.UserPosterShareTitle
	}
	return ""
}

func (x *BaseConfig) GetUserPosterShareDesc() string {
	if x != nil {
		return x.UserPosterShareDesc
	}
	return ""
}

func (x *BaseConfig) GetIsUpperReturn() string {
	if x != nil {
		return x.IsUpperReturn
	}
	return ""
}

func (x *BaseConfig) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *BaseConfig) GetSelfBuy() string {
	if x != nil {
		return x.SelfBuy
	}
	return ""
}

func (x *BaseConfig) GetAutoLevelType() string {
	if x != nil {
		return x.AutoLevelType
	}
	return ""
}

func (x *BaseConfig) GetIsDownReturn() string {
	if x != nil {
		return x.IsDownReturn
	}
	return ""
}

func (x *BaseConfig) GetDownReturnNumber() int32 {
	if x != nil {
		return x.DownReturnNumber
	}
	return 0
}

func (x *BaseConfig) GetIsUpperReturnIntegral() string {
	if x != nil {
		return x.IsUpperReturnIntegral
	}
	return ""
}

func (x *BaseConfig) GetUpperReturnIntegral() int64 {
	if x != nil {
		return x.UpperReturnIntegral
	}
	return 0
}

func (x *BaseConfig) GetIsDownReturnIntegral() string {
	if x != nil {
		return x.IsDownReturnIntegral
	}
	return ""
}

func (x *BaseConfig) GetDownReturnIntegral() int64 {
	if x != nil {
		return x.DownReturnIntegral
	}
	return 0
}

func (x *BaseConfig) GetDownReturnIntegralPeople() int32 {
	if x != nil {
		return x.DownReturnIntegralPeople
	}
	return 0
}

func (x *BaseConfig) GetIsAppointGoods() string {
	if x != nil {
		return x.IsAppointGoods
	}
	return ""
}

func (x *BaseConfig) GetAppointLevelOrderMinNumber() int32 {
	if x != nil {
		return x.AppointLevelOrderMinNumber
	}
	return 0
}

func (x *BaseConfig) GetAppointLevelGoodsMinNumber() int32 {
	if x != nil {
		return x.AppointLevelGoodsMinNumber
	}
	return 0
}

func (x *BaseConfig) GetAppointGoodsProfitNumber() int32 {
	if x != nil {
		return x.AppointGoodsProfitNumber
	}
	return 0
}

func (x *BaseConfig) GetAppointGoodsSaleNumber() int32 {
	if x != nil {
		return x.AppointGoodsSaleNumber
	}
	return 0
}

func (x *BaseConfig) GetAppointGoodsSalePrice() int64 {
	if x != nil {
		return x.AppointGoodsSalePrice
	}
	return 0
}

func (x *BaseConfig) GetAppointGoodsSaleRate() int32 {
	if x != nil {
		return x.AppointGoodsSaleRate
	}
	return 0
}

func (x *BaseConfig) GetAppointGoodsRepurchaseDiscount() string {
	if x != nil {
		return x.AppointGoodsRepurchaseDiscount
	}
	return ""
}

func (x *BaseConfig) GetGoodsDetailIcon() string {
	if x != nil {
		return x.GoodsDetailIcon
	}
	return ""
}

func (x *BaseConfig) GetAppointGoodsLadderIntervalTime() int64 {
	if x != nil {
		return x.AppointGoodsLadderIntervalTime
	}
	return 0
}

func (x *BaseConfig) GetIsEnableSelfExtraction() string {
	if x != nil {
		return x.IsEnableSelfExtraction
	}
	return ""
}

func (x *BaseConfig) GetIsBuyDefaultExtractionAddress() string {
	if x != nil {
		return x.IsBuyDefaultExtractionAddress
	}
	return ""
}

func (x *BaseConfig) GetIsSelfExtraction() string {
	if x != nil {
		return x.IsSelfExtraction
	}
	return ""
}

func (x *BaseConfig) GetIsSelfExtractionCloseUpper() string {
	if x != nil {
		return x.IsSelfExtractionCloseUpper
	}
	return ""
}

func (x *BaseConfig) GetExtractionProfitLevel() string {
	if x != nil {
		return x.ExtractionProfitLevel
	}
	return ""
}

func (x *BaseConfig) GetSelfExtractionApplyDesc() string {
	if x != nil {
		return x.SelfExtractionApplyDesc
	}
	return ""
}

func (x *BaseConfig) GetSelfExtractionCommonNotice() string {
	if x != nil {
		return x.SelfExtractionCommonNotice
	}
	return ""
}

func (x *BaseConfig) GetProfitType() string {
	if x != nil {
		return x.ProfitType
	}
	return ""
}

func (x *BaseConfig) GetProfitSettlementLimitTime() string {
	if x != nil {
		return x.ProfitSettlementLimitTime
	}
	return ""
}

func (x *BaseConfig) GetIsShowIntroduce() string {
	if x != nil {
		return x.IsShowIntroduce
	}
	return ""
}

func (x *BaseConfig) GetUserCenterLevelDesc() string {
	if x != nil {
		return x.UserCenterLevelDesc
	}
	return ""
}

func (x *BaseConfig) GetNonConformityDesc() string {
	if x != nil {
		return x.NonConformityDesc
	}
	return ""
}

func (x *BaseConfig) GetUserCenterNotice() string {
	if x != nil {
		return x.UserCenterNotice
	}
	return ""
}

func (x *BaseConfig) GetAppointLevelId() int32 {
	if x != nil {
		return x.AppointLevelId
	}
	return 0
}

func (x *BaseConfig) GetIsAdminUserLevelShow() string {
	if x != nil {
		return x.IsAdminUserLevelShow
	}
	return ""
}

func (x *BaseConfig) GetIsAdminOrderUserReferrerShow() string {
	if x != nil {
		return x.IsAdminOrderUserReferrerShow
	}
	return ""
}

func (x *BaseConfig) GetIsUserMenu() string {
	if x != nil {
		return x.IsUserMenu
	}
	return ""
}

func (x *BaseConfig) GetIsUserExtractionSwitch() string {
	if x != nil {
		return x.IsUserExtractionSwitch
	}
	return ""
}

func (x *BaseConfig) GetIsFixedPriceMultiple() string {
	if x != nil {
		return x.IsFixedPriceMultiple
	}
	return ""
}

func (x *BaseConfig) GetIsShowSuperior() string {
	if x != nil {
		return x.IsShowSuperior
	}
	return ""
}

func (x *BaseConfig) GetIsGoodsDetailPoster() string {
	if x != nil {
		return x.IsGoodsDetailPoster
	}
	return ""
}

func (x *BaseConfig) GetIsRealstoreOrderNotProfit() string {
	if x != nil {
		return x.IsRealstoreOrderNotProfit
	}
	return ""
}

func (x *BaseConfig) GetIsProfitShop() string {
	if x != nil {
		return x.IsProfitShop
	}
	return ""
}

func (x *BaseConfig) GetAppointGoodsSaleIsUser() string {
	if x != nil {
		return x.AppointGoodsSaleIsUser
	}
	return ""
}

func (x *BaseConfig) GetIsShowProfitLadderTips() string {
	if x != nil {
		return x.IsShowProfitLadderTips
	}
	return ""
}

func (x *BaseConfig) GetSystemType() string {
	if x != nil {
		return x.SystemType
	}
	return ""
}

func (x *BaseConfig) GetDefaultLevelImageUrl() string {
	if x != nil {
		return x.DefaultLevelImageUrl
	}
	return ""
}

func (x *BaseConfig) GetDefaultQrcodeLogoUrl() string {
	if x != nil {
		return x.DefaultQrcodeLogoUrl
	}
	return ""
}

func (x *BaseConfig) GetPosterData() string {
	if x != nil {
		return x.PosterData
	}
	return ""
}

type ConfigureData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config *BaseConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
}

func (x *ConfigureData) Reset() {
	*x = ConfigureData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureData) ProtoMessage() {}

func (x *ConfigureData) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureData.ProtoReflect.Descriptor instead.
func (*ConfigureData) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{1}
}

func (x *ConfigureData) GetConfig() *BaseConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type ConfigureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *ConfigureData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Error *common.Error  `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *ConfigureResponse) Reset() {
	*x = ConfigureResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureResponse) ProtoMessage() {}

func (x *ConfigureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureResponse.ProtoReflect.Descriptor instead.
func (*ConfigureResponse) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{2}
}

func (x *ConfigureResponse) GetData() *ConfigureData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigureResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_configureService_proto protoreflect.FileDescriptor

var file_configureService_proto_rawDesc = []byte{
	0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb1, 0x16, 0x0a, 0x0a, 0x42, 0x61, 0x73, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x68, 0x35, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x68, 0x35, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x48, 0x6f, 0x6d,
	0x65, 0x50, 0x61, 0x67, 0x65, 0x12, 0x2f, 0x0a, 0x14, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x6f,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x70, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x75, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x54,
	0x6f, 0x70, 0x44, 0x65, 0x73, 0x63, 0x12, 0x35, 0x0a, 0x17, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70,
	0x6f, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x75, 0x73, 0x65, 0x72, 0x50, 0x6f, 0x73,
	0x74, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x33, 0x0a,
	0x16, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x75,
	0x73, 0x65, 0x72, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x44, 0x65,
	0x73, 0x63, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x73, 0x55,
	0x70, 0x70, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x62, 0x75, 0x79, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x6c, 0x66, 0x42, 0x75, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x61,
	0x75, 0x74, 0x6f, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x75, 0x74, 0x6f, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x73, 0x44,
	0x6f, 0x77, 0x6e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x6f, 0x77,
	0x6e, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x18, 0x69, 0x73, 0x5f, 0x75, 0x70,
	0x70, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x69, 0x73, 0x55, 0x70, 0x70,
	0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c,
	0x12, 0x32, 0x0a, 0x15, 0x75, 0x70, 0x70, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x13, 0x75, 0x70, 0x70, 0x65, 0x72, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x6c, 0x12, 0x35, 0x0a, 0x17, 0x69, 0x73, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x5f,
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x69, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x14, 0x64,
	0x6f, 0x77, 0x6e, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x64, 0x6f, 0x77, 0x6e, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x3d, 0x0a,
	0x1b, 0x64, 0x6f, 0x77, 0x6e, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x6c, 0x5f, 0x70, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x18, 0x64, 0x6f, 0x77, 0x6e, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x50, 0x65, 0x6f, 0x70, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10,
	0x69, 0x73, 0x5f, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x73, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x42, 0x0a, 0x1e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6d, 0x69,
	0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1a,
	0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x4d, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x42, 0x0a, 0x1e, 0x61, 0x70,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x1a, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4d, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x3d,
	0x0a, 0x1b, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x18, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x39, 0x0a,
	0x19, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73,
	0x61, 0x6c, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x16, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x61,
	0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x37, 0x0a, 0x18, 0x61, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x61, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x61, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x35, 0x0a, 0x17, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x14, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x53, 0x61, 0x6c, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x49, 0x0a, 0x21, 0x61, 0x70, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x72, 0x65, 0x70, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x1e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x52, 0x65, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x63, 0x6f, 0x6e, 0x12,
	0x4a, 0x0a, 0x22, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x6c, 0x61, 0x64, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1e, 0x61, 0x70, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x61, 0x64, 0x64, 0x65, 0x72, 0x49,
	0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x39, 0x0a, 0x19, 0x69,
	0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16,
	0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x48, 0x0a, 0x21, 0x69, 0x73, 0x5f, 0x62, 0x75, 0x79,
	0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x1d, 0x69, 0x73, 0x42, 0x75, 0x79, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x2c, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x65, 0x78, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x73,
	0x53, 0x65, 0x6c, 0x66, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x42,
	0x0a, 0x1e, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x75, 0x70, 0x70, 0x65, 0x72,
	0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x69, 0x73, 0x53, 0x65, 0x6c, 0x66, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x55, 0x70, 0x70,
	0x65, 0x72, 0x12, 0x36, 0x0a, 0x17, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x1f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x15, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x3b, 0x0a, 0x1a, 0x73, 0x65,
	0x6c, 0x66, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x70,
	0x70, 0x6c, 0x79, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17,
	0x73, 0x65, 0x6c, 0x66, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x44, 0x65, 0x73, 0x63, 0x12, 0x41, 0x0a, 0x1d, 0x73, 0x65, 0x6c, 0x66, 0x5f,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a,
	0x73, 0x65, 0x6c, 0x66, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x1c, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x74, 0x5f, 0x73, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x19, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11,
	0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x49,
	0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x75, 0x73, 0x65, 0x72,
	0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x75, 0x73, 0x65, 0x72, 0x43, 0x65,
	0x6e, 0x74, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x12, 0x2e, 0x0a,
	0x13, 0x6e, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x69, 0x74, 0x79, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6e, 0x6f, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x69, 0x74, 0x79, 0x44, 0x65, 0x73, 0x63, 0x12, 0x2c, 0x0a,
	0x12, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x43,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x61,
	0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x18, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x73, 0x68, 0x6f,
	0x77, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x47, 0x0a,
	0x21, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x5f, 0x73, 0x68,
	0x6f, 0x77, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1c, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x66, 0x65, 0x72, 0x72,
	0x65, 0x72, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6d, 0x65, 0x6e, 0x75, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x39, 0x0a, 0x19, 0x69, 0x73, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x73,
	0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x69, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x12, 0x35, 0x0a, 0x17, 0x69, 0x73, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x18, 0x2d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x69, 0x73, 0x46, 0x69, 0x78, 0x65, 0x64, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73,
	0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x73, 0x75, 0x70, 0x65, 0x72, 0x69, 0x6f, 0x72, 0x18, 0x2e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x75, 0x70, 0x65,
	0x72, 0x69, 0x6f, 0x72, 0x12, 0x33, 0x0a, 0x16, 0x69, 0x73, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x18, 0x2f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x69, 0x73, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x12, 0x40, 0x0a, 0x1d, 0x69, 0x73, 0x5f,
	0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x6e, 0x6f, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x18, 0x30, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x19, 0x69, 0x73, 0x52, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x4e, 0x6f, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x69,
	0x73, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x5f, 0x73, 0x68, 0x6f, 0x70, 0x18, 0x31, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x53, 0x68, 0x6f,
	0x70, 0x12, 0x3a, 0x0a, 0x1a, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x69, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x53, 0x61, 0x6c, 0x65, 0x49, 0x73, 0x55, 0x73, 0x65, 0x72, 0x12, 0x3a, 0x0a,
	0x1a, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x5f,
	0x6c, 0x61, 0x64, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x70, 0x73, 0x18, 0x33, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x16, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x4c,
	0x61, 0x64, 0x64, 0x65, 0x72, 0x54, 0x69, 0x70, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x64, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x35, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72,
	0x6c, 0x12, 0x35, 0x0a, 0x17, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x71, 0x72, 0x63,
	0x6f, 0x64, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x36, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x51, 0x72, 0x63, 0x6f, 0x64,
	0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6f, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x37, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x6f, 0x73, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x22, 0x3d, 0x0a, 0x0d, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x65, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32,
	0x8a, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x14, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3a, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x12, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x1b, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b,
	0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_configureService_proto_rawDescOnce sync.Once
	file_configureService_proto_rawDescData = file_configureService_proto_rawDesc
)

func file_configureService_proto_rawDescGZIP() []byte {
	file_configureService_proto_rawDescOnce.Do(func() {
		file_configureService_proto_rawDescData = protoimpl.X.CompressGZIP(file_configureService_proto_rawDescData)
	})
	return file_configureService_proto_rawDescData
}

var file_configureService_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_configureService_proto_goTypes = []interface{}{
	(*BaseConfig)(nil),        // 0: services.BaseConfig
	(*ConfigureData)(nil),     // 1: services.ConfigureData
	(*ConfigureResponse)(nil), // 2: services.ConfigureResponse
	(*common.Error)(nil),      // 3: common.Error
}
var file_configureService_proto_depIdxs = []int32{
	0, // 0: services.ConfigureData.config:type_name -> services.BaseConfig
	1, // 1: services.ConfigureResponse.data:type_name -> services.ConfigureData
	3, // 2: services.ConfigureResponse.error:type_name -> common.Error
	0, // 3: services.ConfigureService.Get:input_type -> services.BaseConfig
	0, // 4: services.ConfigureService.Set:input_type -> services.BaseConfig
	2, // 5: services.ConfigureService.Get:output_type -> services.ConfigureResponse
	2, // 6: services.ConfigureService.Set:output_type -> services.ConfigureResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_configureService_proto_init() }
func file_configureService_proto_init() {
	if File_configureService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_configureService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BaseConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_configureService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_configureService_proto_goTypes,
		DependencyIndexes: file_configureService_proto_depIdxs,
		MessageInfos:      file_configureService_proto_msgTypes,
	}.Build()
	File_configureService_proto = out.File
	file_configureService_proto_rawDesc = nil
	file_configureService_proto_goTypes = nil
	file_configureService_proto_depIdxs = nil
}
