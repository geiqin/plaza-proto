// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: attachmentService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 附件
type Attachment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                      //ID
	Hash          string                 `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash"`                                   //Hash值
	Code          string                 `protobuf:"bytes,3,opt,name=code,proto3" json:"code"`                                   //编码
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name"`                                   //名称
	Type          string                 `protobuf:"bytes,5,opt,name=type,proto3" json:"type"`                                   //类型
	BatchId       int64                  `protobuf:"varint,6,opt,name=batch_id,json=batchId,proto3" json:"batch_id"`             //上传批次
	CatId         int64                  `protobuf:"varint,7,opt,name=cat_id,json=catId,proto3" json:"cat_id"`                   //分类
	FileName      string                 `protobuf:"bytes,8,opt,name=file_name,json=fileName,proto3" json:"file_name"`           //文件名称
	RawName       string                 `protobuf:"bytes,9,opt,name=raw_name,json=rawName,proto3" json:"raw_name"`              //文件原始名称
	SavePath      string                 `protobuf:"bytes,10,opt,name=save_path,json=savePath,proto3" json:"save_path"`          //相对路径
	Url           string                 `protobuf:"bytes,11,opt,name=url,proto3" json:"url"`                                    //完整路径
	MimeType      string                 `protobuf:"bytes,12,opt,name=mime_type,json=mimeType,proto3" json:"mime_type"`          //文件类型
	Size          int64                  `protobuf:"varint,13,opt,name=size,proto3" json:"size"`                                 //文件大小
	Width         int64                  `protobuf:"varint,14,opt,name=width,proto3" json:"width"`                               //宽
	Height        int64                  `protobuf:"varint,15,opt,name=height,proto3" json:"height"`                             //高
	Length        int64                  `protobuf:"varint,16,opt,name=length,proto3" json:"length"`                             //时长
	Pixel         int32                  `protobuf:"varint,17,opt,name=pixel,proto3" json:"pixel"`                               //分辨率
	Description   string                 `protobuf:"bytes,18,opt,name=description,proto3" json:"description"`                    //描述
	Sort          int32                  `protobuf:"varint,19,opt,name=sort,proto3" json:"sort"`                                 //排序
	CreatorType   string                 `protobuf:"bytes,20,opt,name=creator_type,json=creatorType,proto3" json:"creator_type"` //创建者类型
	CreatorId     int64                  `protobuf:"varint,21,opt,name=creator_id,json=creatorId,proto3" json:"creator_id"`      //创建者id
	CreatedAt     int64                  `protobuf:"varint,22,opt,name=created_at,json=createdAt,proto3" json:"created_at"`      //创建时间
	UpdatedAt     int64                  `protobuf:"varint,23,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`      //修改时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Attachment) Reset() {
	*x = Attachment{}
	mi := &file_attachmentService_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Attachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attachment) ProtoMessage() {}

func (x *Attachment) ProtoReflect() protoreflect.Message {
	mi := &file_attachmentService_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attachment.ProtoReflect.Descriptor instead.
func (*Attachment) Descriptor() ([]byte, []int) {
	return file_attachmentService_proto_rawDescGZIP(), []int{0}
}

func (x *Attachment) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Attachment) GetHash() string {
	if x != nil {
		return x.Hash
	}
	return ""
}

func (x *Attachment) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Attachment) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Attachment) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Attachment) GetBatchId() int64 {
	if x != nil {
		return x.BatchId
	}
	return 0
}

func (x *Attachment) GetCatId() int64 {
	if x != nil {
		return x.CatId
	}
	return 0
}

func (x *Attachment) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *Attachment) GetRawName() string {
	if x != nil {
		return x.RawName
	}
	return ""
}

func (x *Attachment) GetSavePath() string {
	if x != nil {
		return x.SavePath
	}
	return ""
}

func (x *Attachment) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Attachment) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *Attachment) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Attachment) GetWidth() int64 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *Attachment) GetHeight() int64 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *Attachment) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

func (x *Attachment) GetPixel() int32 {
	if x != nil {
		return x.Pixel
	}
	return 0
}

func (x *Attachment) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Attachment) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *Attachment) GetCreatorType() string {
	if x != nil {
		return x.CreatorType
	}
	return ""
}

func (x *Attachment) GetCreatorId() int64 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *Attachment) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Attachment) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// 附件视图
type AttachmentView struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                            //ID
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`                         //名称
	Type          string                 `protobuf:"bytes,3,opt,name=type,proto3" json:"type"`                         //类型
	MimeType      string                 `protobuf:"bytes,4,opt,name=mime_type,json=mimeType,proto3" json:"mime_type"` //文件类型
	Size          int64                  `protobuf:"varint,5,opt,name=size,proto3" json:"size"`                        //文件大小
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttachmentView) Reset() {
	*x = AttachmentView{}
	mi := &file_attachmentService_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachmentView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachmentView) ProtoMessage() {}

func (x *AttachmentView) ProtoReflect() protoreflect.Message {
	mi := &file_attachmentService_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachmentView.ProtoReflect.Descriptor instead.
func (*AttachmentView) Descriptor() ([]byte, []int) {
	return file_attachmentService_proto_rawDescGZIP(), []int{1}
}

func (x *AttachmentView) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AttachmentView) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AttachmentView) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AttachmentView) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *AttachmentView) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

// 附件请求参数
type AttachmentRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Top       int32                  `protobuf:"varint,1,opt,name=top,proto3" json:"top"`
	Paged     int64                  `protobuf:"varint,2,opt,name=paged,proto3" json:"paged"`
	PageSize  int64                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords  string                 `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords"`
	Sort      []string               `protobuf:"bytes,5,rep,name=sort,proto3" json:"sort"`
	DateRange []string               `protobuf:"bytes,6,rep,name=date_range,json=dateRange,proto3" json:"date_range"`
	Ids       []int64                `protobuf:"varint,7,rep,packed,name=ids,proto3" json:"ids"`
	Id        int64                  `protobuf:"varint,8,opt,name=id,proto3" json:"id"`
	// 以下为自定义参数
	Code          string `protobuf:"bytes,11,opt,name=code,proto3" json:"code"`                                  //编码
	Name          string `protobuf:"bytes,12,opt,name=name,proto3" json:"name"`                                  //名称
	Type          string `protobuf:"bytes,13,opt,name=type,proto3" json:"type"`                                  //类型
	BatchId       int64  `protobuf:"varint,14,opt,name=batch_id,json=batchId,proto3" json:"batch_id"`            //上传批次
	CatId         int64  `protobuf:"varint,15,opt,name=cat_id,json=catId,proto3" json:"cat_id"`                  //分类
	Title         string `protobuf:"bytes,16,opt,name=title,proto3" json:"title"`                                //文件名称
	RawName       string `protobuf:"bytes,17,opt,name=raw_name,json=rawName,proto3" json:"raw_name"`             //文件原始名称
	MimeType      string `protobuf:"bytes,18,opt,name=mime_type,json=mimeType,proto3" json:"mime_type"`          //文件类型
	CreatorType   string `protobuf:"bytes,19,opt,name=creator_type,json=creatorType,proto3" json:"creator_type"` //创建者类型
	CreatorId     int64  `protobuf:"varint,20,opt,name=creator_id,json=creatorId,proto3" json:"creator_id"`      //创建者id
	Filename      string `protobuf:"bytes,21,opt,name=filename,proto3" json:"filename"`                          //上传专用文件名
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttachmentRequest) Reset() {
	*x = AttachmentRequest{}
	mi := &file_attachmentService_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachmentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachmentRequest) ProtoMessage() {}

func (x *AttachmentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_attachmentService_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachmentRequest.ProtoReflect.Descriptor instead.
func (*AttachmentRequest) Descriptor() ([]byte, []int) {
	return file_attachmentService_proto_rawDescGZIP(), []int{2}
}

func (x *AttachmentRequest) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *AttachmentRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *AttachmentRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *AttachmentRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *AttachmentRequest) GetSort() []string {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *AttachmentRequest) GetDateRange() []string {
	if x != nil {
		return x.DateRange
	}
	return nil
}

func (x *AttachmentRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *AttachmentRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AttachmentRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AttachmentRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AttachmentRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AttachmentRequest) GetBatchId() int64 {
	if x != nil {
		return x.BatchId
	}
	return 0
}

func (x *AttachmentRequest) GetCatId() int64 {
	if x != nil {
		return x.CatId
	}
	return 0
}

func (x *AttachmentRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *AttachmentRequest) GetRawName() string {
	if x != nil {
		return x.RawName
	}
	return ""
}

func (x *AttachmentRequest) GetMimeType() string {
	if x != nil {
		return x.MimeType
	}
	return ""
}

func (x *AttachmentRequest) GetCreatorType() string {
	if x != nil {
		return x.CreatorType
	}
	return ""
}

func (x *AttachmentRequest) GetCreatorId() int64 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *AttachmentRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

// 附件响应数据
type AttachmentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           string                 `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg"`
	Pager         *common.Pager          `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Entity        *Attachment            `protobuf:"bytes,3,opt,name=entity,proto3" json:"entity"`
	Items         []*Attachment          `protobuf:"bytes,4,rep,name=items,proto3" json:"items"`
	Token         *UploadTokenInfo       `protobuf:"bytes,6,opt,name=token,proto3" json:"token"`
	Callback      map[string]string      `protobuf:"bytes,7,rep,name=callback,proto3" json:"callback" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AttachmentResponse) Reset() {
	*x = AttachmentResponse{}
	mi := &file_attachmentService_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AttachmentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AttachmentResponse) ProtoMessage() {}

func (x *AttachmentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_attachmentService_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AttachmentResponse.ProtoReflect.Descriptor instead.
func (*AttachmentResponse) Descriptor() ([]byte, []int) {
	return file_attachmentService_proto_rawDescGZIP(), []int{3}
}

func (x *AttachmentResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AttachmentResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *AttachmentResponse) GetEntity() *Attachment {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *AttachmentResponse) GetItems() []*Attachment {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *AttachmentResponse) GetToken() *UploadTokenInfo {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *AttachmentResponse) GetCallback() map[string]string {
	if x != nil {
		return x.Callback
	}
	return nil
}

var File_attachmentService_proto protoreflect.FileDescriptor

const file_attachmentService_proto_rawDesc = "" +
	"\n" +
	"\x17attachmentService.proto\x12\bservices\x1a\x11common/base.proto\x1a\x15baseInfoService.proto\"\xc8\x04\n" +
	"\n" +
	"Attachment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04hash\x18\x02 \x01(\tR\x04hash\x12\x12\n" +
	"\x04code\x18\x03 \x01(\tR\x04code\x12\x12\n" +
	"\x04name\x18\x04 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x05 \x01(\tR\x04type\x12\x19\n" +
	"\bbatch_id\x18\x06 \x01(\x03R\abatchId\x12\x15\n" +
	"\x06cat_id\x18\a \x01(\x03R\x05catId\x12\x1b\n" +
	"\tfile_name\x18\b \x01(\tR\bfileName\x12\x19\n" +
	"\braw_name\x18\t \x01(\tR\arawName\x12\x1b\n" +
	"\tsave_path\x18\n" +
	" \x01(\tR\bsavePath\x12\x10\n" +
	"\x03url\x18\v \x01(\tR\x03url\x12\x1b\n" +
	"\tmime_type\x18\f \x01(\tR\bmimeType\x12\x12\n" +
	"\x04size\x18\r \x01(\x03R\x04size\x12\x14\n" +
	"\x05width\x18\x0e \x01(\x03R\x05width\x12\x16\n" +
	"\x06height\x18\x0f \x01(\x03R\x06height\x12\x16\n" +
	"\x06length\x18\x10 \x01(\x03R\x06length\x12\x14\n" +
	"\x05pixel\x18\x11 \x01(\x05R\x05pixel\x12 \n" +
	"\vdescription\x18\x12 \x01(\tR\vdescription\x12\x12\n" +
	"\x04sort\x18\x13 \x01(\x05R\x04sort\x12!\n" +
	"\fcreator_type\x18\x14 \x01(\tR\vcreatorType\x12\x1d\n" +
	"\n" +
	"creator_id\x18\x15 \x01(\x03R\tcreatorId\x12\x1d\n" +
	"\n" +
	"created_at\x18\x16 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x17 \x01(\x03R\tupdatedAt\"y\n" +
	"\x0eAttachmentView\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\x03 \x01(\tR\x04type\x12\x1b\n" +
	"\tmime_type\x18\x04 \x01(\tR\bmimeType\x12\x12\n" +
	"\x04size\x18\x05 \x01(\x03R\x04size\"\xe3\x03\n" +
	"\x11AttachmentRequest\x12\x10\n" +
	"\x03top\x18\x01 \x01(\x05R\x03top\x12\x14\n" +
	"\x05paged\x18\x02 \x01(\x03R\x05paged\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x03R\bpageSize\x12\x1a\n" +
	"\bkeywords\x18\x04 \x01(\tR\bkeywords\x12\x12\n" +
	"\x04sort\x18\x05 \x03(\tR\x04sort\x12\x1d\n" +
	"\n" +
	"date_range\x18\x06 \x03(\tR\tdateRange\x12\x10\n" +
	"\x03ids\x18\a \x03(\x03R\x03ids\x12\x0e\n" +
	"\x02id\x18\b \x01(\x03R\x02id\x12\x12\n" +
	"\x04code\x18\v \x01(\tR\x04code\x12\x12\n" +
	"\x04name\x18\f \x01(\tR\x04name\x12\x12\n" +
	"\x04type\x18\r \x01(\tR\x04type\x12\x19\n" +
	"\bbatch_id\x18\x0e \x01(\x03R\abatchId\x12\x15\n" +
	"\x06cat_id\x18\x0f \x01(\x03R\x05catId\x12\x14\n" +
	"\x05title\x18\x10 \x01(\tR\x05title\x12\x19\n" +
	"\braw_name\x18\x11 \x01(\tR\arawName\x12\x1b\n" +
	"\tmime_type\x18\x12 \x01(\tR\bmimeType\x12!\n" +
	"\fcreator_type\x18\x13 \x01(\tR\vcreatorType\x12\x1d\n" +
	"\n" +
	"creator_id\x18\x14 \x01(\x03R\tcreatorId\x12\x1a\n" +
	"\bfilename\x18\x15 \x01(\tR\bfilename\"\xdb\x02\n" +
	"\x12AttachmentResponse\x12\x10\n" +
	"\x03msg\x18\x01 \x01(\tR\x03msg\x12#\n" +
	"\x05pager\x18\x02 \x01(\v2\r.common.PagerR\x05pager\x12,\n" +
	"\x06entity\x18\x03 \x01(\v2\x14.services.AttachmentR\x06entity\x12*\n" +
	"\x05items\x18\x04 \x03(\v2\x14.services.AttachmentR\x05items\x12/\n" +
	"\x05token\x18\x06 \x01(\v2\x19.services.UploadTokenInfoR\x05token\x12F\n" +
	"\bcallback\x18\a \x03(\v2*.services.AttachmentResponse.CallbackEntryR\bcallback\x1a;\n" +
	"\rCallbackEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\xb2\x04\n" +
	"\x11AttachmentService\x12>\n" +
	"\x06Create\x12\x14.services.Attachment\x1a\x1c.services.AttachmentResponse\"\x00\x12>\n" +
	"\x06Update\x12\x14.services.Attachment\x1a\x1c.services.AttachmentResponse\"\x00\x12>\n" +
	"\x06Delete\x12\x14.services.Attachment\x1a\x1c.services.AttachmentResponse\"\x00\x12;\n" +
	"\x03Get\x12\x14.services.Attachment\x1a\x1c.services.AttachmentResponse\"\x00\x12E\n" +
	"\x06Search\x12\x1b.services.AttachmentRequest\x1a\x1c.services.AttachmentResponse\"\x00\x12C\n" +
	"\x04List\x12\x1b.services.AttachmentRequest\x1a\x1c.services.AttachmentResponse\"\x00\x12J\n" +
	"\vUploadToken\x12\x1b.services.AttachmentRequest\x1a\x1c.services.AttachmentResponse\"\x00\x12H\n" +
	"\x0eUploadCallback\x12\x16.services.CallbackInfo\x1a\x1c.services.AttachmentResponse\"\x00B\rZ\v/.;servicesb\x06proto3"

var (
	file_attachmentService_proto_rawDescOnce sync.Once
	file_attachmentService_proto_rawDescData []byte
)

func file_attachmentService_proto_rawDescGZIP() []byte {
	file_attachmentService_proto_rawDescOnce.Do(func() {
		file_attachmentService_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_attachmentService_proto_rawDesc), len(file_attachmentService_proto_rawDesc)))
	})
	return file_attachmentService_proto_rawDescData
}

var file_attachmentService_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_attachmentService_proto_goTypes = []any{
	(*Attachment)(nil),         // 0: services.Attachment
	(*AttachmentView)(nil),     // 1: services.AttachmentView
	(*AttachmentRequest)(nil),  // 2: services.AttachmentRequest
	(*AttachmentResponse)(nil), // 3: services.AttachmentResponse
	nil,                        // 4: services.AttachmentResponse.CallbackEntry
	(*common.Pager)(nil),       // 5: common.Pager
	(*UploadTokenInfo)(nil),    // 6: services.UploadTokenInfo
	(*CallbackInfo)(nil),       // 7: services.CallbackInfo
}
var file_attachmentService_proto_depIdxs = []int32{
	5,  // 0: services.AttachmentResponse.pager:type_name -> common.Pager
	0,  // 1: services.AttachmentResponse.entity:type_name -> services.Attachment
	0,  // 2: services.AttachmentResponse.items:type_name -> services.Attachment
	6,  // 3: services.AttachmentResponse.token:type_name -> services.UploadTokenInfo
	4,  // 4: services.AttachmentResponse.callback:type_name -> services.AttachmentResponse.CallbackEntry
	0,  // 5: services.AttachmentService.Create:input_type -> services.Attachment
	0,  // 6: services.AttachmentService.Update:input_type -> services.Attachment
	0,  // 7: services.AttachmentService.Delete:input_type -> services.Attachment
	0,  // 8: services.AttachmentService.Get:input_type -> services.Attachment
	2,  // 9: services.AttachmentService.Search:input_type -> services.AttachmentRequest
	2,  // 10: services.AttachmentService.List:input_type -> services.AttachmentRequest
	2,  // 11: services.AttachmentService.UploadToken:input_type -> services.AttachmentRequest
	7,  // 12: services.AttachmentService.UploadCallback:input_type -> services.CallbackInfo
	3,  // 13: services.AttachmentService.Create:output_type -> services.AttachmentResponse
	3,  // 14: services.AttachmentService.Update:output_type -> services.AttachmentResponse
	3,  // 15: services.AttachmentService.Delete:output_type -> services.AttachmentResponse
	3,  // 16: services.AttachmentService.Get:output_type -> services.AttachmentResponse
	3,  // 17: services.AttachmentService.Search:output_type -> services.AttachmentResponse
	3,  // 18: services.AttachmentService.List:output_type -> services.AttachmentResponse
	3,  // 19: services.AttachmentService.UploadToken:output_type -> services.AttachmentResponse
	3,  // 20: services.AttachmentService.UploadCallback:output_type -> services.AttachmentResponse
	13, // [13:21] is the sub-list for method output_type
	5,  // [5:13] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_attachmentService_proto_init() }
func file_attachmentService_proto_init() {
	if File_attachmentService_proto != nil {
		return
	}
	file_baseInfoService_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_attachmentService_proto_rawDesc), len(file_attachmentService_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_attachmentService_proto_goTypes,
		DependencyIndexes: file_attachmentService_proto_depIdxs,
		MessageInfos:      file_attachmentService_proto_msgTypes,
	}.Build()
	File_attachmentService_proto = out.File
	file_attachmentService_proto_goTypes = nil
	file_attachmentService_proto_depIdxs = nil
}
