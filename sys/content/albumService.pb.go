// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: albumService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 图册
type Album struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                     //ID
	Code          string                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code"`                                  //编码
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`                                  //名称
	Content       string                 `protobuf:"bytes,5,opt,name=content,proto3" json:"content"`                            //详情
	CoverUrl      string                 `protobuf:"bytes,6,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url"`          //封面URL
	Sort          int32                  `protobuf:"varint,7,opt,name=sort,proto3" json:"sort"`                                 //排序值
	SeoTitle      string                 `protobuf:"bytes,8,opt,name=seo_title,json=seoTitle,proto3" json:"seo_title"`          //SEO标题
	SeoKeywords   string                 `protobuf:"bytes,9,opt,name=seo_keywords,json=seoKeywords,proto3" json:"seo_keywords"` //SEO关键字
	SeoDesc       string                 `protobuf:"bytes,10,opt,name=seo_desc,json=seoDesc,proto3" json:"seo_desc"`            //SEO描述
	UserId        int64                  `protobuf:"varint,11,opt,name=user_id,json=userId,proto3" json:"user_id"`              //用户ID
	Status        string                 `protobuf:"bytes,12,opt,name=status,proto3" json:"status"`                             //状态
	CreatedAt     int64                  `protobuf:"varint,13,opt,name=created_at,json=createdAt,proto3" json:"created_at"`     //创建时间
	UpdatedAt     int64                  `protobuf:"varint,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`     //修改时间
	Photos        []*AlbumPhoto          `protobuf:"bytes,15,rep,name=photos,proto3" json:"photos"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Album) Reset() {
	*x = Album{}
	mi := &file_albumService_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Album) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Album) ProtoMessage() {}

func (x *Album) ProtoReflect() protoreflect.Message {
	mi := &file_albumService_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Album.ProtoReflect.Descriptor instead.
func (*Album) Descriptor() ([]byte, []int) {
	return file_albumService_proto_rawDescGZIP(), []int{0}
}

func (x *Album) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Album) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Album) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Album) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Album) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *Album) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *Album) GetSeoTitle() string {
	if x != nil {
		return x.SeoTitle
	}
	return ""
}

func (x *Album) GetSeoKeywords() string {
	if x != nil {
		return x.SeoKeywords
	}
	return ""
}

func (x *Album) GetSeoDesc() string {
	if x != nil {
		return x.SeoDesc
	}
	return ""
}

func (x *Album) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *Album) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Album) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Album) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Album) GetPhotos() []*AlbumPhoto {
	if x != nil {
		return x.Photos
	}
	return nil
}

// 图册请求参数
type AlbumRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Top       int32                  `protobuf:"varint,1,opt,name=top,proto3" json:"top"`
	Paged     int64                  `protobuf:"varint,2,opt,name=paged,proto3" json:"paged"`
	PageSize  int64                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords  string                 `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords"`
	Sort      []string               `protobuf:"bytes,5,rep,name=sort,proto3" json:"sort"`
	DateRange []string               `protobuf:"bytes,6,rep,name=date_range,json=dateRange,proto3" json:"date_range"`
	Ids       []int64                `protobuf:"varint,7,rep,packed,name=ids,proto3" json:"ids"`
	Id        int64                  `protobuf:"varint,8,opt,name=id,proto3" json:"id"`
	// 以下为自定义参数
	Code          string `protobuf:"bytes,11,opt,name=code,proto3" json:"code"`                    //编码
	Name          string `protobuf:"bytes,12,opt,name=name,proto3" json:"name"`                    //名称
	CatId         int64  `protobuf:"varint,13,opt,name=cat_id,json=catId,proto3" json:"cat_id"`    //分类ID
	UserId        int64  `protobuf:"varint,14,opt,name=user_id,json=userId,proto3" json:"user_id"` //用户ID
	Status        string `protobuf:"bytes,15,opt,name=status,proto3" json:"status"`                //状态
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AlbumRequest) Reset() {
	*x = AlbumRequest{}
	mi := &file_albumService_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlbumRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlbumRequest) ProtoMessage() {}

func (x *AlbumRequest) ProtoReflect() protoreflect.Message {
	mi := &file_albumService_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlbumRequest.ProtoReflect.Descriptor instead.
func (*AlbumRequest) Descriptor() ([]byte, []int) {
	return file_albumService_proto_rawDescGZIP(), []int{1}
}

func (x *AlbumRequest) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *AlbumRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *AlbumRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *AlbumRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *AlbumRequest) GetSort() []string {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *AlbumRequest) GetDateRange() []string {
	if x != nil {
		return x.DateRange
	}
	return nil
}

func (x *AlbumRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *AlbumRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AlbumRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *AlbumRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AlbumRequest) GetCatId() int64 {
	if x != nil {
		return x.CatId
	}
	return 0
}

func (x *AlbumRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AlbumRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// 图册响应数据
type AlbumResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           string                 `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg"`
	Pager         *common.Pager          `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Entity        *Album                 `protobuf:"bytes,3,opt,name=entity,proto3" json:"entity"`
	Items         []*Album               `protobuf:"bytes,4,rep,name=items,proto3" json:"items"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AlbumResponse) Reset() {
	*x = AlbumResponse{}
	mi := &file_albumService_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AlbumResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlbumResponse) ProtoMessage() {}

func (x *AlbumResponse) ProtoReflect() protoreflect.Message {
	mi := &file_albumService_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlbumResponse.ProtoReflect.Descriptor instead.
func (*AlbumResponse) Descriptor() ([]byte, []int) {
	return file_albumService_proto_rawDescGZIP(), []int{2}
}

func (x *AlbumResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AlbumResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *AlbumResponse) GetEntity() *Album {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *AlbumResponse) GetItems() []*Album {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_albumService_proto protoreflect.FileDescriptor

const file_albumService_proto_rawDesc = "" +
	"\n" +
	"\x12albumService.proto\x12\bservices\x1a\x11common/base.proto\x1a\x17albumPhotoService.proto\"\x82\x03\n" +
	"\x05Album\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04code\x18\x02 \x01(\tR\x04code\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x18\n" +
	"\acontent\x18\x05 \x01(\tR\acontent\x12\x1b\n" +
	"\tcover_url\x18\x06 \x01(\tR\bcoverUrl\x12\x12\n" +
	"\x04sort\x18\a \x01(\x05R\x04sort\x12\x1b\n" +
	"\tseo_title\x18\b \x01(\tR\bseoTitle\x12!\n" +
	"\fseo_keywords\x18\t \x01(\tR\vseoKeywords\x12\x19\n" +
	"\bseo_desc\x18\n" +
	" \x01(\tR\aseoDesc\x12\x17\n" +
	"\auser_id\x18\v \x01(\x03R\x06userId\x12\x16\n" +
	"\x06status\x18\f \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"created_at\x18\r \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x0e \x01(\x03R\tupdatedAt\x12,\n" +
	"\x06photos\x18\x0f \x03(\v2\x14.services.AlbumPhotoR\x06photos\"\xb4\x02\n" +
	"\fAlbumRequest\x12\x10\n" +
	"\x03top\x18\x01 \x01(\x05R\x03top\x12\x14\n" +
	"\x05paged\x18\x02 \x01(\x03R\x05paged\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x03R\bpageSize\x12\x1a\n" +
	"\bkeywords\x18\x04 \x01(\tR\bkeywords\x12\x12\n" +
	"\x04sort\x18\x05 \x03(\tR\x04sort\x12\x1d\n" +
	"\n" +
	"date_range\x18\x06 \x03(\tR\tdateRange\x12\x10\n" +
	"\x03ids\x18\a \x03(\x03R\x03ids\x12\x0e\n" +
	"\x02id\x18\b \x01(\x03R\x02id\x12\x12\n" +
	"\x04code\x18\v \x01(\tR\x04code\x12\x12\n" +
	"\x04name\x18\f \x01(\tR\x04name\x12\x15\n" +
	"\x06cat_id\x18\r \x01(\x03R\x05catId\x12\x17\n" +
	"\auser_id\x18\x0e \x01(\x03R\x06userId\x12\x16\n" +
	"\x06status\x18\x0f \x01(\tR\x06status\"\x96\x01\n" +
	"\rAlbumResponse\x12\x10\n" +
	"\x03msg\x18\x01 \x01(\tR\x03msg\x12#\n" +
	"\x05pager\x18\x02 \x01(\v2\r.common.PagerR\x05pager\x12'\n" +
	"\x06entity\x18\x03 \x01(\v2\x0f.services.AlbumR\x06entity\x12%\n" +
	"\x05items\x18\x04 \x03(\v2\x0f.services.AlbumR\x05items2\xdb\x02\n" +
	"\fAlbumService\x124\n" +
	"\x06Create\x12\x0f.services.Album\x1a\x17.services.AlbumResponse\"\x00\x124\n" +
	"\x06Update\x12\x0f.services.Album\x1a\x17.services.AlbumResponse\"\x00\x124\n" +
	"\x06Delete\x12\x0f.services.Album\x1a\x17.services.AlbumResponse\"\x00\x121\n" +
	"\x03Get\x12\x0f.services.Album\x1a\x17.services.AlbumResponse\"\x00\x12;\n" +
	"\x06Search\x12\x16.services.AlbumRequest\x1a\x17.services.AlbumResponse\"\x00\x129\n" +
	"\x04List\x12\x16.services.AlbumRequest\x1a\x17.services.AlbumResponse\"\x00B\rZ\v/.;servicesb\x06proto3"

var (
	file_albumService_proto_rawDescOnce sync.Once
	file_albumService_proto_rawDescData []byte
)

func file_albumService_proto_rawDescGZIP() []byte {
	file_albumService_proto_rawDescOnce.Do(func() {
		file_albumService_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_albumService_proto_rawDesc), len(file_albumService_proto_rawDesc)))
	})
	return file_albumService_proto_rawDescData
}

var file_albumService_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_albumService_proto_goTypes = []any{
	(*Album)(nil),         // 0: services.Album
	(*AlbumRequest)(nil),  // 1: services.AlbumRequest
	(*AlbumResponse)(nil), // 2: services.AlbumResponse
	(*AlbumPhoto)(nil),    // 3: services.AlbumPhoto
	(*common.Pager)(nil),  // 4: common.Pager
}
var file_albumService_proto_depIdxs = []int32{
	3,  // 0: services.Album.photos:type_name -> services.AlbumPhoto
	4,  // 1: services.AlbumResponse.pager:type_name -> common.Pager
	0,  // 2: services.AlbumResponse.entity:type_name -> services.Album
	0,  // 3: services.AlbumResponse.items:type_name -> services.Album
	0,  // 4: services.AlbumService.Create:input_type -> services.Album
	0,  // 5: services.AlbumService.Update:input_type -> services.Album
	0,  // 6: services.AlbumService.Delete:input_type -> services.Album
	0,  // 7: services.AlbumService.Get:input_type -> services.Album
	1,  // 8: services.AlbumService.Search:input_type -> services.AlbumRequest
	1,  // 9: services.AlbumService.List:input_type -> services.AlbumRequest
	2,  // 10: services.AlbumService.Create:output_type -> services.AlbumResponse
	2,  // 11: services.AlbumService.Update:output_type -> services.AlbumResponse
	2,  // 12: services.AlbumService.Delete:output_type -> services.AlbumResponse
	2,  // 13: services.AlbumService.Get:output_type -> services.AlbumResponse
	2,  // 14: services.AlbumService.Search:output_type -> services.AlbumResponse
	2,  // 15: services.AlbumService.List:output_type -> services.AlbumResponse
	10, // [10:16] is the sub-list for method output_type
	4,  // [4:10] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_albumService_proto_init() }
func file_albumService_proto_init() {
	if File_albumService_proto != nil {
		return
	}
	file_albumPhotoService_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_albumService_proto_rawDesc), len(file_albumService_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_albumService_proto_goTypes,
		DependencyIndexes: file_albumService_proto_depIdxs,
		MessageInfos:      file_albumService_proto_msgTypes,
	}.Build()
	File_albumService_proto = out.File
	file_albumService_proto_goTypes = nil
	file_albumService_proto_depIdxs = nil
}
