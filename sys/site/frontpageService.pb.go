// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: frontpageService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FrontpageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged    int32 `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Sorting  int32 `protobuf:"varint,3,opt,name=sorting,proto3" json:"sorting"`
	//base params
	Id       int64   `protobuf:"varint,4,opt,name=id,proto3" json:"id"`
	Name     string  `protobuf:"bytes,5,opt,name=name,proto3" json:"name"`
	Code     string  `protobuf:"bytes,6,opt,name=code,proto3" json:"code"`
	ParentId int64   `protobuf:"varint,7,opt,name=parent_id,json=parentId,proto3" json:"parent_id"`
	Keywords string  `protobuf:"bytes,8,opt,name=keywords,proto3" json:"keywords"`
	Ids      []int64 `protobuf:"varint,10,rep,packed,name=ids,proto3" json:"ids"`
}

func (x *FrontpageRequest) Reset() {
	*x = FrontpageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontpageService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontpageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontpageRequest) ProtoMessage() {}

func (x *FrontpageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_frontpageService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontpageRequest.ProtoReflect.Descriptor instead.
func (*FrontpageRequest) Descriptor() ([]byte, []int) {
	return file_frontpageService_proto_rawDescGZIP(), []int{0}
}

func (x *FrontpageRequest) GetPaged() int32 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *FrontpageRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *FrontpageRequest) GetSorting() int32 {
	if x != nil {
		return x.Sorting
	}
	return 0
}

func (x *FrontpageRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FrontpageRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FrontpageRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *FrontpageRequest) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *FrontpageRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *FrontpageRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type AdInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image   string `protobuf:"bytes,1,opt,name=image,proto3" json:"image"`
	Url     string `protobuf:"bytes,2,opt,name=url,proto3" json:"url"`
	BgColor string `protobuf:"bytes,3,opt,name=bg_color,json=bgColor,proto3" json:"bg_color"`
}

func (x *AdInfo) Reset() {
	*x = AdInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontpageService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdInfo) ProtoMessage() {}

func (x *AdInfo) ProtoReflect() protoreflect.Message {
	mi := &file_frontpageService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdInfo.ProtoReflect.Descriptor instead.
func (*AdInfo) Descriptor() ([]byte, []int) {
	return file_frontpageService_proto_rawDescGZIP(), []int{1}
}

func (x *AdInfo) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *AdInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AdInfo) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

//站点配置信息
type SiteConfigInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//基础
	CommonSiteType   string `protobuf:"bytes,1,opt,name=common_site_type,json=commonSiteType,proto3" json:"common_site_type"`       //站点类型:web-网站，app-小程序/APP
	CommonShopNotice string `protobuf:"bytes,2,opt,name=common_shop_notice,json=commonShopNotice,proto3" json:"common_shop_notice"` //店铺公告
	//协议
	AgreementUserRegisterUrl string `protobuf:"bytes,3,opt,name=agreement_user_register_url,json=agreementUserRegisterUrl,proto3" json:"agreement_user_register_url"` //注册协议URL
	AgreementUserPrivacyUrl  string `protobuf:"bytes,4,opt,name=agreement_user_privacy_url,json=agreementUserPrivacyUrl,proto3" json:"agreement_user_privacy_url"`    //隐私协议URL
	AgreementUserLogoutUrl   string `protobuf:"bytes,5,opt,name=agreement_user_logout_url,json=agreementUserLogoutUrl,proto3" json:"agreement_user_logout_url"`       //注销协议URL
	// 手机端相关配置
	CommonAppIsEnableSearch     string `protobuf:"bytes,6,opt,name=common_app_is_enable_search,json=commonAppIsEnableSearch,proto3" json:"common_app_is_enable_search"`              //是否开启搜索
	CommonAppIsEnableAnswer     string `protobuf:"bytes,7,opt,name=common_app_is_enable_answer,json=commonAppIsEnableAnswer,proto3" json:"common_app_is_enable_answer"`              //是否开启留言
	CommonAppIsHeaderNavFixed   string `protobuf:"bytes,8,opt,name=common_app_is_header_nav_fixed,json=commonAppIsHeaderNavFixed,proto3" json:"common_app_is_header_nav_fixed"`      //头部导航是否固定
	CommonAppIsOnlineService    string `protobuf:"bytes,9,opt,name=common_app_is_online_service,json=commonAppIsOnlineService,proto3" json:"common_app_is_online_service"`           //是否在线客服
	CommonAppCustomerServiceTel string `protobuf:"bytes,10,opt,name=common_app_customer_service_tel,json=commonAppCustomerServiceTel,proto3" json:"common_app_customer_service_tel"` //客服电话
	CommonAppIsHeadViceNav      string `protobuf:"bytes,11,opt,name=common_app_is_head_vice_nav,json=commonAppIsHeadViceNav,proto3" json:"common_app_is_head_vice_nav"`              //是否开启用户中心副导航
	CommonAppIsEnableQuickNav   string `protobuf:"bytes,12,opt,name=common_app_is_enable_quick_nav,json=commonAppIsEnableQuickNav,proto3" json:"common_app_is_enable_quick_nav"`     //是否开启快捷导航
	CommonAppIsUseMobileDetail  string `protobuf:"bytes,13,opt,name=common_app_is_use_mobile_detail,json=commonAppIsUseMobileDetail,proto3" json:"common_app_is_use_mobile_detail"`  //
	// 基础-站点域名和CDN
	CommonDomainHost        string `protobuf:"bytes,15,opt,name=common_domain_host,json=commonDomainHost,proto3" json:"common_domain_host"`                        //站点域名主机
	CommonCdnAttachmentHost string `protobuf:"bytes,16,opt,name=common_cdn_attachment_host,json=commonCdnAttachmentHost,proto3" json:"common_cdn_attachment_host"` //CDN附件主机
	CommonCdnPublicHost     string `protobuf:"bytes,17,opt,name=common_cdn_public_host,json=commonCdnPublicHost,proto3" json:"common_cdn_public_host"`             //CDN公共素材主机
	// 扩展项-留言、问答
	CommonIsLoginAnswer string `protobuf:"bytes,18,opt,name=common_is_login_answer,json=commonIsLoginAnswer,proto3" json:"common_is_login_answer"` //留言是否需要登录
	// 站点信息
	HomeSiteName         string `protobuf:"bytes,19,opt,name=home_site_name,json=homeSiteName,proto3" json:"home_site_name"`                             //站点名称
	HomeSiteLogo         string `protobuf:"bytes,20,opt,name=home_site_logo,json=homeSiteLogo,proto3" json:"home_site_logo"`                             //站点logo
	HomeSiteLogoWap      string `protobuf:"bytes,21,opt,name=home_site_logo_wap,json=homeSiteLogoWap,proto3" json:"home_site_logo_wap"`                  //站点logo(wap)
	HomeSiteLogoSquare   string `protobuf:"bytes,22,opt,name=home_site_logo_square,json=homeSiteLogoSquare,proto3" json:"home_site_logo_square"`         //站点logo(正方型)
	HomeSiteState        string `protobuf:"bytes,23,opt,name=home_site_state,json=homeSiteState,proto3" json:"home_site_state"`                          //站点状态
	HomeSiteWebHomeState string `protobuf:"bytes,24,opt,name=home_site_web_home_state,json=homeSiteWebHomeState,proto3" json:"home_site_web_home_state"` //
	HomeSiteWebPcState   string `protobuf:"bytes,25,opt,name=home_site_web_pc_state,json=homeSiteWebPcState,proto3" json:"home_site_web_pc_state"`       //
	HomeSiteCloseReason  string `protobuf:"bytes,26,opt,name=home_site_close_reason,json=homeSiteCloseReason,proto3" json:"home_site_close_reason"`      //站点关闭原因
	//备案信息
	HomeSiteIcp                string `protobuf:"bytes,27,opt,name=home_site_icp,json=homeSiteIcp,proto3" json:"home_site_icp"`                                                  //工信部备案
	HomeSiteSecurityRecordName string `protobuf:"bytes,28,opt,name=home_site_security_record_name,json=homeSiteSecurityRecordName,proto3" json:"home_site_security_record_name"` //公安备案名称
	HomeSiteSecurityRecordUrl  string `protobuf:"bytes,29,opt,name=home_site_security_record_url,json=homeSiteSecurityRecordUrl,proto3" json:"home_site_security_record_url"`    //公安备案URL
	HomeSiteCompanyLicense     string `protobuf:"bytes,30,opt,name=home_site_company_license,json=homeSiteCompanyLicense,proto3" json:"home_site_company_license"`               //公司统一信用代码
	HomeSiteTelecomLicense     string `protobuf:"bytes,31,opt,name=home_site_telecom_license,json=homeSiteTelecomLicense,proto3" json:"home_site_telecom_license"`               //电信许可证
	// 搜索相关
	HomeSearchLimitNumber int32  `protobuf:"varint,34,opt,name=home_search_limit_number,json=homeSearchLimitNumber,proto3" json:"home_search_limit_number"` //
	HomeSearchIsBrand     string `protobuf:"bytes,35,opt,name=home_search_is_brand,json=homeSearchIsBrand,proto3" json:"home_search_is_brand"`              //
	HomeSearchIsCategory  string `protobuf:"bytes,36,opt,name=home_search_is_category,json=homeSearchIsCategory,proto3" json:"home_search_is_category"`     //
	HomeSearchIsPrice     string `protobuf:"bytes,37,opt,name=home_search_is_price,json=homeSearchIsPrice,proto3" json:"home_search_is_price"`              //
	HomeSearchIsParams    string `protobuf:"bytes,38,opt,name=home_search_is_params,json=homeSearchIsParams,proto3" json:"home_search_is_params"`           //
	HomeSearchIsSpec      string `protobuf:"bytes,39,opt,name=home_search_is_spec,json=homeSearchIsSpec,proto3" json:"home_search_is_spec"`                 //
	// 底部代码
	HomeFooterInfo string `protobuf:"bytes,40,opt,name=home_footer_info,json=homeFooterInfo,proto3" json:"home_footer_info"` //
	// SEO信息
	HomeSeoSiteTitle       string `protobuf:"bytes,41,opt,name=home_seo_site_title,json=homeSeoSiteTitle,proto3" json:"home_seo_site_title"`                   //
	HomeSeoSiteKeywords    string `protobuf:"bytes,42,opt,name=home_seo_site_keywords,json=homeSeoSiteKeywords,proto3" json:"home_seo_site_keywords"`          //
	HomeSeoSiteDescription string `protobuf:"bytes,43,opt,name=home_seo_site_description,json=homeSeoSiteDescription,proto3" json:"home_seo_site_description"` //
	// 地图密钥
	CommonMapType          string `protobuf:"bytes,44,opt,name=common_map_type,json=commonMapType,proto3" json:"common_map_type"`                              //地图类型：baidu百度地图,amap高德地图,tencent腾讯地图,tianditu天地图
	CommonBaiduMapAk       string `protobuf:"bytes,45,opt,name=common_baidu_map_ak,json=commonBaiduMapAk,proto3" json:"common_baidu_map_ak"`                   //百度地图
	CommonAmapMapAk        string `protobuf:"bytes,46,opt,name=common_amap_map_ak,json=commonAmapMapAk,proto3" json:"common_amap_map_ak"`                      //高德地图AK
	CommonAmapMapSafetyAk  string `protobuf:"bytes,47,opt,name=common_amap_map_safety_ak,json=commonAmapMapSafetyAk,proto3" json:"common_amap_map_safety_ak"`  //高德地图safety_ak
	CommonTencentMapAk     string `protobuf:"bytes,48,opt,name=common_tencent_map_ak,json=commonTencentMapAk,proto3" json:"common_tencent_map_ak"`             //腾讯地图AK
	CommonTiandituMapAk    string `protobuf:"bytes,49,opt,name=common_tianditu_map_ak,json=commonTiandituMapAk,proto3" json:"common_tianditu_map_ak"`          //天地图AK
	CommonUserCenterNotice string `protobuf:"bytes,50,opt,name=common_user_center_notice,json=commonUserCenterNotice,proto3" json:"common_user_center_notice"` //用户中心公告
	CommonOrderIsBooking   string `protobuf:"bytes,51,opt,name=common_order_is_booking,json=commonOrderIsBooking,proto3" json:"common_order_is_booking"`       //订单预约模式开启后用户提交订单需要管理员确认
	// 小程序基础信息
	CommonAppMiniWeixinTitle      string `protobuf:"bytes,52,opt,name=common_app_mini_weixin_title,json=commonAppMiniWeixinTitle,proto3" json:"common_app_mini_weixin_title"`                //微信小程序标题
	CommonAppMiniWeixinDescribe   string `protobuf:"bytes,53,opt,name=common_app_mini_weixin_describe,json=commonAppMiniWeixinDescribe,proto3" json:"common_app_mini_weixin_describe"`       //微信小程序描述
	CommonAppMiniAlipayTitle      string `protobuf:"bytes,54,opt,name=common_app_mini_alipay_title,json=commonAppMiniAlipayTitle,proto3" json:"common_app_mini_alipay_title"`                //支付宝小程序标题
	CommonAppMiniAlipayDescribe   string `protobuf:"bytes,55,opt,name=common_app_mini_alipay_describe,json=commonAppMiniAlipayDescribe,proto3" json:"common_app_mini_alipay_describe"`       //支付宝小程序描述
	CommonAppMiniBaiduTitle       string `protobuf:"bytes,56,opt,name=common_app_mini_baidu_title,json=commonAppMiniBaiduTitle,proto3" json:"common_app_mini_baidu_title"`                   //百度小程序标题
	CommonAppMiniBaiduDescribe    string `protobuf:"bytes,57,opt,name=common_app_mini_baidu_describe,json=commonAppMiniBaiduDescribe,proto3" json:"common_app_mini_baidu_describe"`          //百度小程序描述
	CommonAppMiniToutiaoTitle     string `protobuf:"bytes,58,opt,name=common_app_mini_toutiao_title,json=commonAppMiniToutiaoTitle,proto3" json:"common_app_mini_toutiao_title"`             //头条小程序标题
	CommonAppMiniToutiaoDescribe  string `protobuf:"bytes,59,opt,name=common_app_mini_toutiao_describe,json=commonAppMiniToutiaoDescribe,proto3" json:"common_app_mini_toutiao_describe"`    //头条小程序描述
	CommonAppMiniQqTitle          string `protobuf:"bytes,60,opt,name=common_app_mini_qq_title,json=commonAppMiniQqTitle,proto3" json:"common_app_mini_qq_title"`                            //QQ小程序标题
	CommonAppMiniQqDescribe       string `protobuf:"bytes,61,opt,name=common_app_mini_qq_describe,json=commonAppMiniQqDescribe,proto3" json:"common_app_mini_qq_describe"`                   //QQ小程序描述
	CommonAppMiniKuaishouTitle    string `protobuf:"bytes,62,opt,name=common_app_mini_kuaishou_title,json=commonAppMiniKuaishouTitle,proto3" json:"common_app_mini_kuaishou_title"`          //快手小程序标题
	CommonAppMiniKuaishouDescribe string `protobuf:"bytes,63,opt,name=common_app_mini_kuaishou_describe,json=commonAppMiniKuaishouDescribe,proto3" json:"common_app_mini_kuaishou_describe"` //快手小程序描述
	// 验证码
	CommonVerifyExpireTime   int32  `protobuf:"varint,64,opt,name=common_verify_expire_time,json=commonVerifyExpireTime,proto3" json:"common_verify_expire_time"`       //
	CommonVerifyIntervalTime int32  `protobuf:"varint,65,opt,name=common_verify_interval_time,json=commonVerifyIntervalTime,proto3" json:"common_verify_interval_time"` //
	CommonVerifyImgState     string `protobuf:"bytes,66,opt,name=common_verify_img_state,json=commonVerifyImgState,proto3" json:"common_verify_img_state"`              //
	CommonIsEnableWallet     string `protobuf:"bytes,67,opt,name=common_is_enable_wallet,json=commonIsEnableWallet,proto3" json:"common_is_enable_wallet"`              //是否开启钱包
	CommonIsEnableVip        string `protobuf:"bytes,68,opt,name=common_is_enable_vip,json=commonIsEnableVip,proto3" json:"common_is_enable_vip"`                       //是否开启vip
	// 注册
	HomeUserRegisterType              []string  `protobuf:"bytes,77,rep,name=home_user_register_type,json=homeUserRegisterType,proto3" json:"home_user_register_type"`                                            //用户注册类型
	HomeUserRegisterImgVerifyState    string    `protobuf:"bytes,78,opt,name=home_user_register_img_verify_state,json=homeUserRegisterImgVerifyState,proto3" json:"home_user_register_img_verify_state"`          //
	HomeUserRegisterIsEnableAudit     string    `protobuf:"bytes,79,opt,name=home_user_register_is_enable_audit,json=homeUserRegisterIsEnableAudit,proto3" json:"home_user_register_is_enable_audit"`             //
	HomeUserRegisterIsEnableAgreement string    `protobuf:"bytes,80,opt,name=home_user_register_is_enable_agreement,json=homeUserRegisterIsEnableAgreement,proto3" json:"home_user_register_is_enable_agreement"` //
	HomeUserRegisterBgImages          []*AdInfo `protobuf:"bytes,81,rep,name=home_user_register_bg_images,json=homeUserRegisterBgImages,proto3" json:"home_user_register_bg_images"`                              //
	// 用户登录
	HomeUserLoginType           []string  `protobuf:"bytes,82,rep,name=home_user_login_type,json=homeUserLoginType,proto3" json:"home_user_login_type"`                                   //用户登录类型
	HomeUserLoginImgVerifyState string    `protobuf:"bytes,83,opt,name=home_user_login_img_verify_state,json=homeUserLoginImgVerifyState,proto3" json:"home_user_login_img_verify_state"` //
	HomeUserLoginAdImages       []*AdInfo `protobuf:"bytes,84,rep,name=home_user_login_ad_images,json=homeUserLoginAdImages,proto3" json:"home_user_login_ad_images"`                     //
	// 密码找回
	HomeUserForgetPwdAdImages []*AdInfo `protobuf:"bytes,85,rep,name=home_user_forget_pwd_ad_images,json=homeUserForgetPwdAdImages,proto3" json:"home_user_forget_pwd_ad_images"` //
}

func (x *SiteConfigInfo) Reset() {
	*x = SiteConfigInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontpageService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteConfigInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteConfigInfo) ProtoMessage() {}

func (x *SiteConfigInfo) ProtoReflect() protoreflect.Message {
	mi := &file_frontpageService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteConfigInfo.ProtoReflect.Descriptor instead.
func (*SiteConfigInfo) Descriptor() ([]byte, []int) {
	return file_frontpageService_proto_rawDescGZIP(), []int{2}
}

func (x *SiteConfigInfo) GetCommonSiteType() string {
	if x != nil {
		return x.CommonSiteType
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonShopNotice() string {
	if x != nil {
		return x.CommonShopNotice
	}
	return ""
}

func (x *SiteConfigInfo) GetAgreementUserRegisterUrl() string {
	if x != nil {
		return x.AgreementUserRegisterUrl
	}
	return ""
}

func (x *SiteConfigInfo) GetAgreementUserPrivacyUrl() string {
	if x != nil {
		return x.AgreementUserPrivacyUrl
	}
	return ""
}

func (x *SiteConfigInfo) GetAgreementUserLogoutUrl() string {
	if x != nil {
		return x.AgreementUserLogoutUrl
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonAppIsEnableSearch() string {
	if x != nil {
		return x.CommonAppIsEnableSearch
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonAppIsEnableAnswer() string {
	if x != nil {
		return x.CommonAppIsEnableAnswer
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonAppIsHeaderNavFixed() string {
	if x != nil {
		return x.CommonAppIsHeaderNavFixed
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonAppIsOnlineService() string {
	if x != nil {
		return x.CommonAppIsOnlineService
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonAppCustomerServiceTel() string {
	if x != nil {
		return x.CommonAppCustomerServiceTel
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonAppIsHeadViceNav() string {
	if x != nil {
		return x.CommonAppIsHeadViceNav
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonAppIsEnableQuickNav() string {
	if x != nil {
		return x.CommonAppIsEnableQuickNav
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonAppIsUseMobileDetail() string {
	if x != nil {
		return x.CommonAppIsUseMobileDetail
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonDomainHost() string {
	if x != nil {
		return x.CommonDomainHost
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonCdnAttachmentHost() string {
	if x != nil {
		return x.CommonCdnAttachmentHost
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonCdnPublicHost() string {
	if x != nil {
		return x.CommonCdnPublicHost
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonIsLoginAnswer() string {
	if x != nil {
		return x.CommonIsLoginAnswer
	}
	return ""
}

func (x *SiteConfigInfo) GetHomeSiteName() string {
	if x != nil {
		return x.HomeSiteName
	}
	return ""
}

func (x *SiteConfigInfo) GetHomeSiteLogo() string {
	if x != nil {
		return x.HomeSiteLogo
	}
	return ""
}

func (x *SiteConfigInfo) GetHomeSiteLogoWap() string {
	if x != nil {
		return x.HomeSiteLogoWap
	}
	return ""
}

func (x *SiteConfigInfo) GetHomeSiteLogoSquare() string {
	if x != nil {
		return x.HomeSiteLogoSquare
	}
	return ""
}

func (x *SiteConfigInfo) GetHomeSiteState() string {
	if x != nil {
		return x.HomeSiteState
	}
	return ""
}

func (x *SiteConfigInfo) GetHomeSiteWebHomeState() string {
	if x != nil {
		return x.HomeSiteWebHomeState
	}
	return ""
}

func (x *SiteConfigInfo) GetHomeSiteWebPcState() string {
	if x != nil {
		return x.HomeSiteWebPcState
	}
	return ""
}

func (x *SiteConfigInfo) GetHomeSiteCloseReason() string {
	if x != nil {
		return x.HomeSiteCloseReason
	}
	return ""
}

func (x *SiteConfigInfo) GetHomeSiteIcp() string {
	if x != nil {
		return x.HomeSiteIcp
	}
	return ""
}

func (x *SiteConfigInfo) GetHomeSiteSecurityRecordName() string {
	if x != nil {
		return x.HomeSiteSecurityRecordName
	}
	return ""
}

func (x *SiteConfigInfo) GetHomeSiteSecurityRecordUrl() string {
	if x != nil {
		return x.HomeSiteSecurityRecordUrl
	}
	return ""
}

func (x *SiteConfigInfo) GetHomeSiteCompanyLicense() string {
	if x != nil {
		return x.HomeSiteCompanyLicense
	}
	return ""
}

func (x *SiteConfigInfo) GetHomeSiteTelecomLicense() string {
	if x != nil {
		return x.HomeSiteTelecomLicense
	}
	return ""
}

func (x *SiteConfigInfo) GetHomeSearchLimitNumber() int32 {
	if x != nil {
		return x.HomeSearchLimitNumber
	}
	return 0
}

func (x *SiteConfigInfo) GetHomeSearchIsBrand() string {
	if x != nil {
		return x.HomeSearchIsBrand
	}
	return ""
}

func (x *SiteConfigInfo) GetHomeSearchIsCategory() string {
	if x != nil {
		return x.HomeSearchIsCategory
	}
	return ""
}

func (x *SiteConfigInfo) GetHomeSearchIsPrice() string {
	if x != nil {
		return x.HomeSearchIsPrice
	}
	return ""
}

func (x *SiteConfigInfo) GetHomeSearchIsParams() string {
	if x != nil {
		return x.HomeSearchIsParams
	}
	return ""
}

func (x *SiteConfigInfo) GetHomeSearchIsSpec() string {
	if x != nil {
		return x.HomeSearchIsSpec
	}
	return ""
}

func (x *SiteConfigInfo) GetHomeFooterInfo() string {
	if x != nil {
		return x.HomeFooterInfo
	}
	return ""
}

func (x *SiteConfigInfo) GetHomeSeoSiteTitle() string {
	if x != nil {
		return x.HomeSeoSiteTitle
	}
	return ""
}

func (x *SiteConfigInfo) GetHomeSeoSiteKeywords() string {
	if x != nil {
		return x.HomeSeoSiteKeywords
	}
	return ""
}

func (x *SiteConfigInfo) GetHomeSeoSiteDescription() string {
	if x != nil {
		return x.HomeSeoSiteDescription
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonMapType() string {
	if x != nil {
		return x.CommonMapType
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonBaiduMapAk() string {
	if x != nil {
		return x.CommonBaiduMapAk
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonAmapMapAk() string {
	if x != nil {
		return x.CommonAmapMapAk
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonAmapMapSafetyAk() string {
	if x != nil {
		return x.CommonAmapMapSafetyAk
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonTencentMapAk() string {
	if x != nil {
		return x.CommonTencentMapAk
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonTiandituMapAk() string {
	if x != nil {
		return x.CommonTiandituMapAk
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonUserCenterNotice() string {
	if x != nil {
		return x.CommonUserCenterNotice
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonOrderIsBooking() string {
	if x != nil {
		return x.CommonOrderIsBooking
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonAppMiniWeixinTitle() string {
	if x != nil {
		return x.CommonAppMiniWeixinTitle
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonAppMiniWeixinDescribe() string {
	if x != nil {
		return x.CommonAppMiniWeixinDescribe
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonAppMiniAlipayTitle() string {
	if x != nil {
		return x.CommonAppMiniAlipayTitle
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonAppMiniAlipayDescribe() string {
	if x != nil {
		return x.CommonAppMiniAlipayDescribe
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonAppMiniBaiduTitle() string {
	if x != nil {
		return x.CommonAppMiniBaiduTitle
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonAppMiniBaiduDescribe() string {
	if x != nil {
		return x.CommonAppMiniBaiduDescribe
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonAppMiniToutiaoTitle() string {
	if x != nil {
		return x.CommonAppMiniToutiaoTitle
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonAppMiniToutiaoDescribe() string {
	if x != nil {
		return x.CommonAppMiniToutiaoDescribe
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonAppMiniQqTitle() string {
	if x != nil {
		return x.CommonAppMiniQqTitle
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonAppMiniQqDescribe() string {
	if x != nil {
		return x.CommonAppMiniQqDescribe
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonAppMiniKuaishouTitle() string {
	if x != nil {
		return x.CommonAppMiniKuaishouTitle
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonAppMiniKuaishouDescribe() string {
	if x != nil {
		return x.CommonAppMiniKuaishouDescribe
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonVerifyExpireTime() int32 {
	if x != nil {
		return x.CommonVerifyExpireTime
	}
	return 0
}

func (x *SiteConfigInfo) GetCommonVerifyIntervalTime() int32 {
	if x != nil {
		return x.CommonVerifyIntervalTime
	}
	return 0
}

func (x *SiteConfigInfo) GetCommonVerifyImgState() string {
	if x != nil {
		return x.CommonVerifyImgState
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonIsEnableWallet() string {
	if x != nil {
		return x.CommonIsEnableWallet
	}
	return ""
}

func (x *SiteConfigInfo) GetCommonIsEnableVip() string {
	if x != nil {
		return x.CommonIsEnableVip
	}
	return ""
}

func (x *SiteConfigInfo) GetHomeUserRegisterType() []string {
	if x != nil {
		return x.HomeUserRegisterType
	}
	return nil
}

func (x *SiteConfigInfo) GetHomeUserRegisterImgVerifyState() string {
	if x != nil {
		return x.HomeUserRegisterImgVerifyState
	}
	return ""
}

func (x *SiteConfigInfo) GetHomeUserRegisterIsEnableAudit() string {
	if x != nil {
		return x.HomeUserRegisterIsEnableAudit
	}
	return ""
}

func (x *SiteConfigInfo) GetHomeUserRegisterIsEnableAgreement() string {
	if x != nil {
		return x.HomeUserRegisterIsEnableAgreement
	}
	return ""
}

func (x *SiteConfigInfo) GetHomeUserRegisterBgImages() []*AdInfo {
	if x != nil {
		return x.HomeUserRegisterBgImages
	}
	return nil
}

func (x *SiteConfigInfo) GetHomeUserLoginType() []string {
	if x != nil {
		return x.HomeUserLoginType
	}
	return nil
}

func (x *SiteConfigInfo) GetHomeUserLoginImgVerifyState() string {
	if x != nil {
		return x.HomeUserLoginImgVerifyState
	}
	return ""
}

func (x *SiteConfigInfo) GetHomeUserLoginAdImages() []*AdInfo {
	if x != nil {
		return x.HomeUserLoginAdImages
	}
	return nil
}

func (x *SiteConfigInfo) GetHomeUserForgetPwdAdImages() []*AdInfo {
	if x != nil {
		return x.HomeUserForgetPwdAdImages
	}
	return nil
}

//
type FrontpageInitData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config         *SiteConfigInfo `protobuf:"bytes,1,opt,name=config,proto3" json:"config"`                                       //配置
	CurrencySymbol string          `protobuf:"bytes,2,opt,name=currency_symbol,json=currencySymbol,proto3" json:"currency_symbol"` //货币符号
	QuickNav       []*AppNav       `protobuf:"bytes,3,rep,name=quick_nav,json=quickNav,proto3" json:"quick_nav"`                   //快捷入口信息
}

func (x *FrontpageInitData) Reset() {
	*x = FrontpageInitData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontpageService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontpageInitData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontpageInitData) ProtoMessage() {}

func (x *FrontpageInitData) ProtoReflect() protoreflect.Message {
	mi := &file_frontpageService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontpageInitData.ProtoReflect.Descriptor instead.
func (*FrontpageInitData) Descriptor() ([]byte, []int) {
	return file_frontpageService_proto_rawDescGZIP(), []int{3}
}

func (x *FrontpageInitData) GetConfig() *SiteConfigInfo {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *FrontpageInitData) GetCurrencySymbol() string {
	if x != nil {
		return x.CurrencySymbol
	}
	return ""
}

func (x *FrontpageInitData) GetQuickNav() []*AppNav {
	if x != nil {
		return x.QuickNav
	}
	return nil
}

//
type FrontpageData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pager *common.Pager `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Info  *common.Info  `protobuf:"bytes,5,opt,name=info,proto3" json:"info"`
}

func (x *FrontpageData) Reset() {
	*x = FrontpageData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontpageService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontpageData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontpageData) ProtoMessage() {}

func (x *FrontpageData) ProtoReflect() protoreflect.Message {
	mi := &file_frontpageService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontpageData.ProtoReflect.Descriptor instead.
func (*FrontpageData) Descriptor() ([]byte, []int) {
	return file_frontpageService_proto_rawDescGZIP(), []int{4}
}

func (x *FrontpageData) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *FrontpageData) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

//
type FrontpageInitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *FrontpageInitData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error      `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *FrontpageInitResponse) Reset() {
	*x = FrontpageInitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontpageService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontpageInitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontpageInitResponse) ProtoMessage() {}

func (x *FrontpageInitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_frontpageService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontpageInitResponse.ProtoReflect.Descriptor instead.
func (*FrontpageInitResponse) Descriptor() ([]byte, []int) {
	return file_frontpageService_proto_rawDescGZIP(), []int{5}
}

func (x *FrontpageInitResponse) GetData() *FrontpageInitData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FrontpageInitResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type CartTotalInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuyNumber  int32 `protobuf:"varint,1,opt,name=buy_number,json=buyNumber,proto3" json:"buy_number"`
	TotalPrice int64 `protobuf:"varint,2,opt,name=total_price,json=totalPrice,proto3" json:"total_price"`
}

func (x *CartTotalInfo) Reset() {
	*x = CartTotalInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontpageService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CartTotalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartTotalInfo) ProtoMessage() {}

func (x *CartTotalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_frontpageService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartTotalInfo.ProtoReflect.Descriptor instead.
func (*CartTotalInfo) Descriptor() ([]byte, []int) {
	return file_frontpageService_proto_rawDescGZIP(), []int{6}
}

func (x *CartTotalInfo) GetBuyNumber() int32 {
	if x != nil {
		return x.BuyNumber
	}
	return 0
}

func (x *CartTotalInfo) GetTotalPrice() int64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

type HomeFloorChild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	ParentId int64  `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id"`
	Icon     string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon"`
	Name     string `protobuf:"bytes,4,opt,name=name,proto3" json:"name"`
	ViceName string `protobuf:"bytes,5,opt,name=vice_name,json=viceName,proto3" json:"vice_name"`
	BgColor  string `protobuf:"bytes,7,opt,name=bg_color,json=bgColor,proto3" json:"bg_color"`
	Color    string `protobuf:"bytes,8,opt,name=color,proto3" json:"color"`
}

func (x *HomeFloorChild) Reset() {
	*x = HomeFloorChild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontpageService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeFloorChild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeFloorChild) ProtoMessage() {}

func (x *HomeFloorChild) ProtoReflect() protoreflect.Message {
	mi := &file_frontpageService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeFloorChild.ProtoReflect.Descriptor instead.
func (*HomeFloorChild) Descriptor() ([]byte, []int) {
	return file_frontpageService_proto_rawDescGZIP(), []int{7}
}

func (x *HomeFloorChild) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HomeFloorChild) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *HomeFloorChild) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *HomeFloorChild) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HomeFloorChild) GetViceName() string {
	if x != nil {
		return x.ViceName
	}
	return ""
}

func (x *HomeFloorChild) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *HomeFloorChild) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type HomeFloorInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	ParentId          int64             `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id"`
	Icon              string            `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon"`
	Name              string            `protobuf:"bytes,4,opt,name=name,proto3" json:"name"`
	ViceName          string            `protobuf:"bytes,5,opt,name=vice_name,json=viceName,proto3" json:"vice_name"`
	Describe          string            `protobuf:"bytes,6,opt,name=describe,proto3" json:"describe"`
	BgColor           string            `protobuf:"bytes,7,opt,name=bg_color,json=bgColor,proto3" json:"bg_color"`
	Color             string            `protobuf:"bytes,8,opt,name=color,proto3" json:"color"`
	IsHomeRecommended string            `protobuf:"bytes,9,opt,name=is_home_recommended,json=isHomeRecommended,proto3" json:"is_home_recommended"`
	SeoTitle          string            `protobuf:"bytes,10,opt,name=seo_title,json=seoTitle,proto3" json:"seo_title"`
	SeoKeywords       string            `protobuf:"bytes,11,opt,name=seo_keywords,json=seoKeywords,proto3" json:"seo_keywords"`
	SeoDesc           string            `protobuf:"bytes,12,opt,name=seo_desc,json=seoDesc,proto3" json:"seo_desc"`
	MoreUrl           string            `protobuf:"bytes,13,opt,name=more_url,json=moreUrl,proto3" json:"more_url"`
	StyleType         string            `protobuf:"bytes,14,opt,name=style_type,json=styleType,proto3" json:"style_type"`
	Sort              int32             `protobuf:"varint,15,opt,name=sort,proto3" json:"sort"`
	HomeDataLocation  string            `protobuf:"bytes,16,opt,name=home_data_location,json=homeDataLocation,proto3" json:"home_data_location"`
	ListType          string            `protobuf:"bytes,17,opt,name=list_type,json=listType,proto3" json:"list_type"`
	GoodsList         []*SpuInfo        `protobuf:"bytes,18,rep,name=goods_list,json=goodsList,proto3" json:"goods_list"`
	BlogList          []*ArticleInfo    `protobuf:"bytes,19,rep,name=blog_list,json=blogList,proto3" json:"blog_list"`
	Items             []*HomeFloorChild `protobuf:"bytes,20,rep,name=items,proto3" json:"items"`
	KeywordsArr       []string          `protobuf:"bytes,21,rep,name=keywords_arr,json=keywordsArr,proto3" json:"keywords_arr"`
}

func (x *HomeFloorInfo) Reset() {
	*x = HomeFloorInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontpageService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeFloorInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeFloorInfo) ProtoMessage() {}

func (x *HomeFloorInfo) ProtoReflect() protoreflect.Message {
	mi := &file_frontpageService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeFloorInfo.ProtoReflect.Descriptor instead.
func (*HomeFloorInfo) Descriptor() ([]byte, []int) {
	return file_frontpageService_proto_rawDescGZIP(), []int{8}
}

func (x *HomeFloorInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HomeFloorInfo) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *HomeFloorInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *HomeFloorInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HomeFloorInfo) GetViceName() string {
	if x != nil {
		return x.ViceName
	}
	return ""
}

func (x *HomeFloorInfo) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *HomeFloorInfo) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *HomeFloorInfo) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *HomeFloorInfo) GetIsHomeRecommended() string {
	if x != nil {
		return x.IsHomeRecommended
	}
	return ""
}

func (x *HomeFloorInfo) GetSeoTitle() string {
	if x != nil {
		return x.SeoTitle
	}
	return ""
}

func (x *HomeFloorInfo) GetSeoKeywords() string {
	if x != nil {
		return x.SeoKeywords
	}
	return ""
}

func (x *HomeFloorInfo) GetSeoDesc() string {
	if x != nil {
		return x.SeoDesc
	}
	return ""
}

func (x *HomeFloorInfo) GetMoreUrl() string {
	if x != nil {
		return x.MoreUrl
	}
	return ""
}

func (x *HomeFloorInfo) GetStyleType() string {
	if x != nil {
		return x.StyleType
	}
	return ""
}

func (x *HomeFloorInfo) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *HomeFloorInfo) GetHomeDataLocation() string {
	if x != nil {
		return x.HomeDataLocation
	}
	return ""
}

func (x *HomeFloorInfo) GetListType() string {
	if x != nil {
		return x.ListType
	}
	return ""
}

func (x *HomeFloorInfo) GetGoodsList() []*SpuInfo {
	if x != nil {
		return x.GoodsList
	}
	return nil
}

func (x *HomeFloorInfo) GetBlogList() []*ArticleInfo {
	if x != nil {
		return x.BlogList
	}
	return nil
}

func (x *HomeFloorInfo) GetItems() []*HomeFloorChild {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *HomeFloorInfo) GetKeywordsArr() []string {
	if x != nil {
		return x.KeywordsArr
	}
	return nil
}

type SpuInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Title            string `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
	Unit             string `protobuf:"bytes,3,opt,name=unit,proto3" json:"unit"`
	ImageUrl         string `protobuf:"bytes,5,opt,name=image_url,json=imageUrl,proto3" json:"image_url"`
	VideoUrl         string `protobuf:"bytes,6,opt,name=video_url,json=videoUrl,proto3" json:"video_url"`
	Inventory        int32  `protobuf:"varint,7,opt,name=inventory,proto3" json:"inventory"`
	MinOriginalPrice int64  `protobuf:"varint,8,opt,name=min_original_price,json=minOriginalPrice,proto3" json:"min_original_price"`
	MaxOriginalPrice int64  `protobuf:"varint,9,opt,name=max_original_price,json=maxOriginalPrice,proto3" json:"max_original_price"`
	MinPrice         int64  `protobuf:"varint,10,opt,name=min_price,json=minPrice,proto3" json:"min_price"`
	MaxPrice         int64  `protobuf:"varint,11,opt,name=max_price,json=maxPrice,proto3" json:"max_price"`
	GiveIntegral     int64  `protobuf:"varint,12,opt,name=give_integral,json=giveIntegral,proto3" json:"give_integral"`
}

func (x *SpuInfo) Reset() {
	*x = SpuInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontpageService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpuInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpuInfo) ProtoMessage() {}

func (x *SpuInfo) ProtoReflect() protoreflect.Message {
	mi := &file_frontpageService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpuInfo.ProtoReflect.Descriptor instead.
func (*SpuInfo) Descriptor() ([]byte, []int) {
	return file_frontpageService_proto_rawDescGZIP(), []int{9}
}

func (x *SpuInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpuInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SpuInfo) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *SpuInfo) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *SpuInfo) GetVideoUrl() string {
	if x != nil {
		return x.VideoUrl
	}
	return ""
}

func (x *SpuInfo) GetInventory() int32 {
	if x != nil {
		return x.Inventory
	}
	return 0
}

func (x *SpuInfo) GetMinOriginalPrice() int64 {
	if x != nil {
		return x.MinOriginalPrice
	}
	return 0
}

func (x *SpuInfo) GetMaxOriginalPrice() int64 {
	if x != nil {
		return x.MaxOriginalPrice
	}
	return 0
}

func (x *SpuInfo) GetMinPrice() int64 {
	if x != nil {
		return x.MinPrice
	}
	return 0
}

func (x *SpuInfo) GetMaxPrice() int64 {
	if x != nil {
		return x.MaxPrice
	}
	return 0
}

func (x *SpuInfo) GetGiveIntegral() int64 {
	if x != nil {
		return x.GiveIntegral
	}
	return 0
}

type ArticleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Title        string `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
	TitleColor   string `protobuf:"bytes,3,opt,name=title_color,json=titleColor,proto3" json:"title_color"`
	CoverUrl     string `protobuf:"bytes,4,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url"`
	VideoUrl     string `protobuf:"bytes,5,opt,name=video_url,json=videoUrl,proto3" json:"video_url"`
	CategoryId   int64  `protobuf:"varint,6,opt,name=category_id,json=categoryId,proto3" json:"category_id"`
	CategoryName string `protobuf:"bytes,7,opt,name=category_name,json=categoryName,proto3" json:"category_name"`
	CategoryUrl  string `protobuf:"bytes,8,opt,name=category_url,json=categoryUrl,proto3" json:"category_url"`
	Url          string `protobuf:"bytes,9,opt,name=url,proto3" json:"url"`
	CreatedAt    string `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt    string `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
}

func (x *ArticleInfo) Reset() {
	*x = ArticleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontpageService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleInfo) ProtoMessage() {}

func (x *ArticleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_frontpageService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleInfo.ProtoReflect.Descriptor instead.
func (*ArticleInfo) Descriptor() ([]byte, []int) {
	return file_frontpageService_proto_rawDescGZIP(), []int{10}
}

func (x *ArticleInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ArticleInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ArticleInfo) GetTitleColor() string {
	if x != nil {
		return x.TitleColor
	}
	return ""
}

func (x *ArticleInfo) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *ArticleInfo) GetVideoUrl() string {
	if x != nil {
		return x.VideoUrl
	}
	return ""
}

func (x *ArticleInfo) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *ArticleInfo) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *ArticleInfo) GetCategoryUrl() string {
	if x != nil {
		return x.CategoryUrl
	}
	return ""
}

func (x *ArticleInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ArticleInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ArticleInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type PluginSortInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Plugins string `protobuf:"bytes,3,opt,name=plugins,proto3" json:"plugins"`
}

func (x *PluginSortInfo) Reset() {
	*x = PluginSortInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontpageService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginSortInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginSortInfo) ProtoMessage() {}

func (x *PluginSortInfo) ProtoReflect() protoreflect.Message {
	mi := &file_frontpageService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginSortInfo.ProtoReflect.Descriptor instead.
func (*PluginSortInfo) Descriptor() ([]byte, []int) {
	return file_frontpageService_proto_rawDescGZIP(), []int{11}
}

func (x *PluginSortInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PluginSortInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PluginSortInfo) GetPlugins() string {
	if x != nil {
		return x.Plugins
	}
	return ""
}

type PluginSeckill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config  *PluginSeckillConfigInfo `protobuf:"bytes,1,opt,name=config,proto3" json:"config"`
	Time    *PluginSeckillTimeInfo   `protobuf:"bytes,2,opt,name=time,proto3" json:"time"`
	Goods   *SpuInfo                 `protobuf:"bytes,3,opt,name=goods,proto3" json:"goods"`
	IsValid bool                     `protobuf:"varint,4,opt,name=is_valid,json=isValid,proto3" json:"is_valid"`
}

func (x *PluginSeckill) Reset() {
	*x = PluginSeckill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontpageService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginSeckill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginSeckill) ProtoMessage() {}

func (x *PluginSeckill) ProtoReflect() protoreflect.Message {
	mi := &file_frontpageService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginSeckill.ProtoReflect.Descriptor instead.
func (*PluginSeckill) Descriptor() ([]byte, []int) {
	return file_frontpageService_proto_rawDescGZIP(), []int{12}
}

func (x *PluginSeckill) GetConfig() *PluginSeckillConfigInfo {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *PluginSeckill) GetTime() *PluginSeckillTimeInfo {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *PluginSeckill) GetGoods() *SpuInfo {
	if x != nil {
		return x.Goods
	}
	return nil
}

func (x *PluginSeckill) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

type PluginsActivityData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *PluginsActivityDataBaseInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base"`
	Data []*HomeFloorInfo             `protobuf:"bytes,2,rep,name=data,proto3" json:"data"`
}

func (x *PluginsActivityData) Reset() {
	*x = PluginsActivityData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontpageService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginsActivityData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginsActivityData) ProtoMessage() {}

func (x *PluginsActivityData) ProtoReflect() protoreflect.Message {
	mi := &file_frontpageService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginsActivityData.ProtoReflect.Descriptor instead.
func (*PluginsActivityData) Descriptor() ([]byte, []int) {
	return file_frontpageService_proto_rawDescGZIP(), []int{13}
}

func (x *PluginsActivityData) GetBase() *PluginsActivityDataBaseInfo {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *PluginsActivityData) GetData() []*HomeFloorInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type FrontpageHomeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Navigation          []*AppNav            `protobuf:"bytes,1,rep,name=navigation,proto3" json:"navigation"`
	BannerList          []*Slide             `protobuf:"bytes,2,rep,name=banner_list,json=bannerList,proto3" json:"banner_list"`
	CartTotal           *CartTotalInfo       `protobuf:"bytes,3,opt,name=cart_total,json=cartTotal,proto3" json:"cart_total"`
	MessageTotal        int32                `protobuf:"varint,4,opt,name=message_total,json=messageTotal,proto3" json:"message_total"`
	DataList            []*HomeFloorInfo     `protobuf:"bytes,5,rep,name=data_list,json=dataList,proto3" json:"data_list"`
	ArticleList         []*ArticleInfo       `protobuf:"bytes,6,rep,name=article_list,json=articleList,proto3" json:"article_list"`
	PluginsSortList     []*PluginSortInfo    `protobuf:"bytes,7,rep,name=plugins_sort_list,json=pluginsSortList,proto3" json:"plugins_sort_list"`
	PluginsSeckillData  *PluginSeckill       `protobuf:"bytes,8,opt,name=plugins_seckill_data,json=pluginsSeckillData,proto3" json:"plugins_seckill_data"`
	PluginsActivityData *PluginsActivityData `protobuf:"bytes,9,opt,name=plugins_activity_data,json=pluginsActivityData,proto3" json:"plugins_activity_data"`
}

func (x *FrontpageHomeData) Reset() {
	*x = FrontpageHomeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontpageService_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontpageHomeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontpageHomeData) ProtoMessage() {}

func (x *FrontpageHomeData) ProtoReflect() protoreflect.Message {
	mi := &file_frontpageService_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontpageHomeData.ProtoReflect.Descriptor instead.
func (*FrontpageHomeData) Descriptor() ([]byte, []int) {
	return file_frontpageService_proto_rawDescGZIP(), []int{14}
}

func (x *FrontpageHomeData) GetNavigation() []*AppNav {
	if x != nil {
		return x.Navigation
	}
	return nil
}

func (x *FrontpageHomeData) GetBannerList() []*Slide {
	if x != nil {
		return x.BannerList
	}
	return nil
}

func (x *FrontpageHomeData) GetCartTotal() *CartTotalInfo {
	if x != nil {
		return x.CartTotal
	}
	return nil
}

func (x *FrontpageHomeData) GetMessageTotal() int32 {
	if x != nil {
		return x.MessageTotal
	}
	return 0
}

func (x *FrontpageHomeData) GetDataList() []*HomeFloorInfo {
	if x != nil {
		return x.DataList
	}
	return nil
}

func (x *FrontpageHomeData) GetArticleList() []*ArticleInfo {
	if x != nil {
		return x.ArticleList
	}
	return nil
}

func (x *FrontpageHomeData) GetPluginsSortList() []*PluginSortInfo {
	if x != nil {
		return x.PluginsSortList
	}
	return nil
}

func (x *FrontpageHomeData) GetPluginsSeckillData() *PluginSeckill {
	if x != nil {
		return x.PluginsSeckillData
	}
	return nil
}

func (x *FrontpageHomeData) GetPluginsActivityData() *PluginsActivityData {
	if x != nil {
		return x.PluginsActivityData
	}
	return nil
}

//
type FrontpageHomeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *FrontpageHomeData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error      `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *FrontpageHomeResponse) Reset() {
	*x = FrontpageHomeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontpageService_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontpageHomeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontpageHomeResponse) ProtoMessage() {}

func (x *FrontpageHomeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_frontpageService_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontpageHomeResponse.ProtoReflect.Descriptor instead.
func (*FrontpageHomeResponse) Descriptor() ([]byte, []int) {
	return file_frontpageService_proto_rawDescGZIP(), []int{15}
}

func (x *FrontpageHomeResponse) GetData() *FrontpageHomeData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FrontpageHomeResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type UserOrderStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status"`
	Count  int64  `protobuf:"varint,3,opt,name=count,proto3" json:"count"`
}

func (x *UserOrderStatus) Reset() {
	*x = UserOrderStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontpageService_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserOrderStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOrderStatus) ProtoMessage() {}

func (x *UserOrderStatus) ProtoReflect() protoreflect.Message {
	mi := &file_frontpageService_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserOrderStatus.ProtoReflect.Descriptor instead.
func (*UserOrderStatus) Descriptor() ([]byte, []int) {
	return file_frontpageService_proto_rawDescGZIP(), []int{16}
}

func (x *UserOrderStatus) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserOrderStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UserOrderStatus) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

//用户中心数据
type FrontpageUserCenterData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId               int64              `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id"`
	Username             string             `protobuf:"bytes,2,opt,name=username,proto3" json:"username"`
	Nickname             string             `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname"`
	UserNameView         string             `protobuf:"bytes,4,opt,name=user_name_view,json=userNameView,proto3" json:"user_name_view"`
	AvatarUrl            string             `protobuf:"bytes,5,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url"`
	Status               string             `protobuf:"bytes,6,opt,name=status,proto3" json:"status"`
	UserOrderCount       int64              `protobuf:"varint,8,opt,name=user_order_count,json=userOrderCount,proto3" json:"user_order_count"`
	UserGoodsFavorCount  int64              `protobuf:"varint,9,opt,name=user_goods_favor_count,json=userGoodsFavorCount,proto3" json:"user_goods_favor_count"`
	UserGoodsBrowseCount int64              `protobuf:"varint,10,opt,name=user_goods_browse_count,json=userGoodsBrowseCount,proto3" json:"user_goods_browse_count"`
	MessageTotal         int64              `protobuf:"varint,11,opt,name=message_total,json=messageTotal,proto3" json:"message_total"`
	Integral             int64              `protobuf:"varint,12,opt,name=integral,proto3" json:"integral"`
	Navigation           []*AppNav          `protobuf:"bytes,13,rep,name=navigation,proto3" json:"navigation"`
	UserOrderStatus      []*UserOrderStatus `protobuf:"bytes,14,rep,name=user_order_status,json=userOrderStatus,proto3" json:"user_order_status"`
	CartTotal            *CartTotalInfo     `protobuf:"bytes,15,opt,name=cart_total,json=cartTotal,proto3" json:"cart_total"`
}

func (x *FrontpageUserCenterData) Reset() {
	*x = FrontpageUserCenterData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontpageService_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontpageUserCenterData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontpageUserCenterData) ProtoMessage() {}

func (x *FrontpageUserCenterData) ProtoReflect() protoreflect.Message {
	mi := &file_frontpageService_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontpageUserCenterData.ProtoReflect.Descriptor instead.
func (*FrontpageUserCenterData) Descriptor() ([]byte, []int) {
	return file_frontpageService_proto_rawDescGZIP(), []int{17}
}

func (x *FrontpageUserCenterData) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *FrontpageUserCenterData) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *FrontpageUserCenterData) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *FrontpageUserCenterData) GetUserNameView() string {
	if x != nil {
		return x.UserNameView
	}
	return ""
}

func (x *FrontpageUserCenterData) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *FrontpageUserCenterData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *FrontpageUserCenterData) GetUserOrderCount() int64 {
	if x != nil {
		return x.UserOrderCount
	}
	return 0
}

func (x *FrontpageUserCenterData) GetUserGoodsFavorCount() int64 {
	if x != nil {
		return x.UserGoodsFavorCount
	}
	return 0
}

func (x *FrontpageUserCenterData) GetUserGoodsBrowseCount() int64 {
	if x != nil {
		return x.UserGoodsBrowseCount
	}
	return 0
}

func (x *FrontpageUserCenterData) GetMessageTotal() int64 {
	if x != nil {
		return x.MessageTotal
	}
	return 0
}

func (x *FrontpageUserCenterData) GetIntegral() int64 {
	if x != nil {
		return x.Integral
	}
	return 0
}

func (x *FrontpageUserCenterData) GetNavigation() []*AppNav {
	if x != nil {
		return x.Navigation
	}
	return nil
}

func (x *FrontpageUserCenterData) GetUserOrderStatus() []*UserOrderStatus {
	if x != nil {
		return x.UserOrderStatus
	}
	return nil
}

func (x *FrontpageUserCenterData) GetCartTotal() *CartTotalInfo {
	if x != nil {
		return x.CartTotal
	}
	return nil
}

//用户中心响应
type FrontpageUserCenterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *FrontpageUserCenterData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error            `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *FrontpageUserCenterResponse) Reset() {
	*x = FrontpageUserCenterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontpageService_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontpageUserCenterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontpageUserCenterResponse) ProtoMessage() {}

func (x *FrontpageUserCenterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_frontpageService_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontpageUserCenterResponse.ProtoReflect.Descriptor instead.
func (*FrontpageUserCenterResponse) Descriptor() ([]byte, []int) {
	return file_frontpageService_proto_rawDescGZIP(), []int{18}
}

func (x *FrontpageUserCenterResponse) GetData() *FrontpageUserCenterData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FrontpageUserCenterResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type FrontpageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *FrontpageData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error  `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *FrontpageResponse) Reset() {
	*x = FrontpageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontpageService_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FrontpageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FrontpageResponse) ProtoMessage() {}

func (x *FrontpageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_frontpageService_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FrontpageResponse.ProtoReflect.Descriptor instead.
func (*FrontpageResponse) Descriptor() ([]byte, []int) {
	return file_frontpageService_proto_rawDescGZIP(), []int{19}
}

func (x *FrontpageResponse) GetData() *FrontpageData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FrontpageResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type PluginSeckillConfigInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationName string   `protobuf:"bytes,1,opt,name=application_name,json=applicationName,proto3" json:"application_name"`
	TimeStart       string   `protobuf:"bytes,2,opt,name=time_start,json=timeStart,proto3" json:"time_start"`
	TimeEnd         string   `protobuf:"bytes,3,opt,name=time_end,json=timeEnd,proto3" json:"time_end"`
	ContentNotice   []string `protobuf:"bytes,4,rep,name=content_notice,json=contentNotice,proto3" json:"content_notice"`
	IsHomeAutoPlay  string   `protobuf:"bytes,5,opt,name=is_home_auto_play,json=isHomeAutoPlay,proto3" json:"is_home_auto_play"`
	IsShopSeckill   string   `protobuf:"bytes,6,opt,name=is_shop_seckill,json=isShopSeckill,proto3" json:"is_shop_seckill"`
	SystemType      string   `protobuf:"bytes,7,opt,name=system_type,json=systemType,proto3" json:"system_type"`
}

func (x *PluginSeckillConfigInfo) Reset() {
	*x = PluginSeckillConfigInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontpageService_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginSeckillConfigInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginSeckillConfigInfo) ProtoMessage() {}

func (x *PluginSeckillConfigInfo) ProtoReflect() protoreflect.Message {
	mi := &file_frontpageService_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginSeckillConfigInfo.ProtoReflect.Descriptor instead.
func (*PluginSeckillConfigInfo) Descriptor() ([]byte, []int) {
	return file_frontpageService_proto_rawDescGZIP(), []int{12, 0}
}

func (x *PluginSeckillConfigInfo) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *PluginSeckillConfigInfo) GetTimeStart() string {
	if x != nil {
		return x.TimeStart
	}
	return ""
}

func (x *PluginSeckillConfigInfo) GetTimeEnd() string {
	if x != nil {
		return x.TimeEnd
	}
	return ""
}

func (x *PluginSeckillConfigInfo) GetContentNotice() []string {
	if x != nil {
		return x.ContentNotice
	}
	return nil
}

func (x *PluginSeckillConfigInfo) GetIsHomeAutoPlay() string {
	if x != nil {
		return x.IsHomeAutoPlay
	}
	return ""
}

func (x *PluginSeckillConfigInfo) GetIsShopSeckill() string {
	if x != nil {
		return x.IsShopSeckill
	}
	return ""
}

func (x *PluginSeckillConfigInfo) GetSystemType() string {
	if x != nil {
		return x.SystemType
	}
	return ""
}

type PluginSeckillTimeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hours   int64  `protobuf:"varint,1,opt,name=hours,proto3" json:"hours"`
	Minutes int64  `protobuf:"varint,2,opt,name=minutes,proto3" json:"minutes"`
	Seconds int64  `protobuf:"varint,3,opt,name=seconds,proto3" json:"seconds"`
	Status  string `protobuf:"bytes,4,opt,name=status,proto3" json:"status"`
	Msg     string `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg"`
}

func (x *PluginSeckillTimeInfo) Reset() {
	*x = PluginSeckillTimeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontpageService_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginSeckillTimeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginSeckillTimeInfo) ProtoMessage() {}

func (x *PluginSeckillTimeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_frontpageService_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginSeckillTimeInfo.ProtoReflect.Descriptor instead.
func (*PluginSeckillTimeInfo) Descriptor() ([]byte, []int) {
	return file_frontpageService_proto_rawDescGZIP(), []int{12, 1}
}

func (x *PluginSeckillTimeInfo) GetHours() int64 {
	if x != nil {
		return x.Hours
	}
	return 0
}

func (x *PluginSeckillTimeInfo) GetMinutes() int64 {
	if x != nil {
		return x.Minutes
	}
	return 0
}

func (x *PluginSeckillTimeInfo) GetSeconds() int64 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

func (x *PluginSeckillTimeInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PluginSeckillTimeInfo) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type PluginsActivityDataBaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationName string `protobuf:"bytes,1,opt,name=application_name,json=applicationName,proto3" json:"application_name"`
	SeoTitle        string `protobuf:"bytes,2,opt,name=seo_title,json=seoTitle,proto3" json:"seo_title"`
	SeoKeywords     string `protobuf:"bytes,3,opt,name=seo_keywords,json=seoKeywords,proto3" json:"seo_keywords"`
	SeoDesc         string `protobuf:"bytes,4,opt,name=seo_desc,json=seoDesc,proto3" json:"seo_desc"`
	IsHomeAutoPlay  string `protobuf:"bytes,5,opt,name=is_home_auto_play,json=isHomeAutoPlay,proto3" json:"is_home_auto_play"`
}

func (x *PluginsActivityDataBaseInfo) Reset() {
	*x = PluginsActivityDataBaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_frontpageService_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginsActivityDataBaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginsActivityDataBaseInfo) ProtoMessage() {}

func (x *PluginsActivityDataBaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_frontpageService_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginsActivityDataBaseInfo.ProtoReflect.Descriptor instead.
func (*PluginsActivityDataBaseInfo) Descriptor() ([]byte, []int) {
	return file_frontpageService_proto_rawDescGZIP(), []int{13, 0}
}

func (x *PluginsActivityDataBaseInfo) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *PluginsActivityDataBaseInfo) GetSeoTitle() string {
	if x != nil {
		return x.SeoTitle
	}
	return ""
}

func (x *PluginsActivityDataBaseInfo) GetSeoKeywords() string {
	if x != nil {
		return x.SeoKeywords
	}
	return ""
}

func (x *PluginsActivityDataBaseInfo) GetSeoDesc() string {
	if x != nil {
		return x.SeoDesc
	}
	return ""
}

func (x *PluginsActivityDataBaseInfo) GetIsHomeAutoPlay() string {
	if x != nil {
		return x.IsHomeAutoPlay
	}
	return ""
}

var File_frontpageService_proto protoreflect.FileDescriptor

var file_frontpageService_proto_rawDesc = []byte{
	0x0a, 0x16, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x70, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x76, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x73, 0x6c, 0x69, 0x64,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe2,
	0x01, 0x0a, 0x10, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x70, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03,
	0x69, 0x64, 0x73, 0x22, 0x4b, 0x0a, 0x06, 0x41, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x22, 0xea, 0x21, 0x0a, 0x0e, 0x53, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x73, 0x69,
	0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x69, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2c, 0x0a,
	0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x53, 0x68, 0x6f, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x1b, 0x61,
	0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x18, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x3b, 0x0a, 0x1a, 0x61, 0x67,
	0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17,
	0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x63, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x39, 0x0a, 0x19, 0x61, 0x67, 0x72, 0x65, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x61, 0x67, 0x72, 0x65,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x55,
	0x72, 0x6c, 0x12, 0x3c, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70,
	0x5f, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41,
	0x70, 0x70, 0x49, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x12, 0x3c, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70,
	0x49, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x41,
	0x0a, 0x1e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x73, 0x5f,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x76, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70,
	0x70, 0x49, 0x73, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x76, 0x46, 0x69, 0x78, 0x65,
	0x64, 0x12, 0x3e, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f,
	0x69, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41,
	0x70, 0x70, 0x49, 0x73, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x44, 0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x74, 0x65, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x41, 0x70, 0x70, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6c, 0x12, 0x3b, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x73, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x6e, 0x61, 0x76, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x49, 0x73, 0x48, 0x65, 0x61, 0x64, 0x56, 0x69, 0x63,
	0x65, 0x4e, 0x61, 0x76, 0x12, 0x41, 0x0a, 0x1e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61,
	0x70, 0x70, 0x5f, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x71, 0x75, 0x69,
	0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x76, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x49, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x51,
	0x75, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x76, 0x12, 0x43, 0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x6d, 0x6f, 0x62,
	0x69, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x49, 0x73, 0x55, 0x73, 0x65,
	0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x2c, 0x0a, 0x12,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x68, 0x6f,
	0x73, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x1a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x63, 0x64, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x64, 0x6e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x5f, 0x63, 0x64, 0x6e, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43,
	0x64, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x16,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x69, 0x73, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f,
	0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x49, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x41, 0x6e, 0x73, 0x77, 0x65,
	0x72, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x53,
	0x69, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x6f, 0x6d, 0x65, 0x5f,
	0x73, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x69, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x2b, 0x0a,
	0x12, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x5f,
	0x77, 0x61, 0x70, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x68, 0x6f, 0x6d, 0x65, 0x53,
	0x69, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x57, 0x61, 0x70, 0x12, 0x31, 0x0a, 0x15, 0x68, 0x6f,
	0x6d, 0x65, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x73, 0x71, 0x75,
	0x61, 0x72, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x68, 0x6f, 0x6d, 0x65, 0x53,
	0x69, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x12, 0x26, 0x0a,
	0x0f, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x69, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x18, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x69,
	0x74, 0x65, 0x5f, 0x77, 0x65, 0x62, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x69, 0x74,
	0x65, 0x57, 0x65, 0x62, 0x48, 0x6f, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a,
	0x16, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x77, 0x65, 0x62, 0x5f, 0x70,
	0x63, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x68,
	0x6f, 0x6d, 0x65, 0x53, 0x69, 0x74, 0x65, 0x57, 0x65, 0x62, 0x50, 0x63, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x33, 0x0a, 0x16, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x1a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x69, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73,
	0x69, 0x74, 0x65, 0x5f, 0x69, 0x63, 0x70, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68,
	0x6f, 0x6d, 0x65, 0x53, 0x69, 0x74, 0x65, 0x49, 0x63, 0x70, 0x12, 0x42, 0x0a, 0x1e, 0x68, 0x6f,
	0x6d, 0x65, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79,
	0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x1c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x1a, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x40,
	0x0a, 0x1d, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x69, 0x74, 0x65, 0x53,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x72, 0x6c,
	0x12, 0x39, 0x0a, 0x19, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x16, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x19, 0x68,
	0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d,
	0x5f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16,
	0x68, 0x6f, 0x6d, 0x65, 0x53, 0x69, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x4c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x18, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x22, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x2f, 0x0a, 0x14, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x69,
	0x73, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x68,
	0x6f, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x73, 0x42, 0x72, 0x61, 0x6e, 0x64,
	0x12, 0x35, 0x0a, 0x17, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f,
	0x69, 0x73, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x24, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x14, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x73, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x2f, 0x0a, 0x14, 0x68, 0x6f, 0x6d, 0x65, 0x5f,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x49, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x68, 0x6f, 0x6d, 0x65,
	0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x69, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x49, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x2d, 0x0a, 0x13, 0x68,
	0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x69, 0x73, 0x5f, 0x73, 0x70,
	0x65, 0x63, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x49, 0x73, 0x53, 0x70, 0x65, 0x63, 0x12, 0x28, 0x0a, 0x10, 0x68, 0x6f,
	0x6d, 0x65, 0x5f, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x28,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x68, 0x6f, 0x6d, 0x65, 0x46, 0x6f, 0x6f, 0x74, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2d, 0x0a, 0x13, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x6f,
	0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x65, 0x6f, 0x53, 0x69, 0x74, 0x65, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x6f, 0x5f,
	0x73, 0x69, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x2a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x65, 0x6f, 0x53, 0x69, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x39, 0x0a, 0x19, 0x68, 0x6f, 0x6d, 0x65,
	0x5f, 0x73, 0x65, 0x6f, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x68, 0x6f, 0x6d,
	0x65, 0x53, 0x65, 0x6f, 0x53, 0x69, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6d, 0x61,
	0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2d, 0x0a, 0x13, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x69, 0x64, 0x75, 0x5f, 0x6d, 0x61, 0x70, 0x5f,
	0x61, 0x6b, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x42, 0x61, 0x69, 0x64, 0x75, 0x4d, 0x61, 0x70, 0x41, 0x6b, 0x12, 0x2b, 0x0a, 0x12, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x6d, 0x61, 0x70, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x61, 0x6b,
	0x18, 0x2e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x6d,
	0x61, 0x70, 0x4d, 0x61, 0x70, 0x41, 0x6b, 0x12, 0x38, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x5f, 0x61, 0x6d, 0x61, 0x70, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x73, 0x61, 0x66, 0x65, 0x74,
	0x79, 0x5f, 0x61, 0x6b, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x41, 0x6d, 0x61, 0x70, 0x4d, 0x61, 0x70, 0x53, 0x61, 0x66, 0x65, 0x74, 0x79, 0x41,
	0x6b, 0x12, 0x31, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x6e, 0x63,
	0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x61, 0x6b, 0x18, 0x30, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x65, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x4d,
	0x61, 0x70, 0x41, 0x6b, 0x12, 0x33, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x74,
	0x69, 0x61, 0x6e, 0x64, 0x69, 0x74, 0x75, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x61, 0x6b, 0x18, 0x31,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x69, 0x61, 0x6e,
	0x64, 0x69, 0x74, 0x75, 0x4d, 0x61, 0x70, 0x41, 0x6b, 0x12, 0x39, 0x0a, 0x19, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x5f,
	0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x4e, 0x6f,
	0x74, 0x69, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x73, 0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x18,
	0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x73, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x3e, 0x0a, 0x1c, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x77,
	0x65, 0x69, 0x78, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x34, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69,
	0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x44, 0x0a, 0x1f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x77,
	0x65, 0x69, 0x78, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x35,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x4d,
	0x69, 0x6e, 0x69, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x12, 0x3e, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f,
	0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x36, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41,
	0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x44, 0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f,
	0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x18, 0x37, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x41, 0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x3c, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x62, 0x61, 0x69, 0x64, 0x75,
	0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x38, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69, 0x42, 0x61, 0x69, 0x64, 0x75,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x42, 0x0a, 0x1e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f,
	0x61, 0x70, 0x70, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x62, 0x61, 0x69, 0x64, 0x75, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x39, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69, 0x42, 0x61, 0x69, 0x64,
	0x75, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x40, 0x0a, 0x1d, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x74, 0x6f, 0x75,
	0x74, 0x69, 0x61, 0x6f, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69, 0x54,
	0x6f, 0x75, 0x74, 0x69, 0x61, 0x6f, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x46, 0x0a, 0x20, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x74,
	0x6f, 0x75, 0x74, 0x69, 0x61, 0x6f, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18,
	0x3b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70,
	0x4d, 0x69, 0x6e, 0x69, 0x54, 0x6f, 0x75, 0x74, 0x69, 0x61, 0x6f, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x62, 0x65, 0x12, 0x36, 0x0a, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70,
	0x70, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x71, 0x71, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70,
	0x4d, 0x69, 0x6e, 0x69, 0x51, 0x71, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x3c, 0x0a, 0x1b, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x71,
	0x71, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x17, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69, 0x51,
	0x71, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x42, 0x0a, 0x1e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x6b, 0x75, 0x61,
	0x69, 0x73, 0x68, 0x6f, 0x75, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x3e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69,
	0x4b, 0x75, 0x61, 0x69, 0x73, 0x68, 0x6f, 0x75, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x48, 0x0a,
	0x21, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6d, 0x69, 0x6e, 0x69,
	0x5f, 0x6b, 0x75, 0x61, 0x69, 0x73, 0x68, 0x6f, 0x75, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x41, 0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69, 0x4b, 0x75, 0x61, 0x69, 0x73, 0x68, 0x6f, 0x75, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x39, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x40, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x3d, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x41, 0x20, 0x01, 0x28, 0x05, 0x52, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x56,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x35, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x5f, 0x69, 0x6d, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x42, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79,
	0x49, 0x6d, 0x67, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x5f, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x18, 0x43, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x49, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12,
	0x2f, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x76, 0x69, 0x70, 0x18, 0x44, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x49, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x56, 0x69, 0x70,
	0x12, 0x35, 0x0a, 0x17, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x4d, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x14, 0x68, 0x6f, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x4b, 0x0a, 0x23, 0x68, 0x6f, 0x6d, 0x65, 0x5f,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x6d,
	0x67, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x4e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x1e, 0x68, 0x6f, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x49, 0x6d, 0x67, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x49, 0x0a, 0x22, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x73, 0x5f, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x74, 0x18, 0x4f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x1d, 0x68, 0x6f, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x49, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x75, 0x64, 0x69, 0x74, 0x12,
	0x51, 0x0a, 0x26, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x21, 0x68, 0x6f, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x50, 0x0a, 0x1c, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x62, 0x67, 0x5f, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x51, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x41, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x18, 0x68, 0x6f, 0x6d, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x42, 0x67, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x14, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x52, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x11, 0x68, 0x6f, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x45, 0x0a, 0x20, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x69, 0x6d, 0x67, 0x5f, 0x76, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x53, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x1b, 0x68, 0x6f, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x49, 0x6d,
	0x67, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4a, 0x0a, 0x19,
	0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f,
	0x61, 0x64, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x54, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x64, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x15, 0x68, 0x6f, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e,
	0x41, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x53, 0x0a, 0x1e, 0x68, 0x6f, 0x6d, 0x65,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x77, 0x64,
	0x5f, 0x61, 0x64, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x55, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x64, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x19, 0x68, 0x6f, 0x6d, 0x65, 0x55, 0x73, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x67,
	0x65, 0x74, 0x50, 0x77, 0x64, 0x41, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0x9d, 0x01,
	0x0a, 0x11, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x30, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53,
	0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x2d,
	0x0a, 0x09, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x76, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x70, 0x70,
	0x4e, 0x61, 0x76, 0x52, 0x08, 0x71, 0x75, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x76, 0x22, 0x56, 0x0a,
	0x0d, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x70, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23,
	0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61,
	0x67, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x6d, 0x0a, 0x15, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x70, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x70, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x4f, 0x0a, 0x0d, 0x43, 0x61, 0x72, 0x74, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x79, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x75, 0x79, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xb3, 0x01, 0x0a, 0x0e, 0x48, 0x6f, 0x6d, 0x65, 0x46, 0x6c,
	0x6f, 0x6f, 0x72, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x67,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x67,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0xab, 0x05, 0x0a, 0x0d,
	0x48, 0x6f, 0x6d, 0x65, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62,
	0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62,
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x13,
	0x69, 0x73, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x64, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x69, 0x73, 0x48, 0x6f, 0x6d,
	0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x65, 0x6f, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x65, 0x6f, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x6f,
	0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x73, 0x65, 0x6f, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x65, 0x6f, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x65, 0x6f, 0x44, 0x65, 0x73, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x72, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x72, 0x65, 0x55,
	0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x68, 0x6f, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x30, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x12,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x53, 0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x32, 0x0a, 0x09, 0x62, 0x6c, 0x6f, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x62, 0x6c,
	0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x5f, 0x61, 0x72, 0x72, 0x18, 0x15, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x41, 0x72, 0x72, 0x22, 0xd6, 0x02, 0x0a, 0x07, 0x53, 0x70,
	0x75, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x6e, 0x69, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x69, 0x6e, 0x5f, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x6d, 0x69, 0x6e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x61, 0x78, 0x5f, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x67, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x67, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x6c, 0x22, 0xc7, 0x02, 0x0a, 0x0b, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f,
	0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x4e, 0x0a, 0x0e,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x22, 0xd8, 0x04, 0x0a,
	0x0d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x3b,
	0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x2e, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x35, 0x0a, 0x04, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x63, 0x6b, 0x69,
	0x6c, 0x6c, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x27, 0x0a, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x70, 0x75,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x69,
	0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69,
	0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x1a, 0x8d, 0x02, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69,
	0x63, 0x65, 0x12, 0x29, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x61, 0x75,
	0x74, 0x6f, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69,
	0x73, 0x48, 0x6f, 0x6d, 0x65, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x12, 0x26, 0x0a,
	0x0f, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x70, 0x53, 0x65,
	0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x1a, 0x7f, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e,
	0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x75,
	0x74, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xbe, 0x02, 0x0a, 0x13, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x3b, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73,
	0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xbc, 0x01, 0x0a, 0x09, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6f, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6f, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x73, 0x65, 0x6f, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x6f, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x6f, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x6f, 0x44, 0x65, 0x73, 0x63, 0x12, 0x29, 0x0a,
	0x11, 0x69, 0x73, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x70, 0x6c,
	0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x73, 0x48, 0x6f, 0x6d, 0x65,
	0x41, 0x75, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x22, 0xa8, 0x04, 0x0a, 0x11, 0x46, 0x72, 0x6f,
	0x6e, 0x74, 0x70, 0x61, 0x67, 0x65, 0x48, 0x6f, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x30,
	0x0a, 0x0a, 0x6e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x70,
	0x70, 0x4e, 0x61, 0x76, 0x52, 0x0a, 0x6e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x30, 0x0a, 0x0b, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x53, 0x6c, 0x69, 0x64, 0x65, 0x52, 0x0a, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x36, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x09, 0x63, 0x61, 0x72, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x34, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x48, 0x6f,
	0x6d, 0x65, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x64, 0x61, 0x74,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0c, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0b, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x44, 0x0a, 0x11, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x5f, 0x73, 0x6f, 0x72, 0x74, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53, 0x6f, 0x72, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x53, 0x6f, 0x72,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x14, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73,
	0x5f, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x12, 0x70, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x73, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x51, 0x0a, 0x15, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x13,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44,
	0x61, 0x74, 0x61, 0x22, 0x6d, 0x0a, 0x15, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x70, 0x61, 0x67, 0x65,
	0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x70, 0x61, 0x67, 0x65, 0x48,
	0x6f, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x53, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xcf, 0x04, 0x0a, 0x17, 0x46, 0x72, 0x6f, 0x6e,
	0x74, 0x70, 0x61, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x56, 0x69, 0x65, 0x77, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x28, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x75, 0x73, 0x65,
	0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x75, 0x73, 0x65,
	0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x35, 0x0a, 0x17, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x62,
	0x72, 0x6f, 0x77, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x14, 0x75, 0x73, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x42, 0x72, 0x6f, 0x77,
	0x73, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x30, 0x0a, 0x0a, 0x6e, 0x61, 0x76, 0x69,
	0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x4e, 0x61, 0x76, 0x52, 0x0a,
	0x6e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x45, 0x0a, 0x11, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x0f, 0x75, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x36, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x43, 0x61, 0x72, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09,
	0x63, 0x61, 0x72, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x79, 0x0a, 0x1b, 0x46, 0x72, 0x6f,
	0x6e, 0x74, 0x70, 0x61, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x70, 0x61, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43,
	0x65, 0x6e, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x22, 0x65, 0x0a, 0x11, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x70, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x70, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xbd, 0x02, 0x0a, 0x10,
	0x46, 0x72, 0x6f, 0x6e, 0x74, 0x70, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x45, 0x0a, 0x04, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x70, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x46, 0x72, 0x6f, 0x6e, 0x74, 0x70, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x04, 0x48, 0x6f, 0x6d, 0x65, 0x12,
	0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74,
	0x70, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x70, 0x61, 0x67, 0x65,
	0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48,
	0x0a, 0x0b, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x70, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x70, 0x61, 0x67, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72,
	0x43, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x70, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x46, 0x72,
	0x6f, 0x6e, 0x74, 0x70, 0x61, 0x67, 0x65, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f,
	0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_frontpageService_proto_rawDescOnce sync.Once
	file_frontpageService_proto_rawDescData = file_frontpageService_proto_rawDesc
)

func file_frontpageService_proto_rawDescGZIP() []byte {
	file_frontpageService_proto_rawDescOnce.Do(func() {
		file_frontpageService_proto_rawDescData = protoimpl.X.CompressGZIP(file_frontpageService_proto_rawDescData)
	})
	return file_frontpageService_proto_rawDescData
}

var file_frontpageService_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_frontpageService_proto_goTypes = []interface{}{
	(*FrontpageRequest)(nil),            // 0: services.FrontpageRequest
	(*AdInfo)(nil),                      // 1: services.AdInfo
	(*SiteConfigInfo)(nil),              // 2: services.SiteConfigInfo
	(*FrontpageInitData)(nil),           // 3: services.FrontpageInitData
	(*FrontpageData)(nil),               // 4: services.FrontpageData
	(*FrontpageInitResponse)(nil),       // 5: services.FrontpageInitResponse
	(*CartTotalInfo)(nil),               // 6: services.CartTotalInfo
	(*HomeFloorChild)(nil),              // 7: services.HomeFloorChild
	(*HomeFloorInfo)(nil),               // 8: services.HomeFloorInfo
	(*SpuInfo)(nil),                     // 9: services.SpuInfo
	(*ArticleInfo)(nil),                 // 10: services.ArticleInfo
	(*PluginSortInfo)(nil),              // 11: services.PluginSortInfo
	(*PluginSeckill)(nil),               // 12: services.PluginSeckill
	(*PluginsActivityData)(nil),         // 13: services.PluginsActivityData
	(*FrontpageHomeData)(nil),           // 14: services.FrontpageHomeData
	(*FrontpageHomeResponse)(nil),       // 15: services.FrontpageHomeResponse
	(*UserOrderStatus)(nil),             // 16: services.UserOrderStatus
	(*FrontpageUserCenterData)(nil),     // 17: services.FrontpageUserCenterData
	(*FrontpageUserCenterResponse)(nil), // 18: services.FrontpageUserCenterResponse
	(*FrontpageResponse)(nil),           // 19: services.FrontpageResponse
	(*PluginSeckillConfigInfo)(nil),     // 20: services.PluginSeckill.config_info
	(*PluginSeckillTimeInfo)(nil),       // 21: services.PluginSeckill.time_info
	(*PluginsActivityDataBaseInfo)(nil), // 22: services.PluginsActivityData.base_info
	(*AppNav)(nil),                      // 23: services.AppNav
	(*common.Pager)(nil),                // 24: common.Pager
	(*common.Info)(nil),                 // 25: common.Info
	(*common.Error)(nil),                // 26: common.Error
	(*Slide)(nil),                       // 27: services.Slide
}
var file_frontpageService_proto_depIdxs = []int32{
	1,  // 0: services.SiteConfigInfo.home_user_register_bg_images:type_name -> services.AdInfo
	1,  // 1: services.SiteConfigInfo.home_user_login_ad_images:type_name -> services.AdInfo
	1,  // 2: services.SiteConfigInfo.home_user_forget_pwd_ad_images:type_name -> services.AdInfo
	2,  // 3: services.FrontpageInitData.config:type_name -> services.SiteConfigInfo
	23, // 4: services.FrontpageInitData.quick_nav:type_name -> services.AppNav
	24, // 5: services.FrontpageData.pager:type_name -> common.Pager
	25, // 6: services.FrontpageData.info:type_name -> common.Info
	3,  // 7: services.FrontpageInitResponse.data:type_name -> services.FrontpageInitData
	26, // 8: services.FrontpageInitResponse.error:type_name -> common.Error
	9,  // 9: services.HomeFloorInfo.goods_list:type_name -> services.SpuInfo
	10, // 10: services.HomeFloorInfo.blog_list:type_name -> services.ArticleInfo
	7,  // 11: services.HomeFloorInfo.items:type_name -> services.HomeFloorChild
	20, // 12: services.PluginSeckill.config:type_name -> services.PluginSeckill.config_info
	21, // 13: services.PluginSeckill.time:type_name -> services.PluginSeckill.time_info
	9,  // 14: services.PluginSeckill.goods:type_name -> services.SpuInfo
	22, // 15: services.PluginsActivityData.base:type_name -> services.PluginsActivityData.base_info
	8,  // 16: services.PluginsActivityData.data:type_name -> services.HomeFloorInfo
	23, // 17: services.FrontpageHomeData.navigation:type_name -> services.AppNav
	27, // 18: services.FrontpageHomeData.banner_list:type_name -> services.Slide
	6,  // 19: services.FrontpageHomeData.cart_total:type_name -> services.CartTotalInfo
	8,  // 20: services.FrontpageHomeData.data_list:type_name -> services.HomeFloorInfo
	10, // 21: services.FrontpageHomeData.article_list:type_name -> services.ArticleInfo
	11, // 22: services.FrontpageHomeData.plugins_sort_list:type_name -> services.PluginSortInfo
	12, // 23: services.FrontpageHomeData.plugins_seckill_data:type_name -> services.PluginSeckill
	13, // 24: services.FrontpageHomeData.plugins_activity_data:type_name -> services.PluginsActivityData
	14, // 25: services.FrontpageHomeResponse.data:type_name -> services.FrontpageHomeData
	26, // 26: services.FrontpageHomeResponse.error:type_name -> common.Error
	23, // 27: services.FrontpageUserCenterData.navigation:type_name -> services.AppNav
	16, // 28: services.FrontpageUserCenterData.user_order_status:type_name -> services.UserOrderStatus
	6,  // 29: services.FrontpageUserCenterData.cart_total:type_name -> services.CartTotalInfo
	17, // 30: services.FrontpageUserCenterResponse.data:type_name -> services.FrontpageUserCenterData
	26, // 31: services.FrontpageUserCenterResponse.error:type_name -> common.Error
	4,  // 32: services.FrontpageResponse.data:type_name -> services.FrontpageData
	26, // 33: services.FrontpageResponse.error:type_name -> common.Error
	0,  // 34: services.FrontpageService.Init:input_type -> services.FrontpageRequest
	0,  // 35: services.FrontpageService.Home:input_type -> services.FrontpageRequest
	0,  // 36: services.FrontpageService.SearchIndex:input_type -> services.FrontpageRequest
	0,  // 37: services.FrontpageService.UserCenter:input_type -> services.FrontpageRequest
	5,  // 38: services.FrontpageService.Init:output_type -> services.FrontpageInitResponse
	15, // 39: services.FrontpageService.Home:output_type -> services.FrontpageHomeResponse
	19, // 40: services.FrontpageService.SearchIndex:output_type -> services.FrontpageResponse
	18, // 41: services.FrontpageService.UserCenter:output_type -> services.FrontpageUserCenterResponse
	38, // [38:42] is the sub-list for method output_type
	34, // [34:38] is the sub-list for method input_type
	34, // [34:34] is the sub-list for extension type_name
	34, // [34:34] is the sub-list for extension extendee
	0,  // [0:34] is the sub-list for field type_name
}

func init() { file_frontpageService_proto_init() }
func file_frontpageService_proto_init() {
	if File_frontpageService_proto != nil {
		return
	}
	file_appNavService_proto_init()
	file_slideService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_frontpageService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontpageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontpageService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontpageService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteConfigInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontpageService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontpageInitData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontpageService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontpageData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontpageService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontpageInitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontpageService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CartTotalInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontpageService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeFloorChild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontpageService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeFloorInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontpageService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpuInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontpageService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontpageService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginSortInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontpageService_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginSeckill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontpageService_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginsActivityData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontpageService_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontpageHomeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontpageService_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontpageHomeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontpageService_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserOrderStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontpageService_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontpageUserCenterData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontpageService_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontpageUserCenterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontpageService_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FrontpageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontpageService_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginSeckillConfigInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontpageService_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginSeckillTimeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_frontpageService_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginsActivityDataBaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_frontpageService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_frontpageService_proto_goTypes,
		DependencyIndexes: file_frontpageService_proto_depIdxs,
		MessageInfos:      file_frontpageService_proto_msgTypes,
	}.Build()
	File_frontpageService_proto = out.File
	file_frontpageService_proto_rawDesc = nil
	file_frontpageService_proto_goTypes = nil
	file_frontpageService_proto_depIdxs = nil
}
