// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: baseInfoService.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//内部商品信息(基于SKU的商品)
type GoodsInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int64               `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	SkuId                int64               `protobuf:"varint,2,opt,name=sku_id,json=skuId,proto3" json:"sku_id"`
	SpuId                int64               `protobuf:"varint,3,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`
	Type                 string              `protobuf:"bytes,4,opt,name=type,proto3" json:"type"`                                                                //类型
	Title                string              `protobuf:"bytes,5,opt,name=title,proto3" json:"title"`                                                              //标题
	TitleColor           string              `protobuf:"bytes,6,opt,name=title_color,json=titleColor,proto3" json:"title_color"`                                  //标题颜色
	SimpleDesc           string              `protobuf:"bytes,7,opt,name=simple_desc,json=simpleDesc,proto3" json:"simple_desc"`                                  //简单描述
	Inventory            int32               `protobuf:"varint,8,opt,name=inventory,proto3" json:"inventory"`                                                     //库存数量
	Unit                 string              `protobuf:"bytes,9,opt,name=unit,proto3" json:"unit"`                                                                //库存单位
	ImageUrl             string              `protobuf:"bytes,10,opt,name=image_url,json=imageUrl,proto3" json:"image_url"`                                       //封面URL
	VideoUrl             string              `protobuf:"bytes,11,opt,name=video_url,json=videoUrl,proto3" json:"video_url"`                                       //视频URL
	IsManySpec           string              `protobuf:"bytes,12,opt,name=is_many_spec,json=isManySpec,proto3" json:"is_many_spec"`                               //是否多规格商品（0否，1是）
	IsDeductionInventory string              `protobuf:"bytes,13,opt,name=is_deduction_inventory,json=isDeductionInventory,proto3" json:"is_deduction_inventory"` //是否扣减库存
	IsListed             string              `protobuf:"bytes,14,opt,name=is_listed,json=isListed,proto3" json:"is_listed"`                                       //是否上架（0否，1是）
	IsVirtual            string              `protobuf:"bytes,15,opt,name=is_virtual,json=isVirtual,proto3" json:"is_virtual"`                                    //是否虚拟商品（0否，1是）
	ShopId               int64               `protobuf:"varint,16,opt,name=shop_id,json=shopId,proto3" json:"shop_id"`                                            //多店铺ID
	BrandId              int32               `protobuf:"varint,17,opt,name=brand_id,json=brandId,proto3" json:"brand_id"`                                         //品牌ID
	BrandName            string              `protobuf:"bytes,18,opt,name=brand_name,json=brandName,proto3" json:"brand_name"`                                    //品牌名称
	VirtualType          string              `protobuf:"bytes,19,opt,name=virtual_type,json=virtualType,proto3" json:"virtual_type"`                              //虚拟商品类型
	VirtualData          string              `protobuf:"bytes,20,opt,name=virtual_data,json=virtualData,proto3" json:"virtual_data"`                              //虚拟商品扩展数据
	TaxonomyId           int64               `protobuf:"varint,22,opt,name=taxonomy_id,json=taxonomyId,proto3" json:"taxonomy_id"`                                //
	CategoryId           int64               `protobuf:"varint,23,opt,name=category_id,json=categoryId,proto3" json:"category_id"`
	MinOriginalPrice     int64               `protobuf:"varint,25,opt,name=min_original_price,json=minOriginalPrice,proto3" json:"min_original_price"` //最低原价
	MaxOriginalPrice     int64               `protobuf:"varint,26,opt,name=max_original_price,json=maxOriginalPrice,proto3" json:"max_original_price"` //最大原价
	MinPrice             int64               `protobuf:"varint,27,opt,name=min_price,json=minPrice,proto3" json:"min_price"`                           //最低价格
	MaxPrice             int64               `protobuf:"varint,28,opt,name=max_price,json=maxPrice,proto3" json:"max_price"`                           //最高价格
	GiveIntegral         int64               `protobuf:"varint,36,opt,name=give_integral,json=giveIntegral,proto3" json:"give_integral"`
	BuyMinNumber         int32               `protobuf:"varint,37,opt,name=buy_min_number,json=buyMinNumber,proto3" json:"buy_min_number"`
	BuyMaxNumber         int32               `protobuf:"varint,38,opt,name=buy_max_number,json=buyMaxNumber,proto3" json:"buy_max_number"`
	PhotoCount           int32               `protobuf:"varint,39,opt,name=photo_count,json=photoCount,proto3" json:"photo_count"`            //相册数量
	SaleCount            int32               `protobuf:"varint,40,opt,name=sale_count,json=saleCount,proto3" json:"sale_count"`               //销售量
	AccessCount          int32               `protobuf:"varint,41,opt,name=access_count,json=accessCount,proto3" json:"access_count"`         //访问量
	PlaceOriginId        int64               `protobuf:"varint,42,opt,name=place_origin_id,json=placeOriginId,proto3" json:"place_origin_id"` //原产地ID
	Weight               int64               `protobuf:"varint,45,opt,name=weight,proto3" json:"weight"`
	Volume               int64               `protobuf:"varint,46,opt,name=volume,proto3" json:"volume"`
	Coding               string              `protobuf:"bytes,47,opt,name=coding,proto3" json:"coding"`
	Barcode              string              `protobuf:"bytes,48,opt,name=barcode,proto3" json:"barcode"`
	Price                int64               `protobuf:"varint,49,opt,name=price,proto3" json:"price"`
	OriginalPrice        int64               `protobuf:"varint,50,opt,name=original_price,json=originalPrice,proto3" json:"original_price"`
	CostPrice            int64               `protobuf:"varint,51,opt,name=cost_price,json=costPrice,proto3" json:"cost_price"`
	SpecDesc             string              `protobuf:"bytes,53,opt,name=spec_desc,json=specDesc,proto3" json:"spec_desc"`
	Spec                 *GoodsSpec          `protobuf:"bytes,54,opt,name=spec,proto3" json:"spec"`
	Status               string              `protobuf:"bytes,55,opt,name=status,proto3" json:"status"`
	CreatedAt            string              `protobuf:"bytes,56,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt            string              `protobuf:"bytes,57,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	SpecBase             []*GoodsSpecBase    `protobuf:"bytes,58,rep,name=spec_base,json=specBase,proto3" json:"spec_base"`
	Specifications       *GoodsSpecification `protobuf:"bytes,59,opt,name=specifications,proto3" json:"specifications"`
}

func (x *GoodsInfo) Reset() {
	*x = GoodsInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsInfo) ProtoMessage() {}

func (x *GoodsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsInfo.ProtoReflect.Descriptor instead.
func (*GoodsInfo) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{0}
}

func (x *GoodsInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GoodsInfo) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *GoodsInfo) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *GoodsInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GoodsInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GoodsInfo) GetTitleColor() string {
	if x != nil {
		return x.TitleColor
	}
	return ""
}

func (x *GoodsInfo) GetSimpleDesc() string {
	if x != nil {
		return x.SimpleDesc
	}
	return ""
}

func (x *GoodsInfo) GetInventory() int32 {
	if x != nil {
		return x.Inventory
	}
	return 0
}

func (x *GoodsInfo) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *GoodsInfo) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *GoodsInfo) GetVideoUrl() string {
	if x != nil {
		return x.VideoUrl
	}
	return ""
}

func (x *GoodsInfo) GetIsManySpec() string {
	if x != nil {
		return x.IsManySpec
	}
	return ""
}

func (x *GoodsInfo) GetIsDeductionInventory() string {
	if x != nil {
		return x.IsDeductionInventory
	}
	return ""
}

func (x *GoodsInfo) GetIsListed() string {
	if x != nil {
		return x.IsListed
	}
	return ""
}

func (x *GoodsInfo) GetIsVirtual() string {
	if x != nil {
		return x.IsVirtual
	}
	return ""
}

func (x *GoodsInfo) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *GoodsInfo) GetBrandId() int32 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *GoodsInfo) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *GoodsInfo) GetVirtualType() string {
	if x != nil {
		return x.VirtualType
	}
	return ""
}

func (x *GoodsInfo) GetVirtualData() string {
	if x != nil {
		return x.VirtualData
	}
	return ""
}

func (x *GoodsInfo) GetTaxonomyId() int64 {
	if x != nil {
		return x.TaxonomyId
	}
	return 0
}

func (x *GoodsInfo) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *GoodsInfo) GetMinOriginalPrice() int64 {
	if x != nil {
		return x.MinOriginalPrice
	}
	return 0
}

func (x *GoodsInfo) GetMaxOriginalPrice() int64 {
	if x != nil {
		return x.MaxOriginalPrice
	}
	return 0
}

func (x *GoodsInfo) GetMinPrice() int64 {
	if x != nil {
		return x.MinPrice
	}
	return 0
}

func (x *GoodsInfo) GetMaxPrice() int64 {
	if x != nil {
		return x.MaxPrice
	}
	return 0
}

func (x *GoodsInfo) GetGiveIntegral() int64 {
	if x != nil {
		return x.GiveIntegral
	}
	return 0
}

func (x *GoodsInfo) GetBuyMinNumber() int32 {
	if x != nil {
		return x.BuyMinNumber
	}
	return 0
}

func (x *GoodsInfo) GetBuyMaxNumber() int32 {
	if x != nil {
		return x.BuyMaxNumber
	}
	return 0
}

func (x *GoodsInfo) GetPhotoCount() int32 {
	if x != nil {
		return x.PhotoCount
	}
	return 0
}

func (x *GoodsInfo) GetSaleCount() int32 {
	if x != nil {
		return x.SaleCount
	}
	return 0
}

func (x *GoodsInfo) GetAccessCount() int32 {
	if x != nil {
		return x.AccessCount
	}
	return 0
}

func (x *GoodsInfo) GetPlaceOriginId() int64 {
	if x != nil {
		return x.PlaceOriginId
	}
	return 0
}

func (x *GoodsInfo) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *GoodsInfo) GetVolume() int64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *GoodsInfo) GetCoding() string {
	if x != nil {
		return x.Coding
	}
	return ""
}

func (x *GoodsInfo) GetBarcode() string {
	if x != nil {
		return x.Barcode
	}
	return ""
}

func (x *GoodsInfo) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *GoodsInfo) GetOriginalPrice() int64 {
	if x != nil {
		return x.OriginalPrice
	}
	return 0
}

func (x *GoodsInfo) GetCostPrice() int64 {
	if x != nil {
		return x.CostPrice
	}
	return 0
}

func (x *GoodsInfo) GetSpecDesc() string {
	if x != nil {
		return x.SpecDesc
	}
	return ""
}

func (x *GoodsInfo) GetSpec() *GoodsSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *GoodsInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GoodsInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GoodsInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *GoodsInfo) GetSpecBase() []*GoodsSpecBase {
	if x != nil {
		return x.SpecBase
	}
	return nil
}

func (x *GoodsInfo) GetSpecifications() *GoodsSpecification {
	if x != nil {
		return x.Specifications
	}
	return nil
}

type GoodsSpecBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title  string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title"`
	Values []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values"`
}

func (x *GoodsSpecBase) Reset() {
	*x = GoodsSpecBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsSpecBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsSpecBase) ProtoMessage() {}

func (x *GoodsSpecBase) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsSpecBase.ProtoReflect.Descriptor instead.
func (*GoodsSpecBase) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{1}
}

func (x *GoodsSpecBase) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GoodsSpecBase) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type GoodsSpecification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Choose []*GoodsSpecChoose `protobuf:"bytes,1,rep,name=choose,proto3" json:"choose"`
}

func (x *GoodsSpecification) Reset() {
	*x = GoodsSpecification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsSpecification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsSpecification) ProtoMessage() {}

func (x *GoodsSpecification) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsSpecification.ProtoReflect.Descriptor instead.
func (*GoodsSpecification) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{2}
}

func (x *GoodsSpecification) GetChoose() []*GoodsSpecChoose {
	if x != nil {
		return x.Choose
	}
	return nil
}

type GoodsSpecChoose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Name    string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	GoodsId int64                   `protobuf:"varint,3,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	Value   []*GoodsSpecChooseValue `protobuf:"bytes,4,rep,name=value,proto3" json:"value"`
}

func (x *GoodsSpecChoose) Reset() {
	*x = GoodsSpecChoose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsSpecChoose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsSpecChoose) ProtoMessage() {}

func (x *GoodsSpecChoose) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsSpecChoose.ProtoReflect.Descriptor instead.
func (*GoodsSpecChoose) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{3}
}

func (x *GoodsSpecChoose) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GoodsSpecChoose) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GoodsSpecChoose) GetGoodsId() int64 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *GoodsSpecChoose) GetValue() []*GoodsSpecChooseValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type GoodsSpecChooseValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	ImageUrl string `protobuf:"bytes,2,opt,name=image_url,json=imageUrl,proto3" json:"image_url"`
}

func (x *GoodsSpecChooseValue) Reset() {
	*x = GoodsSpecChooseValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsSpecChooseValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsSpecChooseValue) ProtoMessage() {}

func (x *GoodsSpecChooseValue) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsSpecChooseValue.ProtoReflect.Descriptor instead.
func (*GoodsSpecChooseValue) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{4}
}

func (x *GoodsSpecChooseValue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GoodsSpecChooseValue) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

type GoodsSpec struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpecName  string `protobuf:"bytes,1,opt,name=spec_name,json=specName,proto3" json:"spec_name"`
	SpecValue string `protobuf:"bytes,2,opt,name=spec_value,json=specValue,proto3" json:"spec_value"`
}

func (x *GoodsSpec) Reset() {
	*x = GoodsSpec{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsSpec) ProtoMessage() {}

func (x *GoodsSpec) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsSpec.ProtoReflect.Descriptor instead.
func (*GoodsSpec) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{5}
}

func (x *GoodsSpec) GetSpecName() string {
	if x != nil {
		return x.SpecName
	}
	return ""
}

func (x *GoodsSpec) GetSpecValue() string {
	if x != nil {
		return x.SpecValue
	}
	return ""
}

type CartTotalInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuyNumber  int32 `protobuf:"varint,1,opt,name=buy_number,json=buyNumber,proto3" json:"buy_number"`
	TotalPrice int64 `protobuf:"varint,2,opt,name=total_price,json=totalPrice,proto3" json:"total_price"`
}

func (x *CartTotalInfo) Reset() {
	*x = CartTotalInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CartTotalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartTotalInfo) ProtoMessage() {}

func (x *CartTotalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartTotalInfo.ProtoReflect.Descriptor instead.
func (*CartTotalInfo) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{6}
}

func (x *CartTotalInfo) GetBuyNumber() int32 {
	if x != nil {
		return x.BuyNumber
	}
	return 0
}

func (x *CartTotalInfo) GetTotalPrice() int64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

type HomeFloorChild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	ParentId  int64  `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id"`
	Icon      string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon"`
	Name      string `protobuf:"bytes,4,opt,name=name,proto3" json:"name"`
	ViceName  string `protobuf:"bytes,5,opt,name=vice_name,json=viceName,proto3" json:"vice_name"`
	BgColor   string `protobuf:"bytes,7,opt,name=bg_color,json=bgColor,proto3" json:"bg_color"`
	Color     string `protobuf:"bytes,8,opt,name=color,proto3" json:"color"`
	StyleType string `protobuf:"bytes,9,opt,name=style_type,json=styleType,proto3" json:"style_type"`
}

func (x *HomeFloorChild) Reset() {
	*x = HomeFloorChild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeFloorChild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeFloorChild) ProtoMessage() {}

func (x *HomeFloorChild) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeFloorChild.ProtoReflect.Descriptor instead.
func (*HomeFloorChild) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{7}
}

func (x *HomeFloorChild) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HomeFloorChild) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *HomeFloorChild) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *HomeFloorChild) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HomeFloorChild) GetViceName() string {
	if x != nil {
		return x.ViceName
	}
	return ""
}

func (x *HomeFloorChild) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *HomeFloorChild) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *HomeFloorChild) GetStyleType() string {
	if x != nil {
		return x.StyleType
	}
	return ""
}

type HomeFloorData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	ParentId          int64             `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id"`
	Icon              string            `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon"`
	Name              string            `protobuf:"bytes,4,opt,name=name,proto3" json:"name"`
	ViceName          string            `protobuf:"bytes,5,opt,name=vice_name,json=viceName,proto3" json:"vice_name"`
	Describe          string            `protobuf:"bytes,6,opt,name=describe,proto3" json:"describe"`
	BgColor           string            `protobuf:"bytes,7,opt,name=bg_color,json=bgColor,proto3" json:"bg_color"`
	Color             string            `protobuf:"bytes,8,opt,name=color,proto3" json:"color"`
	IsHomeRecommended string            `protobuf:"bytes,9,opt,name=is_home_recommended,json=isHomeRecommended,proto3" json:"is_home_recommended"`
	SeoTitle          string            `protobuf:"bytes,10,opt,name=seo_title,json=seoTitle,proto3" json:"seo_title"`
	SeoKeywords       string            `protobuf:"bytes,11,opt,name=seo_keywords,json=seoKeywords,proto3" json:"seo_keywords"`
	SeoDesc           string            `protobuf:"bytes,12,opt,name=seo_desc,json=seoDesc,proto3" json:"seo_desc"`
	MoreUrl           string            `protobuf:"bytes,13,opt,name=more_url,json=moreUrl,proto3" json:"more_url"`
	StyleType         string            `protobuf:"bytes,14,opt,name=style_type,json=styleType,proto3" json:"style_type"`
	ListType          string            `protobuf:"bytes,17,opt,name=list_type,json=listType,proto3" json:"list_type"`
	GoodsList         []*GoodsInfo      `protobuf:"bytes,18,rep,name=goods_list,json=goodsList,proto3" json:"goods_list"`
	BlogList          []*ArticleInfo    `protobuf:"bytes,19,rep,name=blog_list,json=blogList,proto3" json:"blog_list"`
	Items             []*HomeFloorChild `protobuf:"bytes,20,rep,name=items,proto3" json:"items"`
	KeywordsArr       []string          `protobuf:"bytes,21,rep,name=keywords_arr,json=keywordsArr,proto3" json:"keywords_arr"`
}

func (x *HomeFloorData) Reset() {
	*x = HomeFloorData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeFloorData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeFloorData) ProtoMessage() {}

func (x *HomeFloorData) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeFloorData.ProtoReflect.Descriptor instead.
func (*HomeFloorData) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{8}
}

func (x *HomeFloorData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HomeFloorData) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *HomeFloorData) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *HomeFloorData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HomeFloorData) GetViceName() string {
	if x != nil {
		return x.ViceName
	}
	return ""
}

func (x *HomeFloorData) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *HomeFloorData) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *HomeFloorData) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *HomeFloorData) GetIsHomeRecommended() string {
	if x != nil {
		return x.IsHomeRecommended
	}
	return ""
}

func (x *HomeFloorData) GetSeoTitle() string {
	if x != nil {
		return x.SeoTitle
	}
	return ""
}

func (x *HomeFloorData) GetSeoKeywords() string {
	if x != nil {
		return x.SeoKeywords
	}
	return ""
}

func (x *HomeFloorData) GetSeoDesc() string {
	if x != nil {
		return x.SeoDesc
	}
	return ""
}

func (x *HomeFloorData) GetMoreUrl() string {
	if x != nil {
		return x.MoreUrl
	}
	return ""
}

func (x *HomeFloorData) GetStyleType() string {
	if x != nil {
		return x.StyleType
	}
	return ""
}

func (x *HomeFloorData) GetListType() string {
	if x != nil {
		return x.ListType
	}
	return ""
}

func (x *HomeFloorData) GetGoodsList() []*GoodsInfo {
	if x != nil {
		return x.GoodsList
	}
	return nil
}

func (x *HomeFloorData) GetBlogList() []*ArticleInfo {
	if x != nil {
		return x.BlogList
	}
	return nil
}

func (x *HomeFloorData) GetItems() []*HomeFloorChild {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *HomeFloorData) GetKeywordsArr() []string {
	if x != nil {
		return x.KeywordsArr
	}
	return nil
}

type AdInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image   string `protobuf:"bytes,1,opt,name=image,proto3" json:"image"`
	Url     string `protobuf:"bytes,2,opt,name=url,proto3" json:"url"`
	BgColor string `protobuf:"bytes,3,opt,name=bg_color,json=bgColor,proto3" json:"bg_color"`
}

func (x *AdInfo) Reset() {
	*x = AdInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdInfo) ProtoMessage() {}

func (x *AdInfo) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdInfo.ProtoReflect.Descriptor instead.
func (*AdInfo) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{9}
}

func (x *AdInfo) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *AdInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AdInfo) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

type ArticleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Title        string `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
	TitleColor   string `protobuf:"bytes,3,opt,name=title_color,json=titleColor,proto3" json:"title_color"`
	CoverUrl     string `protobuf:"bytes,4,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url"`
	VideoUrl     string `protobuf:"bytes,5,opt,name=video_url,json=videoUrl,proto3" json:"video_url"`
	CategoryId   int64  `protobuf:"varint,6,opt,name=category_id,json=categoryId,proto3" json:"category_id"`
	CategoryName string `protobuf:"bytes,7,opt,name=category_name,json=categoryName,proto3" json:"category_name"`
	CategoryUrl  string `protobuf:"bytes,8,opt,name=category_url,json=categoryUrl,proto3" json:"category_url"`
	Url          string `protobuf:"bytes,9,opt,name=url,proto3" json:"url"`
	CreatedAt    string `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt    string `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
}

func (x *ArticleInfo) Reset() {
	*x = ArticleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticleInfo) ProtoMessage() {}

func (x *ArticleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticleInfo.ProtoReflect.Descriptor instead.
func (*ArticleInfo) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{10}
}

func (x *ArticleInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ArticleInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ArticleInfo) GetTitleColor() string {
	if x != nil {
		return x.TitleColor
	}
	return ""
}

func (x *ArticleInfo) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *ArticleInfo) GetVideoUrl() string {
	if x != nil {
		return x.VideoUrl
	}
	return ""
}

func (x *ArticleInfo) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *ArticleInfo) GetCategoryName() string {
	if x != nil {
		return x.CategoryName
	}
	return ""
}

func (x *ArticleInfo) GetCategoryUrl() string {
	if x != nil {
		return x.CategoryUrl
	}
	return ""
}

func (x *ArticleInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ArticleInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ArticleInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type PluginSortInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Name    string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Plugins string `protobuf:"bytes,3,opt,name=plugins,proto3" json:"plugins"`
}

func (x *PluginSortInfo) Reset() {
	*x = PluginSortInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginSortInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginSortInfo) ProtoMessage() {}

func (x *PluginSortInfo) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginSortInfo.ProtoReflect.Descriptor instead.
func (*PluginSortInfo) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{11}
}

func (x *PluginSortInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PluginSortInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PluginSortInfo) GetPlugins() string {
	if x != nil {
		return x.Plugins
	}
	return ""
}

type PluginSeckillData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Config  *PluginSeckillDataConfigInfo `protobuf:"bytes,1,opt,name=config,proto3" json:"config"`
	Time    *PluginSeckillDataTimeInfo   `protobuf:"bytes,2,opt,name=time,proto3" json:"time"`
	Goods   *GoodsInfo                   `protobuf:"bytes,3,opt,name=goods,proto3" json:"goods"`
	IsValid bool                         `protobuf:"varint,4,opt,name=is_valid,json=isValid,proto3" json:"is_valid"`
}

func (x *PluginSeckillData) Reset() {
	*x = PluginSeckillData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginSeckillData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginSeckillData) ProtoMessage() {}

func (x *PluginSeckillData) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginSeckillData.ProtoReflect.Descriptor instead.
func (*PluginSeckillData) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{12}
}

func (x *PluginSeckillData) GetConfig() *PluginSeckillDataConfigInfo {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *PluginSeckillData) GetTime() *PluginSeckillDataTimeInfo {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *PluginSeckillData) GetGoods() *GoodsInfo {
	if x != nil {
		return x.Goods
	}
	return nil
}

func (x *PluginSeckillData) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

type PluginsActivityData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *PluginsActivityDataBaseInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base"`
	Data []*HomeFloorData             `protobuf:"bytes,2,rep,name=data,proto3" json:"data"`
}

func (x *PluginsActivityData) Reset() {
	*x = PluginsActivityData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginsActivityData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginsActivityData) ProtoMessage() {}

func (x *PluginsActivityData) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginsActivityData.ProtoReflect.Descriptor instead.
func (*PluginsActivityData) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{13}
}

func (x *PluginsActivityData) GetBase() *PluginsActivityDataBaseInfo {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *PluginsActivityData) GetData() []*HomeFloorData {
	if x != nil {
		return x.Data
	}
	return nil
}

type PluginSeckillDataConfigInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationName string   `protobuf:"bytes,1,opt,name=application_name,json=applicationName,proto3" json:"application_name"`
	TimeStart       string   `protobuf:"bytes,2,opt,name=time_start,json=timeStart,proto3" json:"time_start"`
	TimeEnd         string   `protobuf:"bytes,3,opt,name=time_end,json=timeEnd,proto3" json:"time_end"`
	ContentNotice   []string `protobuf:"bytes,4,rep,name=content_notice,json=contentNotice,proto3" json:"content_notice"`
	IsHomeAutoPlay  string   `protobuf:"bytes,5,opt,name=is_home_auto_play,json=isHomeAutoPlay,proto3" json:"is_home_auto_play"`
	IsShopSeckill   string   `protobuf:"bytes,6,opt,name=is_shop_seckill,json=isShopSeckill,proto3" json:"is_shop_seckill"`
	SystemType      string   `protobuf:"bytes,7,opt,name=system_type,json=systemType,proto3" json:"system_type"`
}

func (x *PluginSeckillDataConfigInfo) Reset() {
	*x = PluginSeckillDataConfigInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginSeckillDataConfigInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginSeckillDataConfigInfo) ProtoMessage() {}

func (x *PluginSeckillDataConfigInfo) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginSeckillDataConfigInfo.ProtoReflect.Descriptor instead.
func (*PluginSeckillDataConfigInfo) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{12, 0}
}

func (x *PluginSeckillDataConfigInfo) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *PluginSeckillDataConfigInfo) GetTimeStart() string {
	if x != nil {
		return x.TimeStart
	}
	return ""
}

func (x *PluginSeckillDataConfigInfo) GetTimeEnd() string {
	if x != nil {
		return x.TimeEnd
	}
	return ""
}

func (x *PluginSeckillDataConfigInfo) GetContentNotice() []string {
	if x != nil {
		return x.ContentNotice
	}
	return nil
}

func (x *PluginSeckillDataConfigInfo) GetIsHomeAutoPlay() string {
	if x != nil {
		return x.IsHomeAutoPlay
	}
	return ""
}

func (x *PluginSeckillDataConfigInfo) GetIsShopSeckill() string {
	if x != nil {
		return x.IsShopSeckill
	}
	return ""
}

func (x *PluginSeckillDataConfigInfo) GetSystemType() string {
	if x != nil {
		return x.SystemType
	}
	return ""
}

type PluginSeckillDataTimeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hours   int64  `protobuf:"varint,1,opt,name=hours,proto3" json:"hours"`
	Minutes int64  `protobuf:"varint,2,opt,name=minutes,proto3" json:"minutes"`
	Seconds int64  `protobuf:"varint,3,opt,name=seconds,proto3" json:"seconds"`
	Status  string `protobuf:"bytes,4,opt,name=status,proto3" json:"status"`
	Msg     string `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg"`
}

func (x *PluginSeckillDataTimeInfo) Reset() {
	*x = PluginSeckillDataTimeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginSeckillDataTimeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginSeckillDataTimeInfo) ProtoMessage() {}

func (x *PluginSeckillDataTimeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginSeckillDataTimeInfo.ProtoReflect.Descriptor instead.
func (*PluginSeckillDataTimeInfo) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{12, 1}
}

func (x *PluginSeckillDataTimeInfo) GetHours() int64 {
	if x != nil {
		return x.Hours
	}
	return 0
}

func (x *PluginSeckillDataTimeInfo) GetMinutes() int64 {
	if x != nil {
		return x.Minutes
	}
	return 0
}

func (x *PluginSeckillDataTimeInfo) GetSeconds() int64 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

func (x *PluginSeckillDataTimeInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PluginSeckillDataTimeInfo) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type PluginsActivityDataBaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationName string `protobuf:"bytes,1,opt,name=application_name,json=applicationName,proto3" json:"application_name"`
	SeoTitle        string `protobuf:"bytes,2,opt,name=seo_title,json=seoTitle,proto3" json:"seo_title"`
	SeoKeywords     string `protobuf:"bytes,3,opt,name=seo_keywords,json=seoKeywords,proto3" json:"seo_keywords"`
	SeoDesc         string `protobuf:"bytes,4,opt,name=seo_desc,json=seoDesc,proto3" json:"seo_desc"`
	IsHomeAutoPlay  string `protobuf:"bytes,5,opt,name=is_home_auto_play,json=isHomeAutoPlay,proto3" json:"is_home_auto_play"`
}

func (x *PluginsActivityDataBaseInfo) Reset() {
	*x = PluginsActivityDataBaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginsActivityDataBaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginsActivityDataBaseInfo) ProtoMessage() {}

func (x *PluginsActivityDataBaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginsActivityDataBaseInfo.ProtoReflect.Descriptor instead.
func (*PluginsActivityDataBaseInfo) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{13, 0}
}

func (x *PluginsActivityDataBaseInfo) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *PluginsActivityDataBaseInfo) GetSeoTitle() string {
	if x != nil {
		return x.SeoTitle
	}
	return ""
}

func (x *PluginsActivityDataBaseInfo) GetSeoKeywords() string {
	if x != nil {
		return x.SeoKeywords
	}
	return ""
}

func (x *PluginsActivityDataBaseInfo) GetSeoDesc() string {
	if x != nil {
		return x.SeoDesc
	}
	return ""
}

func (x *PluginsActivityDataBaseInfo) GetIsHomeAutoPlay() string {
	if x != nil {
		return x.IsHomeAutoPlay
	}
	return ""
}

var File_baseInfoService_proto protoreflect.FileDescriptor

var file_baseInfoService_proto_rawDesc = []byte{
	0x0a, 0x15, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x22, 0xf8, 0x0b, 0x0a, 0x09, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x70, 0x75, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x70, 0x75, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x6d, 0x70,
	0x6c, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x69, 0x6d, 0x70, 0x6c, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x64,
	0x65, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x6d, 0x61, 0x6e, 0x79,
	0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x4d,
	0x61, 0x6e, 0x79, 0x53, 0x70, 0x65, 0x63, 0x12, 0x34, 0x0a, 0x16, 0x69, 0x73, 0x5f, 0x64, 0x65,
	0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x69, 0x73, 0x44, 0x65, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x73, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d,
	0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x69, 0x6e, 0x5f, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x10, 0x6d, 0x69, 0x6e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x61, 0x78, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10,
	0x6d, 0x61, 0x78, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x69,
	0x76, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x24, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0c, 0x67, 0x69, 0x76, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12,
	0x24, 0x0a, 0x0e, 0x62, 0x75, 0x79, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x25, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x62, 0x75, 0x79, 0x4d, 0x69, 0x6e, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x75, 0x79, 0x5f, 0x6d, 0x61, 0x78,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x26, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x62,
	0x75, 0x79, 0x4d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x27, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x61, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x73, 0x61, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x29, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26,
	0x0a, 0x0f, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x2d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x2f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x30, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x31, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x32, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x35, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x44, 0x65, 0x73,
	0x63, 0x12, 0x27, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x36, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x37, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x38, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x39, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x34, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x18, 0x3a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47,
	0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x65, 0x63, 0x42, 0x61, 0x73, 0x65, 0x52, 0x08, 0x73, 0x70,
	0x65, 0x63, 0x42, 0x61, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x53,
	0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x70,
	0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3d, 0x0a, 0x0d,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x65, 0x63, 0x42, 0x61, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x47, 0x0a, 0x12, 0x47,
	0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x31, 0x0a, 0x06, 0x63, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x53, 0x70, 0x65, 0x63, 0x43, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x52, 0x06, 0x63, 0x68,
	0x6f, 0x6f, 0x73, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x0f, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70,
	0x65, 0x63, 0x43, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x65, 0x63, 0x43, 0x68, 0x6f, 0x6f, 0x73,
	0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x47, 0x0a,
	0x14, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x65, 0x63, 0x43, 0x68, 0x6f, 0x6f, 0x73, 0x65,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x47, 0x0a, 0x09, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x65, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22,
	0x4f, 0x0a, 0x0d, 0x43, 0x61, 0x72, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x79, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x75, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x22, 0xd2, 0x01, 0x0a, 0x0e, 0x48, 0x6f, 0x6d, 0x65, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x63, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x63,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x79, 0x6c,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0xeb, 0x04, 0x0a, 0x0d, 0x48, 0x6f, 0x6d, 0x65, 0x46, 0x6c,
	0x6f, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x73, 0x5f, 0x68, 0x6f, 0x6d,
	0x65, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x69, 0x73, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6f, 0x5f, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6f, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x6f, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x6f, 0x4b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x65, 0x6f, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x6f, 0x44, 0x65, 0x73,
	0x63, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x79, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x79, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6c,
	0x69, 0x73, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x32, 0x0a, 0x09,
	0x62, 0x6c, 0x6f, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x62, 0x6c, 0x6f, 0x67, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x2e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x46,
	0x6c, 0x6f, 0x6f, 0x72, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x5f, 0x61, 0x72, 0x72,
	0x18, 0x15, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x41, 0x72, 0x72, 0x22, 0x4b, 0x0a, 0x06, 0x41, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x22, 0xc7, 0x02, 0x0a, 0x0b, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f,
	0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x72,
	0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x4e, 0x0a, 0x0e, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x53, 0x6f, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x22, 0xe6, 0x04, 0x0a, 0x11, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x3f, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x39, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x05,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61,
	0x6c, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c,
	0x69, 0x64, 0x1a, 0x8d, 0x02, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x29,
	0x0a, 0x11, 0x69, 0x73, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x70,
	0x6c, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x73, 0x48, 0x6f, 0x6d,
	0x65, 0x41, 0x75, 0x74, 0x6f, 0x50, 0x6c, 0x61, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f,
	0x73, 0x68, 0x6f, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x70, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c,
	0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x79,
	0x70, 0x65, 0x1a, 0x7f, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12,
	0x14, 0x0a, 0x05, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x68, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x22, 0xbe, 0x02, 0x0a, 0x13, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x69, 0x74, 0x79, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x46, 0x6c, 0x6f, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xbc, 0x01, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x65, 0x6f, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x65, 0x6f, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x65, 0x6f, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x73, 0x65, 0x6f, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x73, 0x65, 0x6f, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x65, 0x6f, 0x44, 0x65, 0x73, 0x63, 0x12, 0x29, 0x0a, 0x11, 0x69, 0x73, 0x5f,
	0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x73, 0x48, 0x6f, 0x6d, 0x65, 0x41, 0x75, 0x74, 0x6f,
	0x50, 0x6c, 0x61, 0x79, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_baseInfoService_proto_rawDescOnce sync.Once
	file_baseInfoService_proto_rawDescData = file_baseInfoService_proto_rawDesc
)

func file_baseInfoService_proto_rawDescGZIP() []byte {
	file_baseInfoService_proto_rawDescOnce.Do(func() {
		file_baseInfoService_proto_rawDescData = protoimpl.X.CompressGZIP(file_baseInfoService_proto_rawDescData)
	})
	return file_baseInfoService_proto_rawDescData
}

var file_baseInfoService_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_baseInfoService_proto_goTypes = []interface{}{
	(*GoodsInfo)(nil),                   // 0: services.GoodsInfo
	(*GoodsSpecBase)(nil),               // 1: services.GoodsSpecBase
	(*GoodsSpecification)(nil),          // 2: services.GoodsSpecification
	(*GoodsSpecChoose)(nil),             // 3: services.GoodsSpecChoose
	(*GoodsSpecChooseValue)(nil),        // 4: services.GoodsSpecChooseValue
	(*GoodsSpec)(nil),                   // 5: services.GoodsSpec
	(*CartTotalInfo)(nil),               // 6: services.CartTotalInfo
	(*HomeFloorChild)(nil),              // 7: services.HomeFloorChild
	(*HomeFloorData)(nil),               // 8: services.HomeFloorData
	(*AdInfo)(nil),                      // 9: services.AdInfo
	(*ArticleInfo)(nil),                 // 10: services.ArticleInfo
	(*PluginSortInfo)(nil),              // 11: services.PluginSortInfo
	(*PluginSeckillData)(nil),           // 12: services.PluginSeckillData
	(*PluginsActivityData)(nil),         // 13: services.PluginsActivityData
	(*PluginSeckillDataConfigInfo)(nil), // 14: services.PluginSeckillData.config_info
	(*PluginSeckillDataTimeInfo)(nil),   // 15: services.PluginSeckillData.time_info
	(*PluginsActivityDataBaseInfo)(nil), // 16: services.PluginsActivityData.base_info
}
var file_baseInfoService_proto_depIdxs = []int32{
	5,  // 0: services.GoodsInfo.spec:type_name -> services.GoodsSpec
	1,  // 1: services.GoodsInfo.spec_base:type_name -> services.GoodsSpecBase
	2,  // 2: services.GoodsInfo.specifications:type_name -> services.GoodsSpecification
	3,  // 3: services.GoodsSpecification.choose:type_name -> services.GoodsSpecChoose
	4,  // 4: services.GoodsSpecChoose.value:type_name -> services.GoodsSpecChooseValue
	0,  // 5: services.HomeFloorData.goods_list:type_name -> services.GoodsInfo
	10, // 6: services.HomeFloorData.blog_list:type_name -> services.ArticleInfo
	7,  // 7: services.HomeFloorData.items:type_name -> services.HomeFloorChild
	14, // 8: services.PluginSeckillData.config:type_name -> services.PluginSeckillData.config_info
	15, // 9: services.PluginSeckillData.time:type_name -> services.PluginSeckillData.time_info
	0,  // 10: services.PluginSeckillData.goods:type_name -> services.GoodsInfo
	16, // 11: services.PluginsActivityData.base:type_name -> services.PluginsActivityData.base_info
	8,  // 12: services.PluginsActivityData.data:type_name -> services.HomeFloorData
	13, // [13:13] is the sub-list for method output_type
	13, // [13:13] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_baseInfoService_proto_init() }
func file_baseInfoService_proto_init() {
	if File_baseInfoService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_baseInfoService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsSpecBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsSpecification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsSpecChoose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsSpecChooseValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsSpec); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CartTotalInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeFloorChild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeFloorData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginSortInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginSeckillData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginsActivityData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginSeckillDataConfigInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginSeckillDataTimeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginsActivityDataBaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_baseInfoService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_baseInfoService_proto_goTypes,
		DependencyIndexes: file_baseInfoService_proto_depIdxs,
		MessageInfos:      file_baseInfoService_proto_msgTypes,
	}.Build()
	File_baseInfoService_proto = out.File
	file_baseInfoService_proto_rawDesc = nil
	file_baseInfoService_proto_goTypes = nil
	file_baseInfoService_proto_depIdxs = nil
}
