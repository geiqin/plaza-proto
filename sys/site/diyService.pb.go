// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: diyService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DIY
type Diy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                                 //ID
	Version        string `protobuf:"bytes,2,opt,name=version,proto3" json:"version"`                                        //版本号
	Name           string `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`                                              //页面名称
	TemplateName   string `protobuf:"bytes,4,opt,name=template_name,json=templateName,proto3" json:"template_name"`          //模版名称
	Value          []byte `protobuf:"bytes,5,opt,name=value,proto3" json:"value"`                                            //页面数据
	DefaultValue   []byte `protobuf:"bytes,6,opt,name=default_value,json=defaultValue,proto3" json:"default_value"`          //默认页面数据
	ColorPicker    string `protobuf:"bytes,7,opt,name=color_picker,json=colorPicker,proto3" json:"color_picker"`             //背景颜色
	BgPic          string `protobuf:"bytes,8,opt,name=bg_pic,json=bgPic,proto3" json:"bg_pic"`                               //背景图
	BgTabVal       string `protobuf:"bytes,9,opt,name=bg_tab_val,json=bgTabVal,proto3" json:"bg_tab_val"`                    //背景图图片样式
	Type           string `protobuf:"bytes,10,opt,name=type,proto3" json:"type"`                                             //页面类型
	IsShow         string `protobuf:"bytes,11,opt,name=is_show,json=isShow,proto3" json:"is_show"`                           //显示首页
	IsBgColor      string `protobuf:"bytes,12,opt,name=is_bg_color,json=isBgColor,proto3" json:"is_bg_color"`                //颜色是否选中
	IsBgPic        string `protobuf:"bytes,13,opt,name=is_bg_pic,json=isBgPic,proto3" json:"is_bg_pic"`                      //背景图是否选中
	IsDel          string `protobuf:"bytes,14,opt,name=is_del,json=isDel,proto3" json:"is_del"`                              //是否删除
	OrderStatus    string `protobuf:"bytes,15,opt,name=order_status,json=orderStatus,proto3" json:"order_status"`            //个人中心订单样式
	MyBannerStatus string `protobuf:"bytes,16,opt,name=my_banner_status,json=myBannerStatus,proto3" json:"my_banner_status"` //个人中心banner是否显示
	IsDiy          string `protobuf:"bytes,17,opt,name=is_diy,json=isDiy,proto3" json:"is_diy"`                              //是否diy
	Title          string `protobuf:"bytes,18,opt,name=title,proto3" json:"title"`                                           //diy顶部title
	Status         string `protobuf:"bytes,19,opt,name=status,proto3" json:"status"`                                         //是否使用
	CreatedAt      int64  `protobuf:"varint,20,opt,name=created_at,json=createdAt,proto3" json:"created_at"`                 //创建时间
	UpdatedAt      int64  `protobuf:"varint,21,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`                 //修改时间
}

func (x *Diy) Reset() {
	*x = Diy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diyService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Diy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Diy) ProtoMessage() {}

func (x *Diy) ProtoReflect() protoreflect.Message {
	mi := &file_diyService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Diy.ProtoReflect.Descriptor instead.
func (*Diy) Descriptor() ([]byte, []int) {
	return file_diyService_proto_rawDescGZIP(), []int{0}
}

func (x *Diy) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Diy) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Diy) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Diy) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

func (x *Diy) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Diy) GetDefaultValue() []byte {
	if x != nil {
		return x.DefaultValue
	}
	return nil
}

func (x *Diy) GetColorPicker() string {
	if x != nil {
		return x.ColorPicker
	}
	return ""
}

func (x *Diy) GetBgPic() string {
	if x != nil {
		return x.BgPic
	}
	return ""
}

func (x *Diy) GetBgTabVal() string {
	if x != nil {
		return x.BgTabVal
	}
	return ""
}

func (x *Diy) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Diy) GetIsShow() string {
	if x != nil {
		return x.IsShow
	}
	return ""
}

func (x *Diy) GetIsBgColor() string {
	if x != nil {
		return x.IsBgColor
	}
	return ""
}

func (x *Diy) GetIsBgPic() string {
	if x != nil {
		return x.IsBgPic
	}
	return ""
}

func (x *Diy) GetIsDel() string {
	if x != nil {
		return x.IsDel
	}
	return ""
}

func (x *Diy) GetOrderStatus() string {
	if x != nil {
		return x.OrderStatus
	}
	return ""
}

func (x *Diy) GetMyBannerStatus() string {
	if x != nil {
		return x.MyBannerStatus
	}
	return ""
}

func (x *Diy) GetIsDiy() string {
	if x != nil {
		return x.IsDiy
	}
	return ""
}

func (x *Diy) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Diy) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Diy) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Diy) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type GetVersionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsDiy   bool   `protobuf:"varint,1,opt,name=is_diy,json=isDiy,proto3" json:"is_diy"`
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version"`
}

func (x *GetVersionData) Reset() {
	*x = GetVersionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diyService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVersionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVersionData) ProtoMessage() {}

func (x *GetVersionData) ProtoReflect() protoreflect.Message {
	mi := &file_diyService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVersionData.ProtoReflect.Descriptor instead.
func (*GetVersionData) Descriptor() ([]byte, []int) {
	return file_diyService_proto_rawDescGZIP(), []int{1}
}

func (x *GetVersionData) GetIsDiy() bool {
	if x != nil {
		return x.IsDiy
	}
	return false
}

func (x *GetVersionData) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type ColorChangeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsDiy  bool   `protobuf:"varint,1,opt,name=is_diy,json=isDiy,proto3" json:"is_diy"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status"`
}

func (x *ColorChangeData) Reset() {
	*x = ColorChangeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diyService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColorChangeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColorChangeData) ProtoMessage() {}

func (x *ColorChangeData) ProtoReflect() protoreflect.Message {
	mi := &file_diyService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColorChangeData.ProtoReflect.Descriptor instead.
func (*ColorChangeData) Descriptor() ([]byte, []int) {
	return file_diyService_proto_rawDescGZIP(), []int{2}
}

func (x *ColorChangeData) GetIsDiy() bool {
	if x != nil {
		return x.IsDiy
	}
	return false
}

func (x *ColorChangeData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// DIY请求参数
type DiyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Top       int32    `protobuf:"varint,1,opt,name=top,proto3" json:"top"`
	Paged     int64    `protobuf:"varint,2,opt,name=paged,proto3" json:"paged"`
	PageSize  int64    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords  string   `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords"`
	Sorts     []string `protobuf:"bytes,5,rep,name=sorts,proto3" json:"sorts"`
	DateRange []string `protobuf:"bytes,6,rep,name=date_range,json=dateRange,proto3" json:"date_range"`
	Ids       []int64  `protobuf:"varint,7,rep,packed,name=ids,proto3" json:"ids"`
	Id        int64    `protobuf:"varint,8,opt,name=id,proto3" json:"id"`
	//以下为自定义参数
	Name           string `protobuf:"bytes,11,opt,name=name,proto3" json:"name"`                                             //页面名称
	TemplateName   string `protobuf:"bytes,12,opt,name=template_name,json=templateName,proto3" json:"template_name"`         //模版名称
	Type           string `protobuf:"bytes,13,opt,name=type,proto3" json:"type"`                                             //页面类型
	IsShow         string `protobuf:"bytes,14,opt,name=is_show,json=isShow,proto3" json:"is_show"`                           //显示首页
	IsBgColor      string `protobuf:"bytes,15,opt,name=is_bg_color,json=isBgColor,proto3" json:"is_bg_color"`                //颜色是否选中
	IsBgPic        string `protobuf:"bytes,16,opt,name=is_bg_pic,json=isBgPic,proto3" json:"is_bg_pic"`                      //背景图是否选中
	IsDel          string `protobuf:"bytes,17,opt,name=is_del,json=isDel,proto3" json:"is_del"`                              //是否删除
	OrderStatus    string `protobuf:"bytes,18,opt,name=order_status,json=orderStatus,proto3" json:"order_status"`            //个人中心订单样式
	MyBannerStatus string `protobuf:"bytes,19,opt,name=my_banner_status,json=myBannerStatus,proto3" json:"my_banner_status"` //个人中心banner是否显示
	IsDiy          string `protobuf:"bytes,20,opt,name=is_diy,json=isDiy,proto3" json:"is_diy"`                              //是否diy
	Status         string `protobuf:"bytes,21,opt,name=status,proto3" json:"status"`                                         //是否使用
}

func (x *DiyRequest) Reset() {
	*x = DiyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diyService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiyRequest) ProtoMessage() {}

func (x *DiyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_diyService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiyRequest.ProtoReflect.Descriptor instead.
func (*DiyRequest) Descriptor() ([]byte, []int) {
	return file_diyService_proto_rawDescGZIP(), []int{3}
}

func (x *DiyRequest) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *DiyRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *DiyRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *DiyRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *DiyRequest) GetSorts() []string {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *DiyRequest) GetDateRange() []string {
	if x != nil {
		return x.DateRange
	}
	return nil
}

func (x *DiyRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *DiyRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DiyRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DiyRequest) GetTemplateName() string {
	if x != nil {
		return x.TemplateName
	}
	return ""
}

func (x *DiyRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *DiyRequest) GetIsShow() string {
	if x != nil {
		return x.IsShow
	}
	return ""
}

func (x *DiyRequest) GetIsBgColor() string {
	if x != nil {
		return x.IsBgColor
	}
	return ""
}

func (x *DiyRequest) GetIsBgPic() string {
	if x != nil {
		return x.IsBgPic
	}
	return ""
}

func (x *DiyRequest) GetIsDel() string {
	if x != nil {
		return x.IsDel
	}
	return ""
}

func (x *DiyRequest) GetOrderStatus() string {
	if x != nil {
		return x.OrderStatus
	}
	return ""
}

func (x *DiyRequest) GetMyBannerStatus() string {
	if x != nil {
		return x.MyBannerStatus
	}
	return ""
}

func (x *DiyRequest) GetIsDiy() string {
	if x != nil {
		return x.IsDiy
	}
	return ""
}

func (x *DiyRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// DIY响应数据
type DiyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg         string           `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg"`
	Pager       *common.Pager    `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Entity      *Diy             `protobuf:"bytes,3,opt,name=entity,proto3" json:"entity"`
	Items       []*Diy           `protobuf:"bytes,4,rep,name=items,proto3" json:"items"`
	Bytes       []byte           `protobuf:"bytes,6,opt,name=bytes,proto3" json:"bytes"`
	GetVersion  *GetVersionData  `protobuf:"bytes,5,opt,name=get_version,json=getVersion,proto3" json:"get_version"`
	ColorChange *ColorChangeData `protobuf:"bytes,7,opt,name=color_change,json=colorChange,proto3" json:"color_change"`
}

func (x *DiyResponse) Reset() {
	*x = DiyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_diyService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiyResponse) ProtoMessage() {}

func (x *DiyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_diyService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiyResponse.ProtoReflect.Descriptor instead.
func (*DiyResponse) Descriptor() ([]byte, []int) {
	return file_diyService_proto_rawDescGZIP(), []int{4}
}

func (x *DiyResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *DiyResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *DiyResponse) GetEntity() *Diy {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *DiyResponse) GetItems() []*Diy {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *DiyResponse) GetBytes() []byte {
	if x != nil {
		return x.Bytes
	}
	return nil
}

func (x *DiyResponse) GetGetVersion() *GetVersionData {
	if x != nil {
		return x.GetVersion
	}
	return nil
}

func (x *DiyResponse) GetColorChange() *ColorChangeData {
	if x != nil {
		return x.ColorChange
	}
	return nil
}

var File_diyService_proto protoreflect.FileDescriptor

var file_diyService_proto_rawDesc = []byte{
	0x0a, 0x10, 0x64, 0x69, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xcb, 0x04, 0x0a, 0x03, 0x44, 0x69, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x70,
	0x69, 0x63, 0x6b, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x50, 0x69, 0x63, 0x6b, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x62, 0x67, 0x5f, 0x70,
	0x69, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x67, 0x50, 0x69, 0x63, 0x12,
	0x1c, 0x0a, 0x0a, 0x62, 0x67, 0x5f, 0x74, 0x61, 0x62, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x67, 0x54, 0x61, 0x62, 0x56, 0x61, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73,
	0x5f, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x73, 0x42, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x62, 0x67, 0x5f, 0x70, 0x69, 0x63, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69,
	0x73, 0x42, 0x67, 0x50, 0x69, 0x63, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x12, 0x21, 0x0a,
	0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x28, 0x0a, 0x10, 0x6d, 0x79, 0x5f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6d, 0x79, 0x42, 0x61,
	0x6e, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73,
	0x5f, 0x64, 0x69, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x73, 0x44, 0x69,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x41, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x69, 0x73, 0x44, 0x69, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x22, 0x40, 0x0a, 0x0f, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x44, 0x69, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0xf9, 0x03, 0x0a, 0x0a, 0x44, 0x69, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x74, 0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f,
	0x77, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x12,
	0x1e, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73, 0x42, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12,
	0x1a, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x62, 0x67, 0x5f, 0x70, 0x69, 0x63, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x69, 0x73, 0x42, 0x67, 0x50, 0x69, 0x63, 0x12, 0x15, 0x0a, 0x06, 0x69,
	0x73, 0x5f, 0x64, 0x65, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x73, 0x44,
	0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x6d, 0x79, 0x5f, 0x62, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x6d, 0x79, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x79, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x69, 0x73, 0x44, 0x69, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x9f,
	0x02, 0x0a, 0x0b, 0x44, 0x69, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x44, 0x69, 0x79, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x62, 0x79, 0x74, 0x65, 0x73, 0x12, 0x39, 0x0a, 0x0b, 0x67, 0x65, 0x74, 0x5f, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x67, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x32, 0xaa, 0x03, 0x0a, 0x0a, 0x44, 0x69, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x30, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x79, 0x1a, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x30, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0d, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x79, 0x1a, 0x15, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0d, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x79, 0x1a, 0x15, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x07, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x12, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x79, 0x1a,
	0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x2d, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12,
	0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x79, 0x1a, 0x15,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x12, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x44, 0x69, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x34, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0d,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x79, 0x1a, 0x15, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0b, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x43,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x44, 0x69, 0x79, 0x1a, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x44, 0x69, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a,
	0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_diyService_proto_rawDescOnce sync.Once
	file_diyService_proto_rawDescData = file_diyService_proto_rawDesc
)

func file_diyService_proto_rawDescGZIP() []byte {
	file_diyService_proto_rawDescOnce.Do(func() {
		file_diyService_proto_rawDescData = protoimpl.X.CompressGZIP(file_diyService_proto_rawDescData)
	})
	return file_diyService_proto_rawDescData
}

var file_diyService_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_diyService_proto_goTypes = []interface{}{
	(*Diy)(nil),             // 0: services.Diy
	(*GetVersionData)(nil),  // 1: services.GetVersionData
	(*ColorChangeData)(nil), // 2: services.ColorChangeData
	(*DiyRequest)(nil),      // 3: services.DiyRequest
	(*DiyResponse)(nil),     // 4: services.DiyResponse
	(*common.Pager)(nil),    // 5: common.Pager
}
var file_diyService_proto_depIdxs = []int32{
	5,  // 0: services.DiyResponse.pager:type_name -> common.Pager
	0,  // 1: services.DiyResponse.entity:type_name -> services.Diy
	0,  // 2: services.DiyResponse.items:type_name -> services.Diy
	1,  // 3: services.DiyResponse.get_version:type_name -> services.GetVersionData
	2,  // 4: services.DiyResponse.color_change:type_name -> services.ColorChangeData
	0,  // 5: services.DiyService.Create:input_type -> services.Diy
	0,  // 6: services.DiyService.Update:input_type -> services.Diy
	0,  // 7: services.DiyService.Delete:input_type -> services.Diy
	0,  // 8: services.DiyService.Default:input_type -> services.Diy
	0,  // 9: services.DiyService.Get:input_type -> services.Diy
	3,  // 10: services.DiyService.Search:input_type -> services.DiyRequest
	0,  // 11: services.DiyService.GetVersion:input_type -> services.Diy
	0,  // 12: services.DiyService.ColorChange:input_type -> services.Diy
	4,  // 13: services.DiyService.Create:output_type -> services.DiyResponse
	4,  // 14: services.DiyService.Update:output_type -> services.DiyResponse
	4,  // 15: services.DiyService.Delete:output_type -> services.DiyResponse
	4,  // 16: services.DiyService.Default:output_type -> services.DiyResponse
	4,  // 17: services.DiyService.Get:output_type -> services.DiyResponse
	4,  // 18: services.DiyService.Search:output_type -> services.DiyResponse
	4,  // 19: services.DiyService.GetVersion:output_type -> services.DiyResponse
	4,  // 20: services.DiyService.ColorChange:output_type -> services.DiyResponse
	13, // [13:21] is the sub-list for method output_type
	5,  // [5:13] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_diyService_proto_init() }
func file_diyService_proto_init() {
	if File_diyService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_diyService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Diy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_diyService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVersionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_diyService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColorChangeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_diyService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_diyService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_diyService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_diyService_proto_goTypes,
		DependencyIndexes: file_diyService_proto_depIdxs,
		MessageInfos:      file_diyService_proto_msgTypes,
	}.Build()
	File_diyService_proto = out.File
	file_diyService_proto_rawDesc = nil
	file_diyService_proto_goTypes = nil
	file_diyService_proto_depIdxs = nil
}
