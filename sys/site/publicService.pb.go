// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: publicService.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WorkerManUrlData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Admin string `protobuf:"bytes,1,opt,name=admin,proto3" json:"admin"`
	Chat  string `protobuf:"bytes,2,opt,name=chat,proto3" json:"chat"`
}

func (x *WorkerManUrlData) Reset() {
	*x = WorkerManUrlData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkerManUrlData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkerManUrlData) ProtoMessage() {}

func (x *WorkerManUrlData) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkerManUrlData.ProtoReflect.Descriptor instead.
func (*WorkerManUrlData) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{0}
}

func (x *WorkerManUrlData) GetAdmin() string {
	if x != nil {
		return x.Admin
	}
	return ""
}

func (x *WorkerManUrlData) GetChat() string {
	if x != nil {
		return x.Chat
	}
	return ""
}

// 商城基础配置汇总
type MallBasicConfigData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SiteName             string   `protobuf:"bytes,1,opt,name=site_name,json=siteName,proto3" json:"site_name"`                                         //网站名称
	SiteUrl              string   `protobuf:"bytes,2,opt,name=site_url,json=siteUrl,proto3" json:"site_url"`                                            //网站地址
	WapLoginLogo         string   `protobuf:"bytes,3,opt,name=wap_login_logo,json=wapLoginLogo,proto3" json:"wap_login_logo"`                           //移动端登录logo
	IcpRecordNo          string   `protobuf:"bytes,4,opt,name=icp_record_no,json=icpRecordNo,proto3" json:"icp_record_no"`                              //备案号 record_No
	IcpUrl               string   `protobuf:"bytes,5,opt,name=icp_url,json=icpUrl,proto3" json:"icp_url"`                                               //备案号链接
	NetworkSecurity      string   `protobuf:"bytes,6,opt,name=network_security,json=networkSecurity,proto3" json:"network_security"`                    //网安备案
	NetworkSecurityUrl   string   `protobuf:"bytes,7,opt,name=network_security_url,json=networkSecurityUrl,proto3" json:"network_security_url"`         //网安备案链接
	StoreSelfMention     bool     `protobuf:"varint,8,opt,name=store_self_mention,json=storeSelfMention,proto3" json:"store_self_mention"`              //是否开启到店自提
	InvoiceFuncStatus    bool     `protobuf:"varint,9,opt,name=invoice_func_status,json=invoiceFuncStatus,proto3" json:"invoice_func_status"`           //发票功能启用
	SpecialInvoiceStatus bool     `protobuf:"varint,10,opt,name=special_invoice_status,json=specialInvoiceStatus,proto3" json:"special_invoice_status"` //专用发票启用
	MemberFuncStatus     bool     `protobuf:"varint,11,opt,name=member_func_status,json=memberFuncStatus,proto3" json:"member_func_status"`             //用户等级启用
	BalanceFuncStatus    bool     `protobuf:"varint,12,opt,name=balance_func_status,json=balanceFuncStatus,proto3" json:"balance_func_status"`          //余额功能启用
	RechargeSwitch       bool     `protobuf:"varint,13,opt,name=recharge_switch,json=rechargeSwitch,proto3" json:"recharge_switch"`                     //小程序充值开关
	MemberCardStatus     bool     `protobuf:"varint,14,opt,name=member_card_status,json=memberCardStatus,proto3" json:"member_card_status"`             //是否开启付费会员
	MemberPriceStatus    bool     `protobuf:"varint,15,opt,name=member_price_status,json=memberPriceStatus,proto3" json:"member_price_status"`          //商品会员折扣价展示启用
	AliPayStatus         bool     `protobuf:"varint,16,opt,name=ali_pay_status,json=aliPayStatus,proto3" json:"ali_pay_status"`                         //支付宝是否启用
	PayWeixinOpen        bool     `protobuf:"varint,17,opt,name=pay_weixin_open,json=payWeixinOpen,proto3" json:"pay_weixin_open"`                      //微信是否启用
	YuePayStatus         bool     `protobuf:"varint,18,opt,name=yue_pay_status,json=yuePayStatus,proto3" json:"yue_pay_status"`                         //余额是否启用
	OfflinePayStatus     bool     `protobuf:"varint,19,opt,name=offline_pay_status,json=offlinePayStatus,proto3" json:"offline_pay_status"`             //线下是否启用
	FriendPayStatus      bool     `protobuf:"varint,20,opt,name=friend_pay_status,json=friendPayStatus,proto3" json:"friend_pay_status"`                //好友是否启用
	WechatAuthSwitch     bool     `protobuf:"varint,21,opt,name=wechat_auth_switch,json=wechatAuthSwitch,proto3" json:"wechat_auth_switch"`             //微信登录开关
	PhoneAuthSwitch      bool     `protobuf:"varint,22,opt,name=phone_auth_switch,json=phoneAuthSwitch,proto3" json:"phone_auth_switch"`                //手机号登录开关
	WechatStatus         bool     `protobuf:"varint,23,opt,name=wechat_status,json=wechatStatus,proto3" json:"wechat_status"`                           //公众号是否配置
	SiteFunc             []string `protobuf:"bytes,24,rep,name=site_func,json=siteFunc,proto3" json:"site_func"`                                        //功能列表 如：['seckill', 'bargain', 'combination']
}

func (x *MallBasicConfigData) Reset() {
	*x = MallBasicConfigData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MallBasicConfigData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MallBasicConfigData) ProtoMessage() {}

func (x *MallBasicConfigData) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MallBasicConfigData.ProtoReflect.Descriptor instead.
func (*MallBasicConfigData) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{1}
}

func (x *MallBasicConfigData) GetSiteName() string {
	if x != nil {
		return x.SiteName
	}
	return ""
}

func (x *MallBasicConfigData) GetSiteUrl() string {
	if x != nil {
		return x.SiteUrl
	}
	return ""
}

func (x *MallBasicConfigData) GetWapLoginLogo() string {
	if x != nil {
		return x.WapLoginLogo
	}
	return ""
}

func (x *MallBasicConfigData) GetIcpRecordNo() string {
	if x != nil {
		return x.IcpRecordNo
	}
	return ""
}

func (x *MallBasicConfigData) GetIcpUrl() string {
	if x != nil {
		return x.IcpUrl
	}
	return ""
}

func (x *MallBasicConfigData) GetNetworkSecurity() string {
	if x != nil {
		return x.NetworkSecurity
	}
	return ""
}

func (x *MallBasicConfigData) GetNetworkSecurityUrl() string {
	if x != nil {
		return x.NetworkSecurityUrl
	}
	return ""
}

func (x *MallBasicConfigData) GetStoreSelfMention() bool {
	if x != nil {
		return x.StoreSelfMention
	}
	return false
}

func (x *MallBasicConfigData) GetInvoiceFuncStatus() bool {
	if x != nil {
		return x.InvoiceFuncStatus
	}
	return false
}

func (x *MallBasicConfigData) GetSpecialInvoiceStatus() bool {
	if x != nil {
		return x.SpecialInvoiceStatus
	}
	return false
}

func (x *MallBasicConfigData) GetMemberFuncStatus() bool {
	if x != nil {
		return x.MemberFuncStatus
	}
	return false
}

func (x *MallBasicConfigData) GetBalanceFuncStatus() bool {
	if x != nil {
		return x.BalanceFuncStatus
	}
	return false
}

func (x *MallBasicConfigData) GetRechargeSwitch() bool {
	if x != nil {
		return x.RechargeSwitch
	}
	return false
}

func (x *MallBasicConfigData) GetMemberCardStatus() bool {
	if x != nil {
		return x.MemberCardStatus
	}
	return false
}

func (x *MallBasicConfigData) GetMemberPriceStatus() bool {
	if x != nil {
		return x.MemberPriceStatus
	}
	return false
}

func (x *MallBasicConfigData) GetAliPayStatus() bool {
	if x != nil {
		return x.AliPayStatus
	}
	return false
}

func (x *MallBasicConfigData) GetPayWeixinOpen() bool {
	if x != nil {
		return x.PayWeixinOpen
	}
	return false
}

func (x *MallBasicConfigData) GetYuePayStatus() bool {
	if x != nil {
		return x.YuePayStatus
	}
	return false
}

func (x *MallBasicConfigData) GetOfflinePayStatus() bool {
	if x != nil {
		return x.OfflinePayStatus
	}
	return false
}

func (x *MallBasicConfigData) GetFriendPayStatus() bool {
	if x != nil {
		return x.FriendPayStatus
	}
	return false
}

func (x *MallBasicConfigData) GetWechatAuthSwitch() bool {
	if x != nil {
		return x.WechatAuthSwitch
	}
	return false
}

func (x *MallBasicConfigData) GetPhoneAuthSwitch() bool {
	if x != nil {
		return x.PhoneAuthSwitch
	}
	return false
}

func (x *MallBasicConfigData) GetWechatStatus() bool {
	if x != nil {
		return x.WechatStatus
	}
	return false
}

func (x *MallBasicConfigData) GetSiteFunc() []string {
	if x != nil {
		return x.SiteFunc
	}
	return nil
}

type SiteConfigData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IcpUrl             string `protobuf:"bytes,1,opt,name=icp_url,json=icpUrl,proto3" json:"icp_url"`
	IcpRecordNo        string `protobuf:"bytes,2,opt,name=icp_record_no,json=icpRecordNo,proto3" json:"icp_record_no"` //备案号 record_No
	NetworkSecurity    string `protobuf:"bytes,3,opt,name=network_security,json=networkSecurity,proto3" json:"network_security"`
	NetworkSecurityUrl string `protobuf:"bytes,4,opt,name=network_security_url,json=networkSecurityUrl,proto3" json:"network_security_url"`
}

func (x *SiteConfigData) Reset() {
	*x = SiteConfigData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteConfigData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteConfigData) ProtoMessage() {}

func (x *SiteConfigData) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteConfigData.ProtoReflect.Descriptor instead.
func (*SiteConfigData) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{2}
}

func (x *SiteConfigData) GetIcpUrl() string {
	if x != nil {
		return x.IcpUrl
	}
	return ""
}

func (x *SiteConfigData) GetIcpRecordNo() string {
	if x != nil {
		return x.IcpRecordNo
	}
	return ""
}

func (x *SiteConfigData) GetNetworkSecurity() string {
	if x != nil {
		return x.NetworkSecurity
	}
	return ""
}

func (x *SiteConfigData) GetNetworkSecurityUrl() string {
	if x != nil {
		return x.NetworkSecurityUrl
	}
	return ""
}

type CopyrightData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CopyrightContext string `protobuf:"bytes,1,opt,name=copyright_context,json=copyrightContext,proto3" json:"copyright_context"`
	CopyrightImage   string `protobuf:"bytes,2,opt,name=copyright_image,json=copyrightImage,proto3" json:"copyright_image"`
	SiteLogo         string `protobuf:"bytes,3,opt,name=site_logo,json=siteLogo,proto3" json:"site_logo"`
	SiteName         string `protobuf:"bytes,4,opt,name=site_name,json=siteName,proto3" json:"site_name"`
}

func (x *CopyrightData) Reset() {
	*x = CopyrightData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CopyrightData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CopyrightData) ProtoMessage() {}

func (x *CopyrightData) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CopyrightData.ProtoReflect.Descriptor instead.
func (*CopyrightData) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{3}
}

func (x *CopyrightData) GetCopyrightContext() string {
	if x != nil {
		return x.CopyrightContext
	}
	return ""
}

func (x *CopyrightData) GetCopyrightImage() string {
	if x != nil {
		return x.CopyrightImage
	}
	return ""
}

func (x *CopyrightData) GetSiteLogo() string {
	if x != nil {
		return x.SiteLogo
	}
	return ""
}

func (x *CopyrightData) GetSiteName() string {
	if x != nil {
		return x.SiteName
	}
	return ""
}

type GetOpenAdvData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    int32    `protobuf:"varint,1,opt,name=status,proto3" json:"status"` //0 不显示, 1 倒计时, 2 手动关闭(预留)
	Time      int32    `protobuf:"varint,2,opt,name=time,proto3" json:"time"`     //秒
	Type      string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type"`      //pic 图片, video 视频
	VideoLink string   `protobuf:"bytes,4,opt,name=video_link,json=videoLink,proto3" json:"video_link"`
	Value     []string `protobuf:"bytes,5,rep,name=value,proto3" json:"value"`
}

func (x *GetOpenAdvData) Reset() {
	*x = GetOpenAdvData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOpenAdvData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOpenAdvData) ProtoMessage() {}

func (x *GetOpenAdvData) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOpenAdvData.ProtoReflect.Descriptor instead.
func (*GetOpenAdvData) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{4}
}

func (x *GetOpenAdvData) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetOpenAdvData) GetTime() int32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *GetOpenAdvData) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GetOpenAdvData) GetVideoLink() string {
	if x != nil {
		return x.VideoLink
	}
	return ""
}

func (x *GetOpenAdvData) GetValue() []string {
	if x != nil {
		return x.Value
	}
	return nil
}

type ShareData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Img      string `protobuf:"bytes,1,opt,name=img,proto3" json:"img"`
	Synopsis string `protobuf:"bytes,2,opt,name=synopsis,proto3" json:"synopsis"`
	Title    string `protobuf:"bytes,3,opt,name=title,proto3" json:"title"`
}

func (x *ShareData) Reset() {
	*x = ShareData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareData) ProtoMessage() {}

func (x *ShareData) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareData.ProtoReflect.Descriptor instead.
func (*ShareData) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{5}
}

func (x *ShareData) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *ShareData) GetSynopsis() string {
	if x != nil {
		return x.Synopsis
	}
	return ""
}

func (x *ShareData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type PublicRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged    int64  `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Sorting  string `protobuf:"bytes,3,opt,name=sorting,proto3" json:"sorting"`
	//base params
	Id       int64   `protobuf:"varint,4,opt,name=id,proto3" json:"id"`
	Name     string  `protobuf:"bytes,5,opt,name=name,proto3" json:"name"`
	Status   string  `protobuf:"bytes,6,opt,name=status,proto3" json:"status"`
	ParentId int64   `protobuf:"varint,7,opt,name=parent_id,json=parentId,proto3" json:"parent_id"`
	Keywords string  `protobuf:"bytes,8,opt,name=keywords,proto3" json:"keywords"`
	Ids      []int64 `protobuf:"varint,10,rep,packed,name=ids,proto3" json:"ids"`
}

func (x *PublicRequest) Reset() {
	*x = PublicRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicRequest) ProtoMessage() {}

func (x *PublicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicRequest.ProtoReflect.Descriptor instead.
func (*PublicRequest) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{6}
}

func (x *PublicRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *PublicRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PublicRequest) GetSorting() string {
	if x != nil {
		return x.Sorting
	}
	return ""
}

func (x *PublicRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PublicRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PublicRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PublicRequest) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *PublicRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *PublicRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type LangVersionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version"`
}

func (x *LangVersionData) Reset() {
	*x = LangVersionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LangVersionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LangVersionData) ProtoMessage() {}

func (x *LangVersionData) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LangVersionData.ProtoReflect.Descriptor instead.
func (*LangVersionData) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{7}
}

func (x *LangVersionData) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type LangJsonData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Locale  string            `protobuf:"bytes,1,opt,name=locale,proto3" json:"locale"`
	Content map[string]string `protobuf:"bytes,2,rep,name=content,proto3" json:"content" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *LangJsonData) Reset() {
	*x = LangJsonData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LangJsonData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LangJsonData) ProtoMessage() {}

func (x *LangJsonData) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LangJsonData.ProtoReflect.Descriptor instead.
func (*LangJsonData) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{8}
}

func (x *LangJsonData) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *LangJsonData) GetContent() map[string]string {
	if x != nil {
		return x.Content
	}
	return nil
}

type PublicResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg             string               `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg"`
	WorkerManUrl    *WorkerManUrlData    `protobuf:"bytes,2,opt,name=worker_man_url,json=workerManUrl,proto3" json:"worker_man_url"`
	MallBasicConfig *MallBasicConfigData `protobuf:"bytes,3,opt,name=mall_basic_config,json=mallBasicConfig,proto3" json:"mall_basic_config"`
	SiteConfig      *SiteConfigData      `protobuf:"bytes,4,opt,name=site_config,json=siteConfig,proto3" json:"site_config"`
	Copyright       *CopyrightData       `protobuf:"bytes,6,opt,name=copyright,proto3" json:"copyright"`
	GetOpenAdv      *GetOpenAdvData      `protobuf:"bytes,7,opt,name=get_open_adv,json=getOpenAdv,proto3" json:"get_open_adv"`
	Navigation      []byte               `protobuf:"bytes,8,opt,name=navigation,proto3" json:"navigation"`
	Share           *ShareData           `protobuf:"bytes,9,opt,name=share,proto3" json:"share"`
	LangVersion     *LangVersionData     `protobuf:"bytes,10,opt,name=lang_version,json=langVersion,proto3" json:"lang_version"`
	GetLangJson     *LangJsonData        `protobuf:"bytes,11,opt,name=get_lang_json,json=getLangJson,proto3" json:"get_lang_json"`
}

func (x *PublicResponse) Reset() {
	*x = PublicResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_publicService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicResponse) ProtoMessage() {}

func (x *PublicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_publicService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicResponse.ProtoReflect.Descriptor instead.
func (*PublicResponse) Descriptor() ([]byte, []int) {
	return file_publicService_proto_rawDescGZIP(), []int{9}
}

func (x *PublicResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PublicResponse) GetWorkerManUrl() *WorkerManUrlData {
	if x != nil {
		return x.WorkerManUrl
	}
	return nil
}

func (x *PublicResponse) GetMallBasicConfig() *MallBasicConfigData {
	if x != nil {
		return x.MallBasicConfig
	}
	return nil
}

func (x *PublicResponse) GetSiteConfig() *SiteConfigData {
	if x != nil {
		return x.SiteConfig
	}
	return nil
}

func (x *PublicResponse) GetCopyright() *CopyrightData {
	if x != nil {
		return x.Copyright
	}
	return nil
}

func (x *PublicResponse) GetGetOpenAdv() *GetOpenAdvData {
	if x != nil {
		return x.GetOpenAdv
	}
	return nil
}

func (x *PublicResponse) GetNavigation() []byte {
	if x != nil {
		return x.Navigation
	}
	return nil
}

func (x *PublicResponse) GetShare() *ShareData {
	if x != nil {
		return x.Share
	}
	return nil
}

func (x *PublicResponse) GetLangVersion() *LangVersionData {
	if x != nil {
		return x.LangVersion
	}
	return nil
}

func (x *PublicResponse) GetGetLangJson() *LangJsonData {
	if x != nil {
		return x.GetLangJson
	}
	return nil
}

var File_publicService_proto protoreflect.FileDescriptor

var file_publicService_proto_rawDesc = []byte{
	0x0a, 0x13, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22,
	0x3c, 0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4d, 0x61, 0x6e, 0x55, 0x72, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x68, 0x61,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x68, 0x61, 0x74, 0x22, 0xf0, 0x07,
	0x0a, 0x13, 0x4d, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x74, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x69, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x24, 0x0a,
	0x0e, 0x77, 0x61, 0x70, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x77, 0x61, 0x70, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x4c,
	0x6f, 0x67, 0x6f, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x63, 0x70, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x5f, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x63, 0x70, 0x52,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x63, 0x70, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x63, 0x70, 0x55, 0x72, 0x6c,
	0x12, 0x29, 0x0a, 0x10, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x14, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x2c, 0x0a,
	0x12, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x6d, 0x65, 0x6e, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x53, 0x65, 0x6c, 0x66, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x73,
	0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x66, 0x75, 0x6e, 0x63,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x2e, 0x0a, 0x13, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x27, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x5f, 0x73, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72,
	0x67, 0x65, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x11, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x6c, 0x69, 0x5f, 0x70, 0x61,
	0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x61, 0x6c, 0x69, 0x50, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0f,
	0x70, 0x61, 0x79, 0x5f, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e,
	0x4f, 0x70, 0x65, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x79, 0x75, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x79, 0x75,
	0x65, 0x50, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x66,
	0x66, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50,
	0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x14, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x10, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x41, 0x75, 0x74, 0x68, 0x53, 0x77, 0x69, 0x74,
	0x63, 0x68, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68,
	0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x41, 0x75, 0x74, 0x68, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x23,
	0x0a, 0x0d, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x66, 0x75, 0x6e, 0x63,
	0x18, 0x18, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x74, 0x65, 0x46, 0x75, 0x6e, 0x63,
	0x22, 0xaa, 0x01, 0x0a, 0x0e, 0x53, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x63, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x63, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0d,
	0x69, 0x63, 0x70, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x63, 0x70, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x6f,
	0x12, 0x29, 0x0a, 0x10, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x14, 0x6e,
	0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x6e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x55, 0x72, 0x6c, 0x22, 0x9f, 0x01,
	0x0a, 0x0d, 0x43, 0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x2b, 0x0a, 0x11, 0x63, 0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x70, 0x79,
	0x72, 0x69, 0x67, 0x68, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x27, 0x0a, 0x0f,
	0x63, 0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x6f,
	0x67, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x74, 0x65, 0x4c, 0x6f,
	0x67, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22,
	0x85, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x64, 0x76, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6c, 0x69, 0x6e, 0x6b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x6e,
	0x6b, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x4f, 0x0a, 0x09, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x69, 0x6d, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x79, 0x6e, 0x6f, 0x70, 0x73,
	0x69, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x79, 0x6e, 0x6f, 0x70, 0x73,
	0x69, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0xe3, 0x01, 0x0a, 0x0d, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61,
	0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x2b,
	0x0a, 0x0f, 0x4c, 0x61, 0x6e, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xa1, 0x01, 0x0a, 0x0c,
	0x4c, 0x61, 0x6e, 0x67, 0x4a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x65, 0x12, 0x3d, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x4a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x1a, 0x3a, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xa2, 0x04, 0x0a, 0x0e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x40, 0x0a, 0x0e, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x5f, 0x6d,
	0x61, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x4d, 0x61,
	0x6e, 0x55, 0x72, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x77, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x4d, 0x61, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x49, 0x0a, 0x11, 0x6d, 0x61, 0x6c, 0x6c, 0x5f, 0x62,
	0x61, 0x73, 0x69, 0x63, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x61, 0x6c,
	0x6c, 0x42, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x0f, 0x6d, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x73, 0x69, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x39, 0x0a, 0x0b, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x0a, 0x73, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x35, 0x0a, 0x09,
	0x63, 0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x70, 0x79, 0x72,
	0x69, 0x67, 0x68, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x63, 0x6f, 0x70, 0x79, 0x72, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x3a, 0x0a, 0x0c, 0x67, 0x65, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x5f,
	0x61, 0x64, 0x76, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x64, 0x76, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0a, 0x67, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x64, 0x76, 0x12,
	0x1e, 0x0a, 0x0a, 0x6e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0a, 0x6e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x29, 0x0a, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x05, 0x73, 0x68, 0x61, 0x72, 0x65, 0x12, 0x3c, 0x0a, 0x0c, 0x6c, 0x61,
	0x6e, 0x67, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x61, 0x6e, 0x67,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x6c, 0x61, 0x6e,
	0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3a, 0x0a, 0x0d, 0x67, 0x65, 0x74, 0x5f,
	0x6c, 0x61, 0x6e, 0x67, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x4a,
	0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x67, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67,
	0x4a, 0x73, 0x6f, 0x6e, 0x32, 0xed, 0x04, 0x0a, 0x0d, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72,
	0x4d, 0x61, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0a, 0x53,
	0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40,
	0x0a, 0x09, 0x43, 0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x12, 0x17, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x41, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x41, 0x64, 0x76, 0x12, 0x17,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0a, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x05, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12,
	0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0f, 0x4d, 0x61, 0x6c, 0x6c, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0b,
	0x4c, 0x61, 0x6e, 0x67, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x42, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x6e, 0x67, 0x4a, 0x73, 0x6f, 0x6e, 0x12,
	0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_publicService_proto_rawDescOnce sync.Once
	file_publicService_proto_rawDescData = file_publicService_proto_rawDesc
)

func file_publicService_proto_rawDescGZIP() []byte {
	file_publicService_proto_rawDescOnce.Do(func() {
		file_publicService_proto_rawDescData = protoimpl.X.CompressGZIP(file_publicService_proto_rawDescData)
	})
	return file_publicService_proto_rawDescData
}

var file_publicService_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_publicService_proto_goTypes = []interface{}{
	(*WorkerManUrlData)(nil),    // 0: services.WorkerManUrlData
	(*MallBasicConfigData)(nil), // 1: services.MallBasicConfigData
	(*SiteConfigData)(nil),      // 2: services.SiteConfigData
	(*CopyrightData)(nil),       // 3: services.CopyrightData
	(*GetOpenAdvData)(nil),      // 4: services.GetOpenAdvData
	(*ShareData)(nil),           // 5: services.ShareData
	(*PublicRequest)(nil),       // 6: services.PublicRequest
	(*LangVersionData)(nil),     // 7: services.LangVersionData
	(*LangJsonData)(nil),        // 8: services.LangJsonData
	(*PublicResponse)(nil),      // 9: services.PublicResponse
	nil,                         // 10: services.LangJsonData.ContentEntry
}
var file_publicService_proto_depIdxs = []int32{
	10, // 0: services.LangJsonData.content:type_name -> services.LangJsonData.ContentEntry
	0,  // 1: services.PublicResponse.worker_man_url:type_name -> services.WorkerManUrlData
	1,  // 2: services.PublicResponse.mall_basic_config:type_name -> services.MallBasicConfigData
	2,  // 3: services.PublicResponse.site_config:type_name -> services.SiteConfigData
	3,  // 4: services.PublicResponse.copyright:type_name -> services.CopyrightData
	4,  // 5: services.PublicResponse.get_open_adv:type_name -> services.GetOpenAdvData
	5,  // 6: services.PublicResponse.share:type_name -> services.ShareData
	7,  // 7: services.PublicResponse.lang_version:type_name -> services.LangVersionData
	8,  // 8: services.PublicResponse.get_lang_json:type_name -> services.LangJsonData
	6,  // 9: services.PublicService.WorkerManUrl:input_type -> services.PublicRequest
	6,  // 10: services.PublicService.SiteConfig:input_type -> services.PublicRequest
	6,  // 11: services.PublicService.Copyright:input_type -> services.PublicRequest
	6,  // 12: services.PublicService.GetOpenAdv:input_type -> services.PublicRequest
	6,  // 13: services.PublicService.Navigation:input_type -> services.PublicRequest
	6,  // 14: services.PublicService.Share:input_type -> services.PublicRequest
	6,  // 15: services.PublicService.MallBasicConfig:input_type -> services.PublicRequest
	6,  // 16: services.PublicService.LangVersion:input_type -> services.PublicRequest
	6,  // 17: services.PublicService.GetLangJson:input_type -> services.PublicRequest
	9,  // 18: services.PublicService.WorkerManUrl:output_type -> services.PublicResponse
	9,  // 19: services.PublicService.SiteConfig:output_type -> services.PublicResponse
	9,  // 20: services.PublicService.Copyright:output_type -> services.PublicResponse
	9,  // 21: services.PublicService.GetOpenAdv:output_type -> services.PublicResponse
	9,  // 22: services.PublicService.Navigation:output_type -> services.PublicResponse
	9,  // 23: services.PublicService.Share:output_type -> services.PublicResponse
	9,  // 24: services.PublicService.MallBasicConfig:output_type -> services.PublicResponse
	9,  // 25: services.PublicService.LangVersion:output_type -> services.PublicResponse
	9,  // 26: services.PublicService.GetLangJson:output_type -> services.PublicResponse
	18, // [18:27] is the sub-list for method output_type
	9,  // [9:18] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_publicService_proto_init() }
func file_publicService_proto_init() {
	if File_publicService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_publicService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkerManUrlData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MallBasicConfigData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteConfigData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CopyrightData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOpenAdvData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LangVersionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LangJsonData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_publicService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_publicService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_publicService_proto_goTypes,
		DependencyIndexes: file_publicService_proto_depIdxs,
		MessageInfos:      file_publicService_proto_msgTypes,
	}.Build()
	File_publicService_proto = out.File
	file_publicService_proto_rawDesc = nil
	file_publicService_proto_goTypes = nil
	file_publicService_proto_depIdxs = nil
}
