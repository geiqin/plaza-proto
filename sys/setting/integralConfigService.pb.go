// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: integralConfigService.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 积分配置
type IntegralConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                   string              `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`                                                                       //积分名称
	IsProtected            bool                `protobuf:"varint,2,opt,name=is_protected,json=isProtected,proto3" json:"is_protected"`                                     //开启积分保护
	ProtectedDays          int32               `protobuf:"varint,3,opt,name=protected_days,json=protectedDays,proto3" json:"protected_days"`                               //积分保护期天数
	GivingType             string              `protobuf:"bytes,4,opt,name=giving_type,json=givingType,proto3" json:"giving_type"`                                         //发放时机
	IsDailyMaxLimit        bool                `protobuf:"varint,5,opt,name=is_daily_max_limit,json=isDailyMaxLimit,proto3" json:"is_daily_max_limit"`                     //开启获取上限
	DailyMaxLimit          int64               `protobuf:"varint,6,opt,name=daily_max_limit,json=dailyMaxLimit,proto3" json:"daily_max_limit"`                             //消费积分获取上限
	DeductRatio            float32             `protobuf:"fixed32,7,opt,name=deduct_ratio,json=deductRatio,proto3" json:"deduct_ratio"`                                    //抵现比例：1积分等于多少元
	IsDeductRule           bool                `protobuf:"varint,9,opt,name=is_deduct_rule,json=isDeductRule,proto3" json:"is_deduct_rule"`                                //开启抵现规则
	DeductRule             *IntegralDeductRule `protobuf:"bytes,10,opt,name=deduct_rule,json=deductRule,proto3" json:"deduct_rule"`                                        //成长规则
	CleanType              string              `protobuf:"bytes,11,opt,name=clean_type,json=cleanType,proto3" json:"clean_type"`                                           //清零类型
	EveryYearClear         int32               `protobuf:"varint,12,opt,name=every_year_clear,json=everyYearClear,proto3" json:"every_year_clear"`                         //每年清零
	EveryMonthClear        int32               `protobuf:"varint,13,opt,name=every_month_clear,json=everyMonthClear,proto3" json:"every_month_clear"`                      //每月清零
	EveryDayClear          int32               `protobuf:"varint,14,opt,name=every_day_clear,json=everyDayClear,proto3" json:"every_day_clear"`                            //每天清零
	TotalSpentIntegral     int64               `protobuf:"varint,15,opt,name=total_spent_integral,json=totalSpentIntegral,proto3" json:"total_spent_integral"`             //累计消耗积分
	TotalEarnedIntegral    int64               `protobuf:"varint,16,opt,name=total_earned_integral,json=totalEarnedIntegral,proto3" json:"total_earned_integral"`          //累计发放积分
	TotalProtectedIntegral int64               `protobuf:"varint,17,opt,name=total_protected_integral,json=totalProtectedIntegral,proto3" json:"total_protected_integral"` //保护期内积分
}

func (x *IntegralConfig) Reset() {
	*x = IntegralConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integralConfigService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegralConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegralConfig) ProtoMessage() {}

func (x *IntegralConfig) ProtoReflect() protoreflect.Message {
	mi := &file_integralConfigService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegralConfig.ProtoReflect.Descriptor instead.
func (*IntegralConfig) Descriptor() ([]byte, []int) {
	return file_integralConfigService_proto_rawDescGZIP(), []int{0}
}

func (x *IntegralConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *IntegralConfig) GetIsProtected() bool {
	if x != nil {
		return x.IsProtected
	}
	return false
}

func (x *IntegralConfig) GetProtectedDays() int32 {
	if x != nil {
		return x.ProtectedDays
	}
	return 0
}

func (x *IntegralConfig) GetGivingType() string {
	if x != nil {
		return x.GivingType
	}
	return ""
}

func (x *IntegralConfig) GetIsDailyMaxLimit() bool {
	if x != nil {
		return x.IsDailyMaxLimit
	}
	return false
}

func (x *IntegralConfig) GetDailyMaxLimit() int64 {
	if x != nil {
		return x.DailyMaxLimit
	}
	return 0
}

func (x *IntegralConfig) GetDeductRatio() float32 {
	if x != nil {
		return x.DeductRatio
	}
	return 0
}

func (x *IntegralConfig) GetIsDeductRule() bool {
	if x != nil {
		return x.IsDeductRule
	}
	return false
}

func (x *IntegralConfig) GetDeductRule() *IntegralDeductRule {
	if x != nil {
		return x.DeductRule
	}
	return nil
}

func (x *IntegralConfig) GetCleanType() string {
	if x != nil {
		return x.CleanType
	}
	return ""
}

func (x *IntegralConfig) GetEveryYearClear() int32 {
	if x != nil {
		return x.EveryYearClear
	}
	return 0
}

func (x *IntegralConfig) GetEveryMonthClear() int32 {
	if x != nil {
		return x.EveryMonthClear
	}
	return 0
}

func (x *IntegralConfig) GetEveryDayClear() int32 {
	if x != nil {
		return x.EveryDayClear
	}
	return 0
}

func (x *IntegralConfig) GetTotalSpentIntegral() int64 {
	if x != nil {
		return x.TotalSpentIntegral
	}
	return 0
}

func (x *IntegralConfig) GetTotalEarnedIntegral() int64 {
	if x != nil {
		return x.TotalEarnedIntegral
	}
	return 0
}

func (x *IntegralConfig) GetTotalProtectedIntegral() int64 {
	if x != nil {
		return x.TotalProtectedIntegral
	}
	return 0
}

// 抵现规则
type IntegralDeductRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeductAmountLimit    string     `protobuf:"bytes,1,opt,name=deduct_amount_limit,json=deductAmountLimit,proto3" json:"deduct_amount_limit"`             //抵现金额上限
	DeductAmountLimitVal int64      `protobuf:"varint,2,opt,name=deduct_amount_limit_val,json=deductAmountLimitVal,proto3" json:"deduct_amount_limit_val"` //抵现金额上限值
	OrderAmountThreshold string     `protobuf:"bytes,3,opt,name=order_amount_threshold,json=orderAmountThreshold,proto3" json:"order_amount_threshold"`    //订单金额门槛
	MinOrderAmount       int64      `protobuf:"varint,4,opt,name=min_order_amount,json=minOrderAmount,proto3" json:"min_order_amount"`                     //订单金额最低为X元时可抵现
	SpuRangeType         string     `protobuf:"bytes,5,opt,name=spu_range_type,json=spuRangeType,proto3" json:"spu_range_type"`                            //适用商品类型
	SpuRangeIds          []int64    `protobuf:"varint,6,rep,packed,name=spu_range_ids,json=spuRangeIds,proto3" json:"spu_range_ids"`                       //适用商品IDS
	SpuRanges            []*SpuInfo `protobuf:"bytes,7,rep,name=spu_ranges,json=spuRanges,proto3" json:"spu_ranges"`
}

func (x *IntegralDeductRule) Reset() {
	*x = IntegralDeductRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integralConfigService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegralDeductRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegralDeductRule) ProtoMessage() {}

func (x *IntegralDeductRule) ProtoReflect() protoreflect.Message {
	mi := &file_integralConfigService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegralDeductRule.ProtoReflect.Descriptor instead.
func (*IntegralDeductRule) Descriptor() ([]byte, []int) {
	return file_integralConfigService_proto_rawDescGZIP(), []int{1}
}

func (x *IntegralDeductRule) GetDeductAmountLimit() string {
	if x != nil {
		return x.DeductAmountLimit
	}
	return ""
}

func (x *IntegralDeductRule) GetDeductAmountLimitVal() int64 {
	if x != nil {
		return x.DeductAmountLimitVal
	}
	return 0
}

func (x *IntegralDeductRule) GetOrderAmountThreshold() string {
	if x != nil {
		return x.OrderAmountThreshold
	}
	return ""
}

func (x *IntegralDeductRule) GetMinOrderAmount() int64 {
	if x != nil {
		return x.MinOrderAmount
	}
	return 0
}

func (x *IntegralDeductRule) GetSpuRangeType() string {
	if x != nil {
		return x.SpuRangeType
	}
	return ""
}

func (x *IntegralDeductRule) GetSpuRangeIds() []int64 {
	if x != nil {
		return x.SpuRangeIds
	}
	return nil
}

func (x *IntegralDeductRule) GetSpuRanges() []*SpuInfo {
	if x != nil {
		return x.SpuRanges
	}
	return nil
}

type IntegralConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg            string          `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg"`
	IntegralConfig *IntegralConfig `protobuf:"bytes,2,opt,name=integralConfig,proto3" json:"integralConfig"`
}

func (x *IntegralConfigResponse) Reset() {
	*x = IntegralConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_integralConfigService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntegralConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntegralConfigResponse) ProtoMessage() {}

func (x *IntegralConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_integralConfigService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntegralConfigResponse.ProtoReflect.Descriptor instead.
func (*IntegralConfigResponse) Descriptor() ([]byte, []int) {
	return file_integralConfigService_proto_rawDescGZIP(), []int{2}
}

func (x *IntegralConfigResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *IntegralConfigResponse) GetIntegralConfig() *IntegralConfig {
	if x != nil {
		return x.IntegralConfig
	}
	return nil
}

var File_integralConfigService_proto protoreflect.FileDescriptor

var file_integralConfigService_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x15, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa9,
	0x05, 0x0a, 0x0e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x50,
	0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x74,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x79, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x61, 0x79, 0x73, 0x12,
	0x1f, 0x0a, 0x0b, 0x67, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x69, 0x76, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x2b, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x6d, 0x61, 0x78,
	0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73,
	0x44, 0x61, 0x69, 0x6c, 0x79, 0x4d, 0x61, 0x78, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x26, 0x0a,
	0x0f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x4d, 0x61, 0x78,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x64, 0x65, 0x64,
	0x75, 0x63, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x64,
	0x65, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x69, 0x73, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x3d,
	0x0a, 0x0b, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x72, 0x75, 0x6c, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x52, 0x75, 0x6c,
	0x65, 0x52, 0x0a, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6c, 0x65, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x10,
	0x65, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x79, 0x65, 0x61, 0x72, 0x5f, 0x63, 0x6c, 0x65, 0x61, 0x72,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x65, 0x76, 0x65, 0x72, 0x79, 0x59, 0x65, 0x61,
	0x72, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x65, 0x76, 0x65, 0x72, 0x79, 0x5f,
	0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x5f, 0x63, 0x6c, 0x65, 0x61, 0x72, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0f, 0x65, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x43, 0x6c, 0x65,
	0x61, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x79, 0x5f,
	0x63, 0x6c, 0x65, 0x61, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x65, 0x76, 0x65,
	0x72, 0x79, 0x44, 0x61, 0x79, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x12, 0x30, 0x0a, 0x14, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x73, 0x70, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x12, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x53,
	0x70, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x15,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x65, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x45, 0x61, 0x72, 0x6e, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c,
	0x12, 0x38, 0x0a, 0x18, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x16, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x63, 0x74,
	0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x22, 0xd7, 0x02, 0x0a, 0x12, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x52, 0x75, 0x6c,
	0x65, 0x12, 0x2e, 0x0a, 0x13, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x12, 0x35, 0x0a, 0x17, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x14, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x56, 0x61, 0x6c, 0x12, 0x34, 0x0a, 0x16, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x12, 0x28,
	0x0a, 0x10, 0x6d, 0x69, 0x6e, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6d, 0x69, 0x6e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x70, 0x75, 0x5f,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x73, 0x70, 0x75, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22,
	0x0a, 0x0d, 0x73, 0x70, 0x75, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x70, 0x75, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x49,
	0x64, 0x73, 0x12, 0x30, 0x0a, 0x0a, 0x73, 0x70, 0x75, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x53, 0x70, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x73, 0x70, 0x75, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x73, 0x22, 0x6c, 0x0a, 0x16, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x40, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x32, 0xa2, 0x01, 0x0a, 0x15, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a, 0x03,
	0x47, 0x65, 0x74, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x20, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x44, 0x0a, 0x04, 0x53, 0x61, 0x76, 0x65, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_integralConfigService_proto_rawDescOnce sync.Once
	file_integralConfigService_proto_rawDescData = file_integralConfigService_proto_rawDesc
)

func file_integralConfigService_proto_rawDescGZIP() []byte {
	file_integralConfigService_proto_rawDescOnce.Do(func() {
		file_integralConfigService_proto_rawDescData = protoimpl.X.CompressGZIP(file_integralConfigService_proto_rawDescData)
	})
	return file_integralConfigService_proto_rawDescData
}

var file_integralConfigService_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_integralConfigService_proto_goTypes = []interface{}{
	(*IntegralConfig)(nil),         // 0: services.IntegralConfig
	(*IntegralDeductRule)(nil),     // 1: services.IntegralDeductRule
	(*IntegralConfigResponse)(nil), // 2: services.IntegralConfigResponse
	(*SpuInfo)(nil),                // 3: services.SpuInfo
}
var file_integralConfigService_proto_depIdxs = []int32{
	1, // 0: services.IntegralConfig.deduct_rule:type_name -> services.IntegralDeductRule
	3, // 1: services.IntegralDeductRule.spu_ranges:type_name -> services.SpuInfo
	0, // 2: services.IntegralConfigResponse.integralConfig:type_name -> services.IntegralConfig
	0, // 3: services.IntegralConfigService.Get:input_type -> services.IntegralConfig
	0, // 4: services.IntegralConfigService.Save:input_type -> services.IntegralConfig
	2, // 5: services.IntegralConfigService.Get:output_type -> services.IntegralConfigResponse
	2, // 6: services.IntegralConfigService.Save:output_type -> services.IntegralConfigResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_integralConfigService_proto_init() }
func file_integralConfigService_proto_init() {
	if File_integralConfigService_proto != nil {
		return
	}
	file_baseInfoService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_integralConfigService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegralConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integralConfigService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegralDeductRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_integralConfigService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntegralConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_integralConfigService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_integralConfigService_proto_goTypes,
		DependencyIndexes: file_integralConfigService_proto_depIdxs,
		MessageInfos:      file_integralConfigService_proto_msgTypes,
	}.Build()
	File_integralConfigService_proto = out.File
	file_integralConfigService_proto_rawDesc = nil
	file_integralConfigService_proto_goTypes = nil
	file_integralConfigService_proto_depIdxs = nil
}
