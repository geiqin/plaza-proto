// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: siteConfigService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SiteConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base   *SiteBaseConfig   `protobuf:"bytes,1,opt,name=base,proto3" json:"base"`
	State  *SiteStateConfig  `protobuf:"bytes,2,opt,name=state,proto3" json:"state"`
	Domain *SiteDomainConfig `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain"`
	Beian  *SiteBeianConfig  `protobuf:"bytes,4,opt,name=beian,proto3" json:"beian"`
}

func (x *SiteConfig) Reset() {
	*x = SiteConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_siteConfigService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteConfig) ProtoMessage() {}

func (x *SiteConfig) ProtoReflect() protoreflect.Message {
	mi := &file_siteConfigService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteConfig.ProtoReflect.Descriptor instead.
func (*SiteConfig) Descriptor() ([]byte, []int) {
	return file_siteConfigService_proto_rawDescGZIP(), []int{0}
}

func (x *SiteConfig) GetBase() *SiteBaseConfig {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *SiteConfig) GetState() *SiteStateConfig {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *SiteConfig) GetDomain() *SiteDomainConfig {
	if x != nil {
		return x.Domain
	}
	return nil
}

func (x *SiteConfig) GetBeian() *SiteBeianConfig {
	if x != nil {
		return x.Beian
	}
	return nil
}

//基础设置
type SiteBaseConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonTimezone       string `protobuf:"bytes,1,opt,name=common_timezone,json=commonTimezone,proto3" json:"common_timezone"`                         //默认时区默认,亚洲/上海 [标准时+8]
	HomeSiteName         string `protobuf:"bytes,2,opt,name=home_site_name,json=homeSiteName,proto3" json:"home_site_name"`                             //站点名称
	HomeSiteLogo         string `protobuf:"bytes,3,opt,name=home_site_logo,json=homeSiteLogo,proto3" json:"home_site_logo"`                             //电脑端logo支持 [jpg, png, gif]，建议220x60px
	HomeSiteLogoWap      string `protobuf:"bytes,4,opt,name=home_site_logo_wap,json=homeSiteLogoWap,proto3" json:"home_site_logo_wap"`                  //手机端logo支持 [jpg, png, gif]，建议220x66px
	HomeSiteLogoSquare   string `protobuf:"bytes,5,opt,name=home_site_logo_square,json=homeSiteLogoSquare,proto3" json:"home_site_logo_square"`         //正方形logo建议使用png格式，建议300x300px
	HomeSiteState        string `protobuf:"bytes,6,opt,name=home_site_state,json=homeSiteState,proto3" json:"home_site_state"`                          //站点状态可暂时将站点关闭，其他人无法访问，但不影响管理员访问后台
	HomeSiteWebHomeState string `protobuf:"bytes,7,opt,name=home_site_web_home_state,json=homeSiteWebHomeState,proto3" json:"home_site_web_home_state"` //web端首页访问默认开启，仅针对web端首页，其他页面不受影响
	HomeSiteWebPcState   string `protobuf:"bytes,8,opt,name=home_site_web_pc_state,json=homeSiteWebPcState,proto3" json:"home_site_web_pc_state"`       //web端PC访问默认开启，仅针对web端PC
	HomeSiteCloseReason  string `protobuf:"bytes,9,opt,name=home_site_close_reason,json=homeSiteCloseReason,proto3" json:"home_site_close_reason"`      //关闭原因支持html，当网站处于关闭状态时，关闭原因将显示在前台
}

func (x *SiteBaseConfig) Reset() {
	*x = SiteBaseConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_siteConfigService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteBaseConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteBaseConfig) ProtoMessage() {}

func (x *SiteBaseConfig) ProtoReflect() protoreflect.Message {
	mi := &file_siteConfigService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteBaseConfig.ProtoReflect.Descriptor instead.
func (*SiteBaseConfig) Descriptor() ([]byte, []int) {
	return file_siteConfigService_proto_rawDescGZIP(), []int{1}
}

func (x *SiteBaseConfig) GetCommonTimezone() string {
	if x != nil {
		return x.CommonTimezone
	}
	return ""
}

func (x *SiteBaseConfig) GetHomeSiteName() string {
	if x != nil {
		return x.HomeSiteName
	}
	return ""
}

func (x *SiteBaseConfig) GetHomeSiteLogo() string {
	if x != nil {
		return x.HomeSiteLogo
	}
	return ""
}

func (x *SiteBaseConfig) GetHomeSiteLogoWap() string {
	if x != nil {
		return x.HomeSiteLogoWap
	}
	return ""
}

func (x *SiteBaseConfig) GetHomeSiteLogoSquare() string {
	if x != nil {
		return x.HomeSiteLogoSquare
	}
	return ""
}

func (x *SiteBaseConfig) GetHomeSiteState() string {
	if x != nil {
		return x.HomeSiteState
	}
	return ""
}

func (x *SiteBaseConfig) GetHomeSiteWebHomeState() string {
	if x != nil {
		return x.HomeSiteWebHomeState
	}
	return ""
}

func (x *SiteBaseConfig) GetHomeSiteWebPcState() string {
	if x != nil {
		return x.HomeSiteWebPcState
	}
	return ""
}

func (x *SiteBaseConfig) GetHomeSiteCloseReason() string {
	if x != nil {
		return x.HomeSiteCloseReason
	}
	return ""
}

//站点状态(1-开启，2-关闭)
type SiteStateConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HomeSiteState        string `protobuf:"bytes,1,opt,name=home_site_state,json=homeSiteState,proto3" json:"home_site_state"`                          //站点状态;可暂时将站点关闭，其他人无法访问，但不影响管理员访问后台
	HomeSiteWebHomeState string `protobuf:"bytes,2,opt,name=home_site_web_home_state,json=homeSiteWebHomeState,proto3" json:"home_site_web_home_state"` //web端首页访问;默认开启，仅针对web端首页，其他页面不受影响
	HomeSiteWebPcState   string `protobuf:"bytes,3,opt,name=home_site_web_pc_state,json=homeSiteWebPcState,proto3" json:"home_site_web_pc_state"`       //web端PC访问;默认开启，仅针对web端PC
	HomeSiteCloseReason  string `protobuf:"bytes,4,opt,name=home_site_close_reason,json=homeSiteCloseReason,proto3" json:"home_site_close_reason"`      //关闭原因;支持html，当网站处于关闭状态时，关闭原因将显示在前台
}

func (x *SiteStateConfig) Reset() {
	*x = SiteStateConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_siteConfigService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteStateConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteStateConfig) ProtoMessage() {}

func (x *SiteStateConfig) ProtoReflect() protoreflect.Message {
	mi := &file_siteConfigService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteStateConfig.ProtoReflect.Descriptor instead.
func (*SiteStateConfig) Descriptor() ([]byte, []int) {
	return file_siteConfigService_proto_rawDescGZIP(), []int{2}
}

func (x *SiteStateConfig) GetHomeSiteState() string {
	if x != nil {
		return x.HomeSiteState
	}
	return ""
}

func (x *SiteStateConfig) GetHomeSiteWebHomeState() string {
	if x != nil {
		return x.HomeSiteWebHomeState
	}
	return ""
}

func (x *SiteStateConfig) GetHomeSiteWebPcState() string {
	if x != nil {
		return x.HomeSiteWebPcState
	}
	return ""
}

func (x *SiteStateConfig) GetHomeSiteCloseReason() string {
	if x != nil {
		return x.HomeSiteCloseReason
	}
	return ""
}

//站点域名地址
type SiteDomainConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonDomainHost        string `protobuf:"bytes,1,opt,name=common_domain_host,json=commonDomainHost,proto3" json:"common_domain_host"`                        //主域名,站点地址
	CommonCdnAttachmentHost string `protobuf:"bytes,2,opt,name=common_cdn_attachment_host,json=commonCdnAttachmentHost,proto3" json:"common_cdn_attachment_host"` //附件cdn域名图片/视频/文件
	CommonCdnPublicHost     string `protobuf:"bytes,3,opt,name=common_cdn_public_host,json=commonCdnPublicHost,proto3" json:"common_cdn_public_host"`             //css/js静态文件cdn域名
}

func (x *SiteDomainConfig) Reset() {
	*x = SiteDomainConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_siteConfigService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteDomainConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteDomainConfig) ProtoMessage() {}

func (x *SiteDomainConfig) ProtoReflect() protoreflect.Message {
	mi := &file_siteConfigService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteDomainConfig.ProtoReflect.Descriptor instead.
func (*SiteDomainConfig) Descriptor() ([]byte, []int) {
	return file_siteConfigService_proto_rawDescGZIP(), []int{3}
}

func (x *SiteDomainConfig) GetCommonDomainHost() string {
	if x != nil {
		return x.CommonDomainHost
	}
	return ""
}

func (x *SiteDomainConfig) GetCommonCdnAttachmentHost() string {
	if x != nil {
		return x.CommonCdnAttachmentHost
	}
	return ""
}

func (x *SiteDomainConfig) GetCommonCdnPublicHost() string {
	if x != nil {
		return x.CommonCdnPublicHost
	}
	return ""
}

//备案信息
type SiteBeianConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HomeSiteIcp                string `protobuf:"bytes,1,opt,name=home_site_icp,json=homeSiteIcp,proto3" json:"home_site_icp"`                                                  //ICP域名备案号
	HomeSiteSecurityRecordName string `protobuf:"bytes,2,opt,name=home_site_security_record_name,json=homeSiteSecurityRecordName,proto3" json:"home_site_security_record_name"` //公安备案号如：京公网安备xxx号
	HomeSiteSecurityRecordUrl  string `protobuf:"bytes,3,opt,name=home_site_security_record_url,json=homeSiteSecurityRecordUrl,proto3" json:"home_site_security_record_url"`    //公安备案地址备案,展示页面的url地址
	HomeSiteTelecomLicense     string `protobuf:"bytes,4,opt,name=home_site_telecom_license,json=homeSiteTelecomLicense,proto3" json:"home_site_telecom_license"`               //增值电信业务经营许可证,如：沪B2-xxx
	HomeSiteCompanyLicense     string `protobuf:"bytes,5,opt,name=home_site_company_license,json=homeSiteCompanyLicense,proto3" json:"home_site_company_license"`               //电子营业执照亮照(执照页面展示地址、申请地址：https://zzlz.gsxt.gov.cn/businessShow)
}

func (x *SiteBeianConfig) Reset() {
	*x = SiteBeianConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_siteConfigService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteBeianConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteBeianConfig) ProtoMessage() {}

func (x *SiteBeianConfig) ProtoReflect() protoreflect.Message {
	mi := &file_siteConfigService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteBeianConfig.ProtoReflect.Descriptor instead.
func (*SiteBeianConfig) Descriptor() ([]byte, []int) {
	return file_siteConfigService_proto_rawDescGZIP(), []int{4}
}

func (x *SiteBeianConfig) GetHomeSiteIcp() string {
	if x != nil {
		return x.HomeSiteIcp
	}
	return ""
}

func (x *SiteBeianConfig) GetHomeSiteSecurityRecordName() string {
	if x != nil {
		return x.HomeSiteSecurityRecordName
	}
	return ""
}

func (x *SiteBeianConfig) GetHomeSiteSecurityRecordUrl() string {
	if x != nil {
		return x.HomeSiteSecurityRecordUrl
	}
	return ""
}

func (x *SiteBeianConfig) GetHomeSiteTelecomLicense() string {
	if x != nil {
		return x.HomeSiteTelecomLicense
	}
	return ""
}

func (x *SiteBeianConfig) GetHomeSiteCompanyLicense() string {
	if x != nil {
		return x.HomeSiteCompanyLicense
	}
	return ""
}

type SiteConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *SiteConfig   `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *SiteConfigResponse) Reset() {
	*x = SiteConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_siteConfigService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteConfigResponse) ProtoMessage() {}

func (x *SiteConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_siteConfigService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteConfigResponse.ProtoReflect.Descriptor instead.
func (*SiteConfigResponse) Descriptor() ([]byte, []int) {
	return file_siteConfigService_proto_rawDescGZIP(), []int{5}
}

func (x *SiteConfigResponse) GetData() *SiteConfig {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SiteConfigResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_siteConfigService_proto protoreflect.FileDescriptor

var file_siteConfigService_proto_rawDesc = []byte{
	0x0a, 0x17, 0x73, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd0, 0x01, 0x0a, 0x0a, 0x53, 0x69, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2c, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53,
	0x69, 0x74, 0x65, 0x42, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x62,
	0x61, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x69,
	0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x53, 0x69, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x06, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x2f, 0x0a, 0x05, 0x62, 0x65, 0x69, 0x61,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x42, 0x65, 0x69, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x05, 0x62, 0x65, 0x69, 0x61, 0x6e, 0x22, 0xae, 0x03, 0x0a, 0x0e, 0x53, 0x69,
	0x74, 0x65, 0x42, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x27, 0x0a, 0x0f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x69,
	0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68,
	0x6f, 0x6d, 0x65, 0x53, 0x69, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x68,
	0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x69, 0x74, 0x65, 0x4c, 0x6f, 0x67,
	0x6f, 0x12, 0x2b, 0x0a, 0x12, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6c,
	0x6f, 0x67, 0x6f, 0x5f, 0x77, 0x61, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x68,
	0x6f, 0x6d, 0x65, 0x53, 0x69, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x57, 0x61, 0x70, 0x12, 0x31,
	0x0a, 0x15, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x6f,
	0x5f, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x68,
	0x6f, 0x6d, 0x65, 0x53, 0x69, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x53, 0x71, 0x75, 0x61, 0x72,
	0x65, 0x12, 0x26, 0x0a, 0x0f, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x68, 0x6f, 0x6d, 0x65,
	0x53, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x18, 0x68, 0x6f, 0x6d,
	0x65, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x77, 0x65, 0x62, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x68, 0x6f, 0x6d,
	0x65, 0x53, 0x69, 0x74, 0x65, 0x57, 0x65, 0x62, 0x48, 0x6f, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x32, 0x0a, 0x16, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x77,
	0x65, 0x62, 0x5f, 0x70, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x69, 0x74, 0x65, 0x57, 0x65, 0x62, 0x50, 0x63,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x69,
	0x74, 0x65, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x69, 0x74, 0x65, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xda, 0x01, 0x0a, 0x0f, 0x53,
	0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x26,
	0x0a, 0x0f, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x69, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x18, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73,
	0x69, 0x74, 0x65, 0x5f, 0x77, 0x65, 0x62, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x69,
	0x74, 0x65, 0x57, 0x65, 0x62, 0x48, 0x6f, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x32,
	0x0a, 0x16, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x77, 0x65, 0x62, 0x5f,
	0x70, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x68, 0x6f, 0x6d, 0x65, 0x53, 0x69, 0x74, 0x65, 0x57, 0x65, 0x62, 0x50, 0x63, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x69, 0x74, 0x65, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xb2, 0x01, 0x0a, 0x10, 0x53, 0x69, 0x74, 0x65,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2c, 0x0a, 0x12,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x68, 0x6f,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x1a, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x63, 0x64, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x64, 0x6e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x5f, 0x63, 0x64, 0x6e, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43,
	0x64, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x48, 0x6f, 0x73, 0x74, 0x22, 0xb1, 0x02, 0x0a,
	0x0f, 0x53, 0x69, 0x74, 0x65, 0x42, 0x65, 0x69, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x22, 0x0a, 0x0d, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x63,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x69, 0x74,
	0x65, 0x49, 0x63, 0x70, 0x12, 0x42, 0x0a, 0x1e, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x69, 0x74,
	0x65, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72,
	0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x68, 0x6f,
	0x6d, 0x65, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x1d, 0x68, 0x6f, 0x6d, 0x65,
	0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x72,
	0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x19, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x39, 0x0a, 0x19, 0x68, 0x6f,
	0x6d, 0x65, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x5f,
	0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x68,
	0x6f, 0x6d, 0x65, 0x53, 0x69, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x63, 0x6f, 0x6d, 0x4c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x19, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x69,
	0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x69,
	0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x22, 0x63, 0x0a, 0x12, 0x53, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x53, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0x8d, 0x01, 0x0a, 0x11, 0x53, 0x69, 0x74, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3b, 0x0a, 0x03, 0x53,
	0x65, 0x74, 0x12, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x69,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12,
	0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x53, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_siteConfigService_proto_rawDescOnce sync.Once
	file_siteConfigService_proto_rawDescData = file_siteConfigService_proto_rawDesc
)

func file_siteConfigService_proto_rawDescGZIP() []byte {
	file_siteConfigService_proto_rawDescOnce.Do(func() {
		file_siteConfigService_proto_rawDescData = protoimpl.X.CompressGZIP(file_siteConfigService_proto_rawDescData)
	})
	return file_siteConfigService_proto_rawDescData
}

var file_siteConfigService_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_siteConfigService_proto_goTypes = []interface{}{
	(*SiteConfig)(nil),         // 0: services.SiteConfig
	(*SiteBaseConfig)(nil),     // 1: services.SiteBaseConfig
	(*SiteStateConfig)(nil),    // 2: services.SiteStateConfig
	(*SiteDomainConfig)(nil),   // 3: services.SiteDomainConfig
	(*SiteBeianConfig)(nil),    // 4: services.SiteBeianConfig
	(*SiteConfigResponse)(nil), // 5: services.SiteConfigResponse
	(*common.Error)(nil),       // 6: common.Error
}
var file_siteConfigService_proto_depIdxs = []int32{
	1, // 0: services.SiteConfig.base:type_name -> services.SiteBaseConfig
	2, // 1: services.SiteConfig.state:type_name -> services.SiteStateConfig
	3, // 2: services.SiteConfig.domain:type_name -> services.SiteDomainConfig
	4, // 3: services.SiteConfig.beian:type_name -> services.SiteBeianConfig
	0, // 4: services.SiteConfigResponse.data:type_name -> services.SiteConfig
	6, // 5: services.SiteConfigResponse.error:type_name -> common.Error
	0, // 6: services.SiteConfigService.Set:input_type -> services.SiteConfig
	0, // 7: services.SiteConfigService.Get:input_type -> services.SiteConfig
	5, // 8: services.SiteConfigService.Set:output_type -> services.SiteConfigResponse
	5, // 9: services.SiteConfigService.Get:output_type -> services.SiteConfigResponse
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_siteConfigService_proto_init() }
func file_siteConfigService_proto_init() {
	if File_siteConfigService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_siteConfigService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_siteConfigService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteBaseConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_siteConfigService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteStateConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_siteConfigService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteDomainConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_siteConfigService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteBeianConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_siteConfigService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_siteConfigService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_siteConfigService_proto_goTypes,
		DependencyIndexes: file_siteConfigService_proto_depIdxs,
		MessageInfos:      file_siteConfigService_proto_msgTypes,
	}.Build()
	File_siteConfigService_proto = out.File
	file_siteConfigService_proto_rawDesc = nil
	file_siteConfigService_proto_goTypes = nil
	file_siteConfigService_proto_depIdxs = nil
}
