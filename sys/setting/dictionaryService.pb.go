// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: dictionaryService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 字典信息(兼容字典和常量数据)
type DictInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text    string `protobuf:"bytes,1,opt,name=text,proto3" json:"text"`
	Value   string `protobuf:"bytes,2,opt,name=value,proto3" json:"value"`
	Icon    string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon"`
	Class   string `protobuf:"bytes,4,opt,name=class,proto3" json:"class"`
	Color   string `protobuf:"bytes,5,opt,name=color,proto3" json:"color"`
	Flag    string `protobuf:"bytes,6,opt,name=flag,proto3" json:"flag"`
	Desc    string `protobuf:"bytes,7,opt,name=desc,proto3" json:"desc"`
	Checked bool   `protobuf:"varint,8,opt,name=checked,proto3" json:"checked"`
}

func (x *DictInfo) Reset() {
	*x = DictInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictionaryService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictInfo) ProtoMessage() {}

func (x *DictInfo) ProtoReflect() protoreflect.Message {
	mi := &file_dictionaryService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictInfo.ProtoReflect.Descriptor instead.
func (*DictInfo) Descriptor() ([]byte, []int) {
	return file_dictionaryService_proto_rawDescGZIP(), []int{0}
}

func (x *DictInfo) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *DictInfo) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *DictInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *DictInfo) GetClass() string {
	if x != nil {
		return x.Class
	}
	return ""
}

func (x *DictInfo) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *DictInfo) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

func (x *DictInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *DictInfo) GetChecked() bool {
	if x != nil {
		return x.Checked
	}
	return false
}

type DictData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code   string      `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`
	Name   string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Values []*DictInfo `protobuf:"bytes,3,rep,name=values,proto3" json:"values"`
}

func (x *DictData) Reset() {
	*x = DictData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictionaryService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictData) ProtoMessage() {}

func (x *DictData) ProtoReflect() protoreflect.Message {
	mi := &file_dictionaryService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictData.ProtoReflect.Descriptor instead.
func (*DictData) Descriptor() ([]byte, []int) {
	return file_dictionaryService_proto_rawDescGZIP(), []int{1}
}

func (x *DictData) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DictData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DictData) GetValues() []*DictInfo {
	if x != nil {
		return x.Values
	}
	return nil
}

type DictRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConstKeys []string `protobuf:"bytes,1,rep,name=const_keys,json=constKeys,proto3" json:"const_keys"` //常量键名
	DictKeys  []string `protobuf:"bytes,2,rep,name=dict_keys,json=dictKeys,proto3" json:"dict_keys"`    //字典键名
	Keys      []string `protobuf:"bytes,3,rep,name=keys,proto3" json:"keys"`                            //混合键名（常量+字典）
}

func (x *DictRequest) Reset() {
	*x = DictRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictionaryService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictRequest) ProtoMessage() {}

func (x *DictRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictionaryService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictRequest.ProtoReflect.Descriptor instead.
func (*DictRequest) Descriptor() ([]byte, []int) {
	return file_dictionaryService_proto_rawDescGZIP(), []int{2}
}

func (x *DictRequest) GetConstKeys() []string {
	if x != nil {
		return x.ConstKeys
	}
	return nil
}

func (x *DictRequest) GetDictKeys() []string {
	if x != nil {
		return x.DictKeys
	}
	return nil
}

func (x *DictRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type DictionaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged       int64    `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize    int64    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Id          int64    `protobuf:"varint,3,opt,name=id,proto3" json:"id"`
	Keywords    string   `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords"`
	Code        string   `protobuf:"bytes,5,opt,name=code,proto3" json:"code"`
	Name        string   `protobuf:"bytes,6,opt,name=name,proto3" json:"name"`
	IsCanUpdate string   `protobuf:"bytes,7,opt,name=is_can_update,json=isCanUpdate,proto3" json:"is_can_update"`
	Source      string   `protobuf:"bytes,8,opt,name=source,proto3" json:"source"`
	Codes       []string `protobuf:"bytes,9,rep,name=codes,proto3" json:"codes"`
	Ids         []int64  `protobuf:"varint,10,rep,packed,name=ids,proto3" json:"ids"`
}

func (x *DictionaryRequest) Reset() {
	*x = DictionaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictionaryService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictionaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictionaryRequest) ProtoMessage() {}

func (x *DictionaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_dictionaryService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictionaryRequest.ProtoReflect.Descriptor instead.
func (*DictionaryRequest) Descriptor() ([]byte, []int) {
	return file_dictionaryService_proto_rawDescGZIP(), []int{3}
}

func (x *DictionaryRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *DictionaryRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *DictionaryRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DictionaryRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *DictionaryRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *DictionaryRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DictionaryRequest) GetIsCanUpdate() string {
	if x != nil {
		return x.IsCanUpdate
	}
	return ""
}

func (x *DictionaryRequest) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *DictionaryRequest) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

func (x *DictionaryRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 字段类型
type Dictionary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64              `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                       //ID
	Code        string             `protobuf:"bytes,2,opt,name=code,proto3" json:"code"`                                    //类型编码
	Name        string             `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`                                    //类型名称
	IsCanUpdate string             `protobuf:"bytes,4,opt,name=is_can_update,json=isCanUpdate,proto3" json:"is_can_update"` //是否允许修改（0否, 1是）
	IsCanDelete string             `protobuf:"bytes,5,opt,name=is_can_delete,json=isCanDelete,proto3" json:"is_can_delete"` //是否允许删除（0否，1是）
	IsCanCreate string             `protobuf:"bytes,6,opt,name=is_can_create,json=isCanCreate,proto3" json:"is_can_create"` //是否允许创建（0否，1是）
	Source      string             `protobuf:"bytes,7,opt,name=source,proto3" json:"source"`                                //来源：0 系统预设，1 商家创建
	Desc        string             `protobuf:"bytes,8,opt,name=desc,proto3" json:"desc"`                                    //简单描述
	CreatedAt   string             `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt   string             `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	Values      []*DictionaryValue `protobuf:"bytes,11,rep,name=values,proto3" json:"values"`
	SourceName  string             `protobuf:"bytes,12,opt,name=source_name,json=sourceName,proto3" json:"source_name"` //来源名称
}

func (x *Dictionary) Reset() {
	*x = Dictionary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictionaryService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dictionary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dictionary) ProtoMessage() {}

func (x *Dictionary) ProtoReflect() protoreflect.Message {
	mi := &file_dictionaryService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dictionary.ProtoReflect.Descriptor instead.
func (*Dictionary) Descriptor() ([]byte, []int) {
	return file_dictionaryService_proto_rawDescGZIP(), []int{4}
}

func (x *Dictionary) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Dictionary) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Dictionary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Dictionary) GetIsCanUpdate() string {
	if x != nil {
		return x.IsCanUpdate
	}
	return ""
}

func (x *Dictionary) GetIsCanDelete() string {
	if x != nil {
		return x.IsCanDelete
	}
	return ""
}

func (x *Dictionary) GetIsCanCreate() string {
	if x != nil {
		return x.IsCanCreate
	}
	return ""
}

func (x *Dictionary) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Dictionary) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *Dictionary) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Dictionary) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Dictionary) GetValues() []*DictionaryValue {
	if x != nil {
		return x.Values
	}
	return nil
}

func (x *Dictionary) GetSourceName() string {
	if x != nil {
		return x.SourceName
	}
	return ""
}

type DictionaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity   *Dictionary   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager    *common.Pager `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items    []*Dictionary `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	DictData []*DictData   `protobuf:"bytes,4,rep,name=dict_data,json=dictData,proto3" json:"dict_data"`
	Info     string        `protobuf:"bytes,6,opt,name=info,proto3" json:"info"`
}

func (x *DictionaryResponse) Reset() {
	*x = DictionaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_dictionaryService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DictionaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DictionaryResponse) ProtoMessage() {}

func (x *DictionaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_dictionaryService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DictionaryResponse.ProtoReflect.Descriptor instead.
func (*DictionaryResponse) Descriptor() ([]byte, []int) {
	return file_dictionaryService_proto_rawDescGZIP(), []int{5}
}

func (x *DictionaryResponse) GetEntity() *Dictionary {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *DictionaryResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *DictionaryResponse) GetItems() []*Dictionary {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *DictionaryResponse) GetDictData() []*DictData {
	if x != nil {
		return x.DictData
	}
	return nil
}

func (x *DictionaryResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

var File_dictionaryService_proto protoreflect.FileDescriptor

var file_dictionaryService_proto_rawDesc = []byte{
	0x0a, 0x17, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x64, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x79, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xb6, 0x01, 0x0a, 0x08, 0x44, 0x69, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x6c, 0x61, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x6c,
	0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x6c, 0x61, 0x67, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x22, 0x5e, 0x0a, 0x08,
	0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x2a, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x63, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x5d, 0x0a, 0x0b,
	0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x6f, 0x6e, 0x73, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x69,
	0x63, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x64,
	0x69, 0x63, 0x74, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0xfe, 0x01, 0x0a, 0x11,
	0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x63,
	0x61, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x69, 0x73, 0x43, 0x61, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0xee, 0x02, 0x0a,
	0x0a, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x63, 0x61, 0x6e, 0x5f, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x61,
	0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x63, 0x61,
	0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x69, 0x73, 0x43, 0x61, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x69,
	0x73, 0x5f, 0x63, 0x61, 0x6e, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x61, 0x6e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xd8, 0x01,
	0x0a, 0x12, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72,
	0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x2f, 0x0a, 0x09, 0x64, 0x69, 0x63, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x64, 0x69, 0x63, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x32, 0xe9, 0x03, 0x0a, 0x11, 0x44, 0x69, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3e,
	0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x1a, 0x1c,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e,
	0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x1a, 0x1c,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45,
	0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x1b, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x06, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44,
	0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x43, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x04, 0x44, 0x69, 0x63, 0x74, 0x12, 0x15, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x44, 0x69, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dictionaryService_proto_rawDescOnce sync.Once
	file_dictionaryService_proto_rawDescData = file_dictionaryService_proto_rawDesc
)

func file_dictionaryService_proto_rawDescGZIP() []byte {
	file_dictionaryService_proto_rawDescOnce.Do(func() {
		file_dictionaryService_proto_rawDescData = protoimpl.X.CompressGZIP(file_dictionaryService_proto_rawDescData)
	})
	return file_dictionaryService_proto_rawDescData
}

var file_dictionaryService_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_dictionaryService_proto_goTypes = []interface{}{
	(*DictInfo)(nil),           // 0: services.DictInfo
	(*DictData)(nil),           // 1: services.DictData
	(*DictRequest)(nil),        // 2: services.DictRequest
	(*DictionaryRequest)(nil),  // 3: services.DictionaryRequest
	(*Dictionary)(nil),         // 4: services.Dictionary
	(*DictionaryResponse)(nil), // 5: services.DictionaryResponse
	(*DictionaryValue)(nil),    // 6: services.DictionaryValue
	(*common.Pager)(nil),       // 7: common.Pager
}
var file_dictionaryService_proto_depIdxs = []int32{
	0,  // 0: services.DictData.values:type_name -> services.DictInfo
	6,  // 1: services.Dictionary.values:type_name -> services.DictionaryValue
	4,  // 2: services.DictionaryResponse.entity:type_name -> services.Dictionary
	7,  // 3: services.DictionaryResponse.pager:type_name -> common.Pager
	4,  // 4: services.DictionaryResponse.items:type_name -> services.Dictionary
	1,  // 5: services.DictionaryResponse.dict_data:type_name -> services.DictData
	4,  // 6: services.DictionaryService.Create:input_type -> services.Dictionary
	4,  // 7: services.DictionaryService.Update:input_type -> services.Dictionary
	3,  // 8: services.DictionaryService.Delete:input_type -> services.DictionaryRequest
	3,  // 9: services.DictionaryService.Get:input_type -> services.DictionaryRequest
	3,  // 10: services.DictionaryService.Search:input_type -> services.DictionaryRequest
	3,  // 11: services.DictionaryService.List:input_type -> services.DictionaryRequest
	2,  // 12: services.DictionaryService.Dict:input_type -> services.DictRequest
	5,  // 13: services.DictionaryService.Create:output_type -> services.DictionaryResponse
	5,  // 14: services.DictionaryService.Update:output_type -> services.DictionaryResponse
	5,  // 15: services.DictionaryService.Delete:output_type -> services.DictionaryResponse
	5,  // 16: services.DictionaryService.Get:output_type -> services.DictionaryResponse
	5,  // 17: services.DictionaryService.Search:output_type -> services.DictionaryResponse
	5,  // 18: services.DictionaryService.List:output_type -> services.DictionaryResponse
	5,  // 19: services.DictionaryService.Dict:output_type -> services.DictionaryResponse
	13, // [13:20] is the sub-list for method output_type
	6,  // [6:13] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_dictionaryService_proto_init() }
func file_dictionaryService_proto_init() {
	if File_dictionaryService_proto != nil {
		return
	}
	file_dictionayValueService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_dictionaryService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictionaryService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictionaryService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictionaryService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictionaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictionaryService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dictionary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_dictionaryService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DictionaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dictionaryService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_dictionaryService_proto_goTypes,
		DependencyIndexes: file_dictionaryService_proto_depIdxs,
		MessageInfos:      file_dictionaryService_proto_msgTypes,
	}.Build()
	File_dictionaryService_proto = out.File
	file_dictionaryService_proto_rawDesc = nil
	file_dictionaryService_proto_goTypes = nil
	file_dictionaryService_proto_depIdxs = nil
}
