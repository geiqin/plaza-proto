// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: configService.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 通用配置
type CommonConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//基础设置
	Timezone string `protobuf:"bytes,100,opt,name=timezone,proto3" json:"timezone"` //默认时区默认,亚洲/上海 [标准时+8]
	Locale   string `protobuf:"bytes,101,opt,name=locale,proto3" json:"locale"`     //使用语言：默认:zh-CN
	//店铺设置
	SiteState               string `protobuf:"bytes,200,opt,name=site_state,json=siteState,proto3" json:"site_state"`                                               //站点状态（经营状态）
	SiteName                string `protobuf:"bytes,201,opt,name=site_name,json=siteName,proto3" json:"site_name"`                                                  //站点名称
	SiteDescription         string `protobuf:"bytes,202,opt,name=site_description,json=siteDescription,proto3" json:"site_description"`                             //店铺简介
	SiteServicePhone        string `protobuf:"bytes,203,opt,name=site_service_phone,json=siteServicePhone,proto3" json:"site_service_phone"`                        //客服电话
	SiteLogo                string `protobuf:"bytes,206,opt,name=site_logo,json=siteLogo,proto3" json:"site_logo"`                                                  //电脑端logo支持 [jpg, png, gif]，建议220x60px
	SiteLogoWap             string `protobuf:"bytes,207,opt,name=site_logo_wap,json=siteLogoWap,proto3" json:"site_logo_wap"`                                       //手机端logo支持 [jpg, png, gif]，建议220x66px
	SiteLogoSquare          string `protobuf:"bytes,208,opt,name=site_logo_square,json=siteLogoSquare,proto3" json:"site_logo_square"`                              //正方形logo建议使用png格式，建议300x300px
	BeianIcpNo              string `protobuf:"bytes,250,opt,name=beian_icp_no,json=beianIcpNo,proto3" json:"beian_icp_no"`                                          //备案号
	BeianIcpUrl             string `protobuf:"bytes,251,opt,name=beian_icp_url,json=beianIcpUrl,proto3" json:"beian_icp_url"`                                       //ICP备案链接
	BeianNetworkSecurity    string `protobuf:"bytes,252,opt,name=beian_network_security,json=beianNetworkSecurity,proto3" json:"beian_network_security"`            //网安备案
	BeianNetworkSecurityUrl string `protobuf:"bytes,253,opt,name=beian_network_security_url,json=beianNetworkSecurityUrl,proto3" json:"beian_network_security_url"` //网安备案链接
	ContactCustomerService  bool   `protobuf:"varint,260,opt,name=contact_customer_service,json=contactCustomerService,proto3" json:"contact_customer_service"`     //联系客服
	BackendWatermarkOpen    bool   `protobuf:"varint,261,opt,name=backend_watermark_open,json=backendWatermarkOpen,proto3" json:"backend_watermark_open"`           //后台水印开关
	ForceMemberLoginVisit   bool   `protobuf:"varint,262,opt,name=force_member_login_visit,json=forceMemberLoginVisit,proto3" json:"force_member_login_visit"`      //强制客户登录后访问
	//商品设置
	GoodsCommentOpen           bool   `protobuf:"varint,303,opt,name=goods_comment_open,json=goodsCommentOpen,proto3" json:"goods_comment_open"`                                   //商品评论开启
	CartButton                 bool   `protobuf:"varint,305,opt,name=cart_button,json=cartButton,proto3" json:"cart_button"`                                                       //购物车按钮开关
	BuyNowButton               bool   `protobuf:"varint,306,opt,name=buy_now_button,json=buyNowButton,proto3" json:"buy_now_button"`                                               //详情页立即购买
	DetailStoreButton          bool   `protobuf:"varint,307,opt,name=detail_store_button,json=detailStoreButton,proto3" json:"detail_store_button"`                                //详情页店铺按钮
	DetailSalesShow            bool   `protobuf:"varint,308,opt,name=detail_sales_show,json=detailSalesShow,proto3" json:"detail_sales_show"`                                      //详情页销量展示
	PaySuccessAllowCommentTime int32  `protobuf:"varint,312,opt,name=pay_success_allow_comment_time,json=paySuccessAllowCommentTime,proto3" json:"pay_success_allow_comment_time"` //交易成功后X天内，买家可发布评价
	PaySuccessAutoCommentLimit int32  `protobuf:"varint,313,opt,name=pay_success_auto_comment_limit,json=paySuccessAutoCommentLimit,proto3" json:"pay_success_auto_comment_limit"` //买家交易成功X天后买家未评论，系统将自动评论
	AutoCommentOpen            bool   `protobuf:"varint,315,opt,name=auto_comment_open,json=autoCommentOpen,proto3" json:"auto_comment_open"`                                      //自动评价开关
	AutoCommentContent         string `protobuf:"bytes,316,opt,name=auto_comment_content,json=autoCommentContent,proto3" json:"auto_comment_content"`                              //自动评价内容
	//订单设置
	OrderIsBooking                bool     `protobuf:"varint,400,opt,name=order_is_booking,json=orderIsBooking,proto3" json:"order_is_booking"`                                                //订单是否开启预约模式（开启后需要审核确认才能支付）
	PurchaseAgreementOpen         bool     `protobuf:"varint,401,opt,name=purchase_agreement_open,json=purchaseAgreementOpen,proto3" json:"purchase_agreement_open"`                           //下单服务协议
	BuyerMessagePrompt            string   `protobuf:"bytes,402,opt,name=buyer_message_prompt,json=buyerMessagePrompt,proto3" json:"buyer_message_prompt"`                                     //买家留言提示语
	OverseasPurchaseType          []string `protobuf:"bytes,403,rep,name=overseas_purchase_type,json=overseasPurchaseType,proto3" json:"overseas_purchase_type"`                               //海淘下单设置:1上传身份证照片，2身份实名认证
	DeliveryAddressCoordinateOpen bool     `protobuf:"varint,404,opt,name=delivery_address_coordinate_open,json=deliveryAddressCoordinateOpen,proto3" json:"delivery_address_coordinate_open"` //收货地址精准选点
	InventoryDeductionType        string   `protobuf:"bytes,410,opt,name=inventory_deduction_type,json=inventoryDeductionType,proto3" json:"inventory_deduction_type"`                         //库存扣减方式: 1下单减库存 ,2支付减库存
	InventoryNotEnoughHandle      string   `protobuf:"bytes,411,opt,name=inventory_not_enough_handle,json=inventoryNotEnoughHandle,proto3" json:"inventory_not_enough_handle"`                 //商品库存不足处理: 1允许扣成负库存 2整个订单自动售后3仅售后缺货商品
	InvoiceFuncOpen               bool     `protobuf:"varint,421,opt,name=invoice_func_open,json=invoiceFuncOpen,proto3" json:"invoice_func_open"`                                             //发票功能
	InvoiceTipsOpen               bool     `protobuf:"varint,422,opt,name=invoice_tips_open,json=invoiceTipsOpen,proto3" json:"invoice_tips_open"`                                             //发票提示语开关
	InvoiceTipsContent            string   `protobuf:"bytes,423,opt,name=invoice_tips_content,json=invoiceTipsContent,proto3" json:"invoice_tips_content"`                                     //发票提示语内容
	//---售后服务----
	ShippedAftersaleApplyType []string `protobuf:"bytes,450,rep,name=shipped_aftersale_apply_type,json=shippedAftersaleApplyType,proto3" json:"shipped_aftersale_apply_type"` //发货前售后申请设置: 1仅退款 2退货退款 3退换货
	PreShipmentRefundType     string   `protobuf:"bytes,451,opt,name=pre_shipment_refund_type,json=preShipmentRefundType,proto3" json:"pre_shipment_refund_type"`             //发货前售后申请设置: 1需要审核 2;无需审核，系统自动退款
	ShippedFreightReturnType  string   `protobuf:"bytes,452,opt,name=shipped_freight_return_type,json=shippedFreightReturnType,proto3" json:"shipped_freight_return_type"`    //发货后运费退还设置: 1退运费 2不退运费
	OrderAutoCloseTime        int32    `protobuf:"varint,453,opt,name=order_auto_close_time,json=orderAutoCloseTime,proto3" json:"order_auto_close_time"`                     //订单自动关闭时间，货到付款订单不适用（未支付订单超时关闭：单位：分钟）
	OrderAutoReceiveTime      int32    `protobuf:"varint,454,opt,name=order_auto_receive_time,json=orderAutoReceiveTime,proto3" json:"order_auto_receive_time"`               //已发货订单X天后自动确认收货
	OrderCloseRefundTime      int32    `protobuf:"varint,455,opt,name=order_close_refund_time,json=orderCloseRefundTime,proto3" json:"order_close_refund_time"`               //已收货订单X天后关闭售后功能(最长可设置365天， 0表示确认收货后关闭售后功能)
	ReturnedAutoRefundTime    int32    `protobuf:"varint,456,opt,name=returned_auto_refund_time,json=returnedAutoRefundTime,proto3" json:"returned_auto_refund_time"`         //买家发起退货退款申请X天后商家未处理，系统将自动同意售后。
	//支付设置
	WeixinPayOpen  bool `protobuf:"varint,500,opt,name=weixin_pay_open,json=weixinPayOpen,proto3" json:"weixin_pay_open"`    //微信支付开关
	AlipayPayOpen  bool `protobuf:"varint,501,opt,name=alipay_pay_open,json=alipayPayOpen,proto3" json:"alipay_pay_open"`    //支付宝支付开关
	OfflinePayOpen bool `protobuf:"varint,503,opt,name=offline_pay_open,json=offlinePayOpen,proto3" json:"offline_pay_open"` //线下支付开关
	BalancePayOpen bool `protobuf:"varint,504,opt,name=balance_pay_open,json=balancePayOpen,proto3" json:"balance_pay_open"` //余额支付开关
	FriendPayOpen  bool `protobuf:"varint,505,opt,name=friend_pay_open,json=friendPayOpen,proto3" json:"friend_pay_open"`    //好友代付开关
	//相关设置
	MapType             string `protobuf:"bytes,900,opt,name=map_type,json=mapType,proto3" json:"map_type"`                                       //地图类型
	MapTencentAk        string `protobuf:"bytes,901,opt,name=map_tencent_ak,json=mapTencentAk,proto3" json:"map_tencent_ak"`                      //腾讯地图api秘钥
	MapBaiduAk          string `protobuf:"bytes,902,opt,name=map_baidu_ak,json=mapBaiduAk,proto3" json:"map_baidu_ak"`                            //百度地图api密钥
	MapAmapAk           string `protobuf:"bytes,903,opt,name=map_amap_ak,json=mapAmapAk,proto3" json:"map_amap_ak"`                               //高德地图api秘钥
	MapTiandituAk       string `protobuf:"bytes,904,opt,name=map_tianditu_ak,json=mapTiandituAk,proto3" json:"map_tianditu_ak"`                   //天地图api秘钥
	WechatShareImg      string `protobuf:"bytes,910,opt,name=wechat_share_img,json=wechatShareImg,proto3" json:"wechat_share_img"`                //微信分享图片
	WechatShareTitle    string `protobuf:"bytes,911,opt,name=wechat_share_title,json=wechatShareTitle,proto3" json:"wechat_share_title"`          //微信分享标题
	WechatShareSynopsis string `protobuf:"bytes,912,opt,name=wechat_share_synopsis,json=wechatShareSynopsis,proto3" json:"wechat_share_synopsis"` //微信分享简介
}

func (x *CommonConfig) Reset() {
	*x = CommonConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonConfig) ProtoMessage() {}

func (x *CommonConfig) ProtoReflect() protoreflect.Message {
	mi := &file_configService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonConfig.ProtoReflect.Descriptor instead.
func (*CommonConfig) Descriptor() ([]byte, []int) {
	return file_configService_proto_rawDescGZIP(), []int{0}
}

func (x *CommonConfig) GetTimezone() string {
	if x != nil {
		return x.Timezone
	}
	return ""
}

func (x *CommonConfig) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *CommonConfig) GetSiteState() string {
	if x != nil {
		return x.SiteState
	}
	return ""
}

func (x *CommonConfig) GetSiteName() string {
	if x != nil {
		return x.SiteName
	}
	return ""
}

func (x *CommonConfig) GetSiteDescription() string {
	if x != nil {
		return x.SiteDescription
	}
	return ""
}

func (x *CommonConfig) GetSiteServicePhone() string {
	if x != nil {
		return x.SiteServicePhone
	}
	return ""
}

func (x *CommonConfig) GetSiteLogo() string {
	if x != nil {
		return x.SiteLogo
	}
	return ""
}

func (x *CommonConfig) GetSiteLogoWap() string {
	if x != nil {
		return x.SiteLogoWap
	}
	return ""
}

func (x *CommonConfig) GetSiteLogoSquare() string {
	if x != nil {
		return x.SiteLogoSquare
	}
	return ""
}

func (x *CommonConfig) GetBeianIcpNo() string {
	if x != nil {
		return x.BeianIcpNo
	}
	return ""
}

func (x *CommonConfig) GetBeianIcpUrl() string {
	if x != nil {
		return x.BeianIcpUrl
	}
	return ""
}

func (x *CommonConfig) GetBeianNetworkSecurity() string {
	if x != nil {
		return x.BeianNetworkSecurity
	}
	return ""
}

func (x *CommonConfig) GetBeianNetworkSecurityUrl() string {
	if x != nil {
		return x.BeianNetworkSecurityUrl
	}
	return ""
}

func (x *CommonConfig) GetContactCustomerService() bool {
	if x != nil {
		return x.ContactCustomerService
	}
	return false
}

func (x *CommonConfig) GetBackendWatermarkOpen() bool {
	if x != nil {
		return x.BackendWatermarkOpen
	}
	return false
}

func (x *CommonConfig) GetForceMemberLoginVisit() bool {
	if x != nil {
		return x.ForceMemberLoginVisit
	}
	return false
}

func (x *CommonConfig) GetGoodsCommentOpen() bool {
	if x != nil {
		return x.GoodsCommentOpen
	}
	return false
}

func (x *CommonConfig) GetCartButton() bool {
	if x != nil {
		return x.CartButton
	}
	return false
}

func (x *CommonConfig) GetBuyNowButton() bool {
	if x != nil {
		return x.BuyNowButton
	}
	return false
}

func (x *CommonConfig) GetDetailStoreButton() bool {
	if x != nil {
		return x.DetailStoreButton
	}
	return false
}

func (x *CommonConfig) GetDetailSalesShow() bool {
	if x != nil {
		return x.DetailSalesShow
	}
	return false
}

func (x *CommonConfig) GetPaySuccessAllowCommentTime() int32 {
	if x != nil {
		return x.PaySuccessAllowCommentTime
	}
	return 0
}

func (x *CommonConfig) GetPaySuccessAutoCommentLimit() int32 {
	if x != nil {
		return x.PaySuccessAutoCommentLimit
	}
	return 0
}

func (x *CommonConfig) GetAutoCommentOpen() bool {
	if x != nil {
		return x.AutoCommentOpen
	}
	return false
}

func (x *CommonConfig) GetAutoCommentContent() string {
	if x != nil {
		return x.AutoCommentContent
	}
	return ""
}

func (x *CommonConfig) GetOrderIsBooking() bool {
	if x != nil {
		return x.OrderIsBooking
	}
	return false
}

func (x *CommonConfig) GetPurchaseAgreementOpen() bool {
	if x != nil {
		return x.PurchaseAgreementOpen
	}
	return false
}

func (x *CommonConfig) GetBuyerMessagePrompt() string {
	if x != nil {
		return x.BuyerMessagePrompt
	}
	return ""
}

func (x *CommonConfig) GetOverseasPurchaseType() []string {
	if x != nil {
		return x.OverseasPurchaseType
	}
	return nil
}

func (x *CommonConfig) GetDeliveryAddressCoordinateOpen() bool {
	if x != nil {
		return x.DeliveryAddressCoordinateOpen
	}
	return false
}

func (x *CommonConfig) GetInventoryDeductionType() string {
	if x != nil {
		return x.InventoryDeductionType
	}
	return ""
}

func (x *CommonConfig) GetInventoryNotEnoughHandle() string {
	if x != nil {
		return x.InventoryNotEnoughHandle
	}
	return ""
}

func (x *CommonConfig) GetInvoiceFuncOpen() bool {
	if x != nil {
		return x.InvoiceFuncOpen
	}
	return false
}

func (x *CommonConfig) GetInvoiceTipsOpen() bool {
	if x != nil {
		return x.InvoiceTipsOpen
	}
	return false
}

func (x *CommonConfig) GetInvoiceTipsContent() string {
	if x != nil {
		return x.InvoiceTipsContent
	}
	return ""
}

func (x *CommonConfig) GetShippedAftersaleApplyType() []string {
	if x != nil {
		return x.ShippedAftersaleApplyType
	}
	return nil
}

func (x *CommonConfig) GetPreShipmentRefundType() string {
	if x != nil {
		return x.PreShipmentRefundType
	}
	return ""
}

func (x *CommonConfig) GetShippedFreightReturnType() string {
	if x != nil {
		return x.ShippedFreightReturnType
	}
	return ""
}

func (x *CommonConfig) GetOrderAutoCloseTime() int32 {
	if x != nil {
		return x.OrderAutoCloseTime
	}
	return 0
}

func (x *CommonConfig) GetOrderAutoReceiveTime() int32 {
	if x != nil {
		return x.OrderAutoReceiveTime
	}
	return 0
}

func (x *CommonConfig) GetOrderCloseRefundTime() int32 {
	if x != nil {
		return x.OrderCloseRefundTime
	}
	return 0
}

func (x *CommonConfig) GetReturnedAutoRefundTime() int32 {
	if x != nil {
		return x.ReturnedAutoRefundTime
	}
	return 0
}

func (x *CommonConfig) GetWeixinPayOpen() bool {
	if x != nil {
		return x.WeixinPayOpen
	}
	return false
}

func (x *CommonConfig) GetAlipayPayOpen() bool {
	if x != nil {
		return x.AlipayPayOpen
	}
	return false
}

func (x *CommonConfig) GetOfflinePayOpen() bool {
	if x != nil {
		return x.OfflinePayOpen
	}
	return false
}

func (x *CommonConfig) GetBalancePayOpen() bool {
	if x != nil {
		return x.BalancePayOpen
	}
	return false
}

func (x *CommonConfig) GetFriendPayOpen() bool {
	if x != nil {
		return x.FriendPayOpen
	}
	return false
}

func (x *CommonConfig) GetMapType() string {
	if x != nil {
		return x.MapType
	}
	return ""
}

func (x *CommonConfig) GetMapTencentAk() string {
	if x != nil {
		return x.MapTencentAk
	}
	return ""
}

func (x *CommonConfig) GetMapBaiduAk() string {
	if x != nil {
		return x.MapBaiduAk
	}
	return ""
}

func (x *CommonConfig) GetMapAmapAk() string {
	if x != nil {
		return x.MapAmapAk
	}
	return ""
}

func (x *CommonConfig) GetMapTiandituAk() string {
	if x != nil {
		return x.MapTiandituAk
	}
	return ""
}

func (x *CommonConfig) GetWechatShareImg() string {
	if x != nil {
		return x.WechatShareImg
	}
	return ""
}

func (x *CommonConfig) GetWechatShareTitle() string {
	if x != nil {
		return x.WechatShareTitle
	}
	return ""
}

func (x *CommonConfig) GetWechatShareSynopsis() string {
	if x != nil {
		return x.WechatShareSynopsis
	}
	return ""
}

type CommonConfigData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group  string        `protobuf:"bytes,1,opt,name=group,proto3" json:"group"`
	Config *CommonConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config"`
}

func (x *CommonConfigData) Reset() {
	*x = CommonConfigData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonConfigData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonConfigData) ProtoMessage() {}

func (x *CommonConfigData) ProtoReflect() protoreflect.Message {
	mi := &file_configService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonConfigData.ProtoReflect.Descriptor instead.
func (*CommonConfigData) Descriptor() ([]byte, []int) {
	return file_configService_proto_rawDescGZIP(), []int{1}
}

func (x *CommonConfigData) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *CommonConfigData) GetConfig() *CommonConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

// 收银小票配置
type PrintingConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PrintingSwitch    bool   `protobuf:"varint,1,opt,name=printing_switch,json=printingSwitch,proto3" json:"printing_switch"`           //小票打印开关
	PrintingType      string `protobuf:"bytes,2,opt,name=printing_type,json=printingType,proto3" json:"printing_type"`                  //打印平台类型: yly 易联云 fey 飞鹅云
	YlyDevelopId      string `protobuf:"bytes,3,opt,name=yly_develop_id,json=ylyDevelopId,proto3" json:"yly_develop_id"`                //开发者ID【易联云】
	YlyApiKey         string `protobuf:"bytes,4,opt,name=yly_api_key,json=ylyApiKey,proto3" json:"yly_api_key"`                         //应用密钥
	YlyClientId       string `protobuf:"bytes,5,opt,name=yly_client_id,json=ylyClientId,proto3" json:"yly_client_id"`                   //应用ID
	YlyTerminalNumber string `protobuf:"bytes,6,opt,name=yly_terminal_number,json=ylyTerminalNumber,proto3" json:"yly_terminal_number"` //终端号
	FeySn             string `protobuf:"bytes,7,opt,name=fey_sn,json=feySn,proto3" json:"fey_sn"`                                       //飞鹅云SN
	FeyUkey           string `protobuf:"bytes,8,opt,name=fey_ukey,json=feyUkey,proto3" json:"fey_ukey"`                                 //飞鹅云UKEY
	FeyUser           string `protobuf:"bytes,9,opt,name=fey_user,json=feyUser,proto3" json:"fey_user"`                                 //鹅云USER
}

func (x *PrintingConfig) Reset() {
	*x = PrintingConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PrintingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PrintingConfig) ProtoMessage() {}

func (x *PrintingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_configService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PrintingConfig.ProtoReflect.Descriptor instead.
func (*PrintingConfig) Descriptor() ([]byte, []int) {
	return file_configService_proto_rawDescGZIP(), []int{2}
}

func (x *PrintingConfig) GetPrintingSwitch() bool {
	if x != nil {
		return x.PrintingSwitch
	}
	return false
}

func (x *PrintingConfig) GetPrintingType() string {
	if x != nil {
		return x.PrintingType
	}
	return ""
}

func (x *PrintingConfig) GetYlyDevelopId() string {
	if x != nil {
		return x.YlyDevelopId
	}
	return ""
}

func (x *PrintingConfig) GetYlyApiKey() string {
	if x != nil {
		return x.YlyApiKey
	}
	return ""
}

func (x *PrintingConfig) GetYlyClientId() string {
	if x != nil {
		return x.YlyClientId
	}
	return ""
}

func (x *PrintingConfig) GetYlyTerminalNumber() string {
	if x != nil {
		return x.YlyTerminalNumber
	}
	return ""
}

func (x *PrintingConfig) GetFeySn() string {
	if x != nil {
		return x.FeySn
	}
	return ""
}

func (x *PrintingConfig) GetFeyUkey() string {
	if x != nil {
		return x.FeyUkey
	}
	return ""
}

func (x *PrintingConfig) GetFeyUser() string {
	if x != nil {
		return x.FeyUser
	}
	return ""
}

type ConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Code   string   `protobuf:"bytes,3,opt,name=code,proto3" json:"code"` //名称
	Type   string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type"` //类型
	Group  string   `protobuf:"bytes,5,opt,name=group,proto3" json:"group"`
	Groups []string `protobuf:"bytes,6,rep,name=groups,proto3" json:"groups"`
	Codes  []string `protobuf:"bytes,7,rep,name=codes,proto3" json:"codes"`
	Ids    []int64  `protobuf:"varint,8,rep,packed,name=ids,proto3" json:"ids"`
}

func (x *ConfigRequest) Reset() {
	*x = ConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigRequest) ProtoMessage() {}

func (x *ConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_configService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigRequest.ProtoReflect.Descriptor instead.
func (*ConfigRequest) Descriptor() ([]byte, []int) {
	return file_configService_proto_rawDescGZIP(), []int{3}
}

func (x *ConfigRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConfigRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ConfigRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ConfigRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *ConfigRequest) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *ConfigRequest) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

func (x *ConfigRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg      string          `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg"`
	Common   *CommonConfig   `protobuf:"bytes,2,opt,name=common,proto3" json:"common"`
	Printing *PrintingConfig `protobuf:"bytes,3,opt,name=printing,proto3" json:"printing"`
}

func (x *ConfigResponse) Reset() {
	*x = ConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigResponse) ProtoMessage() {}

func (x *ConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_configService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigResponse.ProtoReflect.Descriptor instead.
func (*ConfigResponse) Descriptor() ([]byte, []int) {
	return file_configService_proto_rawDescGZIP(), []int{4}
}

func (x *ConfigResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ConfigResponse) GetCommon() *CommonConfig {
	if x != nil {
		return x.Common
	}
	return nil
}

func (x *ConfigResponse) GetPrinting() *PrintingConfig {
	if x != nil {
		return x.Printing
	}
	return nil
}

var File_configService_proto protoreflect.FileDescriptor

var file_configService_proto_rawDesc = []byte{
	0x0a, 0x13, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22,
	0xbe, 0x14, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0xc8, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x74, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0xc9, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x74, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0xca, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73,
	0x69, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2d,
	0x0a, 0x12, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x18, 0xcb, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x69, 0x74,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0xce, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x69, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x73,
	0x69, 0x74, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x77, 0x61, 0x70, 0x18, 0xcf, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x69, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x57, 0x61, 0x70,
	0x12, 0x29, 0x0a, 0x10, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x73, 0x71,
	0x75, 0x61, 0x72, 0x65, 0x18, 0xd0, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x69, 0x74,
	0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x62,
	0x65, 0x69, 0x61, 0x6e, 0x5f, 0x69, 0x63, 0x70, 0x5f, 0x6e, 0x6f, 0x18, 0xfa, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x62, 0x65, 0x69, 0x61, 0x6e, 0x49, 0x63, 0x70, 0x4e, 0x6f, 0x12, 0x23,
	0x0a, 0x0d, 0x62, 0x65, 0x69, 0x61, 0x6e, 0x5f, 0x69, 0x63, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0xfb, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x65, 0x69, 0x61, 0x6e, 0x49, 0x63, 0x70,
	0x55, 0x72, 0x6c, 0x12, 0x35, 0x0a, 0x16, 0x62, 0x65, 0x69, 0x61, 0x6e, 0x5f, 0x6e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x18, 0xfc, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x62, 0x65, 0x69, 0x61, 0x6e, 0x4e, 0x65, 0x74, 0x77, 0x6f,
	0x72, 0x6b, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x12, 0x3c, 0x0a, 0x1a, 0x62, 0x65,
	0x69, 0x61, 0x6e, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0xfd, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x17, 0x62, 0x65, 0x69, 0x61, 0x6e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65, 0x63,
	0x75, 0x72, 0x69, 0x74, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x39, 0x0a, 0x18, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x18, 0x84, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x16, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x5f, 0x77,
	0x61, 0x74, 0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x85, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x57, 0x61, 0x74,
	0x65, 0x72, 0x6d, 0x61, 0x72, 0x6b, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x38, 0x0a, 0x18, 0x66, 0x6f,
	0x72, 0x63, 0x65, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x5f, 0x76, 0x69, 0x73, 0x69, 0x74, 0x18, 0x86, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x66,
	0x6f, 0x72, 0x63, 0x65, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x56,
	0x69, 0x73, 0x69, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0xaf, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f,
	0x70, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x62, 0x75, 0x74, 0x74,
	0x6f, 0x6e, 0x18, 0xb1, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x63, 0x61, 0x72, 0x74, 0x42,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x75, 0x79, 0x5f, 0x6e, 0x6f, 0x77,
	0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0xb2, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x62, 0x75, 0x79, 0x4e, 0x6f, 0x77, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x13,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x62, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x18, 0xb3, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x2b, 0x0a,
	0x11, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x5f, 0x73, 0x68,
	0x6f, 0x77, 0x18, 0xb4, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x53, 0x61, 0x6c, 0x65, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x43, 0x0a, 0x1e, 0x70, 0x61,
	0x79, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0xb8, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x1a, 0x70, 0x61, 0x79, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x41,
	0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x43, 0x0a, 0x1e, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x61,
	0x75, 0x74, 0x6f, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0xb9, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x1a, 0x70, 0x61, 0x79, 0x53, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0xbb, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x61, 0x75, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65,
	0x6e, 0x12, 0x31, 0x0a, 0x14, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0xbc, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x61, 0x75, 0x74, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x73,
	0x5f, 0x62, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x90, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x73, 0x42, 0x6f, 0x6f, 0x6b, 0x69, 0x6e, 0x67, 0x12,
	0x37, 0x0a, 0x17, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x67, 0x72, 0x65,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x91, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x15, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x41, 0x67, 0x72, 0x65, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x31, 0x0a, 0x14, 0x62, 0x75, 0x79, 0x65,
	0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74,
	0x18, 0x92, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x35, 0x0a, 0x16, 0x6f,
	0x76, 0x65, 0x72, 0x73, 0x65, 0x61, 0x73, 0x5f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x93, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x6f, 0x76,
	0x65, 0x72, 0x73, 0x65, 0x61, 0x73, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x48, 0x0a, 0x20, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x94, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1d, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f,
	0x6f, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x39, 0x0a, 0x18,
	0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x9a, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x16, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x1b, 0x69, 0x6e, 0x76, 0x65, 0x6e,
	0x74, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x65, 0x6e, 0x6f, 0x75, 0x67, 0x68, 0x5f,
	0x68, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x9b, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x69,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x4e, 0x6f, 0x74, 0x45, 0x6e, 0x6f, 0x75, 0x67,
	0x68, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0xa5, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x46, 0x75, 0x6e, 0x63,
	0x4f, 0x70, 0x65, 0x6e, 0x12, 0x2b, 0x0a, 0x11, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f,
	0x74, 0x69, 0x70, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0xa6, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x69, 0x70, 0x73, 0x4f, 0x70, 0x65,
	0x6e, 0x12, 0x31, 0x0a, 0x14, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x69, 0x70,
	0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0xa7, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x69, 0x70, 0x73, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x1c, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x64, 0x5f,
	0x61, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0xc2, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x19, 0x73, 0x68, 0x69,
	0x70, 0x70, 0x65, 0x64, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x41, 0x70, 0x70,
	0x6c, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x18, 0x70, 0x72, 0x65, 0x5f, 0x73, 0x68,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0xc3, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x70, 0x72, 0x65, 0x53, 0x68,
	0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x3e, 0x0a, 0x1b, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x66, 0x72, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0xc4, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x64, 0x46,
	0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x32, 0x0a, 0x15, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x63,
	0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0xc5, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x12, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x75, 0x74, 0x6f, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x61, 0x75,
	0x74, 0x6f, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0xc6, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x75, 0x74,
	0x6f, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x36, 0x0a, 0x17,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0xc7, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x3a, 0x0a, 0x19, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64,
	0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0xc8, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x65, 0x64, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x6f,
	0x70, 0x65, 0x6e, 0x18, 0xf4, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x77, 0x65, 0x69, 0x78,
	0x69, 0x6e, 0x50, 0x61, 0x79, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x6c, 0x69,
	0x70, 0x61, 0x79, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0xf5, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0d, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x50, 0x61, 0x79, 0x4f, 0x70,
	0x65, 0x6e, 0x12, 0x29, 0x0a, 0x10, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x61,
	0x79, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0xf7, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6f,
	0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x79, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x29, 0x0a,
	0x10, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x6f, 0x70, 0x65,
	0x6e, 0x18, 0xf8, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x50, 0x61, 0x79, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0xf9, 0x03, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x4f, 0x70, 0x65,
	0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x84, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x6d, 0x61, 0x70, 0x5f, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x6b, 0x18,
	0x85, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x70, 0x54, 0x65, 0x6e, 0x63, 0x65,
	0x6e, 0x74, 0x41, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x70, 0x5f, 0x62, 0x61, 0x69, 0x64,
	0x75, 0x5f, 0x61, 0x6b, 0x18, 0x86, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x61, 0x70,
	0x42, 0x61, 0x69, 0x64, 0x75, 0x41, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x61, 0x70, 0x5f, 0x61,
	0x6d, 0x61, 0x70, 0x5f, 0x61, 0x6b, 0x18, 0x87, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d,
	0x61, 0x70, 0x41, 0x6d, 0x61, 0x70, 0x41, 0x6b, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x61, 0x70, 0x5f,
	0x74, 0x69, 0x61, 0x6e, 0x64, 0x69, 0x74, 0x75, 0x5f, 0x61, 0x6b, 0x18, 0x88, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x70, 0x54, 0x69, 0x61, 0x6e, 0x64, 0x69, 0x74, 0x75, 0x41,
	0x6b, 0x12, 0x29, 0x0a, 0x10, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x5f, 0x69, 0x6d, 0x67, 0x18, 0x8e, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x77, 0x65,
	0x63, 0x68, 0x61, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x49, 0x6d, 0x67, 0x12, 0x2d, 0x0a, 0x12,
	0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x8f, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x77, 0x65, 0x63, 0x68, 0x61,
	0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x15, 0x77,
	0x65, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x73, 0x79, 0x6e, 0x6f,
	0x70, 0x73, 0x69, 0x73, 0x18, 0x90, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x77, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x53, 0x79, 0x6e, 0x6f, 0x70, 0x73, 0x69, 0x73,
	0x22, 0x58, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2e, 0x0a, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xc5, 0x02, 0x0a, 0x0e, 0x50,
	0x72, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x27, 0x0a,
	0x0f, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67,
	0x53, 0x77, 0x69, 0x74, 0x63, 0x68, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x69,
	0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70,
	0x72, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x79,
	0x6c, 0x79, 0x5f, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x79, 0x6c, 0x79, 0x44, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x79, 0x6c, 0x79, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x79, 0x6c, 0x79, 0x41, 0x70, 0x69, 0x4b, 0x65,
	0x79, 0x12, 0x22, 0x0a, 0x0d, 0x79, 0x6c, 0x79, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x79, 0x6c, 0x79, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x79, 0x6c, 0x79, 0x5f, 0x74, 0x65, 0x72,
	0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x79, 0x6c, 0x79, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x66, 0x65, 0x79, 0x5f, 0x73, 0x6e, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x66, 0x65, 0x79, 0x53, 0x6e, 0x12, 0x19, 0x0a, 0x08,
	0x66, 0x65, 0x79, 0x5f, 0x75, 0x6b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x66, 0x65, 0x79, 0x55, 0x6b, 0x65, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x65, 0x79, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x66, 0x65, 0x79, 0x55, 0x73,
	0x65, 0x72, 0x22, 0x9d, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f,
	0x64, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x22, 0x88, 0x01, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2e, 0x0a, 0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x06, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x08, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x08, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x32, 0xb9, 0x02,
	0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x46, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x10, 0x53, 0x61, 0x76, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1a, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x69,
	0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a,
	0x12, 0x53, 0x61, 0x76, 0x65, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50,
	0x72, 0x69, 0x6e, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x18, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_configService_proto_rawDescOnce sync.Once
	file_configService_proto_rawDescData = file_configService_proto_rawDesc
)

func file_configService_proto_rawDescGZIP() []byte {
	file_configService_proto_rawDescOnce.Do(func() {
		file_configService_proto_rawDescData = protoimpl.X.CompressGZIP(file_configService_proto_rawDescData)
	})
	return file_configService_proto_rawDescData
}

var file_configService_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_configService_proto_goTypes = []interface{}{
	(*CommonConfig)(nil),     // 0: services.CommonConfig
	(*CommonConfigData)(nil), // 1: services.CommonConfigData
	(*PrintingConfig)(nil),   // 2: services.PrintingConfig
	(*ConfigRequest)(nil),    // 3: services.ConfigRequest
	(*ConfigResponse)(nil),   // 4: services.ConfigResponse
}
var file_configService_proto_depIdxs = []int32{
	0, // 0: services.CommonConfigData.config:type_name -> services.CommonConfig
	0, // 1: services.ConfigResponse.common:type_name -> services.CommonConfig
	2, // 2: services.ConfigResponse.printing:type_name -> services.PrintingConfig
	3, // 3: services.ConfigService.GetCommonConfig:input_type -> services.ConfigRequest
	1, // 4: services.ConfigService.SaveCommonConfig:input_type -> services.CommonConfigData
	3, // 5: services.ConfigService.GetPrintingConfig:input_type -> services.ConfigRequest
	2, // 6: services.ConfigService.SavePrintingConfig:input_type -> services.PrintingConfig
	4, // 7: services.ConfigService.GetCommonConfig:output_type -> services.ConfigResponse
	4, // 8: services.ConfigService.SaveCommonConfig:output_type -> services.ConfigResponse
	4, // 9: services.ConfigService.GetPrintingConfig:output_type -> services.ConfigResponse
	4, // 10: services.ConfigService.SavePrintingConfig:output_type -> services.ConfigResponse
	7, // [7:11] is the sub-list for method output_type
	3, // [3:7] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_configService_proto_init() }
func file_configService_proto_init() {
	if File_configService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_configService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonConfigData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PrintingConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_configService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_configService_proto_goTypes,
		DependencyIndexes: file_configService_proto_depIdxs,
		MessageInfos:      file_configService_proto_msgTypes,
	}.Build()
	File_configService_proto = out.File
	file_configService_proto_rawDesc = nil
	file_configService_proto_goTypes = nil
	file_configService_proto_depIdxs = nil
}
