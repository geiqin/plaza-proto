// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: configureService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// 支付设置
type PaymentConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Default    string               `protobuf:"bytes,1,opt,name=default,proto3" json:"default"`                          //默认支付:alipay，wechat
	OpenWechat bool                 `protobuf:"varint,2,opt,name=open_wechat,json=openWechat,proto3" json:"open_wechat"` //开启微信支付
	OpenAlipay bool                 `protobuf:"varint,3,opt,name=open_alipay,json=openAlipay,proto3" json:"open_alipay"` //开启支付宝
	AlipayCfg  *PaymentConfigWechat `protobuf:"bytes,4,opt,name=alipay_cfg,json=alipayCfg,proto3" json:"alipay_cfg"`     //支付宝配置
	WechatCfg  *PaymentConfigAlipay `protobuf:"bytes,5,opt,name=wechat_cfg,json=wechatCfg,proto3" json:"wechat_cfg"`     //微信支付配置
}

func (x *PaymentConfig) Reset() {
	*x = PaymentConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentConfig) ProtoMessage() {}

func (x *PaymentConfig) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentConfig.ProtoReflect.Descriptor instead.
func (*PaymentConfig) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{0}
}

func (x *PaymentConfig) GetDefault() string {
	if x != nil {
		return x.Default
	}
	return ""
}

func (x *PaymentConfig) GetOpenWechat() bool {
	if x != nil {
		return x.OpenWechat
	}
	return false
}

func (x *PaymentConfig) GetOpenAlipay() bool {
	if x != nil {
		return x.OpenAlipay
	}
	return false
}

func (x *PaymentConfig) GetAlipayCfg() *PaymentConfigWechat {
	if x != nil {
		return x.AlipayCfg
	}
	return nil
}

func (x *PaymentConfig) GetWechatCfg() *PaymentConfigAlipay {
	if x != nil {
		return x.WechatCfg
	}
	return nil
}

// 店铺设置
type StoreConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StoreName               string `protobuf:"bytes,1,opt,name=store_name,json=storeName,proto3" json:"store_name"`
	LogoId                  int64  `protobuf:"varint,2,opt,name=logo_id,json=logoId,proto3" json:"logo_id"`
	LogoUrl                 string `protobuf:"bytes,3,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url"`
	CompanyName             string `protobuf:"bytes,4,opt,name=company_name,json=companyName,proto3" json:"company_name"`
	AreaId                  int64  `protobuf:"varint,5,opt,name=area_id,json=areaId,proto3" json:"area_id"`
	Address                 string `protobuf:"bytes,6,opt,name=address,proto3" json:"address"`
	Lng                     string `protobuf:"bytes,7,opt,name=lng,proto3" json:"lng"`
	Lat                     string `protobuf:"bytes,8,opt,name=lat,proto3" json:"lat"`
	CustomDomain            string `protobuf:"bytes,9,opt,name=custom_domain,json=customDomain,proto3" json:"custom_domain"`                                      //自定义域名
	StoreStatus             string `protobuf:"bytes,10,opt,name=store_status,json=storeStatus,proto3" json:"store_status"`                                        //店铺状态
	StoreStatusTips         string `protobuf:"bytes,11,opt,name=store_status_tips,json=storeStatusTips,proto3" json:"store_status_tips"`                          //店铺状态提示
	AllowMemberRegistration bool   `protobuf:"varint,12,opt,name=allow_member_registration,json=allowMemberRegistration,proto3" json:"allow_member_registration"` //允许会员注册
	AllowMemberPurchase     bool   `protobuf:"varint,13,opt,name=allow_member_purchase,json=allowMemberPurchase,proto3" json:"allow_member_purchase"`             //允许会员下单购买
}

func (x *StoreConfig) Reset() {
	*x = StoreConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreConfig) ProtoMessage() {}

func (x *StoreConfig) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreConfig.ProtoReflect.Descriptor instead.
func (*StoreConfig) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{1}
}

func (x *StoreConfig) GetStoreName() string {
	if x != nil {
		return x.StoreName
	}
	return ""
}

func (x *StoreConfig) GetLogoId() int64 {
	if x != nil {
		return x.LogoId
	}
	return 0
}

func (x *StoreConfig) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *StoreConfig) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *StoreConfig) GetAreaId() int64 {
	if x != nil {
		return x.AreaId
	}
	return 0
}

func (x *StoreConfig) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *StoreConfig) GetLng() string {
	if x != nil {
		return x.Lng
	}
	return ""
}

func (x *StoreConfig) GetLat() string {
	if x != nil {
		return x.Lat
	}
	return ""
}

func (x *StoreConfig) GetCustomDomain() string {
	if x != nil {
		return x.CustomDomain
	}
	return ""
}

func (x *StoreConfig) GetStoreStatus() string {
	if x != nil {
		return x.StoreStatus
	}
	return ""
}

func (x *StoreConfig) GetStoreStatusTips() string {
	if x != nil {
		return x.StoreStatusTips
	}
	return ""
}

func (x *StoreConfig) GetAllowMemberRegistration() bool {
	if x != nil {
		return x.AllowMemberRegistration
	}
	return false
}

func (x *StoreConfig) GetAllowMemberPurchase() bool {
	if x != nil {
		return x.AllowMemberPurchase
	}
	return false
}

// 网站设置
type WebsiteConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title       string `protobuf:"bytes,1,opt,name=title,proto3" json:"title"`
	SiteUrl     string `protobuf:"bytes,2,opt,name=site_url,json=siteUrl,proto3" json:"site_url"`
	LogoId      int64  `protobuf:"varint,3,opt,name=logo_id,json=logoId,proto3" json:"logo_id"`
	LogoUrl     string `protobuf:"bytes,4,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url"`
	Keywords    string `protobuf:"bytes,5,opt,name=keywords,proto3" json:"keywords"`
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description"`
	Hotline     string `protobuf:"bytes,7,opt,name=hotline,proto3" json:"hotline"`
	CompanyName string `protobuf:"bytes,8,opt,name=company_name,json=companyName,proto3" json:"company_name"`
	AreaId      int64  `protobuf:"varint,9,opt,name=area_id,json=areaId,proto3" json:"area_id"`
	Address     string `protobuf:"bytes,10,opt,name=address,proto3" json:"address"`
	Lng         string `protobuf:"bytes,11,opt,name=lng,proto3" json:"lng"`
	Lat         string `protobuf:"bytes,12,opt,name=lat,proto3" json:"lat"`
	Email       string `protobuf:"bytes,13,opt,name=email,proto3" json:"email"`
	Qq          string `protobuf:"bytes,14,opt,name=qq,proto3" json:"qq"`
	Icp         string `protobuf:"bytes,15,opt,name=icp,proto3" json:"icp"`
	PoliceIcp   string `protobuf:"bytes,16,opt,name=police_icp,json=policeIcp,proto3" json:"police_icp"`
	Copyright   string `protobuf:"bytes,17,opt,name=copyright,proto3" json:"copyright"`
	ContactMan  string `protobuf:"bytes,18,opt,name=contact_man,json=contactMan,proto3" json:"contact_man"`
	ContactTel  string `protobuf:"bytes,19,opt,name=contact_tel,json=contactTel,proto3" json:"contact_tel"`
}

func (x *WebsiteConfig) Reset() {
	*x = WebsiteConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebsiteConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebsiteConfig) ProtoMessage() {}

func (x *WebsiteConfig) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebsiteConfig.ProtoReflect.Descriptor instead.
func (*WebsiteConfig) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{2}
}

func (x *WebsiteConfig) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *WebsiteConfig) GetSiteUrl() string {
	if x != nil {
		return x.SiteUrl
	}
	return ""
}

func (x *WebsiteConfig) GetLogoId() int64 {
	if x != nil {
		return x.LogoId
	}
	return 0
}

func (x *WebsiteConfig) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *WebsiteConfig) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *WebsiteConfig) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *WebsiteConfig) GetHotline() string {
	if x != nil {
		return x.Hotline
	}
	return ""
}

func (x *WebsiteConfig) GetCompanyName() string {
	if x != nil {
		return x.CompanyName
	}
	return ""
}

func (x *WebsiteConfig) GetAreaId() int64 {
	if x != nil {
		return x.AreaId
	}
	return 0
}

func (x *WebsiteConfig) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *WebsiteConfig) GetLng() string {
	if x != nil {
		return x.Lng
	}
	return ""
}

func (x *WebsiteConfig) GetLat() string {
	if x != nil {
		return x.Lat
	}
	return ""
}

func (x *WebsiteConfig) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *WebsiteConfig) GetQq() string {
	if x != nil {
		return x.Qq
	}
	return ""
}

func (x *WebsiteConfig) GetIcp() string {
	if x != nil {
		return x.Icp
	}
	return ""
}

func (x *WebsiteConfig) GetPoliceIcp() string {
	if x != nil {
		return x.PoliceIcp
	}
	return ""
}

func (x *WebsiteConfig) GetCopyright() string {
	if x != nil {
		return x.Copyright
	}
	return ""
}

func (x *WebsiteConfig) GetContactMan() string {
	if x != nil {
		return x.ContactMan
	}
	return ""
}

func (x *WebsiteConfig) GetContactTel() string {
	if x != nil {
		return x.ContactTel
	}
	return ""
}

// APP设置
type MobileConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	PackageName      string `protobuf:"bytes,2,opt,name=package_name,json=packageName,proto3" json:"package_name"`
	Sign             string `protobuf:"bytes,3,opt,name=sign,proto3" json:"sign"`
	AppId            string `protobuf:"bytes,4,opt,name=app_id,json=appId,proto3" json:"app_id"`
	AppSecret        string `protobuf:"bytes,5,opt,name=app_secret,json=appSecret,proto3" json:"app_secret"`
	ShowCoverAd      bool   `protobuf:"varint,6,opt,name=show_cover_ad,json=showCoverAd,proto3" json:"show_cover_ad"`
	ShowOtherAd      bool   `protobuf:"varint,7,opt,name=show_other_ad,json=showOtherAd,proto3" json:"show_other_ad"`
	OpenWxPay        bool   `protobuf:"varint,8,opt,name=open_wx_pay,json=openWxPay,proto3" json:"open_wx_pay"`
	OpenAliPay       bool   `protobuf:"varint,9,opt,name=open_ali_pay,json=openAliPay,proto3" json:"open_ali_pay"`
	PushAppKey       string `protobuf:"bytes,10,opt,name=push_app_key,json=pushAppKey,proto3" json:"push_app_key"`
	PushMasterSecret string `protobuf:"bytes,11,opt,name=push_master_secret,json=pushMasterSecret,proto3" json:"push_master_secret"`
}

func (x *MobileConfig) Reset() {
	*x = MobileConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MobileConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MobileConfig) ProtoMessage() {}

func (x *MobileConfig) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MobileConfig.ProtoReflect.Descriptor instead.
func (*MobileConfig) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{3}
}

func (x *MobileConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MobileConfig) GetPackageName() string {
	if x != nil {
		return x.PackageName
	}
	return ""
}

func (x *MobileConfig) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *MobileConfig) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *MobileConfig) GetAppSecret() string {
	if x != nil {
		return x.AppSecret
	}
	return ""
}

func (x *MobileConfig) GetShowCoverAd() bool {
	if x != nil {
		return x.ShowCoverAd
	}
	return false
}

func (x *MobileConfig) GetShowOtherAd() bool {
	if x != nil {
		return x.ShowOtherAd
	}
	return false
}

func (x *MobileConfig) GetOpenWxPay() bool {
	if x != nil {
		return x.OpenWxPay
	}
	return false
}

func (x *MobileConfig) GetOpenAliPay() bool {
	if x != nil {
		return x.OpenAliPay
	}
	return false
}

func (x *MobileConfig) GetPushAppKey() string {
	if x != nil {
		return x.PushAppKey
	}
	return ""
}

func (x *MobileConfig) GetPushMasterSecret() string {
	if x != nil {
		return x.PushMasterSecret
	}
	return ""
}

type ConfigureData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Info          *common.Info   `protobuf:"bytes,1,opt,name=info,proto3" json:"info"`
	StoreConfig   *StoreConfig   `protobuf:"bytes,2,opt,name=store_config,json=storeConfig,proto3" json:"store_config"`
	WebsiteConfig *WebsiteConfig `protobuf:"bytes,3,opt,name=website_config,json=websiteConfig,proto3" json:"website_config"`
	PaymentConfig *PaymentConfig `protobuf:"bytes,4,opt,name=payment_config,json=paymentConfig,proto3" json:"payment_config"`
}

func (x *ConfigureData) Reset() {
	*x = ConfigureData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureData) ProtoMessage() {}

func (x *ConfigureData) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureData.ProtoReflect.Descriptor instead.
func (*ConfigureData) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{4}
}

func (x *ConfigureData) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *ConfigureData) GetStoreConfig() *StoreConfig {
	if x != nil {
		return x.StoreConfig
	}
	return nil
}

func (x *ConfigureData) GetWebsiteConfig() *WebsiteConfig {
	if x != nil {
		return x.WebsiteConfig
	}
	return nil
}

func (x *ConfigureData) GetPaymentConfig() *PaymentConfig {
	if x != nil {
		return x.PaymentConfig
	}
	return nil
}

type ConfigureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *ConfigureData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error  `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *ConfigureResponse) Reset() {
	*x = ConfigureResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureResponse) ProtoMessage() {}

func (x *ConfigureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureResponse.ProtoReflect.Descriptor instead.
func (*ConfigureResponse) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{5}
}

func (x *ConfigureResponse) GetData() *ConfigureData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigureResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

//支付宝
type PaymentConfigAlipay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mchid      string `protobuf:"bytes,1,opt,name=mchid,proto3" json:"mchid"`                             //商户ID 或者服务商模式的 sp_mchid
	SerialNo   string `protobuf:"bytes,2,opt,name=serial_no,json=serialNo,proto3" json:"serial_no"`       //商户证书的证书序列号
	ApiV3Key   string `protobuf:"bytes,3,opt,name=api_v3_key,json=apiV3Key,proto3" json:"api_v3_key"`     //apiV3Key，商户平台获取
	PrivateKey string `protobuf:"bytes,4,opt,name=private_key,json=privateKey,proto3" json:"private_key"` //私钥 apiclient_key.pem 读取后的内容
}

func (x *PaymentConfigAlipay) Reset() {
	*x = PaymentConfigAlipay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentConfigAlipay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentConfigAlipay) ProtoMessage() {}

func (x *PaymentConfigAlipay) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentConfigAlipay.ProtoReflect.Descriptor instead.
func (*PaymentConfigAlipay) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{0, 0}
}

func (x *PaymentConfigAlipay) GetMchid() string {
	if x != nil {
		return x.Mchid
	}
	return ""
}

func (x *PaymentConfigAlipay) GetSerialNo() string {
	if x != nil {
		return x.SerialNo
	}
	return ""
}

func (x *PaymentConfigAlipay) GetApiV3Key() string {
	if x != nil {
		return x.ApiV3Key
	}
	return ""
}

func (x *PaymentConfigAlipay) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

//微信支付
type PaymentConfigWechat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MchId      string `protobuf:"bytes,1,opt,name=mch_id,json=mchId,proto3" json:"mch_id"`                //商户ID 或者服务商模式的 sp_mchid
	SerialNo   string `protobuf:"bytes,2,opt,name=serial_no,json=serialNo,proto3" json:"serial_no"`       //商户证书的证书序列号
	ApiV3Key   string `protobuf:"bytes,3,opt,name=api_v3_key,json=apiV3Key,proto3" json:"api_v3_key"`     //apiV3Key，商户平台获取
	PrivateKey string `protobuf:"bytes,4,opt,name=private_key,json=privateKey,proto3" json:"private_key"` //私钥 apiclient_key.pem 读取后的内容
}

func (x *PaymentConfigWechat) Reset() {
	*x = PaymentConfigWechat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentConfigWechat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentConfigWechat) ProtoMessage() {}

func (x *PaymentConfigWechat) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentConfigWechat.ProtoReflect.Descriptor instead.
func (*PaymentConfigWechat) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{0, 1}
}

func (x *PaymentConfigWechat) GetMchId() string {
	if x != nil {
		return x.MchId
	}
	return ""
}

func (x *PaymentConfigWechat) GetSerialNo() string {
	if x != nil {
		return x.SerialNo
	}
	return ""
}

func (x *PaymentConfigWechat) GetApiV3Key() string {
	if x != nil {
		return x.ApiV3Key
	}
	return ""
}

func (x *PaymentConfigWechat) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

var File_configureService_proto protoreflect.FileDescriptor

var file_configureService_proto_rawDesc = []byte{
	0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe2, 0x03, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x57, 0x65, 0x63, 0x68,
	0x61, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x61, 0x6c, 0x69, 0x70, 0x61,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x6e, 0x41, 0x6c, 0x69,
	0x70, 0x61, 0x79, 0x12, 0x3d, 0x0a, 0x0a, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x66,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x2e, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x52, 0x09, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x43,
	0x66, 0x67, 0x12, 0x3d, 0x0a, 0x0a, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x63, 0x66, 0x67,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2e,
	0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x52, 0x09, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x43, 0x66,
	0x67, 0x1a, 0x7a, 0x0a, 0x06, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x63, 0x68, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x63, 0x68, 0x69,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x12, 0x1c,
	0x0a, 0x0a, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x33, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x70, 0x69, 0x56, 0x33, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x1a, 0x7b, 0x0a,
	0x06, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x63, 0x68, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x0a, 0x61,
	0x70, 0x69, 0x5f, 0x76, 0x33, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x70, 0x69, 0x56, 0x33, 0x4b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x22, 0xbe, 0x03, 0x0a, 0x0b, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6c, 0x6f, 0x67,
	0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6c, 0x6f, 0x67, 0x6f,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a,
	0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6c, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x2a, 0x0a, 0x11, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x74, 0x69, 0x70, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x69, 0x70, 0x73, 0x12, 0x3a, 0x0a, 0x19, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17,
	0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x61, 0x6c, 0x6c, 0x6f, 0x77,
	0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x22, 0xfd, 0x03, 0x0a, 0x0d,
	0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x69, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x17,
	0x0a, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x6c, 0x6f, 0x67, 0x6f, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55,
	0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x68, 0x6f, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x68, 0x6f, 0x74, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c,
	0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6c, 0x61, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x71, 0x71,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x71, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x63,
	0x70, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x69, 0x63, 0x70, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x6f, 0x6c, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x63, 0x70, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x70, 0x6f, 0x6c, 0x69, 0x63, 0x65, 0x49, 0x63, 0x70, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x5f, 0x6d, 0x61, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4d, 0x61, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x65, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x54, 0x65, 0x6c, 0x22, 0xe9, 0x02, 0x0a, 0x0c,
	0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x22, 0x0a,
	0x0d, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x41,
	0x64, 0x12, 0x22, 0x0a, 0x0d, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f,
	0x61, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x4f, 0x74,
	0x68, 0x65, 0x72, 0x41, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x77, 0x78,
	0x5f, 0x70, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x6f, 0x70, 0x65, 0x6e,
	0x57, 0x78, 0x50, 0x61, 0x79, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x61, 0x6c,
	0x69, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x6f, 0x70, 0x65,
	0x6e, 0x41, 0x6c, 0x69, 0x50, 0x61, 0x79, 0x12, 0x20, 0x0a, 0x0c, 0x70, 0x75, 0x73, 0x68, 0x5f,
	0x61, 0x70, 0x70, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x75, 0x73, 0x68, 0x41, 0x70, 0x70, 0x4b, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x75, 0x73,
	0x68, 0x5f, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x75, 0x73, 0x68, 0x4d, 0x61, 0x73, 0x74, 0x65,
	0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0xeb, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x20, 0x0a, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x38, 0x0a, 0x0c, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3e, 0x0a, 0x0e, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3e, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x65, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xb6, 0x04, 0x0a,
	0x10, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x40, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x15, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x12,
	0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x57, 0x65, 0x62, 0x73,
	0x69, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57,
	0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x1b, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0a, 0x47,
	0x65, 0x74, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x42, 0x0a, 0x09, 0x53, 0x65, 0x74, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x16,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0a, 0x53, 0x65, 0x74,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x44, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_configureService_proto_rawDescOnce sync.Once
	file_configureService_proto_rawDescData = file_configureService_proto_rawDesc
)

func file_configureService_proto_rawDescGZIP() []byte {
	file_configureService_proto_rawDescOnce.Do(func() {
		file_configureService_proto_rawDescData = protoimpl.X.CompressGZIP(file_configureService_proto_rawDescData)
	})
	return file_configureService_proto_rawDescData
}

var file_configureService_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_configureService_proto_goTypes = []interface{}{
	(*PaymentConfig)(nil),       // 0: services.PaymentConfig
	(*StoreConfig)(nil),         // 1: services.StoreConfig
	(*WebsiteConfig)(nil),       // 2: services.WebsiteConfig
	(*MobileConfig)(nil),        // 3: services.MobileConfig
	(*ConfigureData)(nil),       // 4: services.ConfigureData
	(*ConfigureResponse)(nil),   // 5: services.ConfigureResponse
	(*PaymentConfigAlipay)(nil), // 6: services.PaymentConfig.alipay
	(*PaymentConfigWechat)(nil), // 7: services.PaymentConfig.wechat
	(*common.Info)(nil),         // 8: common.Info
	(*common.Error)(nil),        // 9: common.Error
}
var file_configureService_proto_depIdxs = []int32{
	7,  // 0: services.PaymentConfig.alipay_cfg:type_name -> services.PaymentConfig.wechat
	6,  // 1: services.PaymentConfig.wechat_cfg:type_name -> services.PaymentConfig.alipay
	8,  // 2: services.ConfigureData.info:type_name -> common.Info
	1,  // 3: services.ConfigureData.store_config:type_name -> services.StoreConfig
	2,  // 4: services.ConfigureData.website_config:type_name -> services.WebsiteConfig
	0,  // 5: services.ConfigureData.payment_config:type_name -> services.PaymentConfig
	4,  // 6: services.ConfigureResponse.data:type_name -> services.ConfigureData
	9,  // 7: services.ConfigureResponse.error:type_name -> common.Error
	1,  // 8: services.ConfigureService.SetStore:input_type -> services.StoreConfig
	1,  // 9: services.ConfigureService.GetStore:input_type -> services.StoreConfig
	2,  // 10: services.ConfigureService.SetWebsite:input_type -> services.WebsiteConfig
	2,  // 11: services.ConfigureService.GetWebsite:input_type -> services.WebsiteConfig
	3,  // 12: services.ConfigureService.SetMobile:input_type -> services.MobileConfig
	3,  // 13: services.ConfigureService.GetMobile:input_type -> services.MobileConfig
	0,  // 14: services.ConfigureService.SetPayment:input_type -> services.PaymentConfig
	0,  // 15: services.ConfigureService.GetPayment:input_type -> services.PaymentConfig
	5,  // 16: services.ConfigureService.SetStore:output_type -> services.ConfigureResponse
	5,  // 17: services.ConfigureService.GetStore:output_type -> services.ConfigureResponse
	5,  // 18: services.ConfigureService.SetWebsite:output_type -> services.ConfigureResponse
	5,  // 19: services.ConfigureService.GetWebsite:output_type -> services.ConfigureResponse
	5,  // 20: services.ConfigureService.SetMobile:output_type -> services.ConfigureResponse
	5,  // 21: services.ConfigureService.GetMobile:output_type -> services.ConfigureResponse
	5,  // 22: services.ConfigureService.SetPayment:output_type -> services.ConfigureResponse
	5,  // 23: services.ConfigureService.GetPayment:output_type -> services.ConfigureResponse
	16, // [16:24] is the sub-list for method output_type
	8,  // [8:16] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_configureService_proto_init() }
func file_configureService_proto_init() {
	if File_configureService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_configureService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebsiteConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MobileConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentConfigAlipay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentConfigWechat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_configureService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_configureService_proto_goTypes,
		DependencyIndexes: file_configureService_proto_depIdxs,
		MessageInfos:      file_configureService_proto_msgTypes,
	}.Build()
	File_configureService_proto = out.File
	file_configureService_proto_rawDesc = nil
	file_configureService_proto_goTypes = nil
	file_configureService_proto_depIdxs = nil
}
