// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: configureService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//站点基础设置
type SiteBaseConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonTimezone     string `protobuf:"bytes,1,opt,name=common_timezone,json=commonTimezone,proto3" json:"common_timezone"`                 //默认时区默认,亚洲/上海 [标准时+8]
	HomeSiteName       string `protobuf:"bytes,2,opt,name=home_site_name,json=homeSiteName,proto3" json:"home_site_name"`                     //站点名称
	HomeSiteLogo       string `protobuf:"bytes,3,opt,name=home_site_logo,json=homeSiteLogo,proto3" json:"home_site_logo"`                     //电脑端logo支持 [jpg, png, gif]，建议220x60px
	HomeSiteLogoWap    string `protobuf:"bytes,4,opt,name=home_site_logo_wap,json=homeSiteLogoWap,proto3" json:"home_site_logo_wap"`          //手机端logo支持 [jpg, png, gif]，建议220x66px
	HomeSiteLogoSquare string `protobuf:"bytes,5,opt,name=home_site_logo_square,json=homeSiteLogoSquare,proto3" json:"home_site_logo_square"` //正方形logo建议使用png格式，建议300x300px
}

func (x *SiteBaseConfig) Reset() {
	*x = SiteBaseConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteBaseConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteBaseConfig) ProtoMessage() {}

func (x *SiteBaseConfig) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteBaseConfig.ProtoReflect.Descriptor instead.
func (*SiteBaseConfig) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{0}
}

func (x *SiteBaseConfig) GetCommonTimezone() string {
	if x != nil {
		return x.CommonTimezone
	}
	return ""
}

func (x *SiteBaseConfig) GetHomeSiteName() string {
	if x != nil {
		return x.HomeSiteName
	}
	return ""
}

func (x *SiteBaseConfig) GetHomeSiteLogo() string {
	if x != nil {
		return x.HomeSiteLogo
	}
	return ""
}

func (x *SiteBaseConfig) GetHomeSiteLogoWap() string {
	if x != nil {
		return x.HomeSiteLogoWap
	}
	return ""
}

func (x *SiteBaseConfig) GetHomeSiteLogoSquare() string {
	if x != nil {
		return x.HomeSiteLogoSquare
	}
	return ""
}

//站点状态设置(1-开启，2-关闭)
type SiteStateConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HomeSiteState        string `protobuf:"bytes,1,opt,name=home_site_state,json=homeSiteState,proto3" json:"home_site_state"`                          //站点状态;可暂时将站点关闭，其他人无法访问，但不影响管理员访问后台
	HomeSiteWebHomeState string `protobuf:"bytes,2,opt,name=home_site_web_home_state,json=homeSiteWebHomeState,proto3" json:"home_site_web_home_state"` //web端首页访问;默认开启，仅针对web端首页，其他页面不受影响
	HomeSiteWebPcState   string `protobuf:"bytes,3,opt,name=home_site_web_pc_state,json=homeSiteWebPcState,proto3" json:"home_site_web_pc_state"`       //web端PC访问;默认开启，仅针对web端PC
	HomeSiteCloseReason  string `protobuf:"bytes,4,opt,name=home_site_close_reason,json=homeSiteCloseReason,proto3" json:"home_site_close_reason"`      //关闭原因;支持html，当网站处于关闭状态时，关闭原因将显示在前台
}

func (x *SiteStateConfig) Reset() {
	*x = SiteStateConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteStateConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteStateConfig) ProtoMessage() {}

func (x *SiteStateConfig) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteStateConfig.ProtoReflect.Descriptor instead.
func (*SiteStateConfig) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{1}
}

func (x *SiteStateConfig) GetHomeSiteState() string {
	if x != nil {
		return x.HomeSiteState
	}
	return ""
}

func (x *SiteStateConfig) GetHomeSiteWebHomeState() string {
	if x != nil {
		return x.HomeSiteWebHomeState
	}
	return ""
}

func (x *SiteStateConfig) GetHomeSiteWebPcState() string {
	if x != nil {
		return x.HomeSiteWebPcState
	}
	return ""
}

func (x *SiteStateConfig) GetHomeSiteCloseReason() string {
	if x != nil {
		return x.HomeSiteCloseReason
	}
	return ""
}

//站点域名地址
type SiteDomainConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonDomainHost        string `protobuf:"bytes,1,opt,name=common_domain_host,json=commonDomainHost,proto3" json:"common_domain_host"`                        //主域名,站点地址
	CommonCdnAttachmentHost string `protobuf:"bytes,2,opt,name=common_cdn_attachment_host,json=commonCdnAttachmentHost,proto3" json:"common_cdn_attachment_host"` //附件cdn域名图片/视频/文件
	CommonCdnPublicHost     string `protobuf:"bytes,3,opt,name=common_cdn_public_host,json=commonCdnPublicHost,proto3" json:"common_cdn_public_host"`             //css/js静态文件cdn域名
}

func (x *SiteDomainConfig) Reset() {
	*x = SiteDomainConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteDomainConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteDomainConfig) ProtoMessage() {}

func (x *SiteDomainConfig) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteDomainConfig.ProtoReflect.Descriptor instead.
func (*SiteDomainConfig) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{2}
}

func (x *SiteDomainConfig) GetCommonDomainHost() string {
	if x != nil {
		return x.CommonDomainHost
	}
	return ""
}

func (x *SiteDomainConfig) GetCommonCdnAttachmentHost() string {
	if x != nil {
		return x.CommonCdnAttachmentHost
	}
	return ""
}

func (x *SiteDomainConfig) GetCommonCdnPublicHost() string {
	if x != nil {
		return x.CommonCdnPublicHost
	}
	return ""
}

//站点备案信息
type SiteBeianConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HomeSiteIcp                string `protobuf:"bytes,1,opt,name=home_site_icp,json=homeSiteIcp,proto3" json:"home_site_icp"`                                                  //ICP域名备案号
	HomeSiteSecurityRecordName string `protobuf:"bytes,2,opt,name=home_site_security_record_name,json=homeSiteSecurityRecordName,proto3" json:"home_site_security_record_name"` //公安备案号如：京公网安备xxx号
	HomeSiteSecurityRecordUrl  string `protobuf:"bytes,3,opt,name=home_site_security_record_url,json=homeSiteSecurityRecordUrl,proto3" json:"home_site_security_record_url"`    //公安备案地址备案,展示页面的url地址
	HomeSiteTelecomLicense     string `protobuf:"bytes,4,opt,name=home_site_telecom_license,json=homeSiteTelecomLicense,proto3" json:"home_site_telecom_license"`               //增值电信业务经营许可证,如：沪B2-xxx
	HomeSiteCompanyLicense     string `protobuf:"bytes,5,opt,name=home_site_company_license,json=homeSiteCompanyLicense,proto3" json:"home_site_company_license"`               //电子营业执照亮照(执照页面展示地址、申请地址：https://zzlz.gsxt.gov.cn/businessShow)
}

func (x *SiteBeianConfig) Reset() {
	*x = SiteBeianConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteBeianConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteBeianConfig) ProtoMessage() {}

func (x *SiteBeianConfig) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteBeianConfig.ProtoReflect.Descriptor instead.
func (*SiteBeianConfig) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{3}
}

func (x *SiteBeianConfig) GetHomeSiteIcp() string {
	if x != nil {
		return x.HomeSiteIcp
	}
	return ""
}

func (x *SiteBeianConfig) GetHomeSiteSecurityRecordName() string {
	if x != nil {
		return x.HomeSiteSecurityRecordName
	}
	return ""
}

func (x *SiteBeianConfig) GetHomeSiteSecurityRecordUrl() string {
	if x != nil {
		return x.HomeSiteSecurityRecordUrl
	}
	return ""
}

func (x *SiteBeianConfig) GetHomeSiteTelecomLicense() string {
	if x != nil {
		return x.HomeSiteTelecomLicense
	}
	return ""
}

func (x *SiteBeianConfig) GetHomeSiteCompanyLicense() string {
	if x != nil {
		return x.HomeSiteCompanyLicense
	}
	return ""
}

//站点SEO配置
type SiteSeoConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HomeSeoSiteTitle       string `protobuf:"bytes,1,opt,name=home_seo_site_title,json=homeSeoSiteTitle,proto3" json:"home_seo_site_title"`                   //站点标题，一般不超过80个字符
	HomeSeoSiteKeywords    string `protobuf:"bytes,2,opt,name=home_seo_site_keywords,json=homeSeoSiteKeywords,proto3" json:"home_seo_site_keywords"`          //站点关键字，一般不超过100个字符，多个关键字以半圆角逗号 [ , ] 隔开
	HomeSeoSiteDescription string `protobuf:"bytes,3,opt,name=home_seo_site_description,json=homeSeoSiteDescription,proto3" json:"home_seo_site_description"` //站点描述，一般不超过200个字符
}

func (x *SiteSeoConfig) Reset() {
	*x = SiteSeoConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteSeoConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteSeoConfig) ProtoMessage() {}

func (x *SiteSeoConfig) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteSeoConfig.ProtoReflect.Descriptor instead.
func (*SiteSeoConfig) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{4}
}

func (x *SiteSeoConfig) GetHomeSeoSiteTitle() string {
	if x != nil {
		return x.HomeSeoSiteTitle
	}
	return ""
}

func (x *SiteSeoConfig) GetHomeSeoSiteKeywords() string {
	if x != nil {
		return x.HomeSeoSiteKeywords
	}
	return ""
}

func (x *SiteSeoConfig) GetHomeSeoSiteDescription() string {
	if x != nil {
		return x.HomeSeoSiteDescription
	}
	return ""
}

//站点搜索
type SiteSearchConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HomeSearchHistoryRecord string   `protobuf:"bytes,1,opt,name=home_search_history_record,json=homeSearchHistoryRecord,proto3" json:"home_search_history_record"` //请选择开启搜索记录
	HomeSearchLimitNumber   int32    `protobuf:"varint,2,opt,name=home_search_limit_number,json=homeSearchLimitNumber,proto3" json:"home_search_limit_number"`      //搜索展示数据条数
	HomeSearchKeywords      string   `protobuf:"bytes,3,opt,name=home_search_keywords,json=homeSearchKeywords,proto3" json:"home_search_keywords"`                  //搜索关键字
	HomeSearchIsBrand       string   `protobuf:"bytes,4,opt,name=home_search_is_brand,json=homeSearchIsBrand,proto3" json:"home_search_is_brand"`                   //搜索页开启品牌
	HomeSearchIsCategory    string   `protobuf:"bytes,5,opt,name=home_search_is_category,json=homeSearchIsCategory,proto3" json:"home_search_is_category"`          //搜索页开启分类
	HomeSearchIsPrice       string   `protobuf:"bytes,6,opt,name=home_search_is_price,json=homeSearchIsPrice,proto3" json:"home_search_is_price"`                   //搜索页开启价格
	HomeSearchIsParams      string   `protobuf:"bytes,7,opt,name=home_search_is_params,json=homeSearchIsParams,proto3" json:"home_search_is_params"`                //搜索页开启参数
	HomeSearchIsSpec        string   `protobuf:"bytes,8,opt,name=home_search_is_spec,json=homeSearchIsSpec,proto3" json:"home_search_is_spec"`                      //搜索页开启规格
	HomeSearchParamsType    []string `protobuf:"bytes,9,rep,name=home_search_params_type,json=homeSearchParamsType,proto3" json:"home_search_params_type"`          //搜索参数类型
}

func (x *SiteSearchConfig) Reset() {
	*x = SiteSearchConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SiteSearchConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SiteSearchConfig) ProtoMessage() {}

func (x *SiteSearchConfig) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SiteSearchConfig.ProtoReflect.Descriptor instead.
func (*SiteSearchConfig) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{5}
}

func (x *SiteSearchConfig) GetHomeSearchHistoryRecord() string {
	if x != nil {
		return x.HomeSearchHistoryRecord
	}
	return ""
}

func (x *SiteSearchConfig) GetHomeSearchLimitNumber() int32 {
	if x != nil {
		return x.HomeSearchLimitNumber
	}
	return 0
}

func (x *SiteSearchConfig) GetHomeSearchKeywords() string {
	if x != nil {
		return x.HomeSearchKeywords
	}
	return ""
}

func (x *SiteSearchConfig) GetHomeSearchIsBrand() string {
	if x != nil {
		return x.HomeSearchIsBrand
	}
	return ""
}

func (x *SiteSearchConfig) GetHomeSearchIsCategory() string {
	if x != nil {
		return x.HomeSearchIsCategory
	}
	return ""
}

func (x *SiteSearchConfig) GetHomeSearchIsPrice() string {
	if x != nil {
		return x.HomeSearchIsPrice
	}
	return ""
}

func (x *SiteSearchConfig) GetHomeSearchIsParams() string {
	if x != nil {
		return x.HomeSearchIsParams
	}
	return ""
}

func (x *SiteSearchConfig) GetHomeSearchIsSpec() string {
	if x != nil {
		return x.HomeSearchIsSpec
	}
	return ""
}

func (x *SiteSearchConfig) GetHomeSearchParamsType() []string {
	if x != nil {
		return x.HomeSearchParamsType
	}
	return nil
}

//手机基础配置
type MobileBaseConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonAppH5Url              string `protobuf:"bytes,1,opt,name=common_app_h5_url,json=commonAppH5Url,proto3" json:"common_app_h5_url"`                                          //手机端h5地址uniapp端地址以(#/)结尾、比如：https://plazq.qindev.com/h5/#/
	CommonIsMobileConciseModel  string `protobuf:"bytes,2,opt,name=common_is_mobile_concise_model,json=commonIsMobileConciseModel,proto3" json:"common_is_mobile_concise_model"`    //手机简洁模式,默认否(0否，1是)
	CommonAppCustomerServiceTel string `protobuf:"bytes,3,opt,name=common_app_customer_service_tel,json=commonAppCustomerServiceTel,proto3" json:"common_app_customer_service_tel"` //客服电话,空则不显示
	CommonShopNotice            string `protobuf:"bytes,4,opt,name=common_shop_notice,json=commonShopNotice,proto3" json:"common_shop_notice"`                                      //商城公告,空则不显示公告
	CommonUserCenterNotice      string `protobuf:"bytes,5,opt,name=common_user_center_notice,json=commonUserCenterNotice,proto3" json:"common_user_center_notice"`                  //用户中心公告,空则不显示公告
}

func (x *MobileBaseConfig) Reset() {
	*x = MobileBaseConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MobileBaseConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MobileBaseConfig) ProtoMessage() {}

func (x *MobileBaseConfig) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MobileBaseConfig.ProtoReflect.Descriptor instead.
func (*MobileBaseConfig) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{6}
}

func (x *MobileBaseConfig) GetCommonAppH5Url() string {
	if x != nil {
		return x.CommonAppH5Url
	}
	return ""
}

func (x *MobileBaseConfig) GetCommonIsMobileConciseModel() string {
	if x != nil {
		return x.CommonIsMobileConciseModel
	}
	return ""
}

func (x *MobileBaseConfig) GetCommonAppCustomerServiceTel() string {
	if x != nil {
		return x.CommonAppCustomerServiceTel
	}
	return ""
}

func (x *MobileBaseConfig) GetCommonShopNotice() string {
	if x != nil {
		return x.CommonShopNotice
	}
	return ""
}

func (x *MobileBaseConfig) GetCommonUserCenterNotice() string {
	if x != nil {
		return x.CommonUserCenterNotice
	}
	return ""
}

//APP/小程序通用配置
type MobileCommonConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonUserIsMandatoryBindMobile     string   `protobuf:"bytes,1,opt,name=common_user_is_mandatory_bind_mobile,json=commonUserIsMandatoryBindMobile,proto3" json:"common_user_is_mandatory_bind_mobile"`             //强制绑定手机(0否，1是)
	CommonAppIsUseMobileDetail          string   `protobuf:"bytes,2,opt,name=common_app_is_use_mobile_detail,json=commonAppIsUseMobileDetail,proto3" json:"common_app_is_use_mobile_detail"`                            //使用独立手机详情,默认使用web详情(0否，1是)
	CommonAppIsEnableSearch             string   `protobuf:"bytes,3,opt,name=common_app_is_enable_search,json=commonAppIsEnableSearch,proto3" json:"common_app_is_enable_search"`                                       //是否启用搜索(0否，1是)
	CommonAppIsEnableAnswer             string   `protobuf:"bytes,4,opt,name=common_app_is_enable_answer,json=commonAppIsEnableAnswer,proto3" json:"common_app_is_enable_answer"`                                       //是否启用留言(0否，1是)
	CommonAppIsOnlineService            string   `protobuf:"bytes,5,opt,name=common_app_is_online_service,json=commonAppIsOnlineService,proto3" json:"common_app_is_online_service"`                                    //开启在线客服(0否，1是)
	CommonAppIsHeaderNavFixed           string   `protobuf:"bytes,6,opt,name=common_app_is_header_nav_fixed,json=commonAppIsHeaderNavFixed,proto3" json:"common_app_is_header_nav_fixed"`                               //是否固定顶部导航(0否，1是)
	CommonAppIsHeadViceNav              string   `protobuf:"bytes,7,opt,name=common_app_is_head_vice_nav,json=commonAppIsHeadViceNav,proto3" json:"common_app_is_head_vice_nav"`                                        //是否启用用户中心头部小导航(0否，1是)
	CommonUserOnekeyBindMobileList      []string `protobuf:"bytes,8,rep,name=common_user_onekey_bind_mobile_list,json=commonUserOnekeyBindMobileList,proto3" json:"common_user_onekey_bind_mobile_list"`                //获取账户手机一键登录,目前仅支持【微信小程序、百度小程序、头条小程序】
	CommonUserAddressPlatformImportList []string `protobuf:"bytes,9,rep,name=common_user_address_platform_import_list,json=commonUserAddressPlatformImportList,proto3" json:"common_user_address_platform_import_list"` //获取账户地址一键导入,获取当前小程序平台app账户的收货地址，目前仅支持【小程序】
}

func (x *MobileCommonConfig) Reset() {
	*x = MobileCommonConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MobileCommonConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MobileCommonConfig) ProtoMessage() {}

func (x *MobileCommonConfig) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MobileCommonConfig.ProtoReflect.Descriptor instead.
func (*MobileCommonConfig) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{7}
}

func (x *MobileCommonConfig) GetCommonUserIsMandatoryBindMobile() string {
	if x != nil {
		return x.CommonUserIsMandatoryBindMobile
	}
	return ""
}

func (x *MobileCommonConfig) GetCommonAppIsUseMobileDetail() string {
	if x != nil {
		return x.CommonAppIsUseMobileDetail
	}
	return ""
}

func (x *MobileCommonConfig) GetCommonAppIsEnableSearch() string {
	if x != nil {
		return x.CommonAppIsEnableSearch
	}
	return ""
}

func (x *MobileCommonConfig) GetCommonAppIsEnableAnswer() string {
	if x != nil {
		return x.CommonAppIsEnableAnswer
	}
	return ""
}

func (x *MobileCommonConfig) GetCommonAppIsOnlineService() string {
	if x != nil {
		return x.CommonAppIsOnlineService
	}
	return ""
}

func (x *MobileCommonConfig) GetCommonAppIsHeaderNavFixed() string {
	if x != nil {
		return x.CommonAppIsHeaderNavFixed
	}
	return ""
}

func (x *MobileCommonConfig) GetCommonAppIsHeadViceNav() string {
	if x != nil {
		return x.CommonAppIsHeadViceNav
	}
	return ""
}

func (x *MobileCommonConfig) GetCommonUserOnekeyBindMobileList() []string {
	if x != nil {
		return x.CommonUserOnekeyBindMobileList
	}
	return nil
}

func (x *MobileCommonConfig) GetCommonUserAddressPlatformImportList() []string {
	if x != nil {
		return x.CommonUserAddressPlatformImportList
	}
	return nil
}

//微信小程序配置
type AppMiniWeixinConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonAppMiniWeixinAppid     string `protobuf:"bytes,1,opt,name=common_app_mini_weixin_appid,json=commonAppMiniWeixinAppid,proto3" json:"common_app_mini_weixin_appid"`               //AppID,小程序ID
	CommonAppMiniWeixinAppSecret string `protobuf:"bytes,2,opt,name=common_app_mini_weixin_app_secret,json=commonAppMiniWeixinAppSecret,proto3" json:"common_app_mini_weixin_app_secret"` //AppSecret,小程序密钥
	CommonAppMiniWeixinTitle     string `protobuf:"bytes,3,opt,name=common_app_mini_weixin_title,json=commonAppMiniWeixinTitle,proto3" json:"common_app_mini_weixin_title"`               //名称
	CommonAppMiniWeixinDescribe  string `protobuf:"bytes,4,opt,name=common_app_mini_weixin_describe,json=commonAppMiniWeixinDescribe,proto3" json:"common_app_mini_weixin_describe"`      //描述
}

func (x *AppMiniWeixinConfig) Reset() {
	*x = AppMiniWeixinConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppMiniWeixinConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMiniWeixinConfig) ProtoMessage() {}

func (x *AppMiniWeixinConfig) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMiniWeixinConfig.ProtoReflect.Descriptor instead.
func (*AppMiniWeixinConfig) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{8}
}

func (x *AppMiniWeixinConfig) GetCommonAppMiniWeixinAppid() string {
	if x != nil {
		return x.CommonAppMiniWeixinAppid
	}
	return ""
}

func (x *AppMiniWeixinConfig) GetCommonAppMiniWeixinAppSecret() string {
	if x != nil {
		return x.CommonAppMiniWeixinAppSecret
	}
	return ""
}

func (x *AppMiniWeixinConfig) GetCommonAppMiniWeixinTitle() string {
	if x != nil {
		return x.CommonAppMiniWeixinTitle
	}
	return ""
}

func (x *AppMiniWeixinConfig) GetCommonAppMiniWeixinDescribe() string {
	if x != nil {
		return x.CommonAppMiniWeixinDescribe
	}
	return ""
}

//支付宝小程序配置
type AppMiniAlipayConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonAppMiniAlipayAppid        string `protobuf:"bytes,1,opt,name=common_app_mini_alipay_appid,json=commonAppMiniAlipayAppid,proto3" json:"common_app_mini_alipay_appid"`                          //AppID
	CommonAppMiniAlipayRsaPublic    string `protobuf:"bytes,2,opt,name=common_app_mini_alipay_rsa_public,json=commonAppMiniAlipayRsaPublic,proto3" json:"common_app_mini_alipay_rsa_public"`            //应用公钥
	CommonAppMiniAlipayRsaPrivate   string `protobuf:"bytes,3,opt,name=common_app_mini_alipay_rsa_private,json=commonAppMiniAlipayRsaPrivate,proto3" json:"common_app_mini_alipay_rsa_private"`         //应用私钥
	CommonAppMiniAlipayOutRsaPublic string `protobuf:"bytes,4,opt,name=common_app_mini_alipay_out_rsa_public,json=commonAppMiniAlipayOutRsaPublic,proto3" json:"common_app_mini_alipay_out_rsa_public"` //支付宝公钥
	CommonAppMiniAlipayTitle        string `protobuf:"bytes,5,opt,name=common_app_mini_alipay_title,json=commonAppMiniAlipayTitle,proto3" json:"common_app_mini_alipay_title"`                          //名称
	CommonAppMiniAlipayDescribe     string `protobuf:"bytes,6,opt,name=common_app_mini_alipay_describe,json=commonAppMiniAlipayDescribe,proto3" json:"common_app_mini_alipay_describe"`                 //描述
}

func (x *AppMiniAlipayConfig) Reset() {
	*x = AppMiniAlipayConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppMiniAlipayConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMiniAlipayConfig) ProtoMessage() {}

func (x *AppMiniAlipayConfig) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMiniAlipayConfig.ProtoReflect.Descriptor instead.
func (*AppMiniAlipayConfig) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{9}
}

func (x *AppMiniAlipayConfig) GetCommonAppMiniAlipayAppid() string {
	if x != nil {
		return x.CommonAppMiniAlipayAppid
	}
	return ""
}

func (x *AppMiniAlipayConfig) GetCommonAppMiniAlipayRsaPublic() string {
	if x != nil {
		return x.CommonAppMiniAlipayRsaPublic
	}
	return ""
}

func (x *AppMiniAlipayConfig) GetCommonAppMiniAlipayRsaPrivate() string {
	if x != nil {
		return x.CommonAppMiniAlipayRsaPrivate
	}
	return ""
}

func (x *AppMiniAlipayConfig) GetCommonAppMiniAlipayOutRsaPublic() string {
	if x != nil {
		return x.CommonAppMiniAlipayOutRsaPublic
	}
	return ""
}

func (x *AppMiniAlipayConfig) GetCommonAppMiniAlipayTitle() string {
	if x != nil {
		return x.CommonAppMiniAlipayTitle
	}
	return ""
}

func (x *AppMiniAlipayConfig) GetCommonAppMiniAlipayDescribe() string {
	if x != nil {
		return x.CommonAppMiniAlipayDescribe
	}
	return ""
}

//头条小程序配置
type AppMiniToutiaoConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonAppMiniToutiaoAppid     string `protobuf:"bytes,1,opt,name=common_app_mini_toutiao_appid,json=commonAppMiniToutiaoAppid,proto3" json:"common_app_mini_toutiao_appid"` //头条AppID
	CommonAppMiniToutiaoAppSecret string `protobuf:"bytes,2,opt,name=common_app_mini_toutiao_app_secret,json=commonAppMiniToutiaoAppSecret,proto3" json:"common_app_mini_toutiao_app_secret"`
	CommonAppMiniToutiaoTitle     string `protobuf:"bytes,3,opt,name=common_app_mini_toutiao_title,json=commonAppMiniToutiaoTitle,proto3" json:"common_app_mini_toutiao_title"`
	CommonAppMiniToutiaoDescribe  string `protobuf:"bytes,4,opt,name=common_app_mini_toutiao_describe,json=commonAppMiniToutiaoDescribe,proto3" json:"common_app_mini_toutiao_describe"`
}

func (x *AppMiniToutiaoConfig) Reset() {
	*x = AppMiniToutiaoConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppMiniToutiaoConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMiniToutiaoConfig) ProtoMessage() {}

func (x *AppMiniToutiaoConfig) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMiniToutiaoConfig.ProtoReflect.Descriptor instead.
func (*AppMiniToutiaoConfig) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{10}
}

func (x *AppMiniToutiaoConfig) GetCommonAppMiniToutiaoAppid() string {
	if x != nil {
		return x.CommonAppMiniToutiaoAppid
	}
	return ""
}

func (x *AppMiniToutiaoConfig) GetCommonAppMiniToutiaoAppSecret() string {
	if x != nil {
		return x.CommonAppMiniToutiaoAppSecret
	}
	return ""
}

func (x *AppMiniToutiaoConfig) GetCommonAppMiniToutiaoTitle() string {
	if x != nil {
		return x.CommonAppMiniToutiaoTitle
	}
	return ""
}

func (x *AppMiniToutiaoConfig) GetCommonAppMiniToutiaoDescribe() string {
	if x != nil {
		return x.CommonAppMiniToutiaoDescribe
	}
	return ""
}

//百度小程序配置
type AppMiniBaiduConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminAppMiniBaiduAppid     string `protobuf:"bytes,1,opt,name=admin_app_mini_baidu_appid,json=adminAppMiniBaiduAppid,proto3" json:"admin_app_mini_baidu_appid"`
	AdminAppMiniBaiduAppSecret string `protobuf:"bytes,2,opt,name=admin_app_mini_baidu_app_secret,json=adminAppMiniBaiduAppSecret,proto3" json:"admin_app_mini_baidu_app_secret"`
	CommonAppMiniBaiduTitle    string `protobuf:"bytes,3,opt,name=common_app_mini_baidu_title,json=commonAppMiniBaiduTitle,proto3" json:"common_app_mini_baidu_title"`
	CommonAppMiniBaiduDescribe string `protobuf:"bytes,4,opt,name=common_app_mini_baidu_describe,json=commonAppMiniBaiduDescribe,proto3" json:"common_app_mini_baidu_describe"`
}

func (x *AppMiniBaiduConfig) Reset() {
	*x = AppMiniBaiduConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppMiniBaiduConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMiniBaiduConfig) ProtoMessage() {}

func (x *AppMiniBaiduConfig) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMiniBaiduConfig.ProtoReflect.Descriptor instead.
func (*AppMiniBaiduConfig) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{11}
}

func (x *AppMiniBaiduConfig) GetAdminAppMiniBaiduAppid() string {
	if x != nil {
		return x.AdminAppMiniBaiduAppid
	}
	return ""
}

func (x *AppMiniBaiduConfig) GetAdminAppMiniBaiduAppSecret() string {
	if x != nil {
		return x.AdminAppMiniBaiduAppSecret
	}
	return ""
}

func (x *AppMiniBaiduConfig) GetCommonAppMiniBaiduTitle() string {
	if x != nil {
		return x.CommonAppMiniBaiduTitle
	}
	return ""
}

func (x *AppMiniBaiduConfig) GetCommonAppMiniBaiduDescribe() string {
	if x != nil {
		return x.CommonAppMiniBaiduDescribe
	}
	return ""
}

//QQ小程序配置
type AppMiniQQConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminAppMiniQqAppid     string `protobuf:"bytes,1,opt,name=admin_app_mini_qq_appid,json=adminAppMiniQqAppid,proto3" json:"admin_app_mini_qq_appid"`
	AdminAppMiniQqAppSecret string `protobuf:"bytes,2,opt,name=admin_app_mini_qq_app_secret,json=adminAppMiniQqAppSecret,proto3" json:"admin_app_mini_qq_app_secret"`
	AdminAppMiniQqAppToken  string `protobuf:"bytes,3,opt,name=admin_app_mini_qq_app_token,json=adminAppMiniQqAppToken,proto3" json:"admin_app_mini_qq_app_token"`
	CommonAppMiniQqTitle    string `protobuf:"bytes,4,opt,name=common_app_mini_qq_title,json=commonAppMiniQqTitle,proto3" json:"common_app_mini_qq_title"`
	CommonAppMiniQqDescribe string `protobuf:"bytes,5,opt,name=common_app_mini_qq_describe,json=commonAppMiniQqDescribe,proto3" json:"common_app_mini_qq_describe"`
}

func (x *AppMiniQQConfig) Reset() {
	*x = AppMiniQQConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppMiniQQConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMiniQQConfig) ProtoMessage() {}

func (x *AppMiniQQConfig) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMiniQQConfig.ProtoReflect.Descriptor instead.
func (*AppMiniQQConfig) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{12}
}

func (x *AppMiniQQConfig) GetAdminAppMiniQqAppid() string {
	if x != nil {
		return x.AdminAppMiniQqAppid
	}
	return ""
}

func (x *AppMiniQQConfig) GetAdminAppMiniQqAppSecret() string {
	if x != nil {
		return x.AdminAppMiniQqAppSecret
	}
	return ""
}

func (x *AppMiniQQConfig) GetAdminAppMiniQqAppToken() string {
	if x != nil {
		return x.AdminAppMiniQqAppToken
	}
	return ""
}

func (x *AppMiniQQConfig) GetCommonAppMiniQqTitle() string {
	if x != nil {
		return x.CommonAppMiniQqTitle
	}
	return ""
}

func (x *AppMiniQQConfig) GetCommonAppMiniQqDescribe() string {
	if x != nil {
		return x.CommonAppMiniQqDescribe
	}
	return ""
}

//快手小程序配置
type AppMiniKuaishouConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminAppMiniKuaishouAppid     string `protobuf:"bytes,1,opt,name=admin_app_mini_kuaishou_appid,json=adminAppMiniKuaishouAppid,proto3" json:"admin_app_mini_kuaishou_appid"`
	AdminAppMiniKuaishouAppSecret string `protobuf:"bytes,2,opt,name=admin_app_mini_kuaishou_app_secret,json=adminAppMiniKuaishouAppSecret,proto3" json:"admin_app_mini_kuaishou_app_secret"`
	CommonAppMiniKuaishouTitle    string `protobuf:"bytes,3,opt,name=common_app_mini_kuaishou_title,json=commonAppMiniKuaishouTitle,proto3" json:"common_app_mini_kuaishou_title"`
	CommonAppMiniKuaishouDescribe string `protobuf:"bytes,4,opt,name=common_app_mini_kuaishou_describe,json=commonAppMiniKuaishouDescribe,proto3" json:"common_app_mini_kuaishou_describe"`
}

func (x *AppMiniKuaishouConfig) Reset() {
	*x = AppMiniKuaishouConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppMiniKuaishouConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppMiniKuaishouConfig) ProtoMessage() {}

func (x *AppMiniKuaishouConfig) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppMiniKuaishouConfig.ProtoReflect.Descriptor instead.
func (*AppMiniKuaishouConfig) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{13}
}

func (x *AppMiniKuaishouConfig) GetAdminAppMiniKuaishouAppid() string {
	if x != nil {
		return x.AdminAppMiniKuaishouAppid
	}
	return ""
}

func (x *AppMiniKuaishouConfig) GetAdminAppMiniKuaishouAppSecret() string {
	if x != nil {
		return x.AdminAppMiniKuaishouAppSecret
	}
	return ""
}

func (x *AppMiniKuaishouConfig) GetCommonAppMiniKuaishouTitle() string {
	if x != nil {
		return x.CommonAppMiniKuaishouTitle
	}
	return ""
}

func (x *AppMiniKuaishouConfig) GetCommonAppMiniKuaishouDescribe() string {
	if x != nil {
		return x.CommonAppMiniKuaishouDescribe
	}
	return ""
}

// Sms配置信息
type SmsConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonSmsApiKey    string `protobuf:"bytes,1,opt,name=common_sms_api_key,json=commonSmsApiKey,proto3" json:"common_sms_api_key"`          //短信KeyID(Access Key ID)
	CommonSmsApiSecret string `protobuf:"bytes,2,opt,name=common_sms_api_secret,json=commonSmsApiSecret,proto3" json:"common_sms_api_secret"` //短信KeySecret(Access Key Secret)
	CommonSmsSign      string `protobuf:"bytes,3,opt,name=common_sms_sign,json=commonSmsSign,proto3" json:"common_sms_sign"`                  //短信签名(发送短信包含的签名)
}

func (x *SmsConfig) Reset() {
	*x = SmsConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmsConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsConfig) ProtoMessage() {}

func (x *SmsConfig) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsConfig.ProtoReflect.Descriptor instead.
func (*SmsConfig) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{14}
}

func (x *SmsConfig) GetCommonSmsApiKey() string {
	if x != nil {
		return x.CommonSmsApiKey
	}
	return ""
}

func (x *SmsConfig) GetCommonSmsApiSecret() string {
	if x != nil {
		return x.CommonSmsApiSecret
	}
	return ""
}

func (x *SmsConfig) GetCommonSmsSign() string {
	if x != nil {
		return x.CommonSmsSign
	}
	return ""
}

//邮件基础配置
type EmailBaseConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonEmailSmtpHost     string `protobuf:"bytes,1,opt,name=common_email_smtp_host,json=commonEmailSmtpHost,proto3" json:"common_email_smtp_host"`               //SMTP服务器(设置SMTP服务器的地址，如 smtp.163.com)
	CommonEmailSmtpPort     string `protobuf:"bytes,2,opt,name=common_email_smtp_port,json=commonEmailSmtpPort,proto3" json:"common_email_smtp_port"`               //SMTP端口(设置SMTP服务器的端口，默认为 25)
	CommonEmailSmtpAccount  string `protobuf:"bytes,3,opt,name=common_email_smtp_account,json=commonEmailSmtpAccount,proto3" json:"common_email_smtp_account"`      //发信人邮件地址(发信人邮件地址，使用SMTP协议发送的邮件地址，如 qindev@163.com)
	CommonEmailSmtpName     string `protobuf:"bytes,4,opt,name=common_email_smtp_name,json=commonEmailSmtpName,proto3" json:"common_email_smtp_name"`               //SMTP身份验证用户名(如 qindev@163.com)
	CommonEmailSmtpPwd      string `protobuf:"bytes,5,opt,name=common_email_smtp_pwd,json=commonEmailSmtpPwd,proto3" json:"common_email_smtp_pwd"`                  //SMTP身份验证密码(qindev@163.com邮件的密码或授权码)
	CommonEmailIsUseSsl     string `protobuf:"bytes,6,opt,name=common_email_is_use_ssl,json=commonEmailIsUseSsl,proto3" json:"common_email_is_use_ssl"`             //SSL方式加密(0否，1是)
	CommonEmailSmtpSendName string `protobuf:"bytes,7,opt,name=common_email_smtp_send_name,json=commonEmailSmtpSendName,proto3" json:"common_email_smtp_send_name"` //发件人显示名称(如 QinDev)
}

func (x *EmailBaseConfig) Reset() {
	*x = EmailBaseConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailBaseConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailBaseConfig) ProtoMessage() {}

func (x *EmailBaseConfig) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailBaseConfig.ProtoReflect.Descriptor instead.
func (*EmailBaseConfig) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{15}
}

func (x *EmailBaseConfig) GetCommonEmailSmtpHost() string {
	if x != nil {
		return x.CommonEmailSmtpHost
	}
	return ""
}

func (x *EmailBaseConfig) GetCommonEmailSmtpPort() string {
	if x != nil {
		return x.CommonEmailSmtpPort
	}
	return ""
}

func (x *EmailBaseConfig) GetCommonEmailSmtpAccount() string {
	if x != nil {
		return x.CommonEmailSmtpAccount
	}
	return ""
}

func (x *EmailBaseConfig) GetCommonEmailSmtpName() string {
	if x != nil {
		return x.CommonEmailSmtpName
	}
	return ""
}

func (x *EmailBaseConfig) GetCommonEmailSmtpPwd() string {
	if x != nil {
		return x.CommonEmailSmtpPwd
	}
	return ""
}

func (x *EmailBaseConfig) GetCommonEmailIsUseSsl() string {
	if x != nil {
		return x.CommonEmailIsUseSsl
	}
	return ""
}

func (x *EmailBaseConfig) GetCommonEmailSmtpSendName() string {
	if x != nil {
		return x.CommonEmailSmtpSendName
	}
	return ""
}

//邮模板配置件
type EmailTemplateConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AdminSmsLoginTemplate     string `protobuf:"bytes,1,opt,name=admin_sms_login_template,json=adminSmsLoginTemplate,proto3" json:"admin_sms_login_template"`             //后台登录-短信模板ID【后台】
	CommonSmsCurrencyTemplate string `protobuf:"bytes,2,opt,name=common_sms_currency_template,json=commonSmsCurrencyTemplate,proto3" json:"common_sms_currency_template"` //通用-短信模板ID【前端】
	HomeSmsLoginTemplate      string `protobuf:"bytes,3,opt,name=home_sms_login_template,json=homeSmsLoginTemplate,proto3" json:"home_sms_login_template"`                //用户登录-短信模板ID【前端】
	HomeSmsUserReg            string `protobuf:"bytes,4,opt,name=home_sms_user_reg,json=homeSmsUserReg,proto3" json:"home_sms_user_reg"`                                  //用户注册-短信模板ID【前端】
	HomeSmsUserForgetPwd      string `protobuf:"bytes,5,opt,name=home_sms_user_forget_pwd,json=homeSmsUserForgetPwd,proto3" json:"home_sms_user_forget_pwd"`              //密码找回-短信模板ID【前端】
	HomeSmsUserMobileBinding  string `protobuf:"bytes,7,opt,name=home_sms_user_mobile_binding,json=homeSmsUserMobileBinding,proto3" json:"home_sms_user_mobile_binding"`  //手机号码绑定-短信模板ID【前端】
}

func (x *EmailTemplateConfig) Reset() {
	*x = EmailTemplateConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmailTemplateConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmailTemplateConfig) ProtoMessage() {}

func (x *EmailTemplateConfig) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmailTemplateConfig.ProtoReflect.Descriptor instead.
func (*EmailTemplateConfig) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{16}
}

func (x *EmailTemplateConfig) GetAdminSmsLoginTemplate() string {
	if x != nil {
		return x.AdminSmsLoginTemplate
	}
	return ""
}

func (x *EmailTemplateConfig) GetCommonSmsCurrencyTemplate() string {
	if x != nil {
		return x.CommonSmsCurrencyTemplate
	}
	return ""
}

func (x *EmailTemplateConfig) GetHomeSmsLoginTemplate() string {
	if x != nil {
		return x.HomeSmsLoginTemplate
	}
	return ""
}

func (x *EmailTemplateConfig) GetHomeSmsUserReg() string {
	if x != nil {
		return x.HomeSmsUserReg
	}
	return ""
}

func (x *EmailTemplateConfig) GetHomeSmsUserForgetPwd() string {
	if x != nil {
		return x.HomeSmsUserForgetPwd
	}
	return ""
}

func (x *EmailTemplateConfig) GetHomeSmsUserMobileBinding() string {
	if x != nil {
		return x.HomeSmsUserMobileBinding
	}
	return ""
}

//-------- map ---------
//地图数据配置
type MapConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonMapType       string `protobuf:"bytes,1,opt,name=common_map_type,json=commonMapType,proto3" json:"common_map_type"`                     //地图类型
	CommonBaiduMapAk    string `protobuf:"bytes,2,opt,name=common_baidu_map_ak,json=commonBaiduMapAk,proto3" json:"common_baidu_map_ak"`          //百度地图api密钥
	CommonAmapMapAk     string `protobuf:"bytes,3,opt,name=common_amap_map_ak,json=commonAmapMapAk,proto3" json:"common_amap_map_ak"`             //高德地图api秘钥
	CommonTencentMapAk  string `protobuf:"bytes,4,opt,name=common_tencent_map_ak,json=commonTencentMapAk,proto3" json:"common_tencent_map_ak"`    //腾讯地图api秘钥
	CommonTiandituMapAk string `protobuf:"bytes,5,opt,name=common_tianditu_map_ak,json=commonTiandituMapAk,proto3" json:"common_tianditu_map_ak"` //天地图api秘钥
}

func (x *MapConfig) Reset() {
	*x = MapConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MapConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapConfig) ProtoMessage() {}

func (x *MapConfig) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapConfig.ProtoReflect.Descriptor instead.
func (*MapConfig) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{17}
}

func (x *MapConfig) GetCommonMapType() string {
	if x != nil {
		return x.CommonMapType
	}
	return ""
}

func (x *MapConfig) GetCommonBaiduMapAk() string {
	if x != nil {
		return x.CommonBaiduMapAk
	}
	return ""
}

func (x *MapConfig) GetCommonAmapMapAk() string {
	if x != nil {
		return x.CommonAmapMapAk
	}
	return ""
}

func (x *MapConfig) GetCommonTencentMapAk() string {
	if x != nil {
		return x.CommonTencentMapAk
	}
	return ""
}

func (x *MapConfig) GetCommonTiandituMapAk() string {
	if x != nil {
		return x.CommonTiandituMapAk
	}
	return ""
}

//店铺信息配置
type StoreConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonStoreTitle           string `protobuf:"bytes,1,opt,name=common_store_title,json=commonStoreTitle,proto3" json:"common_store_title"`                                 //店铺名称
	CommonStoreCustomerTel     string `protobuf:"bytes,2,opt,name=common_store_customer_tel,json=commonStoreCustomerTel,proto3" json:"common_store_customer_tel"`             //商店电话
	CommonStoreCustomerEmail   string `protobuf:"bytes,3,opt,name=common_store_customer_email,json=commonStoreCustomerEmail,proto3" json:"common_store_customer_email"`       //商店邮箱
	CommonStoreCustomerAddress string `protobuf:"bytes,4,opt,name=common_store_customer_address,json=commonStoreCustomerAddress,proto3" json:"common_store_customer_address"` //店铺地址
	CommonStoreCustomerQrcode  string `protobuf:"bytes,5,opt,name=common_store_customer_qrcode,json=commonStoreCustomerQrcode,proto3" json:"common_store_customer_qrcode"`    //店铺二维码
}

func (x *StoreConfig) Reset() {
	*x = StoreConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StoreConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreConfig) ProtoMessage() {}

func (x *StoreConfig) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreConfig.ProtoReflect.Descriptor instead.
func (*StoreConfig) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{18}
}

func (x *StoreConfig) GetCommonStoreTitle() string {
	if x != nil {
		return x.CommonStoreTitle
	}
	return ""
}

func (x *StoreConfig) GetCommonStoreCustomerTel() string {
	if x != nil {
		return x.CommonStoreCustomerTel
	}
	return ""
}

func (x *StoreConfig) GetCommonStoreCustomerEmail() string {
	if x != nil {
		return x.CommonStoreCustomerEmail
	}
	return ""
}

func (x *StoreConfig) GetCommonStoreCustomerAddress() string {
	if x != nil {
		return x.CommonStoreCustomerAddress
	}
	return ""
}

func (x *StoreConfig) GetCommonStoreCustomerQrcode() string {
	if x != nil {
		return x.CommonStoreCustomerQrcode
	}
	return ""
}

//系统功能配置
type SystemConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CommonIsEnableVip      string `protobuf:"bytes,1,opt,name=common_is_enable_vip,json=commonIsEnableVip,proto3" json:"common_is_enable_vip"`                //开启VIP功能
	CommonIsEnableWallet   string `protobuf:"bytes,2,opt,name=common_is_enable_wallet,json=commonIsEnableWallet,proto3" json:"common_is_enable_wallet"`       //开启钱包功能
	CommonIsEnableIntegral string `protobuf:"bytes,3,opt,name=common_is_enable_integral,json=commonIsEnableIntegral,proto3" json:"common_is_enable_integral"` //开启积分功能
}

func (x *SystemConfig) Reset() {
	*x = SystemConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemConfig) ProtoMessage() {}

func (x *SystemConfig) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemConfig.ProtoReflect.Descriptor instead.
func (*SystemConfig) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{19}
}

func (x *SystemConfig) GetCommonIsEnableVip() string {
	if x != nil {
		return x.CommonIsEnableVip
	}
	return ""
}

func (x *SystemConfig) GetCommonIsEnableWallet() string {
	if x != nil {
		return x.CommonIsEnableWallet
	}
	return ""
}

func (x *SystemConfig) GetCommonIsEnableIntegral() string {
	if x != nil {
		return x.CommonIsEnableIntegral
	}
	return ""
}

type ConfigureRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Code   string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code"` //唯一标识
	Name   string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name"` //名称
	Type   string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type"` //类型：admin后台，home前台，common公共
	Group  string   `protobuf:"bytes,5,opt,name=group,proto3" json:"group"`
	Groups []string `protobuf:"bytes,6,rep,name=groups,proto3" json:"groups"`
	Names  []string `protobuf:"bytes,7,rep,name=names,proto3" json:"names"`
	Ids    []int64  `protobuf:"varint,8,rep,packed,name=ids,proto3" json:"ids"`
}

func (x *ConfigureRequest) Reset() {
	*x = ConfigureRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureRequest) ProtoMessage() {}

func (x *ConfigureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureRequest.ProtoReflect.Descriptor instead.
func (*ConfigureRequest) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{20}
}

func (x *ConfigureRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConfigureRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ConfigureRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ConfigureRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ConfigureRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *ConfigureRequest) GetGroups() []string {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *ConfigureRequest) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *ConfigureRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ConfigureData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//站点配置
	SiteBase   *SiteBaseConfig   `protobuf:"bytes,1,opt,name=site_base,json=siteBase,proto3" json:"site_base"`
	SiteState  *SiteStateConfig  `protobuf:"bytes,2,opt,name=site_state,json=siteState,proto3" json:"site_state"`
	SiteDomain *SiteDomainConfig `protobuf:"bytes,3,opt,name=site_domain,json=siteDomain,proto3" json:"site_domain"`
	SiteBeian  *SiteBeianConfig  `protobuf:"bytes,4,opt,name=site_beian,json=siteBeian,proto3" json:"site_beian"`
	SiteSeo    *SiteSeoConfig    `protobuf:"bytes,5,opt,name=site_seo,json=siteSeo,proto3" json:"site_seo"`
	SiteSearch *SiteSearchConfig `protobuf:"bytes,6,opt,name=site_search,json=siteSearch,proto3" json:"site_search"`
	//手机配置
	MobileBase      *MobileBaseConfig      `protobuf:"bytes,8,opt,name=mobile_base,json=mobileBase,proto3" json:"mobile_base"`
	MobileCommon    *MobileCommonConfig    `protobuf:"bytes,9,opt,name=mobile_common,json=mobileCommon,proto3" json:"mobile_common"`
	AppminiWeixin   *AppMiniWeixinConfig   `protobuf:"bytes,10,opt,name=appmini_weixin,json=appminiWeixin,proto3" json:"appmini_weixin"`
	AppminiAlipay   *AppMiniAlipayConfig   `protobuf:"bytes,11,opt,name=appmini_alipay,json=appminiAlipay,proto3" json:"appmini_alipay"`
	AppminiBaidu    *AppMiniBaiduConfig    `protobuf:"bytes,12,opt,name=appmini_baidu,json=appminiBaidu,proto3" json:"appmini_baidu"`
	AppminiToutiao  *AppMiniToutiaoConfig  `protobuf:"bytes,13,opt,name=appmini_toutiao,json=appminiToutiao,proto3" json:"appmini_toutiao"`
	AppminiQq       *AppMiniQQConfig       `protobuf:"bytes,14,opt,name=appmini_qq,json=appminiQq,proto3" json:"appmini_qq"`
	AppminiKuaishou *AppMiniKuaishouConfig `protobuf:"bytes,15,opt,name=appmini_kuaishou,json=appminiKuaishou,proto3" json:"appmini_kuaishou"`
	//邮件配置
	EmailBase     *EmailBaseConfig     `protobuf:"bytes,16,opt,name=email_base,json=emailBase,proto3" json:"email_base"`             //邮件基础设置
	EmailTemplate *EmailTemplateConfig `protobuf:"bytes,17,opt,name=email_template,json=emailTemplate,proto3" json:"email_template"` //邮件消息模板
	//短信配置
	SmsBase *SmsConfig    `protobuf:"bytes,18,opt,name=sms_base,json=smsBase,proto3" json:"sms_base"` //短信配置
	Map     *MapConfig    `protobuf:"bytes,19,opt,name=map,proto3" json:"map"`                        //地图配置
	Store   *StoreConfig  `protobuf:"bytes,20,opt,name=store,proto3" json:"store"`                    //店铺信息
	System  *SystemConfig `protobuf:"bytes,21,opt,name=system,proto3" json:"system"`                  //系统功能配置
}

func (x *ConfigureData) Reset() {
	*x = ConfigureData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureData) ProtoMessage() {}

func (x *ConfigureData) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureData.ProtoReflect.Descriptor instead.
func (*ConfigureData) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{21}
}

func (x *ConfigureData) GetSiteBase() *SiteBaseConfig {
	if x != nil {
		return x.SiteBase
	}
	return nil
}

func (x *ConfigureData) GetSiteState() *SiteStateConfig {
	if x != nil {
		return x.SiteState
	}
	return nil
}

func (x *ConfigureData) GetSiteDomain() *SiteDomainConfig {
	if x != nil {
		return x.SiteDomain
	}
	return nil
}

func (x *ConfigureData) GetSiteBeian() *SiteBeianConfig {
	if x != nil {
		return x.SiteBeian
	}
	return nil
}

func (x *ConfigureData) GetSiteSeo() *SiteSeoConfig {
	if x != nil {
		return x.SiteSeo
	}
	return nil
}

func (x *ConfigureData) GetSiteSearch() *SiteSearchConfig {
	if x != nil {
		return x.SiteSearch
	}
	return nil
}

func (x *ConfigureData) GetMobileBase() *MobileBaseConfig {
	if x != nil {
		return x.MobileBase
	}
	return nil
}

func (x *ConfigureData) GetMobileCommon() *MobileCommonConfig {
	if x != nil {
		return x.MobileCommon
	}
	return nil
}

func (x *ConfigureData) GetAppminiWeixin() *AppMiniWeixinConfig {
	if x != nil {
		return x.AppminiWeixin
	}
	return nil
}

func (x *ConfigureData) GetAppminiAlipay() *AppMiniAlipayConfig {
	if x != nil {
		return x.AppminiAlipay
	}
	return nil
}

func (x *ConfigureData) GetAppminiBaidu() *AppMiniBaiduConfig {
	if x != nil {
		return x.AppminiBaidu
	}
	return nil
}

func (x *ConfigureData) GetAppminiToutiao() *AppMiniToutiaoConfig {
	if x != nil {
		return x.AppminiToutiao
	}
	return nil
}

func (x *ConfigureData) GetAppminiQq() *AppMiniQQConfig {
	if x != nil {
		return x.AppminiQq
	}
	return nil
}

func (x *ConfigureData) GetAppminiKuaishou() *AppMiniKuaishouConfig {
	if x != nil {
		return x.AppminiKuaishou
	}
	return nil
}

func (x *ConfigureData) GetEmailBase() *EmailBaseConfig {
	if x != nil {
		return x.EmailBase
	}
	return nil
}

func (x *ConfigureData) GetEmailTemplate() *EmailTemplateConfig {
	if x != nil {
		return x.EmailTemplate
	}
	return nil
}

func (x *ConfigureData) GetSmsBase() *SmsConfig {
	if x != nil {
		return x.SmsBase
	}
	return nil
}

func (x *ConfigureData) GetMap() *MapConfig {
	if x != nil {
		return x.Map
	}
	return nil
}

func (x *ConfigureData) GetStore() *StoreConfig {
	if x != nil {
		return x.Store
	}
	return nil
}

func (x *ConfigureData) GetSystem() *SystemConfig {
	if x != nil {
		return x.System
	}
	return nil
}

type ConfigureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *ConfigureData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error  `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *ConfigureResponse) Reset() {
	*x = ConfigureResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureResponse) ProtoMessage() {}

func (x *ConfigureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureResponse.ProtoReflect.Descriptor instead.
func (*ConfigureResponse) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{22}
}

func (x *ConfigureResponse) GetData() *ConfigureData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigureResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type ConfigureDictResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  map[string]string `protobuf:"bytes,1,rep,name=data,proto3" json:"data" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Error *common.Error     `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *ConfigureDictResponse) Reset() {
	*x = ConfigureDictResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_configureService_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigureDictResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigureDictResponse) ProtoMessage() {}

func (x *ConfigureDictResponse) ProtoReflect() protoreflect.Message {
	mi := &file_configureService_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigureDictResponse.ProtoReflect.Descriptor instead.
func (*ConfigureDictResponse) Descriptor() ([]byte, []int) {
	return file_configureService_proto_rawDescGZIP(), []int{23}
}

func (x *ConfigureDictResponse) GetData() map[string]string {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ConfigureDictResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_configureService_proto protoreflect.FileDescriptor

var file_configureService_proto_rawDesc = []byte{
	0x0a, 0x16, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe5, 0x01, 0x0a, 0x0e, 0x53, 0x69, 0x74, 0x65, 0x42, 0x61,
	0x73, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x7a, 0x6f, 0x6e,
	0x65, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x53,
	0x69, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x68, 0x6f, 0x6d, 0x65, 0x5f,
	0x73, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x69, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x2b, 0x0a,
	0x12, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x5f,
	0x77, 0x61, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x68, 0x6f, 0x6d, 0x65, 0x53,
	0x69, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x57, 0x61, 0x70, 0x12, 0x31, 0x0a, 0x15, 0x68, 0x6f,
	0x6d, 0x65, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x73, 0x71, 0x75,
	0x61, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x68, 0x6f, 0x6d, 0x65, 0x53,
	0x69, 0x74, 0x65, 0x4c, 0x6f, 0x67, 0x6f, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x22, 0xda, 0x01,
	0x0a, 0x0f, 0x53, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x26, 0x0a, 0x0f, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x68, 0x6f, 0x6d, 0x65,
	0x53, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x36, 0x0a, 0x18, 0x68, 0x6f, 0x6d,
	0x65, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x77, 0x65, 0x62, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x68, 0x6f, 0x6d,
	0x65, 0x53, 0x69, 0x74, 0x65, 0x57, 0x65, 0x62, 0x48, 0x6f, 0x6d, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x32, 0x0a, 0x16, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x77,
	0x65, 0x62, 0x5f, 0x70, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x12, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x69, 0x74, 0x65, 0x57, 0x65, 0x62, 0x50, 0x63,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x69,
	0x74, 0x65, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x69, 0x74, 0x65, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0xb2, 0x01, 0x0a, 0x10, 0x53,
	0x69, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x3b, 0x0a,
	0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x63, 0x64, 0x6e, 0x5f, 0x61, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x17, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x64, 0x6e, 0x41, 0x74, 0x74, 0x61,
	0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x63, 0x64, 0x6e, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f,
	0x68, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x43, 0x64, 0x6e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x48, 0x6f, 0x73, 0x74, 0x22,
	0xb1, 0x02, 0x0a, 0x0f, 0x53, 0x69, 0x74, 0x65, 0x42, 0x65, 0x69, 0x61, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x22, 0x0a, 0x0d, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x69, 0x74, 0x65,
	0x5f, 0x69, 0x63, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x68, 0x6f, 0x6d, 0x65,
	0x53, 0x69, 0x74, 0x65, 0x49, 0x63, 0x70, 0x12, 0x42, 0x0a, 0x1e, 0x68, 0x6f, 0x6d, 0x65, 0x5f,
	0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x1a, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x40, 0x0a, 0x1d, 0x68,
	0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74,
	0x79, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x19, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x39, 0x0a,
	0x19, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x74, 0x65, 0x6c, 0x65, 0x63,
	0x6f, 0x6d, 0x5f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x16, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x69, 0x74, 0x65, 0x54, 0x65, 0x6c, 0x65, 0x63, 0x6f,
	0x6d, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x19, 0x68, 0x6f, 0x6d, 0x65,
	0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x6c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x68, 0x6f, 0x6d,
	0x65, 0x53, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x4c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x22, 0xae, 0x01, 0x0a, 0x0d, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x6f, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2d, 0x0a, 0x13, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x65,
	0x6f, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x65, 0x6f, 0x53, 0x69, 0x74, 0x65, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x16, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x6f,
	0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x65, 0x6f, 0x53, 0x69, 0x74,
	0x65, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x39, 0x0a, 0x19, 0x68, 0x6f, 0x6d,
	0x65, 0x5f, 0x73, 0x65, 0x6f, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x68, 0x6f,
	0x6d, 0x65, 0x53, 0x65, 0x6f, 0x53, 0x69, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x22, 0xec, 0x03, 0x0a, 0x10, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3b, 0x0a, 0x1a, 0x68, 0x6f, 0x6d,
	0x65, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x68,
	0x6f, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x37, 0x0a, 0x18, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x30, 0x0a, 0x14, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x68,
	0x6f, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x12, 0x2f, 0x0a, 0x14, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x5f, 0x69, 0x73, 0x5f, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x73, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x12, 0x35, 0x0a, 0x17, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x5f, 0x69, 0x73, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x14, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49,
	0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x2f, 0x0a, 0x14, 0x68, 0x6f, 0x6d,
	0x65, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x49, 0x73, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x68, 0x6f,
	0x6d, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x69, 0x73, 0x5f, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x68, 0x6f, 0x6d, 0x65, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x2d, 0x0a,
	0x13, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x69, 0x73, 0x5f,
	0x73, 0x70, 0x65, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x68, 0x6f, 0x6d, 0x65,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x73, 0x53, 0x70, 0x65, 0x63, 0x12, 0x35, 0x0a, 0x17,
	0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x68,
	0x6f, 0x6d, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x22, 0xb0, 0x02, 0x0a, 0x10, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x61,
	0x73, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x29, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x68, 0x35, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x48, 0x35,
	0x55, 0x72, 0x6c, 0x12, 0x42, 0x0a, 0x1e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x69, 0x73,
	0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x63, 0x69, 0x73, 0x65, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x49, 0x73, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x63, 0x69,
	0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x44, 0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x43, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x65, 0x6c, 0x12, 0x2c, 0x0a,
	0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x6f, 0x74,
	0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x53, 0x68, 0x6f, 0x70, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x19, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6e, 0x74, 0x65,
	0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x43, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x22, 0x88, 0x05, 0x0a, 0x12, 0x4d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x4d, 0x0a,
	0x24, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x73, 0x5f,
	0x6d, 0x61, 0x6e, 0x64, 0x61, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x73, 0x4d, 0x61, 0x6e, 0x64, 0x61, 0x74, 0x6f,
	0x72, 0x79, 0x42, 0x69, 0x6e, 0x64, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x43, 0x0a, 0x1f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x73, 0x5f, 0x75, 0x73,
	0x65, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70,
	0x49, 0x73, 0x55, 0x73, 0x65, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x3c, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f,
	0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70,
	0x70, 0x49, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12,
	0x3c, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x73,
	0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x49,
	0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x3e, 0x0a,
	0x1c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x73, 0x5f, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x49, 0x73,
	0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a,
	0x1e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x73, 0x5f, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x76, 0x5f, 0x66, 0x69, 0x78, 0x65, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70,
	0x49, 0x73, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x76, 0x46, 0x69, 0x78, 0x65, 0x64,
	0x12, 0x3b, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x73, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x5f, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x76, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70,
	0x49, 0x73, 0x48, 0x65, 0x61, 0x64, 0x56, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x76, 0x12, 0x4b, 0x0a,
	0x23, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6f, 0x6e, 0x65,
	0x6b, 0x65, 0x79, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x5f, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52, 0x1e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x6e, 0x65, 0x6b, 0x65, 0x79, 0x42, 0x69, 0x6e, 0x64,
	0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x28, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x5f, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x69, 0x6d, 0x70, 0x6f, 0x72,
	0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x23, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x49, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0xa4, 0x02, 0x0a, 0x13, 0x41, 0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69, 0x57, 0x65, 0x69,
	0x78, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x3e, 0x0a, 0x1c, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x77, 0x65, 0x69,
	0x78, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69, 0x57, 0x65,
	0x69, 0x78, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x69, 0x64, 0x12, 0x47, 0x0a, 0x21, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x77, 0x65, 0x69,
	0x78, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x1c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x4d,
	0x69, 0x6e, 0x69, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x12, 0x3e, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70,
	0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x5f, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x41, 0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x44, 0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70,
	0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e,
	0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x22, 0xbf, 0x03, 0x0a, 0x13, 0x41, 0x70, 0x70,
	0x4d, 0x69, 0x6e, 0x69, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x3e, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6d,
	0x69, 0x6e, 0x69, 0x5f, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x61, 0x70, 0x70, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70,
	0x70, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x41, 0x70, 0x70, 0x69, 0x64,
	0x12, 0x47, 0x0a, 0x21, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6d,
	0x69, 0x6e, 0x69, 0x5f, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x72, 0x73, 0x61, 0x5f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1c, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79,
	0x52, 0x73, 0x61, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x12, 0x49, 0x0a, 0x22, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x61, 0x6c, 0x69,
	0x70, 0x61, 0x79, 0x5f, 0x72, 0x73, 0x61, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70,
	0x4d, 0x69, 0x6e, 0x69, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x52, 0x73, 0x61, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x12, 0x4e, 0x0a, 0x25, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61,
	0x70, 0x70, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x6f,
	0x75, 0x74, 0x5f, 0x72, 0x73, 0x61, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x1f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x4d, 0x69,
	0x6e, 0x69, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x4f, 0x75, 0x74, 0x52, 0x73, 0x61, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x12, 0x3e, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61,
	0x70, 0x70, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x41, 0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x44, 0x0a, 0x1f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61,
	0x70, 0x70, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x6c, 0x69, 0x70,
	0x61, 0x79, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x22, 0xad, 0x02, 0x0a, 0x14, 0x41,
	0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x6f, 0x75, 0x74, 0x69, 0x61, 0x6f, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x40, 0x0a, 0x1d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70,
	0x70, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x74, 0x6f, 0x75, 0x74, 0x69, 0x61, 0x6f, 0x5f, 0x61,
	0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x41, 0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x6f, 0x75, 0x74, 0x69, 0x61, 0x6f,
	0x41, 0x70, 0x70, 0x69, 0x64, 0x12, 0x49, 0x0a, 0x22, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f,
	0x61, 0x70, 0x70, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x74, 0x6f, 0x75, 0x74, 0x69, 0x61, 0x6f,
	0x5f, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x1d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69,
	0x54, 0x6f, 0x75, 0x74, 0x69, 0x61, 0x6f, 0x41, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x12, 0x40, 0x0a, 0x1d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6d,
	0x69, 0x6e, 0x69, 0x5f, 0x74, 0x6f, 0x75, 0x74, 0x69, 0x61, 0x6f, 0x5f, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41,
	0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x6f, 0x75, 0x74, 0x69, 0x61, 0x6f, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x46, 0x0a, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70,
	0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x74, 0x6f, 0x75, 0x74, 0x69, 0x61, 0x6f, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1c, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69, 0x54, 0x6f, 0x75, 0x74, 0x69,
	0x61, 0x6f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x22, 0x97, 0x02, 0x0a, 0x12, 0x41,
	0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69, 0x42, 0x61, 0x69, 0x64, 0x75, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x3a, 0x0a, 0x1a, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6d,
	0x69, 0x6e, 0x69, 0x5f, 0x62, 0x61, 0x69, 0x64, 0x75, 0x5f, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x4d,
	0x69, 0x6e, 0x69, 0x42, 0x61, 0x69, 0x64, 0x75, 0x41, 0x70, 0x70, 0x69, 0x64, 0x12, 0x43, 0x0a,
	0x1f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f,
	0x62, 0x61, 0x69, 0x64, 0x75, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x70, 0x70,
	0x4d, 0x69, 0x6e, 0x69, 0x42, 0x61, 0x69, 0x64, 0x75, 0x41, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x12, 0x3c, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70,
	0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x62, 0x61, 0x69, 0x64, 0x75, 0x5f, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41,
	0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69, 0x42, 0x61, 0x69, 0x64, 0x75, 0x54, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x42, 0x0a, 0x1e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6d,
	0x69, 0x6e, 0x69, 0x5f, 0x62, 0x61, 0x69, 0x64, 0x75, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x41, 0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69, 0x42, 0x61, 0x69, 0x64, 0x75, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x22, 0xb9, 0x02, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69,
	0x51, 0x51, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x34, 0x0a, 0x17, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x71, 0x71, 0x5f, 0x61, 0x70,
	0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x41, 0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69, 0x51, 0x71, 0x41, 0x70, 0x70, 0x69, 0x64, 0x12, 0x3d,
	0x0a, 0x1c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6d, 0x69, 0x6e, 0x69,
	0x5f, 0x71, 0x71, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x4d, 0x69,
	0x6e, 0x69, 0x51, 0x71, 0x41, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x3b, 0x0a,
	0x1b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f,
	0x71, 0x71, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x16, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69,
	0x51, 0x71, 0x41, 0x70, 0x70, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x36, 0x0a, 0x18, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x71, 0x71,
	0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69, 0x51, 0x71, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x3c, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70,
	0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x71, 0x71, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41,
	0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69, 0x51, 0x71, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x22, 0xb2, 0x02, 0x0a, 0x15, 0x41, 0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69, 0x4b, 0x75, 0x61, 0x69,
	0x73, 0x68, 0x6f, 0x75, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x40, 0x0a, 0x1d, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x6b, 0x75, 0x61,
	0x69, 0x73, 0x68, 0x6f, 0x75, 0x5f, 0x61, 0x70, 0x70, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x19, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69, 0x4b,
	0x75, 0x61, 0x69, 0x73, 0x68, 0x6f, 0x75, 0x41, 0x70, 0x70, 0x69, 0x64, 0x12, 0x49, 0x0a, 0x22,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x6b,
	0x75, 0x61, 0x69, 0x73, 0x68, 0x6f, 0x75, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x41,
	0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69, 0x4b, 0x75, 0x61, 0x69, 0x73, 0x68, 0x6f, 0x75, 0x41, 0x70,
	0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x42, 0x0a, 0x1e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x6b, 0x75, 0x61, 0x69, 0x73,
	0x68, 0x6f, 0x75, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69, 0x4b, 0x75,
	0x61, 0x69, 0x73, 0x68, 0x6f, 0x75, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x48, 0x0a, 0x21, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x6b,
	0x75, 0x61, 0x69, 0x73, 0x68, 0x6f, 0x75, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x70,
	0x70, 0x4d, 0x69, 0x6e, 0x69, 0x4b, 0x75, 0x61, 0x69, 0x73, 0x68, 0x6f, 0x75, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x22, 0x93, 0x01, 0x0a, 0x09, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x2b, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x73, 0x6d,
	0x73, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x6d, 0x73, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79,
	0x12, 0x31, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x73, 0x6d, 0x73, 0x5f, 0x61,
	0x70, 0x69, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x6d, 0x73, 0x41, 0x70, 0x69, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x73, 0x6d,
	0x73, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x6d, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x22, 0x92, 0x03, 0x0a, 0x0f,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x33, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f,
	0x73, 0x6d, 0x74, 0x70, 0x5f, 0x68, 0x6f, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x6d, 0x74, 0x70,
	0x48, 0x6f, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x73, 0x6d, 0x74, 0x70, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x53, 0x6d, 0x74, 0x70, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x39, 0x0a, 0x19, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x73, 0x6d, 0x74, 0x70, 0x5f, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x6d, 0x74, 0x70, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x33, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x73, 0x6d, 0x74, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69,
	0x6c, 0x53, 0x6d, 0x74, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x15, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x73, 0x6d, 0x74, 0x70, 0x5f, 0x70,
	0x77, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x53, 0x6d, 0x74, 0x70, 0x50, 0x77, 0x64, 0x12, 0x34, 0x0a, 0x17,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x73, 0x5f,
	0x75, 0x73, 0x65, 0x5f, 0x73, 0x73, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x49, 0x73, 0x55, 0x73, 0x65, 0x53,
	0x73, 0x6c, 0x12, 0x3c, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x5f, 0x73, 0x6d, 0x74, 0x70, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x53, 0x6d, 0x74, 0x70, 0x53, 0x65, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0xe9, 0x02, 0x0a, 0x13, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x37, 0x0a, 0x18, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x5f, 0x73, 0x6d, 0x73, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x53, 0x6d, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x12, 0x3f, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x73, 0x6d, 0x73, 0x5f,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53,
	0x6d, 0x73, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x6d, 0x73, 0x5f, 0x6c,
	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x14, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x6d, 0x73, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x29, 0x0a, 0x11, 0x68, 0x6f, 0x6d,
	0x65, 0x5f, 0x73, 0x6d, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x6d, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x67, 0x12, 0x36, 0x0a, 0x18, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x6d, 0x73,
	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x66, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x77, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x6d, 0x73, 0x55,
	0x73, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x67, 0x65, 0x74, 0x50, 0x77, 0x64, 0x12, 0x3e, 0x0a, 0x1c,
	0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x73, 0x6d, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6d, 0x6f,
	0x62, 0x69, 0x6c, 0x65, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x18, 0x68, 0x6f, 0x6d, 0x65, 0x53, 0x6d, 0x73, 0x55, 0x73, 0x65, 0x72, 0x4d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x22, 0xf7, 0x01, 0x0a,
	0x09, 0x4d, 0x61, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x26, 0x0a, 0x0f, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x4d, 0x61, 0x70, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x2d, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x62, 0x61, 0x69,
	0x64, 0x75, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x61, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x42, 0x61, 0x69, 0x64, 0x75, 0x4d, 0x61, 0x70, 0x41,
	0x6b, 0x12, 0x2b, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x61, 0x6d, 0x61, 0x70,
	0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x61, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x41, 0x6d, 0x61, 0x70, 0x4d, 0x61, 0x70, 0x41, 0x6b, 0x12, 0x31,
	0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x6e, 0x63, 0x65, 0x6e, 0x74,
	0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x61, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x65, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x4d, 0x61, 0x70, 0x41,
	0x6b, 0x12, 0x33, 0x0a, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x61, 0x6e,
	0x64, 0x69, 0x74, 0x75, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x61, 0x6b, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x54, 0x69, 0x61, 0x6e, 0x64, 0x69, 0x74,
	0x75, 0x4d, 0x61, 0x70, 0x41, 0x6b, 0x22, 0xb9, 0x02, 0x0a, 0x0b, 0x53, 0x74, 0x6f, 0x72, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x2c, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x39, 0x0a, 0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x74, 0x65,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x54, 0x65, 0x6c, 0x12,
	0x3d, 0x0a, 0x1b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x74, 0x6f, 0x72,
	0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x41,
	0x0a, 0x1d, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1a, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x3f, 0x0a, 0x1c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x71, 0x72, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x51, 0x72, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x0c, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x2f, 0x0a, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x69, 0x73,
	0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x76, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x49, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x56, 0x69, 0x70, 0x12, 0x35, 0x0a, 0x17, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x69,
	0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x49, 0x73, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x39, 0x0a, 0x19, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x49, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x22, 0xb4, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x16, 0x0a,
	0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0xba, 0x09,
	0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x35, 0x0a, 0x09, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x69,
	0x74, 0x65, 0x42, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x08, 0x73, 0x69,
	0x74, 0x65, 0x42, 0x61, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x0a, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x73, 0x69, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x53, 0x69, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x0a, 0x73, 0x69, 0x74, 0x65, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12, 0x38, 0x0a,
	0x0a, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x62, 0x65, 0x69, 0x61, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x69, 0x74,
	0x65, 0x42, 0x65, 0x69, 0x61, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x73, 0x69,
	0x74, 0x65, 0x42, 0x65, 0x69, 0x61, 0x6e, 0x12, 0x32, 0x0a, 0x08, 0x73, 0x69, 0x74, 0x65, 0x5f,
	0x73, 0x65, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x69, 0x74, 0x65, 0x53, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x07, 0x73, 0x69, 0x74, 0x65, 0x53, 0x65, 0x6f, 0x12, 0x3b, 0x0a, 0x0b, 0x73,
	0x69, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x69, 0x74, 0x65,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x73, 0x69,
	0x74, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x3b, 0x0a, 0x0b, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x42,
	0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0a, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x42, 0x61, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x0d, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x5f,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x6d, 0x6f, 0x62, 0x69,
	0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6d,
	0x69, 0x6e, 0x69, 0x5f, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x4d,
	0x69, 0x6e, 0x69, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x0d, 0x61, 0x70, 0x70, 0x6d, 0x69, 0x6e, 0x69, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x12, 0x44,
	0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x41, 0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6d, 0x69, 0x6e, 0x69, 0x41, 0x6c,
	0x69, 0x70, 0x61, 0x79, 0x12, 0x41, 0x0a, 0x0d, 0x61, 0x70, 0x70, 0x6d, 0x69, 0x6e, 0x69, 0x5f,
	0x62, 0x61, 0x69, 0x64, 0x75, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69, 0x42, 0x61,
	0x69, 0x64, 0x75, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x6d, 0x69,
	0x6e, 0x69, 0x42, 0x61, 0x69, 0x64, 0x75, 0x12, 0x47, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x6d, 0x69,
	0x6e, 0x69, 0x5f, 0x74, 0x6f, 0x75, 0x74, 0x69, 0x61, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x4d,
	0x69, 0x6e, 0x69, 0x54, 0x6f, 0x75, 0x74, 0x69, 0x61, 0x6f, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x0e, 0x61, 0x70, 0x70, 0x6d, 0x69, 0x6e, 0x69, 0x54, 0x6f, 0x75, 0x74, 0x69, 0x61, 0x6f,
	0x12, 0x38, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x71, 0x71, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x41, 0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69, 0x51, 0x51, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x09, 0x61, 0x70, 0x70, 0x6d, 0x69, 0x6e, 0x69, 0x51, 0x71, 0x12, 0x4a, 0x0a, 0x10, 0x61, 0x70,
	0x70, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x6b, 0x75, 0x61, 0x69, 0x73, 0x68, 0x6f, 0x75, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x41, 0x70, 0x70, 0x4d, 0x69, 0x6e, 0x69, 0x4b, 0x75, 0x61, 0x69, 0x73, 0x68, 0x6f, 0x75, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6d, 0x69, 0x6e, 0x69, 0x4b, 0x75,
	0x61, 0x69, 0x73, 0x68, 0x6f, 0x75, 0x12, 0x38, 0x0a, 0x0a, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f,
	0x62, 0x61, 0x73, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x61, 0x73, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x09, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x42, 0x61, 0x73, 0x65,
	0x12, 0x44, 0x0a, 0x0e, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x6d, 0x73, 0x5f, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x53, 0x6d, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x07, 0x73,
	0x6d, 0x73, 0x42, 0x61, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x03, 0x6d, 0x61, 0x70, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d,
	0x61, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x03, 0x6d, 0x61, 0x70, 0x12, 0x2b, 0x0a,
	0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x12, 0x2e, 0x0a, 0x06, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x06, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x22, 0x65, 0x0a, 0x11, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0xb4, 0x01, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x44,
	0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x44, 0x69,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x1a,
	0x37, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0xe9, 0x01, 0x0a, 0x10, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43, 0x0a,
	0x09, 0x53, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x46, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x07, 0x47, 0x65,
	0x74, 0x44, 0x69, 0x63, 0x74, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x65, 0x44, 0x69, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_configureService_proto_rawDescOnce sync.Once
	file_configureService_proto_rawDescData = file_configureService_proto_rawDesc
)

func file_configureService_proto_rawDescGZIP() []byte {
	file_configureService_proto_rawDescOnce.Do(func() {
		file_configureService_proto_rawDescData = protoimpl.X.CompressGZIP(file_configureService_proto_rawDescData)
	})
	return file_configureService_proto_rawDescData
}

var file_configureService_proto_msgTypes = make([]protoimpl.MessageInfo, 25)
var file_configureService_proto_goTypes = []interface{}{
	(*SiteBaseConfig)(nil),        // 0: services.SiteBaseConfig
	(*SiteStateConfig)(nil),       // 1: services.SiteStateConfig
	(*SiteDomainConfig)(nil),      // 2: services.SiteDomainConfig
	(*SiteBeianConfig)(nil),       // 3: services.SiteBeianConfig
	(*SiteSeoConfig)(nil),         // 4: services.SiteSeoConfig
	(*SiteSearchConfig)(nil),      // 5: services.SiteSearchConfig
	(*MobileBaseConfig)(nil),      // 6: services.MobileBaseConfig
	(*MobileCommonConfig)(nil),    // 7: services.MobileCommonConfig
	(*AppMiniWeixinConfig)(nil),   // 8: services.AppMiniWeixinConfig
	(*AppMiniAlipayConfig)(nil),   // 9: services.AppMiniAlipayConfig
	(*AppMiniToutiaoConfig)(nil),  // 10: services.AppMiniToutiaoConfig
	(*AppMiniBaiduConfig)(nil),    // 11: services.AppMiniBaiduConfig
	(*AppMiniQQConfig)(nil),       // 12: services.AppMiniQQConfig
	(*AppMiniKuaishouConfig)(nil), // 13: services.AppMiniKuaishouConfig
	(*SmsConfig)(nil),             // 14: services.SmsConfig
	(*EmailBaseConfig)(nil),       // 15: services.EmailBaseConfig
	(*EmailTemplateConfig)(nil),   // 16: services.EmailTemplateConfig
	(*MapConfig)(nil),             // 17: services.MapConfig
	(*StoreConfig)(nil),           // 18: services.StoreConfig
	(*SystemConfig)(nil),          // 19: services.SystemConfig
	(*ConfigureRequest)(nil),      // 20: services.ConfigureRequest
	(*ConfigureData)(nil),         // 21: services.ConfigureData
	(*ConfigureResponse)(nil),     // 22: services.ConfigureResponse
	(*ConfigureDictResponse)(nil), // 23: services.ConfigureDictResponse
	nil,                           // 24: services.ConfigureDictResponse.DataEntry
	(*common.Error)(nil),          // 25: common.Error
}
var file_configureService_proto_depIdxs = []int32{
	0,  // 0: services.ConfigureData.site_base:type_name -> services.SiteBaseConfig
	1,  // 1: services.ConfigureData.site_state:type_name -> services.SiteStateConfig
	2,  // 2: services.ConfigureData.site_domain:type_name -> services.SiteDomainConfig
	3,  // 3: services.ConfigureData.site_beian:type_name -> services.SiteBeianConfig
	4,  // 4: services.ConfigureData.site_seo:type_name -> services.SiteSeoConfig
	5,  // 5: services.ConfigureData.site_search:type_name -> services.SiteSearchConfig
	6,  // 6: services.ConfigureData.mobile_base:type_name -> services.MobileBaseConfig
	7,  // 7: services.ConfigureData.mobile_common:type_name -> services.MobileCommonConfig
	8,  // 8: services.ConfigureData.appmini_weixin:type_name -> services.AppMiniWeixinConfig
	9,  // 9: services.ConfigureData.appmini_alipay:type_name -> services.AppMiniAlipayConfig
	11, // 10: services.ConfigureData.appmini_baidu:type_name -> services.AppMiniBaiduConfig
	10, // 11: services.ConfigureData.appmini_toutiao:type_name -> services.AppMiniToutiaoConfig
	12, // 12: services.ConfigureData.appmini_qq:type_name -> services.AppMiniQQConfig
	13, // 13: services.ConfigureData.appmini_kuaishou:type_name -> services.AppMiniKuaishouConfig
	15, // 14: services.ConfigureData.email_base:type_name -> services.EmailBaseConfig
	16, // 15: services.ConfigureData.email_template:type_name -> services.EmailTemplateConfig
	14, // 16: services.ConfigureData.sms_base:type_name -> services.SmsConfig
	17, // 17: services.ConfigureData.map:type_name -> services.MapConfig
	18, // 18: services.ConfigureData.store:type_name -> services.StoreConfig
	19, // 19: services.ConfigureData.system:type_name -> services.SystemConfig
	21, // 20: services.ConfigureResponse.data:type_name -> services.ConfigureData
	25, // 21: services.ConfigureResponse.error:type_name -> common.Error
	24, // 22: services.ConfigureDictResponse.data:type_name -> services.ConfigureDictResponse.DataEntry
	25, // 23: services.ConfigureDictResponse.error:type_name -> common.Error
	21, // 24: services.ConfigureService.SetConfig:input_type -> services.ConfigureData
	20, // 25: services.ConfigureService.GetConfig:input_type -> services.ConfigureRequest
	20, // 26: services.ConfigureService.GetDict:input_type -> services.ConfigureRequest
	22, // 27: services.ConfigureService.SetConfig:output_type -> services.ConfigureResponse
	22, // 28: services.ConfigureService.GetConfig:output_type -> services.ConfigureResponse
	23, // 29: services.ConfigureService.GetDict:output_type -> services.ConfigureDictResponse
	27, // [27:30] is the sub-list for method output_type
	24, // [24:27] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_configureService_proto_init() }
func file_configureService_proto_init() {
	if File_configureService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_configureService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteBaseConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteStateConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteDomainConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteBeianConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteSeoConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SiteSearchConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MobileBaseConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MobileCommonConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppMiniWeixinConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppMiniAlipayConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppMiniToutiaoConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppMiniBaiduConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppMiniQQConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppMiniKuaishouConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmsConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailBaseConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmailTemplateConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MapConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StoreConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_configureService_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigureDictResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_configureService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   25,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_configureService_proto_goTypes,
		DependencyIndexes: file_configureService_proto_depIdxs,
		MessageInfos:      file_configureService_proto_msgTypes,
	}.Build()
	File_configureService_proto = out.File
	file_configureService_proto_rawDesc = nil
	file_configureService_proto_goTypes = nil
	file_configureService_proto_depIdxs = nil
}
