// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: pcConfigService.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// PC配置
type PcConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PcState                 int32  `protobuf:"varint,1,opt,name=pc_state,json=pcState,proto3" json:"pc_state"`                                                     //网站状态
	PcName                  string `protobuf:"bytes,2,opt,name=pc_name,json=pcName,proto3" json:"pc_name"`                                                         //网站名称
	PcLogo                  string `protobuf:"bytes,3,opt,name=pc_logo,json=pcLogo,proto3" json:"pc_logo"`                                                         //PC端LOGO
	ContactTel              string `protobuf:"bytes,4,opt,name=contact_tel,json=contactTel,proto3" json:"contact_tel"`                                             //联系电话
	CompanyAddress          string `protobuf:"bytes,5,opt,name=company_address,json=companyAddress,proto3" json:"company_address"`                                 //公司地址
	CopyrightInfo           string `protobuf:"bytes,6,opt,name=copyright_info,json=copyrightInfo,proto3" json:"copyright_info"`                                    //版权信息
	BeianIcpNo              string `protobuf:"bytes,10,opt,name=beian_icp_no,json=beianIcpNo,proto3" json:"beian_icp_no"`                                          //备案号
	BeianIcpUrl             string `protobuf:"bytes,11,opt,name=beian_icp_url,json=beianIcpUrl,proto3" json:"beian_icp_url"`                                       //ICP备案链接
	BeianNetworkSecurity    string `protobuf:"bytes,12,opt,name=beian_network_security,json=beianNetworkSecurity,proto3" json:"beian_network_security"`            //网安备案
	BeianNetworkSecurityUrl string `protobuf:"bytes,13,opt,name=beian_network_security_url,json=beianNetworkSecurityUrl,proto3" json:"beian_network_security_url"` //网安备案链接
	SeoKeywords             string `protobuf:"bytes,15,opt,name=seo_keywords,json=seoKeywords,proto3" json:"seo_keywords"`                                         //关键词
	SeoDescription          string `protobuf:"bytes,16,opt,name=seo_description,json=seoDescription,proto3" json:"seo_description"`                                //网站描述
}

func (x *PcConfig) Reset() {
	*x = PcConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pcConfigService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PcConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PcConfig) ProtoMessage() {}

func (x *PcConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pcConfigService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PcConfig.ProtoReflect.Descriptor instead.
func (*PcConfig) Descriptor() ([]byte, []int) {
	return file_pcConfigService_proto_rawDescGZIP(), []int{0}
}

func (x *PcConfig) GetPcState() int32 {
	if x != nil {
		return x.PcState
	}
	return 0
}

func (x *PcConfig) GetPcName() string {
	if x != nil {
		return x.PcName
	}
	return ""
}

func (x *PcConfig) GetPcLogo() string {
	if x != nil {
		return x.PcLogo
	}
	return ""
}

func (x *PcConfig) GetContactTel() string {
	if x != nil {
		return x.ContactTel
	}
	return ""
}

func (x *PcConfig) GetCompanyAddress() string {
	if x != nil {
		return x.CompanyAddress
	}
	return ""
}

func (x *PcConfig) GetCopyrightInfo() string {
	if x != nil {
		return x.CopyrightInfo
	}
	return ""
}

func (x *PcConfig) GetBeianIcpNo() string {
	if x != nil {
		return x.BeianIcpNo
	}
	return ""
}

func (x *PcConfig) GetBeianIcpUrl() string {
	if x != nil {
		return x.BeianIcpUrl
	}
	return ""
}

func (x *PcConfig) GetBeianNetworkSecurity() string {
	if x != nil {
		return x.BeianNetworkSecurity
	}
	return ""
}

func (x *PcConfig) GetBeianNetworkSecurityUrl() string {
	if x != nil {
		return x.BeianNetworkSecurityUrl
	}
	return ""
}

func (x *PcConfig) GetSeoKeywords() string {
	if x != nil {
		return x.SeoKeywords
	}
	return ""
}

func (x *PcConfig) GetSeoDescription() string {
	if x != nil {
		return x.SeoDescription
	}
	return ""
}

type PcConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Group  string    `protobuf:"bytes,1,opt,name=group,proto3" json:"group"`
	Config *PcConfig `protobuf:"bytes,2,opt,name=config,proto3" json:"config"`
}

func (x *PcConfigRequest) Reset() {
	*x = PcConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pcConfigService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PcConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PcConfigRequest) ProtoMessage() {}

func (x *PcConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pcConfigService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PcConfigRequest.ProtoReflect.Descriptor instead.
func (*PcConfigRequest) Descriptor() ([]byte, []int) {
	return file_pcConfigService_proto_rawDescGZIP(), []int{1}
}

func (x *PcConfigRequest) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *PcConfigRequest) GetConfig() *PcConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type PcConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg      string    `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg"`
	PcConfig *PcConfig `protobuf:"bytes,2,opt,name=pcConfig,proto3" json:"pcConfig"`
}

func (x *PcConfigResponse) Reset() {
	*x = PcConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pcConfigService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PcConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PcConfigResponse) ProtoMessage() {}

func (x *PcConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pcConfigService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PcConfigResponse.ProtoReflect.Descriptor instead.
func (*PcConfigResponse) Descriptor() ([]byte, []int) {
	return file_pcConfigService_proto_rawDescGZIP(), []int{2}
}

func (x *PcConfigResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *PcConfigResponse) GetPcConfig() *PcConfig {
	if x != nil {
		return x.PcConfig
	}
	return nil
}

var File_pcConfigService_proto protoreflect.FileDescriptor

var file_pcConfigService_proto_rawDesc = []byte{
	0x0a, 0x15, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x22, 0xcd, 0x03, 0x0a, 0x08, 0x50, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x19,
	0x0a, 0x08, 0x70, 0x63, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x70, 0x63, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x63, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x63, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x63, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x63, 0x4c, 0x6f, 0x67, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x54, 0x65, 0x6c, 0x12, 0x27, 0x0a, 0x0f,
	0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x70, 0x79, 0x72, 0x69, 0x67,
	0x68, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x6f, 0x70, 0x79, 0x72, 0x69, 0x67, 0x68, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0c,
	0x62, 0x65, 0x69, 0x61, 0x6e, 0x5f, 0x69, 0x63, 0x70, 0x5f, 0x6e, 0x6f, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x62, 0x65, 0x69, 0x61, 0x6e, 0x49, 0x63, 0x70, 0x4e, 0x6f, 0x12, 0x22,
	0x0a, 0x0d, 0x62, 0x65, 0x69, 0x61, 0x6e, 0x5f, 0x69, 0x63, 0x70, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x65, 0x69, 0x61, 0x6e, 0x49, 0x63, 0x70, 0x55,
	0x72, 0x6c, 0x12, 0x34, 0x0a, 0x16, 0x62, 0x65, 0x69, 0x61, 0x6e, 0x5f, 0x6e, 0x65, 0x74, 0x77,
	0x6f, 0x72, 0x6b, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x14, 0x62, 0x65, 0x69, 0x61, 0x6e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b,
	0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x12, 0x3b, 0x0a, 0x1a, 0x62, 0x65, 0x69, 0x61,
	0x6e, 0x5f, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x5f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x62, 0x65,
	0x69, 0x61, 0x6e, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x6f, 0x5f, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x6f,
	0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x6f, 0x5f,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x73, 0x65, 0x6f, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x53, 0x0a, 0x0f, 0x50, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2a, 0x0a, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x54, 0x0a, 0x10, 0x50, 0x63, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2e, 0x0a, 0x08,
	0x70, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x63, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x08, 0x70, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x32, 0x84, 0x01, 0x0a,
	0x0f, 0x50, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x37, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x50, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x1a, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x38, 0x0a, 0x04, 0x53, 0x61, 0x76,
	0x65, 0x12, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x63, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x50, 0x63, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pcConfigService_proto_rawDescOnce sync.Once
	file_pcConfigService_proto_rawDescData = file_pcConfigService_proto_rawDesc
)

func file_pcConfigService_proto_rawDescGZIP() []byte {
	file_pcConfigService_proto_rawDescOnce.Do(func() {
		file_pcConfigService_proto_rawDescData = protoimpl.X.CompressGZIP(file_pcConfigService_proto_rawDescData)
	})
	return file_pcConfigService_proto_rawDescData
}

var file_pcConfigService_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pcConfigService_proto_goTypes = []interface{}{
	(*PcConfig)(nil),         // 0: services.PcConfig
	(*PcConfigRequest)(nil),  // 1: services.PcConfigRequest
	(*PcConfigResponse)(nil), // 2: services.PcConfigResponse
}
var file_pcConfigService_proto_depIdxs = []int32{
	0, // 0: services.PcConfigRequest.config:type_name -> services.PcConfig
	0, // 1: services.PcConfigResponse.pcConfig:type_name -> services.PcConfig
	0, // 2: services.PcConfigService.Get:input_type -> services.PcConfig
	0, // 3: services.PcConfigService.Save:input_type -> services.PcConfig
	2, // 4: services.PcConfigService.Get:output_type -> services.PcConfigResponse
	2, // 5: services.PcConfigService.Save:output_type -> services.PcConfigResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_pcConfigService_proto_init() }
func file_pcConfigService_proto_init() {
	if File_pcConfigService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pcConfigService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PcConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pcConfigService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PcConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pcConfigService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PcConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pcConfigService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pcConfigService_proto_goTypes,
		DependencyIndexes: file_pcConfigService_proto_depIdxs,
		MessageInfos:      file_pcConfigService_proto_msgTypes,
	}.Build()
	File_pcConfigService_proto = out.File
	file_pcConfigService_proto_rawDesc = nil
	file_pcConfigService_proto_goTypes = nil
	file_pcConfigService_proto_depIdxs = nil
}
