// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: routineConfigService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 销售渠道
type Routine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                               //ID
	Code        string `protobuf:"bytes,2,opt,name=code,proto3" json:"code"`                            //编码
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`                            //名称
	Type        string `protobuf:"bytes,4,opt,name=type,proto3" json:"type"`                            //类型
	IconUrl     string `protobuf:"bytes,5,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url"`       //图标
	Description string `protobuf:"bytes,6,opt,name=description,proto3" json:"description"`              //描述
	Status      string `protobuf:"bytes,7,opt,name=status,proto3" json:"status"`                        //状态
	CreatedAt   string `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at"` //创建时间
	UpdatedAt   string `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"` //修改时间
	IsConfig    bool   `protobuf:"varint,10,opt,name=is_config,json=isConfig,proto3" json:"is_config"`  //是否配置
}

func (x *Routine) Reset() {
	*x = Routine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routineConfigService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Routine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Routine) ProtoMessage() {}

func (x *Routine) ProtoReflect() protoreflect.Message {
	mi := &file_routineConfigService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Routine.ProtoReflect.Descriptor instead.
func (*Routine) Descriptor() ([]byte, []int) {
	return file_routineConfigService_proto_rawDescGZIP(), []int{0}
}

func (x *Routine) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Routine) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Routine) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Routine) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Routine) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *Routine) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Routine) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Routine) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Routine) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Routine) GetIsConfig() bool {
	if x != nil {
		return x.IsConfig
	}
	return false
}

// 销售渠道配置
type RoutineConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                     //ID
	RoutineId   int32  `protobuf:"varint,2,opt,name=routine_id,json=routineId,proto3" json:"routine_id"`      //渠道ID
	RoutineCode string `protobuf:"bytes,3,opt,name=routine_code,json=routineCode,proto3" json:"routine_code"` //渠道编码
	AppName     string `protobuf:"bytes,4,opt,name=app_name,json=appName,proto3" json:"app_name"`             //应用名称
	Config      []byte `protobuf:"bytes,5,opt,name=config,proto3" json:"config"`                              //配置数据
	IsEnable    string `protobuf:"bytes,6,opt,name=is_enable,json=isEnable,proto3" json:"is_enable"`          //是否启用
	CreatedAt   string `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at"`       //创建时间
	UpdatedAt   string `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`       //修改时间
}

func (x *RoutineConfig) Reset() {
	*x = RoutineConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routineConfigService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutineConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutineConfig) ProtoMessage() {}

func (x *RoutineConfig) ProtoReflect() protoreflect.Message {
	mi := &file_routineConfigService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutineConfig.ProtoReflect.Descriptor instead.
func (*RoutineConfig) Descriptor() ([]byte, []int) {
	return file_routineConfigService_proto_rawDescGZIP(), []int{1}
}

func (x *RoutineConfig) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoutineConfig) GetRoutineId() int32 {
	if x != nil {
		return x.RoutineId
	}
	return 0
}

func (x *RoutineConfig) GetRoutineCode() string {
	if x != nil {
		return x.RoutineCode
	}
	return ""
}

func (x *RoutineConfig) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *RoutineConfig) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *RoutineConfig) GetIsEnable() string {
	if x != nil {
		return x.IsEnable
	}
	return ""
}

func (x *RoutineConfig) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *RoutineConfig) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// 微信小程序
type RoutineMPWexinConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId             string   `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id"`                                        //小程序appId
	AppSecret         string   `protobuf:"bytes,2,opt,name=app_secret,json=appSecret,proto3" json:"app_secret"`                            //小程序AppSecret
	ApplicationName   string   `protobuf:"bytes,3,opt,name=application_name,json=applicationName,proto3" json:"application_name"`          //小程序名称
	AuthTypes         []string `protobuf:"bytes,4,rep,name=auth_types,json=authTypes,proto3" json:"auth_types"`                            //手机号获取方式:1-微信授权，2-手动填写
	OpenGetAvatar     bool     `protobuf:"varint,5,opt,name=open_get_avatar,json=openGetAvatar,proto3" json:"open_get_avatar"`             //强制获取昵称头像(是否在小程序用户授权之后，弹窗获取用户的昵称和头像)
	OpenOrderShipping bool     `protobuf:"varint,6,opt,name=open_order_shipping,json=openOrderShipping,proto3" json:"open_order_shipping"` //发货信息管理(小程序有订单发货管理时，请打开此开关，否则会导致订单资金冻结)
}

func (x *RoutineMPWexinConfig) Reset() {
	*x = RoutineMPWexinConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routineConfigService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutineMPWexinConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutineMPWexinConfig) ProtoMessage() {}

func (x *RoutineMPWexinConfig) ProtoReflect() protoreflect.Message {
	mi := &file_routineConfigService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutineMPWexinConfig.ProtoReflect.Descriptor instead.
func (*RoutineMPWexinConfig) Descriptor() ([]byte, []int) {
	return file_routineConfigService_proto_rawDescGZIP(), []int{2}
}

func (x *RoutineMPWexinConfig) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *RoutineMPWexinConfig) GetAppSecret() string {
	if x != nil {
		return x.AppSecret
	}
	return ""
}

func (x *RoutineMPWexinConfig) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *RoutineMPWexinConfig) GetAuthTypes() []string {
	if x != nil {
		return x.AuthTypes
	}
	return nil
}

func (x *RoutineMPWexinConfig) GetOpenGetAvatar() bool {
	if x != nil {
		return x.OpenGetAvatar
	}
	return false
}

func (x *RoutineMPWexinConfig) GetOpenOrderShipping() bool {
	if x != nil {
		return x.OpenOrderShipping
	}
	return false
}

// 支付宝小程序
type RoutineMPAlipayConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId           string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id"`                               //小程序appId
	AppSecret       string `protobuf:"bytes,2,opt,name=app_secret,json=appSecret,proto3" json:"app_secret"`                   //小程序AppSecret
	ApplicationName string `protobuf:"bytes,3,opt,name=application_name,json=applicationName,proto3" json:"application_name"` //小程序名称
}

func (x *RoutineMPAlipayConfig) Reset() {
	*x = RoutineMPAlipayConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routineConfigService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutineMPAlipayConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutineMPAlipayConfig) ProtoMessage() {}

func (x *RoutineMPAlipayConfig) ProtoReflect() protoreflect.Message {
	mi := &file_routineConfigService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutineMPAlipayConfig.ProtoReflect.Descriptor instead.
func (*RoutineMPAlipayConfig) Descriptor() ([]byte, []int) {
	return file_routineConfigService_proto_rawDescGZIP(), []int{3}
}

func (x *RoutineMPAlipayConfig) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *RoutineMPAlipayConfig) GetAppSecret() string {
	if x != nil {
		return x.AppSecret
	}
	return ""
}

func (x *RoutineMPAlipayConfig) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

// 抖音小程序
type RoutineMPDouYinConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppId           string `protobuf:"bytes,1,opt,name=app_id,json=appId,proto3" json:"app_id"`                               //小程序appId
	AppSecret       string `protobuf:"bytes,2,opt,name=app_secret,json=appSecret,proto3" json:"app_secret"`                   //小程序AppSecret
	ApplicationName string `protobuf:"bytes,3,opt,name=application_name,json=applicationName,proto3" json:"application_name"` //小程序名称
}

func (x *RoutineMPDouYinConfig) Reset() {
	*x = RoutineMPDouYinConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routineConfigService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutineMPDouYinConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutineMPDouYinConfig) ProtoMessage() {}

func (x *RoutineMPDouYinConfig) ProtoReflect() protoreflect.Message {
	mi := &file_routineConfigService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutineMPDouYinConfig.ProtoReflect.Descriptor instead.
func (*RoutineMPDouYinConfig) Descriptor() ([]byte, []int) {
	return file_routineConfigService_proto_rawDescGZIP(), []int{4}
}

func (x *RoutineMPDouYinConfig) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *RoutineMPDouYinConfig) GetAppSecret() string {
	if x != nil {
		return x.AppSecret
	}
	return ""
}

func (x *RoutineMPDouYinConfig) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

// 销售渠道配置请求参数
type RoutineConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Top       int32    `protobuf:"varint,1,opt,name=top,proto3" json:"top"`
	Paged     int64    `protobuf:"varint,2,opt,name=paged,proto3" json:"paged"`
	PageSize  int64    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords  string   `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords"`
	Sorts     []string `protobuf:"bytes,5,rep,name=sorts,proto3" json:"sorts"`
	DateRange []string `protobuf:"bytes,6,rep,name=date_range,json=dateRange,proto3" json:"date_range"`
	Ids       []int32  `protobuf:"varint,7,rep,packed,name=ids,proto3" json:"ids"`
	Id        int32    `protobuf:"varint,8,opt,name=id,proto3" json:"id"`
	//以下为自定义参数
	RoutineId   int32  `protobuf:"varint,11,opt,name=routine_id,json=routineId,proto3" json:"routine_id"`      //渠道ID
	RoutineCode string `protobuf:"bytes,12,opt,name=routine_code,json=routineCode,proto3" json:"routine_code"` //渠道编码
	AppName     string `protobuf:"bytes,13,opt,name=app_name,json=appName,proto3" json:"app_name"`             //应用名称
	IsEnable    string `protobuf:"bytes,14,opt,name=is_enable,json=isEnable,proto3" json:"is_enable"`          //是否启用
}

func (x *RoutineConfigRequest) Reset() {
	*x = RoutineConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routineConfigService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutineConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutineConfigRequest) ProtoMessage() {}

func (x *RoutineConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_routineConfigService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutineConfigRequest.ProtoReflect.Descriptor instead.
func (*RoutineConfigRequest) Descriptor() ([]byte, []int) {
	return file_routineConfigService_proto_rawDescGZIP(), []int{5}
}

func (x *RoutineConfigRequest) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *RoutineConfigRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *RoutineConfigRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *RoutineConfigRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *RoutineConfigRequest) GetSorts() []string {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *RoutineConfigRequest) GetDateRange() []string {
	if x != nil {
		return x.DateRange
	}
	return nil
}

func (x *RoutineConfigRequest) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *RoutineConfigRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RoutineConfigRequest) GetRoutineId() int32 {
	if x != nil {
		return x.RoutineId
	}
	return 0
}

func (x *RoutineConfigRequest) GetRoutineCode() string {
	if x != nil {
		return x.RoutineCode
	}
	return ""
}

func (x *RoutineConfigRequest) GetAppName() string {
	if x != nil {
		return x.AppName
	}
	return ""
}

func (x *RoutineConfigRequest) GetIsEnable() string {
	if x != nil {
		return x.IsEnable
	}
	return ""
}

// 销售渠道配置响应数据
type RoutineConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg            string                 `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg"`
	Pager          *common.Pager          `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Entity         *RoutineConfig         `protobuf:"bytes,3,opt,name=entity,proto3" json:"entity"`
	Items          []*RoutineConfig       `protobuf:"bytes,4,rep,name=items,proto3" json:"items"`
	MPWexinConfig  *RoutineMPWexinConfig  `protobuf:"bytes,5,opt,name=MPWexinConfig,proto3" json:"MPWexinConfig"`
	MPAlipayConfig *RoutineMPAlipayConfig `protobuf:"bytes,6,opt,name=MPAlipayConfig,proto3" json:"MPAlipayConfig"`
	MPDouYinConfig *RoutineMPDouYinConfig `protobuf:"bytes,7,opt,name=MPDouYinConfig,proto3" json:"MPDouYinConfig"`
}

func (x *RoutineConfigResponse) Reset() {
	*x = RoutineConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routineConfigService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutineConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutineConfigResponse) ProtoMessage() {}

func (x *RoutineConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_routineConfigService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutineConfigResponse.ProtoReflect.Descriptor instead.
func (*RoutineConfigResponse) Descriptor() ([]byte, []int) {
	return file_routineConfigService_proto_rawDescGZIP(), []int{6}
}

func (x *RoutineConfigResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RoutineConfigResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *RoutineConfigResponse) GetEntity() *RoutineConfig {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *RoutineConfigResponse) GetItems() []*RoutineConfig {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *RoutineConfigResponse) GetMPWexinConfig() *RoutineMPWexinConfig {
	if x != nil {
		return x.MPWexinConfig
	}
	return nil
}

func (x *RoutineConfigResponse) GetMPAlipayConfig() *RoutineMPAlipayConfig {
	if x != nil {
		return x.MPAlipayConfig
	}
	return nil
}

func (x *RoutineConfigResponse) GetMPDouYinConfig() *RoutineMPDouYinConfig {
	if x != nil {
		return x.MPDouYinConfig
	}
	return nil
}

// 销售渠道响应数据
type RoutineListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg    string         `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg"`
	Pager  *common.Pager  `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Entity *RoutineConfig `protobuf:"bytes,3,opt,name=entity,proto3" json:"entity"`
	Items  []*Routine     `protobuf:"bytes,4,rep,name=items,proto3" json:"items"`
}

func (x *RoutineListResponse) Reset() {
	*x = RoutineListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_routineConfigService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RoutineListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoutineListResponse) ProtoMessage() {}

func (x *RoutineListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_routineConfigService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoutineListResponse.ProtoReflect.Descriptor instead.
func (*RoutineListResponse) Descriptor() ([]byte, []int) {
	return file_routineConfigService_proto_rawDescGZIP(), []int{7}
}

func (x *RoutineListResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *RoutineListResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *RoutineListResponse) GetEntity() *RoutineConfig {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *RoutineListResponse) GetItems() []*Routine {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_routineConfigService_proto protoreflect.FileDescriptor

var file_routineConfigService_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x85, 0x02, 0x0a, 0x07, 0x52, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x22, 0xef, 0x01, 0x0a, 0x0d, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x65,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x73, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x22, 0xee, 0x01, 0x0a, 0x14, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x4d,
	0x50, 0x57, 0x65, 0x78, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x15, 0x0a, 0x06,
	0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70,
	0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0f,
	0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x6e, 0x47, 0x65, 0x74, 0x41, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x11, 0x6f, 0x70, 0x65, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x68, 0x69, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x22, 0x78, 0x0a, 0x15, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x4d,
	0x50, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x15, 0x0a,
	0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x78,
	0x0a, 0x15, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x4d, 0x50, 0x44, 0x6f, 0x75, 0x59, 0x69,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x70, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x29, 0x0a,
	0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xc8, 0x02, 0x0a, 0x14, 0x52, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x74, 0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x07,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61,
	0x70, 0x70, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x70, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x73, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x22, 0x86, 0x03, 0x0a, 0x15, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x12, 0x44, 0x0a, 0x0d, 0x4d, 0x50, 0x57, 0x65, 0x78, 0x69, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x4d, 0x50,
	0x57, 0x65, 0x78, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0d, 0x4d, 0x50, 0x57,
	0x65, 0x78, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x47, 0x0a, 0x0e, 0x4d, 0x50,
	0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f,
	0x75, 0x74, 0x69, 0x6e, 0x65, 0x4d, 0x50, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x0e, 0x4d, 0x50, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x12, 0x47, 0x0a, 0x0e, 0x4d, 0x50, 0x44, 0x6f, 0x75, 0x59, 0x69, 0x6e, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x4d, 0x50,
	0x44, 0x6f, 0x75, 0x59, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0e, 0x4d, 0x50,
	0x44, 0x6f, 0x75, 0x59, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xa6, 0x01, 0x0a,
	0x13, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x06, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x27, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x32, 0x85, 0x06, 0x0a, 0x14, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x44,
	0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x17,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x06, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x1f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x41, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1e, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x49, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x0b, 0x52,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4e, 0x0a, 0x10, 0x47,
	0x65, 0x74, 0x4d, 0x50, 0x57, 0x65, 0x78, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69,
	0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x11, 0x47,
	0x65, 0x74, 0x4d, 0x50, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x75, 0x74,
	0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x4d, 0x50, 0x44, 0x6f, 0x75, 0x59, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x75,
	0x74, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a,
	0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_routineConfigService_proto_rawDescOnce sync.Once
	file_routineConfigService_proto_rawDescData = file_routineConfigService_proto_rawDesc
)

func file_routineConfigService_proto_rawDescGZIP() []byte {
	file_routineConfigService_proto_rawDescOnce.Do(func() {
		file_routineConfigService_proto_rawDescData = protoimpl.X.CompressGZIP(file_routineConfigService_proto_rawDescData)
	})
	return file_routineConfigService_proto_rawDescData
}

var file_routineConfigService_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_routineConfigService_proto_goTypes = []interface{}{
	(*Routine)(nil),               // 0: services.Routine
	(*RoutineConfig)(nil),         // 1: services.RoutineConfig
	(*RoutineMPWexinConfig)(nil),  // 2: services.RoutineMPWexinConfig
	(*RoutineMPAlipayConfig)(nil), // 3: services.RoutineMPAlipayConfig
	(*RoutineMPDouYinConfig)(nil), // 4: services.RoutineMPDouYinConfig
	(*RoutineConfigRequest)(nil),  // 5: services.RoutineConfigRequest
	(*RoutineConfigResponse)(nil), // 6: services.RoutineConfigResponse
	(*RoutineListResponse)(nil),   // 7: services.RoutineListResponse
	(*common.Pager)(nil),          // 8: common.Pager
}
var file_routineConfigService_proto_depIdxs = []int32{
	8,  // 0: services.RoutineConfigResponse.pager:type_name -> common.Pager
	1,  // 1: services.RoutineConfigResponse.entity:type_name -> services.RoutineConfig
	1,  // 2: services.RoutineConfigResponse.items:type_name -> services.RoutineConfig
	2,  // 3: services.RoutineConfigResponse.MPWexinConfig:type_name -> services.RoutineMPWexinConfig
	3,  // 4: services.RoutineConfigResponse.MPAlipayConfig:type_name -> services.RoutineMPAlipayConfig
	4,  // 5: services.RoutineConfigResponse.MPDouYinConfig:type_name -> services.RoutineMPDouYinConfig
	8,  // 6: services.RoutineListResponse.pager:type_name -> common.Pager
	1,  // 7: services.RoutineListResponse.entity:type_name -> services.RoutineConfig
	0,  // 8: services.RoutineListResponse.items:type_name -> services.Routine
	1,  // 9: services.RoutineConfigService.Create:input_type -> services.RoutineConfig
	1,  // 10: services.RoutineConfigService.Update:input_type -> services.RoutineConfig
	1,  // 11: services.RoutineConfigService.Delete:input_type -> services.RoutineConfig
	1,  // 12: services.RoutineConfigService.Get:input_type -> services.RoutineConfig
	5,  // 13: services.RoutineConfigService.Search:input_type -> services.RoutineConfigRequest
	5,  // 14: services.RoutineConfigService.List:input_type -> services.RoutineConfigRequest
	5,  // 15: services.RoutineConfigService.RoutineList:input_type -> services.RoutineConfigRequest
	1,  // 16: services.RoutineConfigService.GetMPWexinConfig:input_type -> services.RoutineConfig
	1,  // 17: services.RoutineConfigService.GetMPAlipayConfig:input_type -> services.RoutineConfig
	1,  // 18: services.RoutineConfigService.GetMPDouYinConfig:input_type -> services.RoutineConfig
	6,  // 19: services.RoutineConfigService.Create:output_type -> services.RoutineConfigResponse
	6,  // 20: services.RoutineConfigService.Update:output_type -> services.RoutineConfigResponse
	6,  // 21: services.RoutineConfigService.Delete:output_type -> services.RoutineConfigResponse
	6,  // 22: services.RoutineConfigService.Get:output_type -> services.RoutineConfigResponse
	6,  // 23: services.RoutineConfigService.Search:output_type -> services.RoutineConfigResponse
	6,  // 24: services.RoutineConfigService.List:output_type -> services.RoutineConfigResponse
	7,  // 25: services.RoutineConfigService.RoutineList:output_type -> services.RoutineListResponse
	6,  // 26: services.RoutineConfigService.GetMPWexinConfig:output_type -> services.RoutineConfigResponse
	6,  // 27: services.RoutineConfigService.GetMPAlipayConfig:output_type -> services.RoutineConfigResponse
	6,  // 28: services.RoutineConfigService.GetMPDouYinConfig:output_type -> services.RoutineConfigResponse
	19, // [19:29] is the sub-list for method output_type
	9,  // [9:19] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_routineConfigService_proto_init() }
func file_routineConfigService_proto_init() {
	if File_routineConfigService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_routineConfigService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Routine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routineConfigService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutineConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routineConfigService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutineMPWexinConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routineConfigService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutineMPAlipayConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routineConfigService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutineMPDouYinConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routineConfigService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutineConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routineConfigService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutineConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_routineConfigService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RoutineListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_routineConfigService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_routineConfigService_proto_goTypes,
		DependencyIndexes: file_routineConfigService_proto_depIdxs,
		MessageInfos:      file_routineConfigService_proto_msgTypes,
	}.Build()
	File_routineConfigService_proto = out.File
	file_routineConfigService_proto_rawDesc = nil
	file_routineConfigService_proto_goTypes = nil
	file_routineConfigService_proto_depIdxs = nil
}
