// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: schemeService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Scheme struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalNum       int32            `protobuf:"varint,1,opt,name=total_num,json=totalNum,proto3" json:"total_num"`
	TotalWeight    float32          `protobuf:"fixed32,2,opt,name=total_weight,json=totalWeight,proto3" json:"total_weight"`
	Currency       string           `protobuf:"bytes,3,opt,name=currency,proto3" json:"currency"`
	GoodsAmount    float32          `protobuf:"fixed32,4,opt,name=goods_amount,json=goodsAmount,proto3" json:"goods_amount"`
	DiscountAmount float32          `protobuf:"fixed32,5,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount"`
	ShippingFee    float32          `protobuf:"fixed32,6,opt,name=shipping_fee,json=shippingFee,proto3" json:"shipping_fee"`
	InsureFee      float32          `protobuf:"fixed32,7,opt,name=insure_fee,json=insureFee,proto3" json:"insure_fee"`
	PackFee        float32          `protobuf:"fixed32,8,opt,name=pack_fee,json=packFee,proto3" json:"pack_fee"`
	Surplus        float32          `protobuf:"fixed32,9,opt,name=surplus,proto3" json:"surplus"`
	CouponMoney    float32          `protobuf:"fixed32,10,opt,name=coupon_money,json=couponMoney,proto3" json:"coupon_money"`
	Integral       int32            `protobuf:"varint,11,opt,name=integral,proto3" json:"integral"`
	IntegralMoney  float32          `protobuf:"fixed32,12,opt,name=integral_money,json=integralMoney,proto3" json:"integral_money"`
	Amount         float32          `protobuf:"fixed32,13,opt,name=amount,proto3" json:"amount"`
	PaidMoney      float32          `protobuf:"fixed32,14,opt,name=paid_money,json=paidMoney,proto3" json:"paid_money"`
	IsShipment     bool             `protobuf:"varint,15,opt,name=is_shipment,json=isShipment,proto3" json:"is_shipment"`
	Details        []*SchemeDetail  `protobuf:"bytes,16,rep,name=details,proto3" json:"details"`
	Coupons        []*CouponInfo    `protobuf:"bytes,17,rep,name=coupons,proto3" json:"coupons"`
	Promotions     []*PromotionInfo `protobuf:"bytes,18,rep,name=promotions,proto3" json:"promotions"`
}

func (x *Scheme) Reset() {
	*x = Scheme{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schemeService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Scheme) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scheme) ProtoMessage() {}

func (x *Scheme) ProtoReflect() protoreflect.Message {
	mi := &file_schemeService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scheme.ProtoReflect.Descriptor instead.
func (*Scheme) Descriptor() ([]byte, []int) {
	return file_schemeService_proto_rawDescGZIP(), []int{0}
}

func (x *Scheme) GetTotalNum() int32 {
	if x != nil {
		return x.TotalNum
	}
	return 0
}

func (x *Scheme) GetTotalWeight() float32 {
	if x != nil {
		return x.TotalWeight
	}
	return 0
}

func (x *Scheme) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Scheme) GetGoodsAmount() float32 {
	if x != nil {
		return x.GoodsAmount
	}
	return 0
}

func (x *Scheme) GetDiscountAmount() float32 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *Scheme) GetShippingFee() float32 {
	if x != nil {
		return x.ShippingFee
	}
	return 0
}

func (x *Scheme) GetInsureFee() float32 {
	if x != nil {
		return x.InsureFee
	}
	return 0
}

func (x *Scheme) GetPackFee() float32 {
	if x != nil {
		return x.PackFee
	}
	return 0
}

func (x *Scheme) GetSurplus() float32 {
	if x != nil {
		return x.Surplus
	}
	return 0
}

func (x *Scheme) GetCouponMoney() float32 {
	if x != nil {
		return x.CouponMoney
	}
	return 0
}

func (x *Scheme) GetIntegral() int32 {
	if x != nil {
		return x.Integral
	}
	return 0
}

func (x *Scheme) GetIntegralMoney() float32 {
	if x != nil {
		return x.IntegralMoney
	}
	return 0
}

func (x *Scheme) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Scheme) GetPaidMoney() float32 {
	if x != nil {
		return x.PaidMoney
	}
	return 0
}

func (x *Scheme) GetIsShipment() bool {
	if x != nil {
		return x.IsShipment
	}
	return false
}

func (x *Scheme) GetDetails() []*SchemeDetail {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *Scheme) GetCoupons() []*CouponInfo {
	if x != nil {
		return x.Coupons
	}
	return nil
}

func (x *Scheme) GetPromotions() []*PromotionInfo {
	if x != nil {
		return x.Promotions
	}
	return nil
}

type CouponInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
}

func (x *CouponInfo) Reset() {
	*x = CouponInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schemeService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CouponInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CouponInfo) ProtoMessage() {}

func (x *CouponInfo) ProtoReflect() protoreflect.Message {
	mi := &file_schemeService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CouponInfo.ProtoReflect.Descriptor instead.
func (*CouponInfo) Descriptor() ([]byte, []int) {
	return file_schemeService_proto_rawDescGZIP(), []int{1}
}

func (x *CouponInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CouponInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type PromotionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
}

func (x *PromotionInfo) Reset() {
	*x = PromotionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schemeService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionInfo) ProtoMessage() {}

func (x *PromotionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_schemeService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionInfo.ProtoReflect.Descriptor instead.
func (*PromotionInfo) Descriptor() ([]byte, []int) {
	return file_schemeService_proto_rawDescGZIP(), []int{2}
}

func (x *PromotionInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PromotionInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type SchemeDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuId          int64    `protobuf:"varint,1,opt,name=sku_id,json=skuId,proto3" json:"sku_id"`
	Num            int32    `protobuf:"varint,2,opt,name=num,proto3" json:"num"`
	SubTotal       float32  `protobuf:"fixed32,3,opt,name=sub_total,json=subTotal,proto3" json:"sub_total"`
	Price          float32  `protobuf:"fixed32,4,opt,name=price,proto3" json:"price"`
	MarketPrice    float32  `protobuf:"fixed32,5,opt,name=market_price,json=marketPrice,proto3" json:"market_price"`
	CostPrice      float32  `protobuf:"fixed32,6,opt,name=cost_price,json=costPrice,proto3" json:"cost_price"`
	PromotionPrice float32  `protobuf:"fixed32,7,opt,name=promotion_price,json=promotionPrice,proto3" json:"promotion_price"`
	MemberPrice    float32  `protobuf:"fixed32,8,opt,name=member_price,json=memberPrice,proto3" json:"member_price"`
	WholesalePrice float32  `protobuf:"fixed32,9,opt,name=wholesale_price,json=wholesalePrice,proto3" json:"wholesale_price"`
	IsGift         bool     `protobuf:"varint,10,opt,name=is_gift,json=isGift,proto3" json:"is_gift"`
	SkuInfo        *SkuInfo `protobuf:"bytes,11,opt,name=sku_info,json=skuInfo,proto3" json:"sku_info"`
}

func (x *SchemeDetail) Reset() {
	*x = SchemeDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schemeService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchemeDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchemeDetail) ProtoMessage() {}

func (x *SchemeDetail) ProtoReflect() protoreflect.Message {
	mi := &file_schemeService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchemeDetail.ProtoReflect.Descriptor instead.
func (*SchemeDetail) Descriptor() ([]byte, []int) {
	return file_schemeService_proto_rawDescGZIP(), []int{3}
}

func (x *SchemeDetail) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *SchemeDetail) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *SchemeDetail) GetSubTotal() float32 {
	if x != nil {
		return x.SubTotal
	}
	return 0
}

func (x *SchemeDetail) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SchemeDetail) GetMarketPrice() float32 {
	if x != nil {
		return x.MarketPrice
	}
	return 0
}

func (x *SchemeDetail) GetCostPrice() float32 {
	if x != nil {
		return x.CostPrice
	}
	return 0
}

func (x *SchemeDetail) GetPromotionPrice() float32 {
	if x != nil {
		return x.PromotionPrice
	}
	return 0
}

func (x *SchemeDetail) GetMemberPrice() float32 {
	if x != nil {
		return x.MemberPrice
	}
	return 0
}

func (x *SchemeDetail) GetWholesalePrice() float32 {
	if x != nil {
		return x.WholesalePrice
	}
	return 0
}

func (x *SchemeDetail) GetIsGift() bool {
	if x != nil {
		return x.IsGift
	}
	return false
}

func (x *SchemeDetail) GetSkuInfo() *SkuInfo {
	if x != nil {
		return x.SkuInfo
	}
	return nil
}

type SchemeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AreaId         int64           `protobuf:"varint,1,opt,name=area_id,json=areaId,proto3" json:"area_id"`
	CouponId       int64           `protobuf:"varint,2,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id"`
	MemberId       int64           `protobuf:"varint,3,opt,name=member_id,json=memberId,proto3" json:"member_id"`
	MemberRankId   int32           `protobuf:"varint,4,opt,name=member_rank_id,json=memberRankId,proto3" json:"member_rank_id"`
	ShopId         int64           `protobuf:"varint,5,opt,name=shop_id,json=shopId,proto3" json:"shop_id"`
	OrderId        int64           `protobuf:"varint,6,opt,name=order_id,json=orderId,proto3" json:"order_id"`
	Terminal       string          `protobuf:"bytes,7,opt,name=terminal,proto3" json:"terminal"`
	Channel        string          `protobuf:"bytes,8,opt,name=channel,proto3" json:"channel"`
	PaymentMethod  string          `protobuf:"bytes,9,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method"`
	ShipmentMethod string          `protobuf:"bytes,10,opt,name=shipment_method,json=shipmentMethod,proto3" json:"shipment_method"`
	InsureFee      float32         `protobuf:"fixed32,11,opt,name=insure_fee,json=insureFee,proto3" json:"insure_fee"`
	PackFee        float32         `protobuf:"fixed32,12,opt,name=pack_fee,json=packFee,proto3" json:"pack_fee"`
	Surplus        float32         `protobuf:"fixed32,13,opt,name=surplus,proto3" json:"surplus"`
	CouponMoney    float32         `protobuf:"fixed32,14,opt,name=coupon_money,json=couponMoney,proto3" json:"coupon_money"`
	Integral       int32           `protobuf:"varint,15,opt,name=integral,proto3" json:"integral"`
	IntegralMoney  float32         `protobuf:"fixed32,16,opt,name=integral_money,json=integralMoney,proto3" json:"integral_money"`
	PaidMoney      float32         `protobuf:"fixed32,17,opt,name=paid_money,json=paidMoney,proto3" json:"paid_money"`
	Currency       string          `protobuf:"bytes,18,opt,name=currency,proto3" json:"currency"`
	SkuList        map[int64]int32 `protobuf:"bytes,19,rep,name=sku_list,json=skuList,proto3" json:"sku_list" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	SkuIds         []int64         `protobuf:"varint,20,rep,packed,name=sku_ids,json=skuIds,proto3" json:"sku_ids"`
}

func (x *SchemeRequest) Reset() {
	*x = SchemeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schemeService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchemeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchemeRequest) ProtoMessage() {}

func (x *SchemeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_schemeService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchemeRequest.ProtoReflect.Descriptor instead.
func (*SchemeRequest) Descriptor() ([]byte, []int) {
	return file_schemeService_proto_rawDescGZIP(), []int{4}
}

func (x *SchemeRequest) GetAreaId() int64 {
	if x != nil {
		return x.AreaId
	}
	return 0
}

func (x *SchemeRequest) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *SchemeRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *SchemeRequest) GetMemberRankId() int32 {
	if x != nil {
		return x.MemberRankId
	}
	return 0
}

func (x *SchemeRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *SchemeRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *SchemeRequest) GetTerminal() string {
	if x != nil {
		return x.Terminal
	}
	return ""
}

func (x *SchemeRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *SchemeRequest) GetPaymentMethod() string {
	if x != nil {
		return x.PaymentMethod
	}
	return ""
}

func (x *SchemeRequest) GetShipmentMethod() string {
	if x != nil {
		return x.ShipmentMethod
	}
	return ""
}

func (x *SchemeRequest) GetInsureFee() float32 {
	if x != nil {
		return x.InsureFee
	}
	return 0
}

func (x *SchemeRequest) GetPackFee() float32 {
	if x != nil {
		return x.PackFee
	}
	return 0
}

func (x *SchemeRequest) GetSurplus() float32 {
	if x != nil {
		return x.Surplus
	}
	return 0
}

func (x *SchemeRequest) GetCouponMoney() float32 {
	if x != nil {
		return x.CouponMoney
	}
	return 0
}

func (x *SchemeRequest) GetIntegral() int32 {
	if x != nil {
		return x.Integral
	}
	return 0
}

func (x *SchemeRequest) GetIntegralMoney() float32 {
	if x != nil {
		return x.IntegralMoney
	}
	return 0
}

func (x *SchemeRequest) GetPaidMoney() float32 {
	if x != nil {
		return x.PaidMoney
	}
	return 0
}

func (x *SchemeRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *SchemeRequest) GetSkuList() map[int64]int32 {
	if x != nil {
		return x.SkuList
	}
	return nil
}

func (x *SchemeRequest) GetSkuIds() []int64 {
	if x != nil {
		return x.SkuIds
	}
	return nil
}

type SchemeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *Scheme           `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Skus   []*SkuInfo        `protobuf:"bytes,2,rep,name=skus,proto3" json:"skus"`
	Params map[string]string `protobuf:"bytes,3,rep,name=params,proto3" json:"params" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Items  []*Scheme         `protobuf:"bytes,4,rep,name=items,proto3" json:"items"`
	Info   *common.Info      `protobuf:"bytes,5,opt,name=info,proto3" json:"info"`
}

func (x *SchemeData) Reset() {
	*x = SchemeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schemeService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchemeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchemeData) ProtoMessage() {}

func (x *SchemeData) ProtoReflect() protoreflect.Message {
	mi := &file_schemeService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchemeData.ProtoReflect.Descriptor instead.
func (*SchemeData) Descriptor() ([]byte, []int) {
	return file_schemeService_proto_rawDescGZIP(), []int{5}
}

func (x *SchemeData) GetEntity() *Scheme {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *SchemeData) GetSkus() []*SkuInfo {
	if x != nil {
		return x.Skus
	}
	return nil
}

func (x *SchemeData) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *SchemeData) GetItems() []*Scheme {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SchemeData) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

type SchemeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *SchemeData   `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *SchemeResponse) Reset() {
	*x = SchemeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_schemeService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SchemeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SchemeResponse) ProtoMessage() {}

func (x *SchemeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_schemeService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SchemeResponse.ProtoReflect.Descriptor instead.
func (*SchemeResponse) Descriptor() ([]byte, []int) {
	return file_schemeService_proto_rawDescGZIP(), []int{6}
}

func (x *SchemeResponse) GetData() *SchemeData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SchemeResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_schemeService_proto protoreflect.FileDescriptor

var file_schemeService_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a,
	0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x14, 0x73, 0x6b, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x80, 0x05, 0x0a, 0x06, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75, 0x6d,
	0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x21, 0x0a, 0x0c, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0b, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x75, 0x72, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x75, 0x72, 0x65, 0x46, 0x65, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x07, 0x70, 0x61, 0x63, 0x6b, 0x46, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x70,
	0x6c, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x73, 0x75, 0x72, 0x70, 0x6c,
	0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x6e,
	0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x5f, 0x6d, 0x6f,
	0x6e, 0x65, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x6c, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x70, 0x61, 0x69, 0x64, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x12, 0x30, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x18, 0x11, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x73, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x32, 0x0a, 0x0a, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22,
	0x35, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0xe8, 0x02, 0x0a, 0x0c, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x08, 0x73, 0x75, 0x62, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x63, 0x6f, 0x73, 0x74,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x27, 0x0a, 0x0f, 0x77, 0x68, 0x6f, 0x6c, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x77, 0x68, 0x6f, 0x6c,
	0x65, 0x73, 0x61, 0x6c, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73,
	0x5f, 0x67, 0x69, 0x66, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x47,
	0x69, 0x66, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x73, 0x6b, 0x75, 0x49, 0x6e, 0x66,
	0x6f, 0x22, 0xcd, 0x05, 0x0a, 0x0d, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x27, 0x0a,
	0x0f, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74,
	0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x75, 0x72, 0x65,
	0x5f, 0x66, 0x65, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x75,
	0x72, 0x65, 0x46, 0x65, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x66, 0x65,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x46, 0x65, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x07, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x70, 0x61, 0x69, 0x64, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x3f, 0x0a, 0x08, 0x73,
	0x6b, 0x75, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x6b, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x73, 0x6b, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x6b, 0x75, 0x49, 0x64, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x53, 0x6b, 0x75, 0x4c, 0x69, 0x73, 0x74,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x9c, 0x02, 0x0a, 0x0a, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x28, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x65, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x25, 0x0a, 0x04, 0x73, 0x6b,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x73, 0x6b, 0x75,
	0x73, 0x12, 0x38, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x68,
	0x65, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x26, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x1a, 0x39, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0x5f, 0x0a, 0x0e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x68, 0x65,
	0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x32, 0x8f, 0x02, 0x0a, 0x0d, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x08, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12,
	0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x3d, 0x0a, 0x06, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x12, 0x17, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x41, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x17,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_schemeService_proto_rawDescOnce sync.Once
	file_schemeService_proto_rawDescData = file_schemeService_proto_rawDesc
)

func file_schemeService_proto_rawDescGZIP() []byte {
	file_schemeService_proto_rawDescOnce.Do(func() {
		file_schemeService_proto_rawDescData = protoimpl.X.CompressGZIP(file_schemeService_proto_rawDescData)
	})
	return file_schemeService_proto_rawDescData
}

var file_schemeService_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_schemeService_proto_goTypes = []interface{}{
	(*Scheme)(nil),         // 0: services.Scheme
	(*CouponInfo)(nil),     // 1: services.CouponInfo
	(*PromotionInfo)(nil),  // 2: services.PromotionInfo
	(*SchemeDetail)(nil),   // 3: services.SchemeDetail
	(*SchemeRequest)(nil),  // 4: services.SchemeRequest
	(*SchemeData)(nil),     // 5: services.SchemeData
	(*SchemeResponse)(nil), // 6: services.SchemeResponse
	nil,                    // 7: services.SchemeRequest.SkuListEntry
	nil,                    // 8: services.SchemeData.ParamsEntry
	(*SkuInfo)(nil),        // 9: services.SkuInfo
	(*common.Info)(nil),    // 10: common.Info
	(*common.Error)(nil),   // 11: common.Error
}
var file_schemeService_proto_depIdxs = []int32{
	3,  // 0: services.Scheme.details:type_name -> services.SchemeDetail
	1,  // 1: services.Scheme.coupons:type_name -> services.CouponInfo
	2,  // 2: services.Scheme.promotions:type_name -> services.PromotionInfo
	9,  // 3: services.SchemeDetail.sku_info:type_name -> services.SkuInfo
	7,  // 4: services.SchemeRequest.sku_list:type_name -> services.SchemeRequest.SkuListEntry
	0,  // 5: services.SchemeData.entity:type_name -> services.Scheme
	9,  // 6: services.SchemeData.skus:type_name -> services.SkuInfo
	8,  // 7: services.SchemeData.params:type_name -> services.SchemeData.ParamsEntry
	0,  // 8: services.SchemeData.items:type_name -> services.Scheme
	10, // 9: services.SchemeData.info:type_name -> common.Info
	5,  // 10: services.SchemeResponse.data:type_name -> services.SchemeData
	11, // 11: services.SchemeResponse.error:type_name -> common.Error
	4,  // 12: services.SchemeService.Purchase:input_type -> services.SchemeRequest
	4,  // 13: services.SchemeService.List:input_type -> services.SchemeRequest
	4,  // 14: services.SchemeService.Profit:input_type -> services.SchemeRequest
	4,  // 15: services.SchemeService.Commission:input_type -> services.SchemeRequest
	6,  // 16: services.SchemeService.Purchase:output_type -> services.SchemeResponse
	6,  // 17: services.SchemeService.List:output_type -> services.SchemeResponse
	6,  // 18: services.SchemeService.Profit:output_type -> services.SchemeResponse
	6,  // 19: services.SchemeService.Commission:output_type -> services.SchemeResponse
	16, // [16:20] is the sub-list for method output_type
	12, // [12:16] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_schemeService_proto_init() }
func file_schemeService_proto_init() {
	if File_schemeService_proto != nil {
		return
	}
	file_skuInfoService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_schemeService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Scheme); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schemeService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CouponInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schemeService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schemeService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchemeDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schemeService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchemeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schemeService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchemeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_schemeService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SchemeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_schemeService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_schemeService_proto_goTypes,
		DependencyIndexes: file_schemeService_proto_depIdxs,
		MessageInfos:      file_schemeService_proto_msgTypes,
	}.Build()
	File_schemeService_proto = out.File
	file_schemeService_proto_rawDesc = nil
	file_schemeService_proto_goTypes = nil
	file_schemeService_proto_depIdxs = nil
}
