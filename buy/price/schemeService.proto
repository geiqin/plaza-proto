syntax = "proto3";
package services;
option go_package = ".;services";
import "common/base.proto";
import "baseInfoService.proto";
import "skuInfoService.proto";

//价格核算计划
service SchemeService {
  //购物车计算
  rpc Cart (SchemeRequest) returns (SchemeResponse) {}
  //下单购买计算
  rpc Purchase (SchemeRequest) returns (SchemeResponse) {}
  //商品列表计算
  rpc List (SchemeRequest) returns (SchemeResponse) {}
  //商品分润计算
  rpc Profit (SchemeRequest) returns (SchemeResponse) {}
  //商品佣金计算
  rpc Commission (SchemeRequest) returns (SchemeResponse) {}
}

message Scheme {
  int64 member_id =1;
  int32 total_num =2;
  float total_weight =3;
  string currency =4;
  float goods_amount =5;
  float discount_amount =6;
  float shipping_fee =7;
  float insure_fee =8;
  float pack_fee =9;
  float surplus =10;
  int64 coupon_id = 11;
  float coupon_money =12;
  int32 integral =13;
  float integral_money =14;
  float amount =15;
  float paid_money =16;
  bool is_shipment =17;
  repeated SchemeDetail details = 18;
  repeated CouponInfo  coupons = 19;
  repeated PromotionInfo promotions = 20;
}

message SchemeDetail {
  int64	sku_id	=1;
  int32 num =2;
  float price = 3;
  float market_price = 4;
  float cost_price = 5;
  float promotion_price = 6;
  float member_price = 7;
  float wholesale_price = 8;
  float row_goods_amount = 9;
  float row_discount_amount = 10;
  float row_amount = 11;
  bool is_gift =12;
  bool checked =13; //是否已选中拿入计算
  SkuInfo sku_info =14;
}


message SchemeRequest {
  int64 address_id = 1;
  int64 coupon_id = 2;
  int64 member_id = 3;
  int32 member_rank_id = 4;
  int64 shop_id = 5;
  int64 order_id = 6;
  string terminal =7;
  string channel =8;
  string payment_method = 9;
  string shipment_method = 10;
  float insure_fee =11;
  float pack_fee =12;
  float surplus =13;
  float coupon_money =14;
  int32 integral =15;
  float integral_money =16;
  float paid_money =17;
  string currency =18;
  int64 area_id = 19;
  map<int64,int32> sku_list =20;
  repeated int64 sku_ids =21;
}

message SchemeData{
  Scheme entity = 1;
  repeated SkuInfo skus = 2;
  float available_surplus =3;//可使用的余额
  int32 available_points =4;//可使用的积分
  CouponInfo available_coupons = 5;//可使用的优惠劵集合
  AddressInfo shipping_address =6;//订单收货地址
  repeated ShopInfo shop_list = 7;//商品中涉及到那些卖家（多店铺模式下）
  map<string,string> params =8;
  repeated Scheme items =9;
  common.Info info =10;
}

message SchemeResponse {
  SchemeData data = 1;
  common.Error error = 2;
}
