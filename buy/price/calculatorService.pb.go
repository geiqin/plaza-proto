// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: calculatorService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//购买计算结果
type PurchaseResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency      string             `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`                                  //货币类型
	TotalNum      int32              `protobuf:"varint,2,opt,name=total_num,json=totalNum,proto3" json:"total_num,omitempty"`                 //总数量
	TotalWeight   int64              `protobuf:"varint,3,opt,name=total_weight,json=totalWeight,proto3" json:"total_weight,omitempty"`        //总重量
	TotalPrice    int64              `protobuf:"varint,4,opt,name=total_price,json=totalPrice,proto3" json:"total_price,omitempty"`           //销售总格
	TotalDiscount int64              `protobuf:"varint,5,opt,name=total_discount,json=totalDiscount,proto3" json:"total_discount,omitempty"`  //优惠总额
	TotalAmount   int64              `protobuf:"varint,6,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`        //应付金额
	PayMoney      int64              `protobuf:"varint,7,opt,name=pay_money,json=payMoney,proto3" json:"pay_money,omitempty"`                 //支付现金
	FreightFee    int64              `protobuf:"varint,8,opt,name=freight_fee,json=freightFee,proto3" json:"freight_fee,omitempty"`           //运费
	InsureFee     int64              `protobuf:"varint,9,opt,name=insure_fee,json=insureFee,proto3" json:"insure_fee,omitempty"`              //保险费
	PackFee       int64              `protobuf:"varint,10,opt,name=pack_fee,json=packFee,proto3" json:"pack_fee,omitempty"`                   //包装费
	Surplus       int64              `protobuf:"varint,11,opt,name=surplus,proto3" json:"surplus,omitempty"`                                  //使用账户余额
	CouponId      int64              `protobuf:"varint,12,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id,omitempty"`                //使用优惠劵ID
	CouponMoney   int64              `protobuf:"varint,13,opt,name=coupon_money,json=couponMoney,proto3" json:"coupon_money,omitempty"`       //使用优惠劵金额
	Integral      int64              `protobuf:"varint,14,opt,name=integral,proto3" json:"integral,omitempty"`                                //积分数量
	IntegralMoney int64              `protobuf:"varint,15,opt,name=integral_money,json=integralMoney,proto3" json:"integral_money,omitempty"` //积分金额
	PaidMoney     int64              `protobuf:"varint,16,opt,name=paid_money,json=paidMoney,proto3" json:"paid_money,omitempty"`             //已支付现金
	MemberId      int64              `protobuf:"varint,17,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`                //会员ID
	IsShipment    bool               `protobuf:"varint,18,opt,name=is_shipment,json=isShipment,proto3" json:"is_shipment,omitempty"`          //是否物流
	Skus          []*PurchaseSkuInfo `protobuf:"bytes,19,rep,name=skus,proto3" json:"skus,omitempty"`                                         //购买商品列表
	Coupons       []*CouponInfo      `protobuf:"bytes,20,rep,name=coupons,proto3" json:"coupons,omitempty"`                                   //可获得的优惠
	Promotions    []*PromotionInfo   `protobuf:"bytes,21,rep,name=promotions,proto3" json:"promotions,omitempty"`                             //参与的活动
	Adjustments   []*AdjustmentInfo  `protobuf:"bytes,22,rep,name=adjustments,proto3" json:"adjustments,omitempty"`                           //变动记录
	Presents      []*SkuInfo         `protobuf:"bytes,23,rep,name=presents,proto3" json:"presents,omitempty"`                                 //可获得的赠品
	//available
	AvailableSurplus  int64       `protobuf:"varint,24,opt,name=available_surplus,json=availableSurplus,proto3" json:"available_surplus,omitempty"`    //可使用的余额
	AvailableIntegral int64       `protobuf:"varint,25,opt,name=available_integral,json=availableIntegral,proto3" json:"available_integral,omitempty"` //可使用的积分
	AvailableCoupons  *CouponInfo `protobuf:"bytes,26,opt,name=available_coupons,json=availableCoupons,proto3" json:"available_coupons,omitempty"`     //可使用的优惠劵集合
}

func (x *PurchaseResult) Reset() {
	*x = PurchaseResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculatorService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseResult) ProtoMessage() {}

func (x *PurchaseResult) ProtoReflect() protoreflect.Message {
	mi := &file_calculatorService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseResult.ProtoReflect.Descriptor instead.
func (*PurchaseResult) Descriptor() ([]byte, []int) {
	return file_calculatorService_proto_rawDescGZIP(), []int{0}
}

func (x *PurchaseResult) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *PurchaseResult) GetTotalNum() int32 {
	if x != nil {
		return x.TotalNum
	}
	return 0
}

func (x *PurchaseResult) GetTotalWeight() int64 {
	if x != nil {
		return x.TotalWeight
	}
	return 0
}

func (x *PurchaseResult) GetTotalPrice() int64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *PurchaseResult) GetTotalDiscount() int64 {
	if x != nil {
		return x.TotalDiscount
	}
	return 0
}

func (x *PurchaseResult) GetTotalAmount() int64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *PurchaseResult) GetPayMoney() int64 {
	if x != nil {
		return x.PayMoney
	}
	return 0
}

func (x *PurchaseResult) GetFreightFee() int64 {
	if x != nil {
		return x.FreightFee
	}
	return 0
}

func (x *PurchaseResult) GetInsureFee() int64 {
	if x != nil {
		return x.InsureFee
	}
	return 0
}

func (x *PurchaseResult) GetPackFee() int64 {
	if x != nil {
		return x.PackFee
	}
	return 0
}

func (x *PurchaseResult) GetSurplus() int64 {
	if x != nil {
		return x.Surplus
	}
	return 0
}

func (x *PurchaseResult) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *PurchaseResult) GetCouponMoney() int64 {
	if x != nil {
		return x.CouponMoney
	}
	return 0
}

func (x *PurchaseResult) GetIntegral() int64 {
	if x != nil {
		return x.Integral
	}
	return 0
}

func (x *PurchaseResult) GetIntegralMoney() int64 {
	if x != nil {
		return x.IntegralMoney
	}
	return 0
}

func (x *PurchaseResult) GetPaidMoney() int64 {
	if x != nil {
		return x.PaidMoney
	}
	return 0
}

func (x *PurchaseResult) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *PurchaseResult) GetIsShipment() bool {
	if x != nil {
		return x.IsShipment
	}
	return false
}

func (x *PurchaseResult) GetSkus() []*PurchaseSkuInfo {
	if x != nil {
		return x.Skus
	}
	return nil
}

func (x *PurchaseResult) GetCoupons() []*CouponInfo {
	if x != nil {
		return x.Coupons
	}
	return nil
}

func (x *PurchaseResult) GetPromotions() []*PromotionInfo {
	if x != nil {
		return x.Promotions
	}
	return nil
}

func (x *PurchaseResult) GetAdjustments() []*AdjustmentInfo {
	if x != nil {
		return x.Adjustments
	}
	return nil
}

func (x *PurchaseResult) GetPresents() []*SkuInfo {
	if x != nil {
		return x.Presents
	}
	return nil
}

func (x *PurchaseResult) GetAvailableSurplus() int64 {
	if x != nil {
		return x.AvailableSurplus
	}
	return 0
}

func (x *PurchaseResult) GetAvailableIntegral() int64 {
	if x != nil {
		return x.AvailableIntegral
	}
	return 0
}

func (x *PurchaseResult) GetAvailableCoupons() *CouponInfo {
	if x != nil {
		return x.AvailableCoupons
	}
	return nil
}

//购买商品信息
type PurchaseSkuInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuId            int64            `protobuf:"varint,1,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	Num              int32            `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	Price            int64            `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
	PromotionPrice   int64            `protobuf:"varint,4,opt,name=promotion_price,json=promotionPrice,proto3" json:"promotion_price,omitempty"`
	MemberPrice      int64            `protobuf:"varint,5,opt,name=member_price,json=memberPrice,proto3" json:"member_price,omitempty"`
	SubtotalPrice    int64            `protobuf:"varint,6,opt,name=subtotal_price,json=subtotalPrice,proto3" json:"subtotal_price,omitempty"`
	SubtotalDiscount int64            `protobuf:"varint,7,opt,name=subtotal_discount,json=subtotalDiscount,proto3" json:"subtotal_discount,omitempty"`
	SubtotalAmount   int64            `protobuf:"varint,8,opt,name=subtotal_amount,json=subtotalAmount,proto3" json:"subtotal_amount,omitempty"`
	Sku              *SkuInfo         `protobuf:"bytes,9,opt,name=sku,proto3" json:"sku,omitempty"`
	Promotions       []*PromotionInfo `protobuf:"bytes,10,rep,name=promotions,proto3" json:"promotions,omitempty"`
}

func (x *PurchaseSkuInfo) Reset() {
	*x = PurchaseSkuInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculatorService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseSkuInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseSkuInfo) ProtoMessage() {}

func (x *PurchaseSkuInfo) ProtoReflect() protoreflect.Message {
	mi := &file_calculatorService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseSkuInfo.ProtoReflect.Descriptor instead.
func (*PurchaseSkuInfo) Descriptor() ([]byte, []int) {
	return file_calculatorService_proto_rawDescGZIP(), []int{1}
}

func (x *PurchaseSkuInfo) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *PurchaseSkuInfo) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *PurchaseSkuInfo) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *PurchaseSkuInfo) GetPromotionPrice() int64 {
	if x != nil {
		return x.PromotionPrice
	}
	return 0
}

func (x *PurchaseSkuInfo) GetMemberPrice() int64 {
	if x != nil {
		return x.MemberPrice
	}
	return 0
}

func (x *PurchaseSkuInfo) GetSubtotalPrice() int64 {
	if x != nil {
		return x.SubtotalPrice
	}
	return 0
}

func (x *PurchaseSkuInfo) GetSubtotalDiscount() int64 {
	if x != nil {
		return x.SubtotalDiscount
	}
	return 0
}

func (x *PurchaseSkuInfo) GetSubtotalAmount() int64 {
	if x != nil {
		return x.SubtotalAmount
	}
	return 0
}

func (x *PurchaseSkuInfo) GetSku() *SkuInfo {
	if x != nil {
		return x.Sku
	}
	return nil
}

func (x *PurchaseSkuInfo) GetPromotions() []*PromotionInfo {
	if x != nil {
		return x.Promotions
	}
	return nil
}

//显示商品信息
type DisplaySkuInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuId            int64            `protobuf:"varint,1,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	Price            int64            `protobuf:"varint,2,opt,name=price,proto3" json:"price,omitempty"`
	MemberPrice      int64            `protobuf:"varint,3,opt,name=member_price,json=memberPrice,proto3" json:"member_price,omitempty"`
	PromotionPrice   int64            `protobuf:"varint,4,opt,name=promotion_price,json=promotionPrice,proto3" json:"promotion_price,omitempty"`
	SubtotalAmount   int64            `protobuf:"varint,5,opt,name=subtotal_amount,json=subtotalAmount,proto3" json:"subtotal_amount,omitempty"`
	SubtotalDiscount int64            `protobuf:"varint,6,opt,name=subtotal_discount,json=subtotalDiscount,proto3" json:"subtotal_discount,omitempty"`
	Promotions       []*PromotionInfo `protobuf:"bytes,7,rep,name=promotions,proto3" json:"promotions,omitempty"`
}

func (x *DisplaySkuInfo) Reset() {
	*x = DisplaySkuInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculatorService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisplaySkuInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplaySkuInfo) ProtoMessage() {}

func (x *DisplaySkuInfo) ProtoReflect() protoreflect.Message {
	mi := &file_calculatorService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplaySkuInfo.ProtoReflect.Descriptor instead.
func (*DisplaySkuInfo) Descriptor() ([]byte, []int) {
	return file_calculatorService_proto_rawDescGZIP(), []int{2}
}

func (x *DisplaySkuInfo) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *DisplaySkuInfo) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *DisplaySkuInfo) GetMemberPrice() int64 {
	if x != nil {
		return x.MemberPrice
	}
	return 0
}

func (x *DisplaySkuInfo) GetPromotionPrice() int64 {
	if x != nil {
		return x.PromotionPrice
	}
	return 0
}

func (x *DisplaySkuInfo) GetSubtotalAmount() int64 {
	if x != nil {
		return x.SubtotalAmount
	}
	return 0
}

func (x *DisplaySkuInfo) GetSubtotalDiscount() int64 {
	if x != nil {
		return x.SubtotalDiscount
	}
	return 0
}

func (x *DisplaySkuInfo) GetPromotions() []*PromotionInfo {
	if x != nil {
		return x.Promotions
	}
	return nil
}

//参与的活动
type PromotionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`          //活动ID
	Code    string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`       //活动编码:如：coupon_20210101212
	Title   string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`     //活动标题
	Type    string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`       //活动类型:Coupon优惠劵/满减送/限时折扣/秒杀/拼团/通用
	Subtype string `protobuf:"bytes,5,opt,name=subtype,proto3" json:"subtype,omitempty"` //活动子类型
	Tag     string `protobuf:"bytes,6,opt,name=tag,proto3" json:"tag,omitempty"`         //标签
}

func (x *PromotionInfo) Reset() {
	*x = PromotionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculatorService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionInfo) ProtoMessage() {}

func (x *PromotionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_calculatorService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionInfo.ProtoReflect.Descriptor instead.
func (*PromotionInfo) Descriptor() ([]byte, []int) {
	return file_calculatorService_proto_rawDescGZIP(), []int{3}
}

func (x *PromotionInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PromotionInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PromotionInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PromotionInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PromotionInfo) GetSubtype() string {
	if x != nil {
		return x.Subtype
	}
	return ""
}

func (x *PromotionInfo) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type AdjustmentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuId      int64  `protobuf:"varint,1,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	Type       string `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Label      string `protobuf:"bytes,3,opt,name=label,proto3" json:"label,omitempty"`
	OriginCode string `protobuf:"bytes,4,opt,name=origin_code,json=originCode,proto3" json:"origin_code,omitempty"`
	Amount     int64  `protobuf:"varint,5,opt,name=amount,proto3" json:"amount,omitempty"`
	Included   bool   `protobuf:"varint,6,opt,name=included,proto3" json:"included,omitempty"`
}

func (x *AdjustmentInfo) Reset() {
	*x = AdjustmentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculatorService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdjustmentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdjustmentInfo) ProtoMessage() {}

func (x *AdjustmentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_calculatorService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdjustmentInfo.ProtoReflect.Descriptor instead.
func (*AdjustmentInfo) Descriptor() ([]byte, []int) {
	return file_calculatorService_proto_rawDescGZIP(), []int{4}
}

func (x *AdjustmentInfo) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *AdjustmentInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AdjustmentInfo) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *AdjustmentInfo) GetOriginCode() string {
	if x != nil {
		return x.OriginCode
	}
	return ""
}

func (x *AdjustmentInfo) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *AdjustmentInfo) GetIncluded() bool {
	if x != nil {
		return x.Included
	}
	return false
}

type PurchaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressId      int64                 `protobuf:"varint,1,opt,name=address_id,json=addressId,proto3" json:"address_id,omitempty"`
	CouponId       int64                 `protobuf:"varint,2,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id,omitempty"`
	ShopId         int64                 `protobuf:"varint,3,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	OrderId        int64                 `protobuf:"varint,4,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Terminal       string                `protobuf:"bytes,5,opt,name=terminal,proto3" json:"terminal,omitempty"`
	Channel        string                `protobuf:"bytes,6,opt,name=channel,proto3" json:"channel,omitempty"`
	PaymentMethod  string                `protobuf:"bytes,7,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
	ShipmentMethod string                `protobuf:"bytes,8,opt,name=shipment_method,json=shipmentMethod,proto3" json:"shipment_method,omitempty"`
	InsureFee      int64                 `protobuf:"varint,9,opt,name=insure_fee,json=insureFee,proto3" json:"insure_fee,omitempty"`
	PackFee        int64                 `protobuf:"varint,10,opt,name=pack_fee,json=packFee,proto3" json:"pack_fee,omitempty"`
	Surplus        int64                 `protobuf:"varint,11,opt,name=surplus,proto3" json:"surplus,omitempty"`
	CouponMoney    int64                 `protobuf:"varint,12,opt,name=coupon_money,json=couponMoney,proto3" json:"coupon_money,omitempty"`
	Integral       int64                 `protobuf:"varint,13,opt,name=integral,proto3" json:"integral,omitempty"`
	IntegralMoney  int64                 `protobuf:"varint,14,opt,name=integral_money,json=integralMoney,proto3" json:"integral_money,omitempty"`
	PaidMoney      int64                 `protobuf:"varint,15,opt,name=paid_money,json=paidMoney,proto3" json:"paid_money,omitempty"`
	Currency       string                `protobuf:"bytes,16,opt,name=currency,proto3" json:"currency,omitempty"`
	AreaId         int64                 `protobuf:"varint,17,opt,name=area_id,json=areaId,proto3" json:"area_id,omitempty"`
	Buyer          *BuyerInfo            `protobuf:"bytes,18,opt,name=buyer,proto3" json:"buyer,omitempty"` //买家信息
	Skus           []*PurchaseRequestSku `protobuf:"bytes,19,rep,name=skus,proto3" json:"skus,omitempty"`   //需要计算的SKUS
}

func (x *PurchaseRequest) Reset() {
	*x = PurchaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculatorService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseRequest) ProtoMessage() {}

func (x *PurchaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calculatorService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseRequest.ProtoReflect.Descriptor instead.
func (*PurchaseRequest) Descriptor() ([]byte, []int) {
	return file_calculatorService_proto_rawDescGZIP(), []int{5}
}

func (x *PurchaseRequest) GetAddressId() int64 {
	if x != nil {
		return x.AddressId
	}
	return 0
}

func (x *PurchaseRequest) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *PurchaseRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *PurchaseRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *PurchaseRequest) GetTerminal() string {
	if x != nil {
		return x.Terminal
	}
	return ""
}

func (x *PurchaseRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *PurchaseRequest) GetPaymentMethod() string {
	if x != nil {
		return x.PaymentMethod
	}
	return ""
}

func (x *PurchaseRequest) GetShipmentMethod() string {
	if x != nil {
		return x.ShipmentMethod
	}
	return ""
}

func (x *PurchaseRequest) GetInsureFee() int64 {
	if x != nil {
		return x.InsureFee
	}
	return 0
}

func (x *PurchaseRequest) GetPackFee() int64 {
	if x != nil {
		return x.PackFee
	}
	return 0
}

func (x *PurchaseRequest) GetSurplus() int64 {
	if x != nil {
		return x.Surplus
	}
	return 0
}

func (x *PurchaseRequest) GetCouponMoney() int64 {
	if x != nil {
		return x.CouponMoney
	}
	return 0
}

func (x *PurchaseRequest) GetIntegral() int64 {
	if x != nil {
		return x.Integral
	}
	return 0
}

func (x *PurchaseRequest) GetIntegralMoney() int64 {
	if x != nil {
		return x.IntegralMoney
	}
	return 0
}

func (x *PurchaseRequest) GetPaidMoney() int64 {
	if x != nil {
		return x.PaidMoney
	}
	return 0
}

func (x *PurchaseRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *PurchaseRequest) GetAreaId() int64 {
	if x != nil {
		return x.AreaId
	}
	return 0
}

func (x *PurchaseRequest) GetBuyer() *BuyerInfo {
	if x != nil {
		return x.Buyer
	}
	return nil
}

func (x *PurchaseRequest) GetSkus() []*PurchaseRequestSku {
	if x != nil {
		return x.Skus
	}
	return nil
}

type DisplayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency string               `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`            //货币类型
	AreaId   int64                `protobuf:"varint,2,opt,name=area_id,json=areaId,proto3" json:"area_id,omitempty"` //所在区域ID
	Buyer    *BuyerInfo           `protobuf:"bytes,3,opt,name=buyer,proto3" json:"buyer,omitempty"`                  //买家信息
	Skus     []*DisplayRequestSku `protobuf:"bytes,4,rep,name=skus,proto3" json:"skus,omitempty"`                    //需要计算的skus
}

func (x *DisplayRequest) Reset() {
	*x = DisplayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculatorService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisplayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayRequest) ProtoMessage() {}

func (x *DisplayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calculatorService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayRequest.ProtoReflect.Descriptor instead.
func (*DisplayRequest) Descriptor() ([]byte, []int) {
	return file_calculatorService_proto_rawDescGZIP(), []int{6}
}

func (x *DisplayRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *DisplayRequest) GetAreaId() int64 {
	if x != nil {
		return x.AreaId
	}
	return 0
}

func (x *DisplayRequest) GetBuyer() *BuyerInfo {
	if x != nil {
		return x.Buyer
	}
	return nil
}

func (x *DisplayRequest) GetSkus() []*DisplayRequestSku {
	if x != nil {
		return x.Skus
	}
	return nil
}

type CalculatorData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CartResult     *PurchaseResult   `protobuf:"bytes,1,opt,name=cart_result,json=cartResult,proto3" json:"cart_result,omitempty"`
	PurchaseResult *PurchaseResult   `protobuf:"bytes,2,opt,name=purchase_result,json=purchaseResult,proto3" json:"purchase_result,omitempty"`
	DisplayResult  []*DisplaySkuInfo `protobuf:"bytes,3,rep,name=display_result,json=displayResult,proto3" json:"display_result,omitempty"`
}

func (x *CalculatorData) Reset() {
	*x = CalculatorData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculatorService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculatorData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculatorData) ProtoMessage() {}

func (x *CalculatorData) ProtoReflect() protoreflect.Message {
	mi := &file_calculatorService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculatorData.ProtoReflect.Descriptor instead.
func (*CalculatorData) Descriptor() ([]byte, []int) {
	return file_calculatorService_proto_rawDescGZIP(), []int{7}
}

func (x *CalculatorData) GetCartResult() *PurchaseResult {
	if x != nil {
		return x.CartResult
	}
	return nil
}

func (x *CalculatorData) GetPurchaseResult() *PurchaseResult {
	if x != nil {
		return x.PurchaseResult
	}
	return nil
}

func (x *CalculatorData) GetDisplayResult() []*DisplaySkuInfo {
	if x != nil {
		return x.DisplayResult
	}
	return nil
}

type CalculatorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *CalculatorData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Error *common.Error   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CalculatorResponse) Reset() {
	*x = CalculatorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculatorService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculatorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculatorResponse) ProtoMessage() {}

func (x *CalculatorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calculatorService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculatorResponse.ProtoReflect.Descriptor instead.
func (*CalculatorResponse) Descriptor() ([]byte, []int) {
	return file_calculatorService_proto_rawDescGZIP(), []int{8}
}

func (x *CalculatorResponse) GetData() *CalculatorData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CalculatorResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

//需要计算的商品
type PurchaseRequestSku struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuId             int64  `protobuf:"varint,1,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	Num               int32  `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	Price             int64  `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
	Weight            int64  `protobuf:"varint,4,opt,name=weight,proto3" json:"weight,omitempty"`
	Volume            int64  `protobuf:"varint,5,opt,name=volume,proto3" json:"volume,omitempty"`
	Stock             int32  `protobuf:"varint,6,opt,name=stock,proto3" json:"stock,omitempty"`
	IsVirtual         bool   `protobuf:"varint,7,opt,name=is_virtual,json=isVirtual,proto3" json:"is_virtual,omitempty"`
	IsMemberRight     bool   `protobuf:"varint,8,opt,name=is_member_right,json=isMemberRight,proto3" json:"is_member_right,omitempty"`
	IsMemberPrice     bool   `protobuf:"varint,9,opt,name=is_member_price,json=isMemberPrice,proto3" json:"is_member_price,omitempty"`
	FreightType       string `protobuf:"bytes,10,opt,name=freight_type,json=freightType,proto3" json:"freight_type,omitempty"`
	FreightUniformFee int64  `protobuf:"varint,11,opt,name=freight_uniform_fee,json=freightUniformFee,proto3" json:"freight_uniform_fee,omitempty"`
	FreightExpressId  int64  `protobuf:"varint,12,opt,name=freight_express_id,json=freightExpressId,proto3" json:"freight_express_id,omitempty"`
}

func (x *PurchaseRequestSku) Reset() {
	*x = PurchaseRequestSku{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculatorService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseRequestSku) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseRequestSku) ProtoMessage() {}

func (x *PurchaseRequestSku) ProtoReflect() protoreflect.Message {
	mi := &file_calculatorService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseRequestSku.ProtoReflect.Descriptor instead.
func (*PurchaseRequestSku) Descriptor() ([]byte, []int) {
	return file_calculatorService_proto_rawDescGZIP(), []int{5, 0}
}

func (x *PurchaseRequestSku) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *PurchaseRequestSku) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *PurchaseRequestSku) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *PurchaseRequestSku) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *PurchaseRequestSku) GetVolume() int64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *PurchaseRequestSku) GetStock() int32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *PurchaseRequestSku) GetIsVirtual() bool {
	if x != nil {
		return x.IsVirtual
	}
	return false
}

func (x *PurchaseRequestSku) GetIsMemberRight() bool {
	if x != nil {
		return x.IsMemberRight
	}
	return false
}

func (x *PurchaseRequestSku) GetIsMemberPrice() bool {
	if x != nil {
		return x.IsMemberPrice
	}
	return false
}

func (x *PurchaseRequestSku) GetFreightType() string {
	if x != nil {
		return x.FreightType
	}
	return ""
}

func (x *PurchaseRequestSku) GetFreightUniformFee() int64 {
	if x != nil {
		return x.FreightUniformFee
	}
	return 0
}

func (x *PurchaseRequestSku) GetFreightExpressId() int64 {
	if x != nil {
		return x.FreightExpressId
	}
	return 0
}

//需要计算的商品
type DisplayRequestSku struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuId         int64 `protobuf:"varint,1,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`                           //skuId
	Weight        int64 `protobuf:"varint,2,opt,name=weight,proto3" json:"weight,omitempty"`                                      //重量
	Price         int64 `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`                                        //销售价
	MemberPrice   int64 `protobuf:"varint,4,opt,name=member_price,json=memberPrice,proto3" json:"member_price,omitempty"`         //会员价
	IsMemberPrice bool  `protobuf:"varint,5,opt,name=is_member_price,json=isMemberPrice,proto3" json:"is_member_price,omitempty"` //是否自定义会员价
}

func (x *DisplayRequestSku) Reset() {
	*x = DisplayRequestSku{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculatorService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisplayRequestSku) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayRequestSku) ProtoMessage() {}

func (x *DisplayRequestSku) ProtoReflect() protoreflect.Message {
	mi := &file_calculatorService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayRequestSku.ProtoReflect.Descriptor instead.
func (*DisplayRequestSku) Descriptor() ([]byte, []int) {
	return file_calculatorService_proto_rawDescGZIP(), []int{6, 0}
}

func (x *DisplayRequestSku) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *DisplayRequestSku) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *DisplayRequestSku) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *DisplayRequestSku) GetMemberPrice() int64 {
	if x != nil {
		return x.MemberPrice
	}
	return 0
}

func (x *DisplayRequestSku) GetIsMemberPrice() bool {
	if x != nil {
		return x.IsMemberPrice
	}
	return false
}

var File_calculatorService_proto protoreflect.FileDescriptor

var file_calculatorService_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x73,
	0x6b, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xeb, 0x07, 0x0a, 0x0e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x12,
	0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x79, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x79, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x46, 0x65, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x6e, 0x73, 0x75, 0x72, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x69, 0x6e, 0x73, 0x75, 0x72, 0x65, 0x46, 0x65, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61,
	0x63, 0x6b, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61,
	0x63, 0x6b, 0x46, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x69, 0x64, 0x4d, 0x6f, 0x6e, 0x65,
	0x79, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f,
	0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x12, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x2d, 0x0a, 0x04, 0x73, 0x6b, 0x75, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x73, 0x6b, 0x75, 0x73, 0x12, 0x2e,
	0x0a, 0x07, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x12, 0x37,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x15, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3a, 0x0a, 0x0b, 0x61, 0x64, 0x6a, 0x75, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x2d, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x17, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x70, 0x72, 0x65, 0x73, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f,
	0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x61,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x12,
	0x2d, 0x0a, 0x12, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x41,
	0x0a, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x73, 0x22, 0xf7, 0x02, 0x0a, 0x0f, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x6b,
	0x75, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x10, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73,
	0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a,
	0x03, 0x73, 0x6b, 0x75, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x73,
	0x6b, 0x75, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x98, 0x02, 0x0a, 0x0e,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15,
	0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x75, 0x62, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2b, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x73, 0x75, 0x62,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x37, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f,
	0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x89, 0x01, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74,
	0x61, 0x67, 0x22, 0xa6, 0x01, 0x0a, 0x0e, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x64, 0x22, 0xf0, 0x07, 0x0a, 0x0f,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68,
	0x6f, 0x70, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x27, 0x0a, 0x0f,
	0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x4d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x75, 0x72, 0x65, 0x5f,
	0x66, 0x65, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x75, 0x72,
	0x65, 0x46, 0x65, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x66, 0x65, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x46, 0x65, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x69, 0x64, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x72,
	0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x72, 0x65,
	0x61, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x05, 0x62, 0x75, 0x79, 0x65, 0x72, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x75,
	0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x62, 0x75, 0x79, 0x65, 0x72, 0x12, 0x31,
	0x0a, 0x04, 0x73, 0x6b, 0x75, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x73, 0x6b, 0x75, 0x52, 0x04, 0x73, 0x6b, 0x75,
	0x73, 0x1a, 0xfa, 0x02, 0x0a, 0x03, 0x73, 0x6b, 0x75, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e,
	0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x26, 0x0a,
	0x0f, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x52, 0x69, 0x67, 0x68, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x69, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x2e, 0x0a, 0x13, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x66,
	0x6f, 0x72, 0x6d, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x66,
	0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x55, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x46, 0x65, 0x65,
	0x12, 0x2c, 0x0a, 0x12, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x66, 0x72,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x22, 0xba,
	0x02, 0x0a, 0x0e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x17, 0x0a,
	0x07, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x05, 0x62, 0x75, 0x79, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x42, 0x75, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x62, 0x75, 0x79, 0x65,
	0x72, 0x12, 0x30, 0x0a, 0x04, 0x73, 0x6b, 0x75, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x73, 0x6b, 0x75, 0x52, 0x04, 0x73,
	0x6b, 0x75, 0x73, 0x1a, 0x95, 0x01, 0x0a, 0x03, 0x73, 0x6b, 0x75, 0x12, 0x15, 0x0a, 0x06, 0x73,
	0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xcf, 0x01, 0x0a, 0x0e,
	0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x39,
	0x0a, 0x0b, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a, 0x63,
	0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x41, 0x0a, 0x0f, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0e, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3f, 0x0a, 0x0e,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x67, 0x0a,
	0x12, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6c,
	0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xe2, 0x01, 0x0a, 0x11, 0x43, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x04,
	0x43, 0x61, 0x72, 0x74, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75,
	0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x45, 0x0a, 0x08, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x19, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f,
	0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_calculatorService_proto_rawDescOnce sync.Once
	file_calculatorService_proto_rawDescData = file_calculatorService_proto_rawDesc
)

func file_calculatorService_proto_rawDescGZIP() []byte {
	file_calculatorService_proto_rawDescOnce.Do(func() {
		file_calculatorService_proto_rawDescData = protoimpl.X.CompressGZIP(file_calculatorService_proto_rawDescData)
	})
	return file_calculatorService_proto_rawDescData
}

var file_calculatorService_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_calculatorService_proto_goTypes = []interface{}{
	(*PurchaseResult)(nil),     // 0: services.PurchaseResult
	(*PurchaseSkuInfo)(nil),    // 1: services.PurchaseSkuInfo
	(*DisplaySkuInfo)(nil),     // 2: services.DisplaySkuInfo
	(*PromotionInfo)(nil),      // 3: services.PromotionInfo
	(*AdjustmentInfo)(nil),     // 4: services.AdjustmentInfo
	(*PurchaseRequest)(nil),    // 5: services.PurchaseRequest
	(*DisplayRequest)(nil),     // 6: services.DisplayRequest
	(*CalculatorData)(nil),     // 7: services.CalculatorData
	(*CalculatorResponse)(nil), // 8: services.CalculatorResponse
	(*PurchaseRequestSku)(nil), // 9: services.PurchaseRequest.sku
	(*DisplayRequestSku)(nil),  // 10: services.DisplayRequest.sku
	(*CouponInfo)(nil),         // 11: services.CouponInfo
	(*SkuInfo)(nil),            // 12: services.SkuInfo
	(*BuyerInfo)(nil),          // 13: services.BuyerInfo
	(*common.Error)(nil),       // 14: common.Error
}
var file_calculatorService_proto_depIdxs = []int32{
	1,  // 0: services.PurchaseResult.skus:type_name -> services.PurchaseSkuInfo
	11, // 1: services.PurchaseResult.coupons:type_name -> services.CouponInfo
	3,  // 2: services.PurchaseResult.promotions:type_name -> services.PromotionInfo
	4,  // 3: services.PurchaseResult.adjustments:type_name -> services.AdjustmentInfo
	12, // 4: services.PurchaseResult.presents:type_name -> services.SkuInfo
	11, // 5: services.PurchaseResult.available_coupons:type_name -> services.CouponInfo
	12, // 6: services.PurchaseSkuInfo.sku:type_name -> services.SkuInfo
	3,  // 7: services.PurchaseSkuInfo.promotions:type_name -> services.PromotionInfo
	3,  // 8: services.DisplaySkuInfo.promotions:type_name -> services.PromotionInfo
	13, // 9: services.PurchaseRequest.buyer:type_name -> services.BuyerInfo
	9,  // 10: services.PurchaseRequest.skus:type_name -> services.PurchaseRequest.sku
	13, // 11: services.DisplayRequest.buyer:type_name -> services.BuyerInfo
	10, // 12: services.DisplayRequest.skus:type_name -> services.DisplayRequest.sku
	0,  // 13: services.CalculatorData.cart_result:type_name -> services.PurchaseResult
	0,  // 14: services.CalculatorData.purchase_result:type_name -> services.PurchaseResult
	2,  // 15: services.CalculatorData.display_result:type_name -> services.DisplaySkuInfo
	7,  // 16: services.CalculatorResponse.data:type_name -> services.CalculatorData
	14, // 17: services.CalculatorResponse.error:type_name -> common.Error
	5,  // 18: services.CalculatorService.Cart:input_type -> services.PurchaseRequest
	5,  // 19: services.CalculatorService.Purchase:input_type -> services.PurchaseRequest
	6,  // 20: services.CalculatorService.Display:input_type -> services.DisplayRequest
	8,  // 21: services.CalculatorService.Cart:output_type -> services.CalculatorResponse
	8,  // 22: services.CalculatorService.Purchase:output_type -> services.CalculatorResponse
	8,  // 23: services.CalculatorService.Display:output_type -> services.CalculatorResponse
	21, // [21:24] is the sub-list for method output_type
	18, // [18:21] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_calculatorService_proto_init() }
func file_calculatorService_proto_init() {
	if File_calculatorService_proto != nil {
		return
	}
	file_baseInfoService_proto_init()
	file_skuInfoService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_calculatorService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculatorService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseSkuInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculatorService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisplaySkuInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculatorService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculatorService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdjustmentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculatorService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculatorService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisplayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculatorService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculatorData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculatorService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculatorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculatorService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseRequestSku); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculatorService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisplayRequestSku); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_calculatorService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_calculatorService_proto_goTypes,
		DependencyIndexes: file_calculatorService_proto_depIdxs,
		MessageInfos:      file_calculatorService_proto_msgTypes,
	}.Build()
	File_calculatorService_proto = out.File
	file_calculatorService_proto_rawDesc = nil
	file_calculatorService_proto_goTypes = nil
	file_calculatorService_proto_depIdxs = nil
}
