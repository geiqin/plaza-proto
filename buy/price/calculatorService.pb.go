// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: calculatorService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//购买计算结果
type PurchaseResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberId       int64             `protobuf:"varint,1,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	TotalNum       int32             `protobuf:"varint,2,opt,name=total_num,json=totalNum,proto3" json:"total_num,omitempty"`
	TotalWeight    int64             `protobuf:"varint,3,opt,name=total_weight,json=totalWeight,proto3" json:"total_weight,omitempty"`
	Currency       string            `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	GoodsAmount    int64             `protobuf:"varint,5,opt,name=goods_amount,json=goodsAmount,proto3" json:"goods_amount,omitempty"`
	DiscountAmount int64             `protobuf:"varint,6,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount,omitempty"`
	ShippingFee    int64             `protobuf:"varint,7,opt,name=shipping_fee,json=shippingFee,proto3" json:"shipping_fee,omitempty"`
	InsureFee      int64             `protobuf:"varint,8,opt,name=insure_fee,json=insureFee,proto3" json:"insure_fee,omitempty"`
	PackFee        int64             `protobuf:"varint,9,opt,name=pack_fee,json=packFee,proto3" json:"pack_fee,omitempty"`
	Surplus        int64             `protobuf:"varint,10,opt,name=surplus,proto3" json:"surplus,omitempty"`
	CouponId       int64             `protobuf:"varint,11,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id,omitempty"`
	CouponMoney    int64             `protobuf:"varint,12,opt,name=coupon_money,json=couponMoney,proto3" json:"coupon_money,omitempty"`
	Integral       int32             `protobuf:"varint,13,opt,name=integral,proto3" json:"integral,omitempty"`
	IntegralMoney  int64             `protobuf:"varint,14,opt,name=integral_money,json=integralMoney,proto3" json:"integral_money,omitempty"`
	Amount         int64             `protobuf:"varint,15,opt,name=amount,proto3" json:"amount,omitempty"`
	PaidMoney      int64             `protobuf:"varint,16,opt,name=paid_money,json=paidMoney,proto3" json:"paid_money,omitempty"`
	IsShipment     bool              `protobuf:"varint,17,opt,name=is_shipment,json=isShipment,proto3" json:"is_shipment,omitempty"`
	Details        []*PurchaseDetail `protobuf:"bytes,18,rep,name=details,proto3" json:"details,omitempty"`
	Coupons        []*CouponInfo     `protobuf:"bytes,19,rep,name=coupons,proto3" json:"coupons,omitempty"`
	Promotions     []*PromotionInfo  `protobuf:"bytes,20,rep,name=promotions,proto3" json:"promotions,omitempty"`
}

func (x *PurchaseResult) Reset() {
	*x = PurchaseResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculatorService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseResult) ProtoMessage() {}

func (x *PurchaseResult) ProtoReflect() protoreflect.Message {
	mi := &file_calculatorService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseResult.ProtoReflect.Descriptor instead.
func (*PurchaseResult) Descriptor() ([]byte, []int) {
	return file_calculatorService_proto_rawDescGZIP(), []int{0}
}

func (x *PurchaseResult) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *PurchaseResult) GetTotalNum() int32 {
	if x != nil {
		return x.TotalNum
	}
	return 0
}

func (x *PurchaseResult) GetTotalWeight() int64 {
	if x != nil {
		return x.TotalWeight
	}
	return 0
}

func (x *PurchaseResult) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *PurchaseResult) GetGoodsAmount() int64 {
	if x != nil {
		return x.GoodsAmount
	}
	return 0
}

func (x *PurchaseResult) GetDiscountAmount() int64 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *PurchaseResult) GetShippingFee() int64 {
	if x != nil {
		return x.ShippingFee
	}
	return 0
}

func (x *PurchaseResult) GetInsureFee() int64 {
	if x != nil {
		return x.InsureFee
	}
	return 0
}

func (x *PurchaseResult) GetPackFee() int64 {
	if x != nil {
		return x.PackFee
	}
	return 0
}

func (x *PurchaseResult) GetSurplus() int64 {
	if x != nil {
		return x.Surplus
	}
	return 0
}

func (x *PurchaseResult) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *PurchaseResult) GetCouponMoney() int64 {
	if x != nil {
		return x.CouponMoney
	}
	return 0
}

func (x *PurchaseResult) GetIntegral() int32 {
	if x != nil {
		return x.Integral
	}
	return 0
}

func (x *PurchaseResult) GetIntegralMoney() int64 {
	if x != nil {
		return x.IntegralMoney
	}
	return 0
}

func (x *PurchaseResult) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *PurchaseResult) GetPaidMoney() int64 {
	if x != nil {
		return x.PaidMoney
	}
	return 0
}

func (x *PurchaseResult) GetIsShipment() bool {
	if x != nil {
		return x.IsShipment
	}
	return false
}

func (x *PurchaseResult) GetDetails() []*PurchaseDetail {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *PurchaseResult) GetCoupons() []*CouponInfo {
	if x != nil {
		return x.Coupons
	}
	return nil
}

func (x *PurchaseResult) GetPromotions() []*PromotionInfo {
	if x != nil {
		return x.Promotions
	}
	return nil
}

//购买清单明细
type PurchaseDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuId             int64    `protobuf:"varint,1,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	Num               int32    `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	Price             int64    `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
	MarketPrice       int64    `protobuf:"varint,4,opt,name=market_price,json=marketPrice,proto3" json:"market_price,omitempty"`
	CostPrice         int64    `protobuf:"varint,5,opt,name=cost_price,json=costPrice,proto3" json:"cost_price,omitempty"`
	PromotionPrice    int64    `protobuf:"varint,6,opt,name=promotion_price,json=promotionPrice,proto3" json:"promotion_price,omitempty"`
	MemberPrice       int64    `protobuf:"varint,7,opt,name=member_price,json=memberPrice,proto3" json:"member_price,omitempty"`
	WholesalePrice    int64    `protobuf:"varint,8,opt,name=wholesale_price,json=wholesalePrice,proto3" json:"wholesale_price,omitempty"`
	RowGoodsAmount    int64    `protobuf:"varint,9,opt,name=row_goods_amount,json=rowGoodsAmount,proto3" json:"row_goods_amount,omitempty"`
	RowDiscountAmount int64    `protobuf:"varint,10,opt,name=row_discount_amount,json=rowDiscountAmount,proto3" json:"row_discount_amount,omitempty"`
	RowAmount         int64    `protobuf:"varint,11,opt,name=row_amount,json=rowAmount,proto3" json:"row_amount,omitempty"`
	IsGift            bool     `protobuf:"varint,12,opt,name=is_gift,json=isGift,proto3" json:"is_gift,omitempty"`
	Checked           bool     `protobuf:"varint,13,opt,name=checked,proto3" json:"checked,omitempty"` //是否已选中拿入计算
	SkuInfo           *SkuInfo `protobuf:"bytes,14,opt,name=sku_info,json=skuInfo,proto3" json:"sku_info,omitempty"`
}

func (x *PurchaseDetail) Reset() {
	*x = PurchaseDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculatorService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseDetail) ProtoMessage() {}

func (x *PurchaseDetail) ProtoReflect() protoreflect.Message {
	mi := &file_calculatorService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseDetail.ProtoReflect.Descriptor instead.
func (*PurchaseDetail) Descriptor() ([]byte, []int) {
	return file_calculatorService_proto_rawDescGZIP(), []int{1}
}

func (x *PurchaseDetail) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *PurchaseDetail) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *PurchaseDetail) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *PurchaseDetail) GetMarketPrice() int64 {
	if x != nil {
		return x.MarketPrice
	}
	return 0
}

func (x *PurchaseDetail) GetCostPrice() int64 {
	if x != nil {
		return x.CostPrice
	}
	return 0
}

func (x *PurchaseDetail) GetPromotionPrice() int64 {
	if x != nil {
		return x.PromotionPrice
	}
	return 0
}

func (x *PurchaseDetail) GetMemberPrice() int64 {
	if x != nil {
		return x.MemberPrice
	}
	return 0
}

func (x *PurchaseDetail) GetWholesalePrice() int64 {
	if x != nil {
		return x.WholesalePrice
	}
	return 0
}

func (x *PurchaseDetail) GetRowGoodsAmount() int64 {
	if x != nil {
		return x.RowGoodsAmount
	}
	return 0
}

func (x *PurchaseDetail) GetRowDiscountAmount() int64 {
	if x != nil {
		return x.RowDiscountAmount
	}
	return 0
}

func (x *PurchaseDetail) GetRowAmount() int64 {
	if x != nil {
		return x.RowAmount
	}
	return 0
}

func (x *PurchaseDetail) GetIsGift() bool {
	if x != nil {
		return x.IsGift
	}
	return false
}

func (x *PurchaseDetail) GetChecked() bool {
	if x != nil {
		return x.Checked
	}
	return false
}

func (x *PurchaseDetail) GetSkuInfo() *SkuInfo {
	if x != nil {
		return x.SkuInfo
	}
	return nil
}

//商品显示结果
type DisplayResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuId          int64          `protobuf:"varint,1,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	Num            int32          `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	Price          int64          `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
	MarketPrice    int64          `protobuf:"varint,4,opt,name=market_price,json=marketPrice,proto3" json:"market_price,omitempty"`
	CostPrice      int64          `protobuf:"varint,5,opt,name=cost_price,json=costPrice,proto3" json:"cost_price,omitempty"`
	PromotionPrice int64          `protobuf:"varint,6,opt,name=promotion_price,json=promotionPrice,proto3" json:"promotion_price,omitempty"`
	MemberPrice    int64          `protobuf:"varint,7,opt,name=member_price,json=memberPrice,proto3" json:"member_price,omitempty"`
	WholesalePrice int64          `protobuf:"varint,8,opt,name=wholesale_price,json=wholesalePrice,proto3" json:"wholesale_price,omitempty"`
	Promotions     *PromotionDesc `protobuf:"bytes,9,opt,name=promotions,proto3" json:"promotions,omitempty"`
}

func (x *DisplayResult) Reset() {
	*x = DisplayResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculatorService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisplayResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayResult) ProtoMessage() {}

func (x *DisplayResult) ProtoReflect() protoreflect.Message {
	mi := &file_calculatorService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayResult.ProtoReflect.Descriptor instead.
func (*DisplayResult) Descriptor() ([]byte, []int) {
	return file_calculatorService_proto_rawDescGZIP(), []int{2}
}

func (x *DisplayResult) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *DisplayResult) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *DisplayResult) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *DisplayResult) GetMarketPrice() int64 {
	if x != nil {
		return x.MarketPrice
	}
	return 0
}

func (x *DisplayResult) GetCostPrice() int64 {
	if x != nil {
		return x.CostPrice
	}
	return 0
}

func (x *DisplayResult) GetPromotionPrice() int64 {
	if x != nil {
		return x.PromotionPrice
	}
	return 0
}

func (x *DisplayResult) GetMemberPrice() int64 {
	if x != nil {
		return x.MemberPrice
	}
	return 0
}

func (x *DisplayResult) GetWholesalePrice() int64 {
	if x != nil {
		return x.WholesalePrice
	}
	return 0
}

func (x *DisplayResult) GetPromotions() *PromotionDesc {
	if x != nil {
		return x.Promotions
	}
	return nil
}

//参与的活动
type PromotionDesc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`          //活动ID
	Code    string `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`       //活动编码:如：coupon_20210101212
	Title   string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`     //活动标题
	Type    string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`       //活动类型:Coupon优惠劵/满减送/限时折扣/秒杀/拼团/通用
	Subtype string `protobuf:"bytes,5,opt,name=subtype,proto3" json:"subtype,omitempty"` //活动子类型
	Tag     string `protobuf:"bytes,6,opt,name=tag,proto3" json:"tag,omitempty"`         //标签
}

func (x *PromotionDesc) Reset() {
	*x = PromotionDesc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculatorService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionDesc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionDesc) ProtoMessage() {}

func (x *PromotionDesc) ProtoReflect() protoreflect.Message {
	mi := &file_calculatorService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionDesc.ProtoReflect.Descriptor instead.
func (*PromotionDesc) Descriptor() ([]byte, []int) {
	return file_calculatorService_proto_rawDescGZIP(), []int{3}
}

func (x *PromotionDesc) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PromotionDesc) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PromotionDesc) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PromotionDesc) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PromotionDesc) GetSubtype() string {
	if x != nil {
		return x.Subtype
	}
	return ""
}

func (x *PromotionDesc) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

type PurchaseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressId      int64          `protobuf:"varint,1,opt,name=address_id,json=addressId,proto3" json:"address_id,omitempty"`
	CouponId       int64          `protobuf:"varint,2,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id,omitempty"`
	MemberId       int64          `protobuf:"varint,3,opt,name=member_id,json=memberId,proto3" json:"member_id,omitempty"`
	MemberRankId   int32          `protobuf:"varint,4,opt,name=member_rank_id,json=memberRankId,proto3" json:"member_rank_id,omitempty"`
	ShopId         int64          `protobuf:"varint,5,opt,name=shop_id,json=shopId,proto3" json:"shop_id,omitempty"`
	OrderId        int64          `protobuf:"varint,6,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
	Terminal       string         `protobuf:"bytes,7,opt,name=terminal,proto3" json:"terminal,omitempty"`
	Channel        string         `protobuf:"bytes,8,opt,name=channel,proto3" json:"channel,omitempty"`
	PaymentMethod  string         `protobuf:"bytes,9,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method,omitempty"`
	ShipmentMethod string         `protobuf:"bytes,10,opt,name=shipment_method,json=shipmentMethod,proto3" json:"shipment_method,omitempty"`
	InsureFee      int64          `protobuf:"varint,11,opt,name=insure_fee,json=insureFee,proto3" json:"insure_fee,omitempty"`
	PackFee        int64          `protobuf:"varint,12,opt,name=pack_fee,json=packFee,proto3" json:"pack_fee,omitempty"`
	Surplus        int64          `protobuf:"varint,13,opt,name=surplus,proto3" json:"surplus,omitempty"`
	CouponMoney    int64          `protobuf:"varint,14,opt,name=coupon_money,json=couponMoney,proto3" json:"coupon_money,omitempty"`
	Integral       int32          `protobuf:"varint,15,opt,name=integral,proto3" json:"integral,omitempty"`
	IntegralMoney  int64          `protobuf:"varint,16,opt,name=integral_money,json=integralMoney,proto3" json:"integral_money,omitempty"`
	PaidMoney      int64          `protobuf:"varint,17,opt,name=paid_money,json=paidMoney,proto3" json:"paid_money,omitempty"`
	Currency       string         `protobuf:"bytes,18,opt,name=currency,proto3" json:"currency,omitempty"`
	AreaId         int64          `protobuf:"varint,19,opt,name=area_id,json=areaId,proto3" json:"area_id,omitempty"`
	PurchaseSkus   []*PurchaseSku `protobuf:"bytes,20,rep,name=purchase_skus,json=purchaseSkus,proto3" json:"purchase_skus,omitempty"`
}

func (x *PurchaseRequest) Reset() {
	*x = PurchaseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculatorService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseRequest) ProtoMessage() {}

func (x *PurchaseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calculatorService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseRequest.ProtoReflect.Descriptor instead.
func (*PurchaseRequest) Descriptor() ([]byte, []int) {
	return file_calculatorService_proto_rawDescGZIP(), []int{4}
}

func (x *PurchaseRequest) GetAddressId() int64 {
	if x != nil {
		return x.AddressId
	}
	return 0
}

func (x *PurchaseRequest) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *PurchaseRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *PurchaseRequest) GetMemberRankId() int32 {
	if x != nil {
		return x.MemberRankId
	}
	return 0
}

func (x *PurchaseRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *PurchaseRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *PurchaseRequest) GetTerminal() string {
	if x != nil {
		return x.Terminal
	}
	return ""
}

func (x *PurchaseRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *PurchaseRequest) GetPaymentMethod() string {
	if x != nil {
		return x.PaymentMethod
	}
	return ""
}

func (x *PurchaseRequest) GetShipmentMethod() string {
	if x != nil {
		return x.ShipmentMethod
	}
	return ""
}

func (x *PurchaseRequest) GetInsureFee() int64 {
	if x != nil {
		return x.InsureFee
	}
	return 0
}

func (x *PurchaseRequest) GetPackFee() int64 {
	if x != nil {
		return x.PackFee
	}
	return 0
}

func (x *PurchaseRequest) GetSurplus() int64 {
	if x != nil {
		return x.Surplus
	}
	return 0
}

func (x *PurchaseRequest) GetCouponMoney() int64 {
	if x != nil {
		return x.CouponMoney
	}
	return 0
}

func (x *PurchaseRequest) GetIntegral() int32 {
	if x != nil {
		return x.Integral
	}
	return 0
}

func (x *PurchaseRequest) GetIntegralMoney() int64 {
	if x != nil {
		return x.IntegralMoney
	}
	return 0
}

func (x *PurchaseRequest) GetPaidMoney() int64 {
	if x != nil {
		return x.PaidMoney
	}
	return 0
}

func (x *PurchaseRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *PurchaseRequest) GetAreaId() int64 {
	if x != nil {
		return x.AreaId
	}
	return 0
}

func (x *PurchaseRequest) GetPurchaseSkus() []*PurchaseSku {
	if x != nil {
		return x.PurchaseSkus
	}
	return nil
}

type PurchaseSku struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuId         int64 `protobuf:"varint,1,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	Num           int32 `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
	Price         int64 `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
	Weight        int64 `protobuf:"varint,4,opt,name=weight,proto3" json:"weight,omitempty"`
	Volume        int64 `protobuf:"varint,5,opt,name=volume,proto3" json:"volume,omitempty"`
	Stock         int32 `protobuf:"varint,6,opt,name=stock,proto3" json:"stock,omitempty"`
	IsVirtual     bool  `protobuf:"varint,7,opt,name=is_virtual,json=isVirtual,proto3" json:"is_virtual,omitempty"`
	IsMemberRight bool  `protobuf:"varint,8,opt,name=is_member_right,json=isMemberRight,proto3" json:"is_member_right,omitempty"`
	IsMemberPrice bool  `protobuf:"varint,9,opt,name=is_member_price,json=isMemberPrice,proto3" json:"is_member_price,omitempty"`
}

func (x *PurchaseSku) Reset() {
	*x = PurchaseSku{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculatorService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseSku) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseSku) ProtoMessage() {}

func (x *PurchaseSku) ProtoReflect() protoreflect.Message {
	mi := &file_calculatorService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseSku.ProtoReflect.Descriptor instead.
func (*PurchaseSku) Descriptor() ([]byte, []int) {
	return file_calculatorService_proto_rawDescGZIP(), []int{5}
}

func (x *PurchaseSku) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *PurchaseSku) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *PurchaseSku) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *PurchaseSku) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *PurchaseSku) GetVolume() int64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *PurchaseSku) GetStock() int32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *PurchaseSku) GetIsVirtual() bool {
	if x != nil {
		return x.IsVirtual
	}
	return false
}

func (x *PurchaseSku) GetIsMemberRight() bool {
	if x != nil {
		return x.IsMemberRight
	}
	return false
}

func (x *PurchaseSku) GetIsMemberPrice() bool {
	if x != nil {
		return x.IsMemberPrice
	}
	return false
}

type DisplayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency    string        `protobuf:"bytes,1,opt,name=currency,proto3" json:"currency,omitempty"`
	DisplaySku  *DisplaySku   `protobuf:"bytes,2,opt,name=display_sku,json=displaySku,proto3" json:"display_sku,omitempty"`
	DisplaySkus []*DisplaySku `protobuf:"bytes,3,rep,name=display_skus,json=displaySkus,proto3" json:"display_skus,omitempty"`
}

func (x *DisplayRequest) Reset() {
	*x = DisplayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculatorService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisplayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayRequest) ProtoMessage() {}

func (x *DisplayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calculatorService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayRequest.ProtoReflect.Descriptor instead.
func (*DisplayRequest) Descriptor() ([]byte, []int) {
	return file_calculatorService_proto_rawDescGZIP(), []int{6}
}

func (x *DisplayRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *DisplayRequest) GetDisplaySku() *DisplaySku {
	if x != nil {
		return x.DisplaySku
	}
	return nil
}

func (x *DisplayRequest) GetDisplaySkus() []*DisplaySku {
	if x != nil {
		return x.DisplaySkus
	}
	return nil
}

type DisplaySku struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpuId         int64 `protobuf:"varint,1,opt,name=spu_id,json=spuId,proto3" json:"spu_id,omitempty"`
	SkuId         int64 `protobuf:"varint,2,opt,name=sku_id,json=skuId,proto3" json:"sku_id,omitempty"`
	Price         int64 `protobuf:"varint,3,opt,name=price,proto3" json:"price,omitempty"`
	IsMemberPrice bool  `protobuf:"varint,4,opt,name=is_member_price,json=isMemberPrice,proto3" json:"is_member_price,omitempty"`
}

func (x *DisplaySku) Reset() {
	*x = DisplaySku{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculatorService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisplaySku) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplaySku) ProtoMessage() {}

func (x *DisplaySku) ProtoReflect() protoreflect.Message {
	mi := &file_calculatorService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplaySku.ProtoReflect.Descriptor instead.
func (*DisplaySku) Descriptor() ([]byte, []int) {
	return file_calculatorService_proto_rawDescGZIP(), []int{7}
}

func (x *DisplaySku) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *DisplaySku) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *DisplaySku) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *DisplaySku) GetIsMemberPrice() bool {
	if x != nil {
		return x.IsMemberPrice
	}
	return false
}

//可使用信息
type AvailableInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AvailableSurplus int64        `protobuf:"varint,1,opt,name=available_surplus,json=availableSurplus,proto3" json:"available_surplus,omitempty"` //可使用的余额
	AvailablePoints  int32        `protobuf:"varint,2,opt,name=available_points,json=availablePoints,proto3" json:"available_points,omitempty"`    //可使用的积分
	AvailableCoupons *CouponInfo  `protobuf:"bytes,3,opt,name=available_coupons,json=availableCoupons,proto3" json:"available_coupons,omitempty"`  //可使用的优惠劵集合
	ShippingAddress  *AddressInfo `protobuf:"bytes,4,opt,name=shipping_address,json=shippingAddress,proto3" json:"shipping_address,omitempty"`     //订单收货地址
}

func (x *AvailableInfo) Reset() {
	*x = AvailableInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculatorService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AvailableInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AvailableInfo) ProtoMessage() {}

func (x *AvailableInfo) ProtoReflect() protoreflect.Message {
	mi := &file_calculatorService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AvailableInfo.ProtoReflect.Descriptor instead.
func (*AvailableInfo) Descriptor() ([]byte, []int) {
	return file_calculatorService_proto_rawDescGZIP(), []int{8}
}

func (x *AvailableInfo) GetAvailableSurplus() int64 {
	if x != nil {
		return x.AvailableSurplus
	}
	return 0
}

func (x *AvailableInfo) GetAvailablePoints() int32 {
	if x != nil {
		return x.AvailablePoints
	}
	return 0
}

func (x *AvailableInfo) GetAvailableCoupons() *CouponInfo {
	if x != nil {
		return x.AvailableCoupons
	}
	return nil
}

func (x *AvailableInfo) GetShippingAddress() *AddressInfo {
	if x != nil {
		return x.ShippingAddress
	}
	return nil
}

type CalculatorData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CartResult          *PurchaseResult  `protobuf:"bytes,1,opt,name=cart_result,json=cartResult,proto3" json:"cart_result,omitempty"`
	PurchaseResult      *PurchaseResult  `protobuf:"bytes,2,opt,name=purchase_result,json=purchaseResult,proto3" json:"purchase_result,omitempty"`
	DisplayEntityResult *DisplayResult   `protobuf:"bytes,3,opt,name=display_entity_result,json=displayEntityResult,proto3" json:"display_entity_result,omitempty"`
	DisplayListResult   []*DisplayResult `protobuf:"bytes,4,rep,name=display_list_result,json=displayListResult,proto3" json:"display_list_result,omitempty"`
	AvailableInfo       *AvailableInfo   `protobuf:"bytes,5,opt,name=available_info,json=availableInfo,proto3" json:"available_info,omitempty"`
}

func (x *CalculatorData) Reset() {
	*x = CalculatorData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculatorService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculatorData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculatorData) ProtoMessage() {}

func (x *CalculatorData) ProtoReflect() protoreflect.Message {
	mi := &file_calculatorService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculatorData.ProtoReflect.Descriptor instead.
func (*CalculatorData) Descriptor() ([]byte, []int) {
	return file_calculatorService_proto_rawDescGZIP(), []int{9}
}

func (x *CalculatorData) GetCartResult() *PurchaseResult {
	if x != nil {
		return x.CartResult
	}
	return nil
}

func (x *CalculatorData) GetPurchaseResult() *PurchaseResult {
	if x != nil {
		return x.PurchaseResult
	}
	return nil
}

func (x *CalculatorData) GetDisplayEntityResult() *DisplayResult {
	if x != nil {
		return x.DisplayEntityResult
	}
	return nil
}

func (x *CalculatorData) GetDisplayListResult() []*DisplayResult {
	if x != nil {
		return x.DisplayListResult
	}
	return nil
}

func (x *CalculatorData) GetAvailableInfo() *AvailableInfo {
	if x != nil {
		return x.AvailableInfo
	}
	return nil
}

type CalculatorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *CalculatorData `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Error *common.Error   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *CalculatorResponse) Reset() {
	*x = CalculatorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculatorService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculatorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculatorResponse) ProtoMessage() {}

func (x *CalculatorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calculatorService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculatorResponse.ProtoReflect.Descriptor instead.
func (*CalculatorResponse) Descriptor() ([]byte, []int) {
	return file_calculatorService_proto_rawDescGZIP(), []int{10}
}

func (x *CalculatorResponse) GetData() *CalculatorData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CalculatorResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_calculatorService_proto protoreflect.FileDescriptor

var file_calculatorService_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x73,
	0x6b, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xc4, 0x05, 0x0a, 0x0e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75, 0x6d,
	0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12,
	0x21, 0x0a, 0x0c, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x75, 0x72, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x69, 0x6e, 0x73, 0x75, 0x72, 0x65, 0x46, 0x65, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x70, 0x61, 0x63, 0x6b, 0x46, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x70,
	0x6c, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x75, 0x72, 0x70, 0x6c,
	0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x25,
	0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c,
	0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x70, 0x61, 0x69, 0x64, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x73, 0x5f, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x69, 0x73, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x18, 0x13, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x73, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xe0, 0x03, 0x0a, 0x0e, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x15, 0x0a,
	0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73,
	0x6b, 0x75, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x27,
	0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x77, 0x68,
	0x6f, 0x6c, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x77, 0x68, 0x6f, 0x6c, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x72, 0x6f, 0x77, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72,
	0x6f, 0x77, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a,
	0x13, 0x72, 0x6f, 0x77, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x72, 0x6f, 0x77, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x6f, 0x77, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x72, 0x6f, 0x77, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x73, 0x5f, 0x67, 0x69, 0x66, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69,
	0x73, 0x47, 0x69, 0x66, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x12,
	0x2c, 0x0a, 0x08, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x6b, 0x75,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x73, 0x6b, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xbe, 0x02,
	0x0a, 0x0d, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f,
	0x77, 0x68, 0x6f, 0x6c, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x77, 0x68, 0x6f, 0x6c, 0x65, 0x73, 0x61, 0x6c, 0x65,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65,
	0x73, 0x63, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x89,
	0x01, 0x0a, 0x0d, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x73, 0x63,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x94, 0x05, 0x0a, 0x0f, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x27,
	0x0a, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x73, 0x75, 0x72,
	0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x6e, 0x73,
	0x75, 0x72, 0x65, 0x46, 0x65, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x66,
	0x65, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x46, 0x65,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1a,
	0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x4d, 0x6f, 0x6e, 0x65,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x69, 0x64, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x17, 0x0a, 0x07,
	0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61,
	0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x3a, 0x0a, 0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x5f, 0x73, 0x6b, 0x75, 0x73, 0x18, 0x14, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x53, 0x6b, 0x75, 0x52, 0x0c, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x6b, 0x75,
	0x73, 0x22, 0x81, 0x02, 0x0a, 0x0b, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x6b,
	0x75, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x72,
	0x74, 0x75, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x56, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x69, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x69, 0x67, 0x68, 0x74, 0x12, 0x26, 0x0a,
	0x0f, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x9c, 0x01, 0x0a, 0x0e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x35, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f,
	0x73, 0x6b, 0x75, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x6b, 0x75, 0x52,
	0x0a, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x6b, 0x75, 0x12, 0x37, 0x0a, 0x0c, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x6b, 0x75, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x53, 0x6b, 0x75, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x53, 0x6b, 0x75, 0x73, 0x22, 0x78, 0x0a, 0x0a, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53,
	0x6b, 0x75, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x70, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x73, 0x70, 0x75, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x69, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xec,
	0x01, 0x0a, 0x0d, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x2b, 0x0a, 0x11, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x73, 0x75,
	0x72, 0x70, 0x6c, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x12, 0x29, 0x0a,
	0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x41, 0x0a, 0x11, 0x61, 0x76, 0x61, 0x69,
	0x6c, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c,
	0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x12, 0x40, 0x0a, 0x10, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x73, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xe4, 0x02,
	0x0a, 0x0e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x39, 0x0a, 0x0b, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x0a, 0x63, 0x61, 0x72, 0x74, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x41, 0x0a, 0x0f, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0e,
	0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x4b,
	0x0a, 0x15, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x13, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x47, 0x0a, 0x13, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x52, 0x11, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x3e, 0x0a, 0x0e, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x22, 0x67, 0x0a, 0x12, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xe2, 0x01,
	0x0a, 0x11, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x04, 0x43, 0x61, 0x72, 0x74, 0x12, 0x19, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x08, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a,
	0x07, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_calculatorService_proto_rawDescOnce sync.Once
	file_calculatorService_proto_rawDescData = file_calculatorService_proto_rawDesc
)

func file_calculatorService_proto_rawDescGZIP() []byte {
	file_calculatorService_proto_rawDescOnce.Do(func() {
		file_calculatorService_proto_rawDescData = protoimpl.X.CompressGZIP(file_calculatorService_proto_rawDescData)
	})
	return file_calculatorService_proto_rawDescData
}

var file_calculatorService_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_calculatorService_proto_goTypes = []interface{}{
	(*PurchaseResult)(nil),     // 0: services.PurchaseResult
	(*PurchaseDetail)(nil),     // 1: services.PurchaseDetail
	(*DisplayResult)(nil),      // 2: services.DisplayResult
	(*PromotionDesc)(nil),      // 3: services.PromotionDesc
	(*PurchaseRequest)(nil),    // 4: services.PurchaseRequest
	(*PurchaseSku)(nil),        // 5: services.PurchaseSku
	(*DisplayRequest)(nil),     // 6: services.DisplayRequest
	(*DisplaySku)(nil),         // 7: services.DisplaySku
	(*AvailableInfo)(nil),      // 8: services.AvailableInfo
	(*CalculatorData)(nil),     // 9: services.CalculatorData
	(*CalculatorResponse)(nil), // 10: services.CalculatorResponse
	(*CouponInfo)(nil),         // 11: services.CouponInfo
	(*PromotionInfo)(nil),      // 12: services.PromotionInfo
	(*SkuInfo)(nil),            // 13: services.SkuInfo
	(*AddressInfo)(nil),        // 14: services.AddressInfo
	(*common.Error)(nil),       // 15: common.Error
}
var file_calculatorService_proto_depIdxs = []int32{
	1,  // 0: services.PurchaseResult.details:type_name -> services.PurchaseDetail
	11, // 1: services.PurchaseResult.coupons:type_name -> services.CouponInfo
	12, // 2: services.PurchaseResult.promotions:type_name -> services.PromotionInfo
	13, // 3: services.PurchaseDetail.sku_info:type_name -> services.SkuInfo
	3,  // 4: services.DisplayResult.promotions:type_name -> services.PromotionDesc
	5,  // 5: services.PurchaseRequest.purchase_skus:type_name -> services.PurchaseSku
	7,  // 6: services.DisplayRequest.display_sku:type_name -> services.DisplaySku
	7,  // 7: services.DisplayRequest.display_skus:type_name -> services.DisplaySku
	11, // 8: services.AvailableInfo.available_coupons:type_name -> services.CouponInfo
	14, // 9: services.AvailableInfo.shipping_address:type_name -> services.AddressInfo
	0,  // 10: services.CalculatorData.cart_result:type_name -> services.PurchaseResult
	0,  // 11: services.CalculatorData.purchase_result:type_name -> services.PurchaseResult
	2,  // 12: services.CalculatorData.display_entity_result:type_name -> services.DisplayResult
	2,  // 13: services.CalculatorData.display_list_result:type_name -> services.DisplayResult
	8,  // 14: services.CalculatorData.available_info:type_name -> services.AvailableInfo
	9,  // 15: services.CalculatorResponse.data:type_name -> services.CalculatorData
	15, // 16: services.CalculatorResponse.error:type_name -> common.Error
	4,  // 17: services.CalculatorService.Cart:input_type -> services.PurchaseRequest
	4,  // 18: services.CalculatorService.Purchase:input_type -> services.PurchaseRequest
	6,  // 19: services.CalculatorService.Display:input_type -> services.DisplayRequest
	10, // 20: services.CalculatorService.Cart:output_type -> services.CalculatorResponse
	10, // 21: services.CalculatorService.Purchase:output_type -> services.CalculatorResponse
	10, // 22: services.CalculatorService.Display:output_type -> services.CalculatorResponse
	20, // [20:23] is the sub-list for method output_type
	17, // [17:20] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_calculatorService_proto_init() }
func file_calculatorService_proto_init() {
	if File_calculatorService_proto != nil {
		return
	}
	file_baseInfoService_proto_init()
	file_skuInfoService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_calculatorService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculatorService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculatorService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisplayResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculatorService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionDesc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculatorService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculatorService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseSku); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculatorService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisplayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculatorService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisplaySku); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculatorService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AvailableInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculatorService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculatorData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculatorService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculatorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_calculatorService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_calculatorService_proto_goTypes,
		DependencyIndexes: file_calculatorService_proto_depIdxs,
		MessageInfos:      file_calculatorService_proto_msgTypes,
	}.Build()
	File_calculatorService_proto = out.File
	file_calculatorService_proto_rawDesc = nil
	file_calculatorService_proto_goTypes = nil
	file_calculatorService_proto_depIdxs = nil
}
