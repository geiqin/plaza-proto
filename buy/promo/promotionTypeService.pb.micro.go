// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: promotionTypeService.proto

package services

import (
	fmt "fmt"
	_ "github.com/geiqin/micro-kit/protobuf/common"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "context"
	api "github.com/micro/go-micro/v2/api"
	client "github.com/micro/go-micro/v2/client"
	server "github.com/micro/go-micro/v2/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for PromotionTypeService service

func NewPromotionTypeServiceEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for PromotionTypeService service

type PromotionTypeService interface {
	//创建促销活动
	Create(ctx context.Context, in *PromotionType, opts ...client.CallOption) (*PromotionTypeResponse, error)
	// 删除促销活动
	Delete(ctx context.Context, in *PromotionType, opts ...client.CallOption) (*PromotionTypeResponse, error)
	// 获取活动详情
	Get(ctx context.Context, in *PromotionType, opts ...client.CallOption) (*PromotionTypeResponse, error)
	//获取活动列表
	List(ctx context.Context, in *PromotionTypeRequest, opts ...client.CallOption) (*PromotionTypeResponse, error)
}

type promotionTypeService struct {
	c    client.Client
	name string
}

func NewPromotionTypeService(name string, c client.Client) PromotionTypeService {
	return &promotionTypeService{
		c:    c,
		name: name,
	}
}

func (c *promotionTypeService) Create(ctx context.Context, in *PromotionType, opts ...client.CallOption) (*PromotionTypeResponse, error) {
	req := c.c.NewRequest(c.name, "PromotionTypeService.Create", in)
	out := new(PromotionTypeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionTypeService) Delete(ctx context.Context, in *PromotionType, opts ...client.CallOption) (*PromotionTypeResponse, error) {
	req := c.c.NewRequest(c.name, "PromotionTypeService.Delete", in)
	out := new(PromotionTypeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionTypeService) Get(ctx context.Context, in *PromotionType, opts ...client.CallOption) (*PromotionTypeResponse, error) {
	req := c.c.NewRequest(c.name, "PromotionTypeService.Get", in)
	out := new(PromotionTypeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promotionTypeService) List(ctx context.Context, in *PromotionTypeRequest, opts ...client.CallOption) (*PromotionTypeResponse, error) {
	req := c.c.NewRequest(c.name, "PromotionTypeService.List", in)
	out := new(PromotionTypeResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PromotionTypeService service

type PromotionTypeServiceHandler interface {
	//创建促销活动
	Create(context.Context, *PromotionType, *PromotionTypeResponse) error
	// 删除促销活动
	Delete(context.Context, *PromotionType, *PromotionTypeResponse) error
	// 获取活动详情
	Get(context.Context, *PromotionType, *PromotionTypeResponse) error
	//获取活动列表
	List(context.Context, *PromotionTypeRequest, *PromotionTypeResponse) error
}

func RegisterPromotionTypeServiceHandler(s server.Server, hdlr PromotionTypeServiceHandler, opts ...server.HandlerOption) error {
	type promotionTypeService interface {
		Create(ctx context.Context, in *PromotionType, out *PromotionTypeResponse) error
		Delete(ctx context.Context, in *PromotionType, out *PromotionTypeResponse) error
		Get(ctx context.Context, in *PromotionType, out *PromotionTypeResponse) error
		List(ctx context.Context, in *PromotionTypeRequest, out *PromotionTypeResponse) error
	}
	type PromotionTypeService struct {
		promotionTypeService
	}
	h := &promotionTypeServiceHandler{hdlr}
	return s.Handle(s.NewHandler(&PromotionTypeService{h}, opts...))
}

type promotionTypeServiceHandler struct {
	PromotionTypeServiceHandler
}

func (h *promotionTypeServiceHandler) Create(ctx context.Context, in *PromotionType, out *PromotionTypeResponse) error {
	return h.PromotionTypeServiceHandler.Create(ctx, in, out)
}

func (h *promotionTypeServiceHandler) Delete(ctx context.Context, in *PromotionType, out *PromotionTypeResponse) error {
	return h.PromotionTypeServiceHandler.Delete(ctx, in, out)
}

func (h *promotionTypeServiceHandler) Get(ctx context.Context, in *PromotionType, out *PromotionTypeResponse) error {
	return h.PromotionTypeServiceHandler.Get(ctx, in, out)
}

func (h *promotionTypeServiceHandler) List(ctx context.Context, in *PromotionTypeRequest, out *PromotionTypeResponse) error {
	return h.PromotionTypeServiceHandler.List(ctx, in, out)
}
