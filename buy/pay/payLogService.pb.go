// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: payLogService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 支付日志
type PayLog struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                            //ID
	LogNo         string                 `protobuf:"bytes,2,opt,name=log_no,json=logNo,proto3" json:"log_no"`                          //支付日志单号
	BusinessType  string                 `protobuf:"bytes,3,opt,name=business_type,json=businessType,proto3" json:"business_type"`     //订单类型 : order 订单, wallet 钱包 vip 会员等级
	MemberId      int64                  `protobuf:"varint,4,opt,name=member_id,json=memberId,proto3" json:"member_id"`                //支付用户ID
	PayType       string                 `protobuf:"bytes,5,opt,name=pay_type,json=payType,proto3" json:"pay_type"`                    //支付类型
	PaymentId     int32                  `protobuf:"varint,6,opt,name=payment_id,json=paymentId,proto3" json:"payment_id"`             //支付方式ID
	PayAccountId  int32                  `protobuf:"varint,7,opt,name=pay_account_id,json=payAccountId,proto3" json:"pay_account_id"`  //支付通道
	PayKeyInfo    *PayKeyInfo            `protobuf:"bytes,8,opt,name=pay_key_info,json=payKeyInfo,proto3" json:"pay_key_info"`         //支付关键信息
	Subject       string                 `protobuf:"bytes,10,opt,name=subject,proto3" json:"subject"`                                  //订单名称
	PayPrice      int64                  `protobuf:"varint,12,opt,name=pay_price,json=payPrice,proto3" json:"pay_price"`               //支付金额
	Currency      string                 `protobuf:"bytes,13,opt,name=currency,proto3" json:"currency"`                                //货币代码
	TransactionNo string                 `protobuf:"bytes,14,opt,name=transaction_no,json=transactionNo,proto3" json:"transaction_no"` //交易单号
	BuyerUser     string                 `protobuf:"bytes,15,opt,name=buyer_user,json=buyerUser,proto3" json:"buyer_user"`             //支付平台用户
	FromType      string                 `protobuf:"bytes,16,opt,name=from_type,json=fromType,proto3" json:"from_type"`                //来源端类型
	RoutineType   string                 `protobuf:"bytes,17,opt,name=routine_type,json=routineType,proto3" json:"routine_type"`       //小程序类型
	CloseReason   string                 `protobuf:"bytes,18,opt,name=close_reason,json=closeReason,proto3" json:"close_reason"`       //关闭原因
	Status        string                 `protobuf:"bytes,23,opt,name=status,proto3" json:"status"`                                    //状态  （0待支付, 1已支付, 2已关闭）正常30分钟内未支付将关闭
	PaidTime      int64                  `protobuf:"varint,24,opt,name=paid_time,json=paidTime,proto3" json:"paid_time"`               //支付时间
	ClosedTime    int64                  `protobuf:"varint,25,opt,name=closed_time,json=closedTime,proto3" json:"closed_time"`         //关闭时间
	CreatedAt     int64                  `protobuf:"varint,26,opt,name=created_at,json=createdAt,proto3" json:"created_at"`            //创建时间
	UpdatedAt     int64                  `protobuf:"varint,27,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`            //修改时间
	Values        []*PayLogValue         `protobuf:"bytes,28,rep,name=values,proto3" json:"values"`                                    //支付日志关联业务数据
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayLog) Reset() {
	*x = PayLog{}
	mi := &file_payLogService_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayLog) ProtoMessage() {}

func (x *PayLog) ProtoReflect() protoreflect.Message {
	mi := &file_payLogService_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayLog.ProtoReflect.Descriptor instead.
func (*PayLog) Descriptor() ([]byte, []int) {
	return file_payLogService_proto_rawDescGZIP(), []int{0}
}

func (x *PayLog) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PayLog) GetLogNo() string {
	if x != nil {
		return x.LogNo
	}
	return ""
}

func (x *PayLog) GetBusinessType() string {
	if x != nil {
		return x.BusinessType
	}
	return ""
}

func (x *PayLog) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *PayLog) GetPayType() string {
	if x != nil {
		return x.PayType
	}
	return ""
}

func (x *PayLog) GetPaymentId() int32 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

func (x *PayLog) GetPayAccountId() int32 {
	if x != nil {
		return x.PayAccountId
	}
	return 0
}

func (x *PayLog) GetPayKeyInfo() *PayKeyInfo {
	if x != nil {
		return x.PayKeyInfo
	}
	return nil
}

func (x *PayLog) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *PayLog) GetPayPrice() int64 {
	if x != nil {
		return x.PayPrice
	}
	return 0
}

func (x *PayLog) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *PayLog) GetTransactionNo() string {
	if x != nil {
		return x.TransactionNo
	}
	return ""
}

func (x *PayLog) GetBuyerUser() string {
	if x != nil {
		return x.BuyerUser
	}
	return ""
}

func (x *PayLog) GetFromType() string {
	if x != nil {
		return x.FromType
	}
	return ""
}

func (x *PayLog) GetRoutineType() string {
	if x != nil {
		return x.RoutineType
	}
	return ""
}

func (x *PayLog) GetCloseReason() string {
	if x != nil {
		return x.CloseReason
	}
	return ""
}

func (x *PayLog) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PayLog) GetPaidTime() int64 {
	if x != nil {
		return x.PaidTime
	}
	return 0
}

func (x *PayLog) GetClosedTime() int64 {
	if x != nil {
		return x.ClosedTime
	}
	return 0
}

func (x *PayLog) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PayLog) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *PayLog) GetValues() []*PayLogValue {
	if x != nil {
		return x.Values
	}
	return nil
}

// 支付日志关联业务数据
type PayLogValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                            //ID
	PayLogId      int64                  `protobuf:"varint,2,opt,name=pay_log_id,json=payLogId,proto3" json:"pay_log_id"`              //支付日志id
	BusinessId    int64                  `protobuf:"varint,3,opt,name=business_id,json=businessId,proto3" json:"business_id"`          //业务单id
	BusinessNo    string                 `protobuf:"bytes,4,opt,name=business_no,json=businessNo,proto3" json:"business_no"`           //业务单号(用于显示)
	BusinessPrice int64                  `protobuf:"varint,5,opt,name=business_price,json=businessPrice,proto3" json:"business_price"` //业务单金额
	CreatedAt     int64                  `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at"`             //创建时间
	UpdatedAt     int64                  `protobuf:"varint,7,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`             //修改时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayLogValue) Reset() {
	*x = PayLogValue{}
	mi := &file_payLogService_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayLogValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayLogValue) ProtoMessage() {}

func (x *PayLogValue) ProtoReflect() protoreflect.Message {
	mi := &file_payLogService_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayLogValue.ProtoReflect.Descriptor instead.
func (*PayLogValue) Descriptor() ([]byte, []int) {
	return file_payLogService_proto_rawDescGZIP(), []int{1}
}

func (x *PayLogValue) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PayLogValue) GetPayLogId() int64 {
	if x != nil {
		return x.PayLogId
	}
	return 0
}

func (x *PayLogValue) GetBusinessId() int64 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *PayLogValue) GetBusinessNo() string {
	if x != nil {
		return x.BusinessNo
	}
	return ""
}

func (x *PayLogValue) GetBusinessPrice() int64 {
	if x != nil {
		return x.BusinessPrice
	}
	return 0
}

func (x *PayLogValue) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PayLogValue) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type PayLogRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Top       int32                  `protobuf:"varint,1,opt,name=top,proto3" json:"top"`
	Paged     int64                  `protobuf:"varint,2,opt,name=paged,proto3" json:"paged"`
	PageSize  int64                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords  string                 `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords"`
	Sorts     []string               `protobuf:"bytes,5,rep,name=sorts,proto3" json:"sorts"`
	DateRange []string               `protobuf:"bytes,6,rep,name=date_range,json=dateRange,proto3" json:"date_range"`
	Ids       []int64                `protobuf:"varint,7,rep,packed,name=ids,proto3" json:"ids"`
	Id        int64                  `protobuf:"varint,8,opt,name=id,proto3" json:"id"`
	// 以下为自定义参数
	LogNo         string `protobuf:"bytes,10,opt,name=log_no,json=logNo,proto3" json:"log_no"`                         //支付日志单号
	BusinessType  string `protobuf:"bytes,11,opt,name=business_type,json=businessType,proto3" json:"business_type"`    //业务单类型
	BusinessId    int64  `protobuf:"varint,12,opt,name=business_id,json=businessId,proto3" json:"business_id"`         //业务单ID
	MemberId      int64  `protobuf:"varint,13,opt,name=member_id,json=memberId,proto3" json:"member_id"`               //用户ID
	PaymentId     int32  `protobuf:"varint,14,opt,name=payment_id,json=paymentId,proto3" json:"payment_id"`            //支付方式ID
	PayType       string `protobuf:"bytes,15,opt,name=pay_type,json=payType,proto3" json:"pay_type"`                   //支付类型
	Subject       string `protobuf:"bytes,16,opt,name=subject,proto3" json:"subject"`                                  //订单名称
	TransactionNo string `protobuf:"bytes,17,opt,name=transaction_no,json=transactionNo,proto3" json:"transaction_no"` //交易单号
	FromType      string `protobuf:"bytes,18,opt,name=from_type,json=fromType,proto3" json:"from_type"`                //客户端类型
	RoutineType   string `protobuf:"bytes,19,opt,name=routine_type,json=routineType,proto3" json:"routine_type"`       //小程序类型
	Status        string `protobuf:"bytes,21,opt,name=status,proto3" json:"status"`                                    //状态
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayLogRequest) Reset() {
	*x = PayLogRequest{}
	mi := &file_payLogService_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayLogRequest) ProtoMessage() {}

func (x *PayLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payLogService_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayLogRequest.ProtoReflect.Descriptor instead.
func (*PayLogRequest) Descriptor() ([]byte, []int) {
	return file_payLogService_proto_rawDescGZIP(), []int{2}
}

func (x *PayLogRequest) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *PayLogRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *PayLogRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PayLogRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *PayLogRequest) GetSorts() []string {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *PayLogRequest) GetDateRange() []string {
	if x != nil {
		return x.DateRange
	}
	return nil
}

func (x *PayLogRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *PayLogRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PayLogRequest) GetLogNo() string {
	if x != nil {
		return x.LogNo
	}
	return ""
}

func (x *PayLogRequest) GetBusinessType() string {
	if x != nil {
		return x.BusinessType
	}
	return ""
}

func (x *PayLogRequest) GetBusinessId() int64 {
	if x != nil {
		return x.BusinessId
	}
	return 0
}

func (x *PayLogRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *PayLogRequest) GetPaymentId() int32 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

func (x *PayLogRequest) GetPayType() string {
	if x != nil {
		return x.PayType
	}
	return ""
}

func (x *PayLogRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *PayLogRequest) GetTransactionNo() string {
	if x != nil {
		return x.TransactionNo
	}
	return ""
}

func (x *PayLogRequest) GetFromType() string {
	if x != nil {
		return x.FromType
	}
	return ""
}

func (x *PayLogRequest) GetRoutineType() string {
	if x != nil {
		return x.RoutineType
	}
	return ""
}

func (x *PayLogRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type PayLogResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entity        *PayLog                `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager         *common.Pager          `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items         []*PayLog              `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Msg           string                 `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayLogResponse) Reset() {
	*x = PayLogResponse{}
	mi := &file_payLogService_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayLogResponse) ProtoMessage() {}

func (x *PayLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payLogService_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayLogResponse.ProtoReflect.Descriptor instead.
func (*PayLogResponse) Descriptor() ([]byte, []int) {
	return file_payLogService_proto_rawDescGZIP(), []int{3}
}

func (x *PayLogResponse) GetEntity() *PayLog {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *PayLogResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *PayLogResponse) GetItems() []*PayLog {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *PayLogResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_payLogService_proto protoreflect.FileDescriptor

const file_payLogService_proto_rawDesc = "" +
	"\n" +
	"\x13payLogService.proto\x12\bservices\x1a\x11common/base.proto\x1a\x14paymentService.proto\"\xc8\x05\n" +
	"\x06PayLog\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x15\n" +
	"\x06log_no\x18\x02 \x01(\tR\x05logNo\x12#\n" +
	"\rbusiness_type\x18\x03 \x01(\tR\fbusinessType\x12\x1b\n" +
	"\tmember_id\x18\x04 \x01(\x03R\bmemberId\x12\x19\n" +
	"\bpay_type\x18\x05 \x01(\tR\apayType\x12\x1d\n" +
	"\n" +
	"payment_id\x18\x06 \x01(\x05R\tpaymentId\x12$\n" +
	"\x0epay_account_id\x18\a \x01(\x05R\fpayAccountId\x126\n" +
	"\fpay_key_info\x18\b \x01(\v2\x14.services.PayKeyInfoR\n" +
	"payKeyInfo\x12\x18\n" +
	"\asubject\x18\n" +
	" \x01(\tR\asubject\x12\x1b\n" +
	"\tpay_price\x18\f \x01(\x03R\bpayPrice\x12\x1a\n" +
	"\bcurrency\x18\r \x01(\tR\bcurrency\x12%\n" +
	"\x0etransaction_no\x18\x0e \x01(\tR\rtransactionNo\x12\x1d\n" +
	"\n" +
	"buyer_user\x18\x0f \x01(\tR\tbuyerUser\x12\x1b\n" +
	"\tfrom_type\x18\x10 \x01(\tR\bfromType\x12!\n" +
	"\froutine_type\x18\x11 \x01(\tR\vroutineType\x12!\n" +
	"\fclose_reason\x18\x12 \x01(\tR\vcloseReason\x12\x16\n" +
	"\x06status\x18\x17 \x01(\tR\x06status\x12\x1b\n" +
	"\tpaid_time\x18\x18 \x01(\x03R\bpaidTime\x12\x1f\n" +
	"\vclosed_time\x18\x19 \x01(\x03R\n" +
	"closedTime\x12\x1d\n" +
	"\n" +
	"created_at\x18\x1a \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x1b \x01(\x03R\tupdatedAt\x12-\n" +
	"\x06values\x18\x1c \x03(\v2\x15.services.PayLogValueR\x06values\"\xe2\x01\n" +
	"\vPayLogValue\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1c\n" +
	"\n" +
	"pay_log_id\x18\x02 \x01(\x03R\bpayLogId\x12\x1f\n" +
	"\vbusiness_id\x18\x03 \x01(\x03R\n" +
	"businessId\x12\x1f\n" +
	"\vbusiness_no\x18\x04 \x01(\tR\n" +
	"businessNo\x12%\n" +
	"\x0ebusiness_price\x18\x05 \x01(\x03R\rbusinessPrice\x12\x1d\n" +
	"\n" +
	"created_at\x18\x06 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\a \x01(\x03R\tupdatedAt\"\x94\x04\n" +
	"\rPayLogRequest\x12\x10\n" +
	"\x03top\x18\x01 \x01(\x05R\x03top\x12\x14\n" +
	"\x05paged\x18\x02 \x01(\x03R\x05paged\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x03R\bpageSize\x12\x1a\n" +
	"\bkeywords\x18\x04 \x01(\tR\bkeywords\x12\x14\n" +
	"\x05sorts\x18\x05 \x03(\tR\x05sorts\x12\x1d\n" +
	"\n" +
	"date_range\x18\x06 \x03(\tR\tdateRange\x12\x10\n" +
	"\x03ids\x18\a \x03(\x03R\x03ids\x12\x0e\n" +
	"\x02id\x18\b \x01(\x03R\x02id\x12\x15\n" +
	"\x06log_no\x18\n" +
	" \x01(\tR\x05logNo\x12#\n" +
	"\rbusiness_type\x18\v \x01(\tR\fbusinessType\x12\x1f\n" +
	"\vbusiness_id\x18\f \x01(\x03R\n" +
	"businessId\x12\x1b\n" +
	"\tmember_id\x18\r \x01(\x03R\bmemberId\x12\x1d\n" +
	"\n" +
	"payment_id\x18\x0e \x01(\x05R\tpaymentId\x12\x19\n" +
	"\bpay_type\x18\x0f \x01(\tR\apayType\x12\x18\n" +
	"\asubject\x18\x10 \x01(\tR\asubject\x12%\n" +
	"\x0etransaction_no\x18\x11 \x01(\tR\rtransactionNo\x12\x1b\n" +
	"\tfrom_type\x18\x12 \x01(\tR\bfromType\x12!\n" +
	"\froutine_type\x18\x13 \x01(\tR\vroutineType\x12\x16\n" +
	"\x06status\x18\x15 \x01(\tR\x06status\"\x99\x01\n" +
	"\x0ePayLogResponse\x12(\n" +
	"\x06entity\x18\x01 \x01(\v2\x10.services.PayLogR\x06entity\x12#\n" +
	"\x05pager\x18\x02 \x01(\v2\r.common.PagerR\x05pager\x12&\n" +
	"\x05items\x18\x03 \x03(\v2\x10.services.PayLogR\x05items\x12\x10\n" +
	"\x03msg\x18\x04 \x01(\tR\x03msg2\xbe\x03\n" +
	"\rPayLogService\x12<\n" +
	"\fPayLogInsert\x12\x10.services.PayLog\x1a\x18.services.PayLogResponse\"\x00\x12=\n" +
	"\rPayLogSuccess\x12\x10.services.PayLog\x1a\x18.services.PayLogResponse\"\x00\x12;\n" +
	"\vPayLogClose\x12\x10.services.PayLog\x1a\x18.services.PayLogResponse\"\x00\x128\n" +
	"\bTypeList\x12\x10.services.PayLog\x1a\x18.services.PayLogResponse\"\x00\x12=\n" +
	"\x06Detail\x12\x17.services.PayLogRequest\x1a\x18.services.PayLogResponse\"\x00\x12;\n" +
	"\x04List\x12\x17.services.PayLogRequest\x1a\x18.services.PayLogResponse\"\x00\x12=\n" +
	"\x06Search\x12\x17.services.PayLogRequest\x1a\x18.services.PayLogResponse\"\x00B\rZ\v/.;servicesb\x06proto3"

var (
	file_payLogService_proto_rawDescOnce sync.Once
	file_payLogService_proto_rawDescData []byte
)

func file_payLogService_proto_rawDescGZIP() []byte {
	file_payLogService_proto_rawDescOnce.Do(func() {
		file_payLogService_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_payLogService_proto_rawDesc), len(file_payLogService_proto_rawDesc)))
	})
	return file_payLogService_proto_rawDescData
}

var file_payLogService_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_payLogService_proto_goTypes = []any{
	(*PayLog)(nil),         // 0: services.PayLog
	(*PayLogValue)(nil),    // 1: services.PayLogValue
	(*PayLogRequest)(nil),  // 2: services.PayLogRequest
	(*PayLogResponse)(nil), // 3: services.PayLogResponse
	(*PayKeyInfo)(nil),     // 4: services.PayKeyInfo
	(*common.Pager)(nil),   // 5: common.Pager
}
var file_payLogService_proto_depIdxs = []int32{
	4,  // 0: services.PayLog.pay_key_info:type_name -> services.PayKeyInfo
	1,  // 1: services.PayLog.values:type_name -> services.PayLogValue
	0,  // 2: services.PayLogResponse.entity:type_name -> services.PayLog
	5,  // 3: services.PayLogResponse.pager:type_name -> common.Pager
	0,  // 4: services.PayLogResponse.items:type_name -> services.PayLog
	0,  // 5: services.PayLogService.PayLogInsert:input_type -> services.PayLog
	0,  // 6: services.PayLogService.PayLogSuccess:input_type -> services.PayLog
	0,  // 7: services.PayLogService.PayLogClose:input_type -> services.PayLog
	0,  // 8: services.PayLogService.TypeList:input_type -> services.PayLog
	2,  // 9: services.PayLogService.Detail:input_type -> services.PayLogRequest
	2,  // 10: services.PayLogService.List:input_type -> services.PayLogRequest
	2,  // 11: services.PayLogService.Search:input_type -> services.PayLogRequest
	3,  // 12: services.PayLogService.PayLogInsert:output_type -> services.PayLogResponse
	3,  // 13: services.PayLogService.PayLogSuccess:output_type -> services.PayLogResponse
	3,  // 14: services.PayLogService.PayLogClose:output_type -> services.PayLogResponse
	3,  // 15: services.PayLogService.TypeList:output_type -> services.PayLogResponse
	3,  // 16: services.PayLogService.Detail:output_type -> services.PayLogResponse
	3,  // 17: services.PayLogService.List:output_type -> services.PayLogResponse
	3,  // 18: services.PayLogService.Search:output_type -> services.PayLogResponse
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_payLogService_proto_init() }
func file_payLogService_proto_init() {
	if File_payLogService_proto != nil {
		return
	}
	file_paymentService_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_payLogService_proto_rawDesc), len(file_payLogService_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_payLogService_proto_goTypes,
		DependencyIndexes: file_payLogService_proto_depIdxs,
		MessageInfos:      file_payLogService_proto_msgTypes,
	}.Build()
	File_payLogService_proto = out.File
	file_payLogService_proto_goTypes = nil
	file_payLogService_proto_depIdxs = nil
}
