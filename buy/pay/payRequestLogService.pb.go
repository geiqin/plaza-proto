// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: payRequestLogService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 支付请求日志
type PayRequestLog struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                              //ID
	BusinessType   string                 `protobuf:"bytes,2,opt,name=business_type,json=businessType,proto3" json:"business_type"`       //订单类型: order 订单, wallet 钱包 vip 会员等级
	PayAccountNo   string                 `protobuf:"bytes,3,opt,name=pay_account_no,json=payAccountNo,proto3" json:"pay_account_no"`     //支付账户编号
	RequestParams  string                 `protobuf:"bytes,4,opt,name=request_params,json=requestParams,proto3" json:"request_params"`    //请求参数（数组则json字符串存储）
	ResponseData   string                 `protobuf:"bytes,5,opt,name=response_data,json=responseData,proto3" json:"response_data"`       //响应参数（数组则json字符串存储）
	BusinessHandle string                 `protobuf:"bytes,6,opt,name=business_handle,json=businessHandle,proto3" json:"business_handle"` //业务处理结果（数组则json字符串存储）
	RequestUrl     string                 `protobuf:"bytes,7,opt,name=request_url,json=requestUrl,proto3" json:"request_url"`             //请求url地址
	ServerPort     string                 `protobuf:"bytes,8,opt,name=server_port,json=serverPort,proto3" json:"server_port"`             //端口号
	ServerIp       string                 `protobuf:"bytes,9,opt,name=server_ip,json=serverIp,proto3" json:"server_ip"`                   //服务器ip
	ClientIp       string                 `protobuf:"bytes,10,opt,name=client_ip,json=clientIp,proto3" json:"client_ip"`                  //客户端ip
	Os             string                 `protobuf:"bytes,11,opt,name=os,proto3" json:"os"`                                              //操作系统
	Browser        string                 `protobuf:"bytes,12,opt,name=browser,proto3" json:"browser"`                                    //浏览器
	Method         string                 `protobuf:"bytes,13,opt,name=method,proto3" json:"method"`                                      //请求类型
	Scheme         string                 `protobuf:"bytes,14,opt,name=scheme,proto3" json:"scheme"`                                      //http类型
	Version        string                 `protobuf:"bytes,15,opt,name=version,proto3" json:"version"`                                    //http版本
	Client         string                 `protobuf:"bytes,16,opt,name=client,proto3" json:"client"`                                      //客户端详情信息
	CreatedAt      int64                  `protobuf:"varint,17,opt,name=created_at,json=createdAt,proto3" json:"created_at"`              //创建时间
	UpdatedAt      int64                  `protobuf:"varint,18,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`              //修改时间
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *PayRequestLog) Reset() {
	*x = PayRequestLog{}
	mi := &file_payRequestLogService_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayRequestLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayRequestLog) ProtoMessage() {}

func (x *PayRequestLog) ProtoReflect() protoreflect.Message {
	mi := &file_payRequestLogService_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayRequestLog.ProtoReflect.Descriptor instead.
func (*PayRequestLog) Descriptor() ([]byte, []int) {
	return file_payRequestLogService_proto_rawDescGZIP(), []int{0}
}

func (x *PayRequestLog) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PayRequestLog) GetBusinessType() string {
	if x != nil {
		return x.BusinessType
	}
	return ""
}

func (x *PayRequestLog) GetPayAccountNo() string {
	if x != nil {
		return x.PayAccountNo
	}
	return ""
}

func (x *PayRequestLog) GetRequestParams() string {
	if x != nil {
		return x.RequestParams
	}
	return ""
}

func (x *PayRequestLog) GetResponseData() string {
	if x != nil {
		return x.ResponseData
	}
	return ""
}

func (x *PayRequestLog) GetBusinessHandle() string {
	if x != nil {
		return x.BusinessHandle
	}
	return ""
}

func (x *PayRequestLog) GetRequestUrl() string {
	if x != nil {
		return x.RequestUrl
	}
	return ""
}

func (x *PayRequestLog) GetServerPort() string {
	if x != nil {
		return x.ServerPort
	}
	return ""
}

func (x *PayRequestLog) GetServerIp() string {
	if x != nil {
		return x.ServerIp
	}
	return ""
}

func (x *PayRequestLog) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *PayRequestLog) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *PayRequestLog) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

func (x *PayRequestLog) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *PayRequestLog) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

func (x *PayRequestLog) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PayRequestLog) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (x *PayRequestLog) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PayRequestLog) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type PayRequestLogRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Top       int32                  `protobuf:"varint,1,opt,name=top,proto3" json:"top"`
	Paged     int64                  `protobuf:"varint,2,opt,name=paged,proto3" json:"paged"`
	PageSize  int64                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords  string                 `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords"`
	Sort      []string               `protobuf:"bytes,5,rep,name=sort,proto3" json:"sort"`
	DateRange []string               `protobuf:"bytes,6,rep,name=date_range,json=dateRange,proto3" json:"date_range"`
	Ids       []int32                `protobuf:"varint,7,rep,packed,name=ids,proto3" json:"ids"`
	Id        int32                  `protobuf:"varint,8,opt,name=id,proto3" json:"id"`
	// base params
	LogNo         string `protobuf:"bytes,10,opt,name=log_no,json=logNo,proto3" json:"log_no"`                        //支付日志订单号
	BusinessType  string `protobuf:"bytes,11,opt,name=business_type,json=businessType,proto3" json:"business_type"`   //订单类型: order 订单, wallet 钱包 vip 会员等级
	Os            string `protobuf:"bytes,12,opt,name=os,proto3" json:"os"`                                           //支付方式标识
	PaymentName   string `protobuf:"bytes,13,opt,name=payment_name,json=paymentName,proto3" json:"payment_name"`      //支付方式名称
	Subject       string `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject"`                                 //订单名称
	TradeNo       string `protobuf:"bytes,15,opt,name=trade_no,json=tradeNo,proto3" json:"trade_no"`                  //支付平台交易号
	BuyerUser     string `protobuf:"bytes,16,opt,name=buyer_user,json=buyerUser,proto3" json:"buyer_user"`            //支付平台用户帐号
	PayAccountNo  string `protobuf:"bytes,17,opt,name=pay_account_no,json=payAccountNo,proto3" json:"pay_account_no"` //支付结算账号
	Status        string `protobuf:"bytes,18,opt,name=status,proto3" json:"status"`                                   //状态
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayRequestLogRequest) Reset() {
	*x = PayRequestLogRequest{}
	mi := &file_payRequestLogService_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayRequestLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayRequestLogRequest) ProtoMessage() {}

func (x *PayRequestLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payRequestLogService_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayRequestLogRequest.ProtoReflect.Descriptor instead.
func (*PayRequestLogRequest) Descriptor() ([]byte, []int) {
	return file_payRequestLogService_proto_rawDescGZIP(), []int{1}
}

func (x *PayRequestLogRequest) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *PayRequestLogRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *PayRequestLogRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PayRequestLogRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *PayRequestLogRequest) GetSort() []string {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *PayRequestLogRequest) GetDateRange() []string {
	if x != nil {
		return x.DateRange
	}
	return nil
}

func (x *PayRequestLogRequest) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *PayRequestLogRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PayRequestLogRequest) GetLogNo() string {
	if x != nil {
		return x.LogNo
	}
	return ""
}

func (x *PayRequestLogRequest) GetBusinessType() string {
	if x != nil {
		return x.BusinessType
	}
	return ""
}

func (x *PayRequestLogRequest) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *PayRequestLogRequest) GetPaymentName() string {
	if x != nil {
		return x.PaymentName
	}
	return ""
}

func (x *PayRequestLogRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *PayRequestLogRequest) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *PayRequestLogRequest) GetBuyerUser() string {
	if x != nil {
		return x.BuyerUser
	}
	return ""
}

func (x *PayRequestLogRequest) GetPayAccountNo() string {
	if x != nil {
		return x.PayAccountNo
	}
	return ""
}

func (x *PayRequestLogRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type PayRequestLogResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entity        *PayRequestLog         `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager         *common.Pager          `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items         []*PayRequestLog       `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Msg           string                 `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PayRequestLogResponse) Reset() {
	*x = PayRequestLogResponse{}
	mi := &file_payRequestLogService_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PayRequestLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayRequestLogResponse) ProtoMessage() {}

func (x *PayRequestLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payRequestLogService_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayRequestLogResponse.ProtoReflect.Descriptor instead.
func (*PayRequestLogResponse) Descriptor() ([]byte, []int) {
	return file_payRequestLogService_proto_rawDescGZIP(), []int{2}
}

func (x *PayRequestLogResponse) GetEntity() *PayRequestLog {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *PayRequestLogResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *PayRequestLogResponse) GetItems() []*PayRequestLog {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *PayRequestLogResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_payRequestLogService_proto protoreflect.FileDescriptor

const file_payRequestLogService_proto_rawDesc = "" +
	"\n" +
	"\x1apayRequestLogService.proto\x12\bservices\x1a\x11common/base.proto\"\xa5\x04\n" +
	"\rPayRequestLog\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12#\n" +
	"\rbusiness_type\x18\x02 \x01(\tR\fbusinessType\x12$\n" +
	"\x0epay_account_no\x18\x03 \x01(\tR\fpayAccountNo\x12%\n" +
	"\x0erequest_params\x18\x04 \x01(\tR\rrequestParams\x12#\n" +
	"\rresponse_data\x18\x05 \x01(\tR\fresponseData\x12'\n" +
	"\x0fbusiness_handle\x18\x06 \x01(\tR\x0ebusinessHandle\x12\x1f\n" +
	"\vrequest_url\x18\a \x01(\tR\n" +
	"requestUrl\x12\x1f\n" +
	"\vserver_port\x18\b \x01(\tR\n" +
	"serverPort\x12\x1b\n" +
	"\tserver_ip\x18\t \x01(\tR\bserverIp\x12\x1b\n" +
	"\tclient_ip\x18\n" +
	" \x01(\tR\bclientIp\x12\x0e\n" +
	"\x02os\x18\v \x01(\tR\x02os\x12\x18\n" +
	"\abrowser\x18\f \x01(\tR\abrowser\x12\x16\n" +
	"\x06method\x18\r \x01(\tR\x06method\x12\x16\n" +
	"\x06scheme\x18\x0e \x01(\tR\x06scheme\x12\x18\n" +
	"\aversion\x18\x0f \x01(\tR\aversion\x12\x16\n" +
	"\x06client\x18\x10 \x01(\tR\x06client\x12\x1d\n" +
	"\n" +
	"created_at\x18\x11 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x12 \x01(\x03R\tupdatedAt\"\xcd\x03\n" +
	"\x14PayRequestLogRequest\x12\x10\n" +
	"\x03top\x18\x01 \x01(\x05R\x03top\x12\x14\n" +
	"\x05paged\x18\x02 \x01(\x03R\x05paged\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x03R\bpageSize\x12\x1a\n" +
	"\bkeywords\x18\x04 \x01(\tR\bkeywords\x12\x12\n" +
	"\x04sort\x18\x05 \x03(\tR\x04sort\x12\x1d\n" +
	"\n" +
	"date_range\x18\x06 \x03(\tR\tdateRange\x12\x10\n" +
	"\x03ids\x18\a \x03(\x05R\x03ids\x12\x0e\n" +
	"\x02id\x18\b \x01(\x05R\x02id\x12\x15\n" +
	"\x06log_no\x18\n" +
	" \x01(\tR\x05logNo\x12#\n" +
	"\rbusiness_type\x18\v \x01(\tR\fbusinessType\x12\x0e\n" +
	"\x02os\x18\f \x01(\tR\x02os\x12!\n" +
	"\fpayment_name\x18\r \x01(\tR\vpaymentName\x12\x18\n" +
	"\asubject\x18\x0e \x01(\tR\asubject\x12\x19\n" +
	"\btrade_no\x18\x0f \x01(\tR\atradeNo\x12\x1d\n" +
	"\n" +
	"buyer_user\x18\x10 \x01(\tR\tbuyerUser\x12$\n" +
	"\x0epay_account_no\x18\x11 \x01(\tR\fpayAccountNo\x12\x16\n" +
	"\x06status\x18\x12 \x01(\tR\x06status\"\xae\x01\n" +
	"\x15PayRequestLogResponse\x12/\n" +
	"\x06entity\x18\x01 \x01(\v2\x17.services.PayRequestLogR\x06entity\x12#\n" +
	"\x05pager\x18\x02 \x01(\v2\r.common.PagerR\x05pager\x12-\n" +
	"\x05items\x18\x03 \x03(\v2\x17.services.PayRequestLogR\x05items\x12\x10\n" +
	"\x03msg\x18\x04 \x01(\tR\x03msg2\xa6\x01\n" +
	"\x14PayRequestLogService\x12A\n" +
	"\x03Get\x12\x17.services.PayRequestLog\x1a\x1f.services.PayRequestLogResponse\"\x00\x12K\n" +
	"\x06Search\x12\x1e.services.PayRequestLogRequest\x1a\x1f.services.PayRequestLogResponse\"\x00B\rZ\v/.;servicesb\x06proto3"

var (
	file_payRequestLogService_proto_rawDescOnce sync.Once
	file_payRequestLogService_proto_rawDescData []byte
)

func file_payRequestLogService_proto_rawDescGZIP() []byte {
	file_payRequestLogService_proto_rawDescOnce.Do(func() {
		file_payRequestLogService_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_payRequestLogService_proto_rawDesc), len(file_payRequestLogService_proto_rawDesc)))
	})
	return file_payRequestLogService_proto_rawDescData
}

var file_payRequestLogService_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_payRequestLogService_proto_goTypes = []any{
	(*PayRequestLog)(nil),         // 0: services.PayRequestLog
	(*PayRequestLogRequest)(nil),  // 1: services.PayRequestLogRequest
	(*PayRequestLogResponse)(nil), // 2: services.PayRequestLogResponse
	(*common.Pager)(nil),          // 3: common.Pager
}
var file_payRequestLogService_proto_depIdxs = []int32{
	0, // 0: services.PayRequestLogResponse.entity:type_name -> services.PayRequestLog
	3, // 1: services.PayRequestLogResponse.pager:type_name -> common.Pager
	0, // 2: services.PayRequestLogResponse.items:type_name -> services.PayRequestLog
	0, // 3: services.PayRequestLogService.Get:input_type -> services.PayRequestLog
	1, // 4: services.PayRequestLogService.Search:input_type -> services.PayRequestLogRequest
	2, // 5: services.PayRequestLogService.Get:output_type -> services.PayRequestLogResponse
	2, // 6: services.PayRequestLogService.Search:output_type -> services.PayRequestLogResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_payRequestLogService_proto_init() }
func file_payRequestLogService_proto_init() {
	if File_payRequestLogService_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_payRequestLogService_proto_rawDesc), len(file_payRequestLogService_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_payRequestLogService_proto_goTypes,
		DependencyIndexes: file_payRequestLogService_proto_depIdxs,
		MessageInfos:      file_payRequestLogService_proto_msgTypes,
	}.Build()
	File_payRequestLogService_proto = out.File
	file_payRequestLogService_proto_goTypes = nil
	file_payRequestLogService_proto_depIdxs = nil
}
