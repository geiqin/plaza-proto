// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: payRequestLogService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 支付请求日志
type PayRequestLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                              //ID
	BusinessType   string `protobuf:"bytes,2,opt,name=business_type,json=businessType,proto3" json:"business_type"`       //订单类型: order 订单, wallet 钱包 vip 会员等级
	PayAccountNo   string `protobuf:"bytes,3,opt,name=pay_account_no,json=payAccountNo,proto3" json:"pay_account_no"`     //支付账户编号
	RequestParams  string `protobuf:"bytes,4,opt,name=request_params,json=requestParams,proto3" json:"request_params"`    //请求参数（数组则json字符串存储）
	ResponseData   string `protobuf:"bytes,5,opt,name=response_data,json=responseData,proto3" json:"response_data"`       //响应参数（数组则json字符串存储）
	BusinessHandle string `protobuf:"bytes,6,opt,name=business_handle,json=businessHandle,proto3" json:"business_handle"` //业务处理结果（数组则json字符串存储）
	RequestUrl     string `protobuf:"bytes,7,opt,name=request_url,json=requestUrl,proto3" json:"request_url"`             //请求url地址
	ServerPort     string `protobuf:"bytes,8,opt,name=server_port,json=serverPort,proto3" json:"server_port"`             //端口号
	ServerIp       string `protobuf:"bytes,9,opt,name=server_ip,json=serverIp,proto3" json:"server_ip"`                   //服务器ip
	ClientIp       string `protobuf:"bytes,10,opt,name=client_ip,json=clientIp,proto3" json:"client_ip"`                  //客户端ip
	Os             string `protobuf:"bytes,11,opt,name=os,proto3" json:"os"`                                              //操作系统
	Browser        string `protobuf:"bytes,12,opt,name=browser,proto3" json:"browser"`                                    //浏览器
	Method         string `protobuf:"bytes,13,opt,name=method,proto3" json:"method"`                                      //请求类型
	Scheme         string `protobuf:"bytes,14,opt,name=scheme,proto3" json:"scheme"`                                      //http类型
	Version        string `protobuf:"bytes,15,opt,name=version,proto3" json:"version"`                                    //http版本
	Client         string `protobuf:"bytes,16,opt,name=client,proto3" json:"client"`                                      //客户端详情信息
	CreatedAt      int64  `protobuf:"varint,17,opt,name=created_at,json=createdAt,proto3" json:"created_at"`              //创建时间
	UpdatedAt      int64  `protobuf:"varint,18,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`              //修改时间
}

func (x *PayRequestLog) Reset() {
	*x = PayRequestLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payRequestLogService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayRequestLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayRequestLog) ProtoMessage() {}

func (x *PayRequestLog) ProtoReflect() protoreflect.Message {
	mi := &file_payRequestLogService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayRequestLog.ProtoReflect.Descriptor instead.
func (*PayRequestLog) Descriptor() ([]byte, []int) {
	return file_payRequestLogService_proto_rawDescGZIP(), []int{0}
}

func (x *PayRequestLog) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PayRequestLog) GetBusinessType() string {
	if x != nil {
		return x.BusinessType
	}
	return ""
}

func (x *PayRequestLog) GetPayAccountNo() string {
	if x != nil {
		return x.PayAccountNo
	}
	return ""
}

func (x *PayRequestLog) GetRequestParams() string {
	if x != nil {
		return x.RequestParams
	}
	return ""
}

func (x *PayRequestLog) GetResponseData() string {
	if x != nil {
		return x.ResponseData
	}
	return ""
}

func (x *PayRequestLog) GetBusinessHandle() string {
	if x != nil {
		return x.BusinessHandle
	}
	return ""
}

func (x *PayRequestLog) GetRequestUrl() string {
	if x != nil {
		return x.RequestUrl
	}
	return ""
}

func (x *PayRequestLog) GetServerPort() string {
	if x != nil {
		return x.ServerPort
	}
	return ""
}

func (x *PayRequestLog) GetServerIp() string {
	if x != nil {
		return x.ServerIp
	}
	return ""
}

func (x *PayRequestLog) GetClientIp() string {
	if x != nil {
		return x.ClientIp
	}
	return ""
}

func (x *PayRequestLog) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *PayRequestLog) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

func (x *PayRequestLog) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *PayRequestLog) GetScheme() string {
	if x != nil {
		return x.Scheme
	}
	return ""
}

func (x *PayRequestLog) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PayRequestLog) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (x *PayRequestLog) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PayRequestLog) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type PayRequestLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Top       int32    `protobuf:"varint,1,opt,name=top,proto3" json:"top"`
	Paged     int64    `protobuf:"varint,2,opt,name=paged,proto3" json:"paged"`
	PageSize  int64    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords  string   `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords"`
	Sort      []string `protobuf:"bytes,5,rep,name=sort,proto3" json:"sort"`
	DateRange []string `protobuf:"bytes,6,rep,name=date_range,json=dateRange,proto3" json:"date_range"`
	Ids       []int32  `protobuf:"varint,7,rep,packed,name=ids,proto3" json:"ids"`
	Id        int32    `protobuf:"varint,8,opt,name=id,proto3" json:"id"`
	//base params
	LogNo        string `protobuf:"bytes,10,opt,name=log_no,json=logNo,proto3" json:"log_no"`                        //支付日志订单号
	BusinessType string `protobuf:"bytes,11,opt,name=business_type,json=businessType,proto3" json:"business_type"`   //订单类型: order 订单, wallet 钱包 vip 会员等级
	Os           string `protobuf:"bytes,12,opt,name=os,proto3" json:"os"`                                           //支付方式标识
	PaymentName  string `protobuf:"bytes,13,opt,name=payment_name,json=paymentName,proto3" json:"payment_name"`      //支付方式名称
	Subject      string `protobuf:"bytes,14,opt,name=subject,proto3" json:"subject"`                                 //订单名称
	TradeNo      string `protobuf:"bytes,15,opt,name=trade_no,json=tradeNo,proto3" json:"trade_no"`                  //支付平台交易号
	BuyerUser    string `protobuf:"bytes,16,opt,name=buyer_user,json=buyerUser,proto3" json:"buyer_user"`            //支付平台用户帐号
	PayAccountNo string `protobuf:"bytes,17,opt,name=pay_account_no,json=payAccountNo,proto3" json:"pay_account_no"` //支付结算账号
	Status       string `protobuf:"bytes,18,opt,name=status,proto3" json:"status"`                                   //状态
}

func (x *PayRequestLogRequest) Reset() {
	*x = PayRequestLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payRequestLogService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayRequestLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayRequestLogRequest) ProtoMessage() {}

func (x *PayRequestLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payRequestLogService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayRequestLogRequest.ProtoReflect.Descriptor instead.
func (*PayRequestLogRequest) Descriptor() ([]byte, []int) {
	return file_payRequestLogService_proto_rawDescGZIP(), []int{1}
}

func (x *PayRequestLogRequest) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *PayRequestLogRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *PayRequestLogRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PayRequestLogRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *PayRequestLogRequest) GetSort() []string {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *PayRequestLogRequest) GetDateRange() []string {
	if x != nil {
		return x.DateRange
	}
	return nil
}

func (x *PayRequestLogRequest) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *PayRequestLogRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PayRequestLogRequest) GetLogNo() string {
	if x != nil {
		return x.LogNo
	}
	return ""
}

func (x *PayRequestLogRequest) GetBusinessType() string {
	if x != nil {
		return x.BusinessType
	}
	return ""
}

func (x *PayRequestLogRequest) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *PayRequestLogRequest) GetPaymentName() string {
	if x != nil {
		return x.PaymentName
	}
	return ""
}

func (x *PayRequestLogRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *PayRequestLogRequest) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *PayRequestLogRequest) GetBuyerUser() string {
	if x != nil {
		return x.BuyerUser
	}
	return ""
}

func (x *PayRequestLogRequest) GetPayAccountNo() string {
	if x != nil {
		return x.PayAccountNo
	}
	return ""
}

func (x *PayRequestLogRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type PayRequestLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *PayRequestLog   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager    `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*PayRequestLog `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Msg    string           `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg"`
}

func (x *PayRequestLogResponse) Reset() {
	*x = PayRequestLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payRequestLogService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayRequestLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayRequestLogResponse) ProtoMessage() {}

func (x *PayRequestLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payRequestLogService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayRequestLogResponse.ProtoReflect.Descriptor instead.
func (*PayRequestLogResponse) Descriptor() ([]byte, []int) {
	return file_payRequestLogService_proto_rawDescGZIP(), []int{2}
}

func (x *PayRequestLogResponse) GetEntity() *PayRequestLog {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *PayRequestLogResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *PayRequestLogResponse) GetItems() []*PayRequestLog {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *PayRequestLogResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_payRequestLogService_proto protoreflect.FileDescriptor

var file_payRequestLogService_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa5, 0x04, 0x0a, 0x0d, 0x50, 0x61,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x62,
	0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x24, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x6e, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x79, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x27, 0x0a, 0x0f, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x5f, 0x68,
	0x61, 0x6e, 0x64, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1b, 0x0a,
	0x09, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x70, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x49, 0x70, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73,
	0x65, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x68,
	0x65, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0xcd, 0x03, 0x0a, 0x14, 0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x6c, 0x6f, 0x67, 0x5f, 0x6e, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x6f, 0x67, 0x4e, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x75, 0x73, 0x69, 0x6e,
	0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x6f, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x4e, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x79, 0x65, 0x72, 0x55,
	0x73, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x79,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0xae, 0x01, 0x0a, 0x15, 0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4c, 0x6f, 0x67, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x72, 0x12, 0x2d, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x32, 0xa6, 0x01, 0x0a, 0x14, 0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4c, 0x6f, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x03, 0x47,
	0x65, 0x74, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x67, 0x1a, 0x1f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b,
	0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4c, 0x6f,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f,
	0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_payRequestLogService_proto_rawDescOnce sync.Once
	file_payRequestLogService_proto_rawDescData = file_payRequestLogService_proto_rawDesc
)

func file_payRequestLogService_proto_rawDescGZIP() []byte {
	file_payRequestLogService_proto_rawDescOnce.Do(func() {
		file_payRequestLogService_proto_rawDescData = protoimpl.X.CompressGZIP(file_payRequestLogService_proto_rawDescData)
	})
	return file_payRequestLogService_proto_rawDescData
}

var file_payRequestLogService_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_payRequestLogService_proto_goTypes = []interface{}{
	(*PayRequestLog)(nil),         // 0: services.PayRequestLog
	(*PayRequestLogRequest)(nil),  // 1: services.PayRequestLogRequest
	(*PayRequestLogResponse)(nil), // 2: services.PayRequestLogResponse
	(*common.Pager)(nil),          // 3: common.Pager
}
var file_payRequestLogService_proto_depIdxs = []int32{
	0, // 0: services.PayRequestLogResponse.entity:type_name -> services.PayRequestLog
	3, // 1: services.PayRequestLogResponse.pager:type_name -> common.Pager
	0, // 2: services.PayRequestLogResponse.items:type_name -> services.PayRequestLog
	0, // 3: services.PayRequestLogService.Get:input_type -> services.PayRequestLog
	1, // 4: services.PayRequestLogService.Search:input_type -> services.PayRequestLogRequest
	2, // 5: services.PayRequestLogService.Get:output_type -> services.PayRequestLogResponse
	2, // 6: services.PayRequestLogService.Search:output_type -> services.PayRequestLogResponse
	5, // [5:7] is the sub-list for method output_type
	3, // [3:5] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_payRequestLogService_proto_init() }
func file_payRequestLogService_proto_init() {
	if File_payRequestLogService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_payRequestLogService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayRequestLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payRequestLogService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayRequestLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payRequestLogService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayRequestLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_payRequestLogService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_payRequestLogService_proto_goTypes,
		DependencyIndexes: file_payRequestLogService_proto_depIdxs,
		MessageInfos:      file_payRequestLogService_proto_msgTypes,
	}.Build()
	File_payRequestLogService_proto = out.File
	file_payRequestLogService_proto_rawDesc = nil
	file_payRequestLogService_proto_goTypes = nil
	file_payRequestLogService_proto_depIdxs = nil
}
