// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: weixinService.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 微信退款信息
type WeixinRefundRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefundLogNo string `protobuf:"bytes,1,opt,name=refund_log_no,json=refundLogNo,proto3" json:"refund_log_no"` //退款日志编号
	ClientType  string `protobuf:"bytes,2,opt,name=client_type,json=clientType,proto3" json:"client_type"`      //客户端类型
}

func (x *WeixinRefundRequest) Reset() {
	*x = WeixinRefundRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weixinService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeixinRefundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeixinRefundRequest) ProtoMessage() {}

func (x *WeixinRefundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weixinService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeixinRefundRequest.ProtoReflect.Descriptor instead.
func (*WeixinRefundRequest) Descriptor() ([]byte, []int) {
	return file_weixinService_proto_rawDescGZIP(), []int{0}
}

func (x *WeixinRefundRequest) GetRefundLogNo() string {
	if x != nil {
		return x.RefundLogNo
	}
	return ""
}

func (x *WeixinRefundRequest) GetClientType() string {
	if x != nil {
		return x.ClientType
	}
	return ""
}

// 微信小程序支付请求
type WeixinPayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayLogNo      string            `protobuf:"bytes,1,opt,name=pay_log_no,json=payLogNo,proto3" json:"pay_log_no"`                //支付单号
	ClientType    string            `protobuf:"bytes,2,opt,name=client_type,json=clientType,proto3" json:"client_type"`            //客户端类型
	AuthCode      string            `protobuf:"bytes,3,opt,name=auth_code,json=authCode,proto3" json:"auth_code"`                  //授权码
	IsClosePubsub string            `protobuf:"bytes,4,opt,name=is_close_pubsub,json=isClosePubsub,proto3" json:"is_close_pubsub"` //直接支付成功关闭消息通知（0否，1是）
	PayerInfo     *WeixinPayerInfo  `protobuf:"bytes,10,opt,name=payer_info,json=payerInfo,proto3" json:"payer_info"`              //微信买家信息
	SceneInfo     *WeixinSceneInfo  `protobuf:"bytes,11,opt,name=scene_info,json=sceneInfo,proto3" json:"scene_info"`              //微信支付场景
	SettleInfo    *WeixinSettleInfo `protobuf:"bytes,12,opt,name=settle_info,json=settleInfo,proto3" json:"settle_info"`           //微信结算信息
}

func (x *WeixinPayRequest) Reset() {
	*x = WeixinPayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weixinService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeixinPayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeixinPayRequest) ProtoMessage() {}

func (x *WeixinPayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weixinService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeixinPayRequest.ProtoReflect.Descriptor instead.
func (*WeixinPayRequest) Descriptor() ([]byte, []int) {
	return file_weixinService_proto_rawDescGZIP(), []int{1}
}

func (x *WeixinPayRequest) GetPayLogNo() string {
	if x != nil {
		return x.PayLogNo
	}
	return ""
}

func (x *WeixinPayRequest) GetClientType() string {
	if x != nil {
		return x.ClientType
	}
	return ""
}

func (x *WeixinPayRequest) GetAuthCode() string {
	if x != nil {
		return x.AuthCode
	}
	return ""
}

func (x *WeixinPayRequest) GetIsClosePubsub() string {
	if x != nil {
		return x.IsClosePubsub
	}
	return ""
}

func (x *WeixinPayRequest) GetPayerInfo() *WeixinPayerInfo {
	if x != nil {
		return x.PayerInfo
	}
	return nil
}

func (x *WeixinPayRequest) GetSceneInfo() *WeixinSceneInfo {
	if x != nil {
		return x.SceneInfo
	}
	return nil
}

func (x *WeixinPayRequest) GetSettleInfo() *WeixinSettleInfo {
	if x != nil {
		return x.SettleInfo
	}
	return nil
}

// 微信订单请求
type WeixinOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayLogNo   string `protobuf:"bytes,1,opt,name=pay_log_no,json=payLogNo,proto3" json:"pay_log_no"`     //支付单号
	ClientType string `protobuf:"bytes,2,opt,name=client_type,json=clientType,proto3" json:"client_type"` //客户端类型
	AuthCode   string `protobuf:"bytes,3,opt,name=auth_code,json=authCode,proto3" json:"auth_code"`       //授权码
}

func (x *WeixinOrderRequest) Reset() {
	*x = WeixinOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weixinService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeixinOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeixinOrderRequest) ProtoMessage() {}

func (x *WeixinOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_weixinService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeixinOrderRequest.ProtoReflect.Descriptor instead.
func (*WeixinOrderRequest) Descriptor() ([]byte, []int) {
	return file_weixinService_proto_rawDescGZIP(), []int{2}
}

func (x *WeixinOrderRequest) GetPayLogNo() string {
	if x != nil {
		return x.PayLogNo
	}
	return ""
}

func (x *WeixinOrderRequest) GetClientType() string {
	if x != nil {
		return x.ClientType
	}
	return ""
}

func (x *WeixinOrderRequest) GetAuthCode() string {
	if x != nil {
		return x.AuthCode
	}
	return ""
}

// 微信买家信息
type WeixinPayerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OpenId string `protobuf:"bytes,1,opt,name=open_id,json=openId,proto3" json:"open_id"` //用户标识
}

func (x *WeixinPayerInfo) Reset() {
	*x = WeixinPayerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weixinService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeixinPayerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeixinPayerInfo) ProtoMessage() {}

func (x *WeixinPayerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_weixinService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeixinPayerInfo.ProtoReflect.Descriptor instead.
func (*WeixinPayerInfo) Descriptor() ([]byte, []int) {
	return file_weixinService_proto_rawDescGZIP(), []int{3}
}

func (x *WeixinPayerInfo) GetOpenId() string {
	if x != nil {
		return x.OpenId
	}
	return ""
}

// 微信支付场景
type WeixinSceneInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayerClientIp string `protobuf:"bytes,1,opt,name=payer_client_ip,json=payerClientIp,proto3" json:"payer_client_ip"` //用户终端IP
	DeviceId      string `protobuf:"bytes,2,opt,name=device_id,json=deviceId,proto3" json:"device_id"`                  //商户端设备号
}

func (x *WeixinSceneInfo) Reset() {
	*x = WeixinSceneInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weixinService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeixinSceneInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeixinSceneInfo) ProtoMessage() {}

func (x *WeixinSceneInfo) ProtoReflect() protoreflect.Message {
	mi := &file_weixinService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeixinSceneInfo.ProtoReflect.Descriptor instead.
func (*WeixinSceneInfo) Descriptor() ([]byte, []int) {
	return file_weixinService_proto_rawDescGZIP(), []int{4}
}

func (x *WeixinSceneInfo) GetPayerClientIp() string {
	if x != nil {
		return x.PayerClientIp
	}
	return ""
}

func (x *WeixinSceneInfo) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

// 微信结算信息
type WeixinSettleInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfitSharing bool `protobuf:"varint,1,opt,name=profit_sharing,json=profitSharing,proto3" json:"profit_sharing"` //是否指定分账
}

func (x *WeixinSettleInfo) Reset() {
	*x = WeixinSettleInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weixinService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeixinSettleInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeixinSettleInfo) ProtoMessage() {}

func (x *WeixinSettleInfo) ProtoReflect() protoreflect.Message {
	mi := &file_weixinService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeixinSettleInfo.ProtoReflect.Descriptor instead.
func (*WeixinSettleInfo) Descriptor() ([]byte, []int) {
	return file_weixinService_proto_rawDescGZIP(), []int{5}
}

func (x *WeixinSettleInfo) GetProfitSharing() bool {
	if x != nil {
		return x.ProfitSharing
	}
	return false
}

// 微信支付数据
type WeixinPayData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPaySucceed    bool              `protobuf:"varint,1,opt,name=is_pay_succeed,json=isPaySucceed,proto3" json:"is_pay_succeed"`          //是否直接成功(0否，1是)【支付/退款/转账/提现】
	IsNotifyConfirm bool              `protobuf:"varint,2,opt,name=is_notify_confirm,json=isNotifyConfirm,proto3" json:"is_notify_confirm"` //是否需要通知确认(0否，1是)
	PayLogId        int64             `protobuf:"varint,3,opt,name=pay_log_id,json=payLogId,proto3" json:"pay_log_id"`
	PayLogNo        string            `protobuf:"bytes,4,opt,name=pay_log_no,json=payLogNo,proto3" json:"pay_log_no"`
	JsConfig        map[string]string `protobuf:"bytes,5,rep,name=jsConfig,proto3" json:"jsConfig" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *WeixinPayData) Reset() {
	*x = WeixinPayData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weixinService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeixinPayData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeixinPayData) ProtoMessage() {}

func (x *WeixinPayData) ProtoReflect() protoreflect.Message {
	mi := &file_weixinService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeixinPayData.ProtoReflect.Descriptor instead.
func (*WeixinPayData) Descriptor() ([]byte, []int) {
	return file_weixinService_proto_rawDescGZIP(), []int{6}
}

func (x *WeixinPayData) GetIsPaySucceed() bool {
	if x != nil {
		return x.IsPaySucceed
	}
	return false
}

func (x *WeixinPayData) GetIsNotifyConfirm() bool {
	if x != nil {
		return x.IsNotifyConfirm
	}
	return false
}

func (x *WeixinPayData) GetPayLogId() int64 {
	if x != nil {
		return x.PayLogId
	}
	return 0
}

func (x *WeixinPayData) GetPayLogNo() string {
	if x != nil {
		return x.PayLogNo
	}
	return ""
}

func (x *WeixinPayData) GetJsConfig() map[string]string {
	if x != nil {
		return x.JsConfig
	}
	return nil
}

// 微信付款码支付数据
type WeixinMicroPayData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPaySucceed    bool                      `protobuf:"varint,1,opt,name=is_pay_succeed,json=isPaySucceed,proto3" json:"is_pay_succeed"`          //是否直接成功(0否，1是)【支付/退款/转账/提现】
	IsNotifyConfirm bool                      `protobuf:"varint,2,opt,name=is_notify_confirm,json=isNotifyConfirm,proto3" json:"is_notify_confirm"` //是否需要通知确认(0否，1是)
	PayLogId        int64                     `protobuf:"varint,3,opt,name=pay_log_id,json=payLogId,proto3" json:"pay_log_id"`
	PayLogNo        string                    `protobuf:"bytes,4,opt,name=pay_log_no,json=payLogNo,proto3" json:"pay_log_no"`
	Suggest         string                    `protobuf:"bytes,5,opt,name=suggest,proto3" json:"suggest"`                              //操作建议：again 重新支付 / wait 等待确认 / close 关闭支付（选择其他支付方式）
	ResultCode      string                    `protobuf:"bytes,6,opt,name=result_code,json=resultCode,proto3" json:"result_code"`      //业务结果：	SUCCESS/FAIL
	ErrCode         string                    `protobuf:"bytes,7,opt,name=err_code,json=errCode,proto3" json:"err_code"`               //错误代码
	ErrCodeDesc     string                    `protobuf:"bytes,8,opt,name=err_code_desc,json=errCodeDesc,proto3" json:"err_code_desc"` //错误代码描述
	ResultInfo      *WeixinMicroPayDataResult `protobuf:"bytes,9,opt,name=resultInfo,proto3" json:"resultInfo"`
}

func (x *WeixinMicroPayData) Reset() {
	*x = WeixinMicroPayData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weixinService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeixinMicroPayData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeixinMicroPayData) ProtoMessage() {}

func (x *WeixinMicroPayData) ProtoReflect() protoreflect.Message {
	mi := &file_weixinService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeixinMicroPayData.ProtoReflect.Descriptor instead.
func (*WeixinMicroPayData) Descriptor() ([]byte, []int) {
	return file_weixinService_proto_rawDescGZIP(), []int{7}
}

func (x *WeixinMicroPayData) GetIsPaySucceed() bool {
	if x != nil {
		return x.IsPaySucceed
	}
	return false
}

func (x *WeixinMicroPayData) GetIsNotifyConfirm() bool {
	if x != nil {
		return x.IsNotifyConfirm
	}
	return false
}

func (x *WeixinMicroPayData) GetPayLogId() int64 {
	if x != nil {
		return x.PayLogId
	}
	return 0
}

func (x *WeixinMicroPayData) GetPayLogNo() string {
	if x != nil {
		return x.PayLogNo
	}
	return ""
}

func (x *WeixinMicroPayData) GetSuggest() string {
	if x != nil {
		return x.Suggest
	}
	return ""
}

func (x *WeixinMicroPayData) GetResultCode() string {
	if x != nil {
		return x.ResultCode
	}
	return ""
}

func (x *WeixinMicroPayData) GetErrCode() string {
	if x != nil {
		return x.ErrCode
	}
	return ""
}

func (x *WeixinMicroPayData) GetErrCodeDesc() string {
	if x != nil {
		return x.ErrCodeDesc
	}
	return ""
}

func (x *WeixinMicroPayData) GetResultInfo() *WeixinMicroPayDataResult {
	if x != nil {
		return x.ResultInfo
	}
	return nil
}

type WeixinQueryOrderData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State  string            `protobuf:"bytes,1,opt,name=state,proto3" json:"state"` //状态：0成功
	Params map[string]string `protobuf:"bytes,2,rep,name=params,proto3" json:"params" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *WeixinQueryOrderData) Reset() {
	*x = WeixinQueryOrderData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weixinService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeixinQueryOrderData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeixinQueryOrderData) ProtoMessage() {}

func (x *WeixinQueryOrderData) ProtoReflect() protoreflect.Message {
	mi := &file_weixinService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeixinQueryOrderData.ProtoReflect.Descriptor instead.
func (*WeixinQueryOrderData) Descriptor() ([]byte, []int) {
	return file_weixinService_proto_rawDescGZIP(), []int{8}
}

func (x *WeixinQueryOrderData) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *WeixinQueryOrderData) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

type WeixinCloseOrderData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	State  string            `protobuf:"bytes,1,opt,name=state,proto3" json:"state"` //状态：0成功
	Params map[string]string `protobuf:"bytes,2,rep,name=params,proto3" json:"params" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *WeixinCloseOrderData) Reset() {
	*x = WeixinCloseOrderData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weixinService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeixinCloseOrderData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeixinCloseOrderData) ProtoMessage() {}

func (x *WeixinCloseOrderData) ProtoReflect() protoreflect.Message {
	mi := &file_weixinService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeixinCloseOrderData.ProtoReflect.Descriptor instead.
func (*WeixinCloseOrderData) Descriptor() ([]byte, []int) {
	return file_weixinService_proto_rawDescGZIP(), []int{9}
}

func (x *WeixinCloseOrderData) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *WeixinCloseOrderData) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

// 微信退款数据
type WeixinRefundData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefundId            string `protobuf:"bytes,1,opt,name=refund_id,json=refundId,proto3" json:"refund_id"`
	OutRefundNo         string `protobuf:"bytes,2,opt,name=out_refund_no,json=outRefundNo,proto3" json:"out_refund_no"`
	TransactionId       string `protobuf:"bytes,3,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id"`
	OutTradeNo          string `protobuf:"bytes,4,opt,name=out_trade_no,json=outTradeNo,proto3" json:"out_trade_no"`
	Channel             string `protobuf:"bytes,5,opt,name=channel,proto3" json:"channel"`
	UserReceivedAccount string `protobuf:"bytes,6,opt,name=user_received_account,json=userReceivedAccount,proto3" json:"user_received_account"`
	SuccessTime         string `protobuf:"bytes,7,opt,name=success_time,json=successTime,proto3" json:"success_time"`
	CreateTime          string `protobuf:"bytes,8,opt,name=create_time,json=createTime,proto3" json:"create_time"`
	State               string `protobuf:"bytes,9,opt,name=state,proto3" json:"state"`                                    //状态：0成功
	ReturnParams        string `protobuf:"bytes,10,opt,name=return_params,json=returnParams,proto3" json:"return_params"` //平台返回数据JSON
}

func (x *WeixinRefundData) Reset() {
	*x = WeixinRefundData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weixinService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeixinRefundData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeixinRefundData) ProtoMessage() {}

func (x *WeixinRefundData) ProtoReflect() protoreflect.Message {
	mi := &file_weixinService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeixinRefundData.ProtoReflect.Descriptor instead.
func (*WeixinRefundData) Descriptor() ([]byte, []int) {
	return file_weixinService_proto_rawDescGZIP(), []int{10}
}

func (x *WeixinRefundData) GetRefundId() string {
	if x != nil {
		return x.RefundId
	}
	return ""
}

func (x *WeixinRefundData) GetOutRefundNo() string {
	if x != nil {
		return x.OutRefundNo
	}
	return ""
}

func (x *WeixinRefundData) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *WeixinRefundData) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *WeixinRefundData) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *WeixinRefundData) GetUserReceivedAccount() string {
	if x != nil {
		return x.UserReceivedAccount
	}
	return ""
}

func (x *WeixinRefundData) GetSuccessTime() string {
	if x != nil {
		return x.SuccessTime
	}
	return ""
}

func (x *WeixinRefundData) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *WeixinRefundData) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *WeixinRefundData) GetReturnParams() string {
	if x != nil {
		return x.ReturnParams
	}
	return ""
}

type WeixinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg            string                `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg"`
	AppPayData     *WeixinPayData        `protobuf:"bytes,2,opt,name=app_pay_data,json=appPayData,proto3" json:"app_pay_data"`             //App支付数据
	MiniPayData    *WeixinPayData        `protobuf:"bytes,3,opt,name=mini_pay_data,json=miniPayData,proto3" json:"mini_pay_data"`          //小程序支付数据
	MicroPayData   *WeixinMicroPayData   `protobuf:"bytes,4,opt,name=micro_pay_data,json=microPayData,proto3" json:"micro_pay_data"`       //付款码支付数据
	NativePayData  *WeixinPayData        `protobuf:"bytes,5,opt,name=native_pay_data,json=nativePayData,proto3" json:"native_pay_data"`    //扫码支付数据
	RefundData     *WeixinRefundData     `protobuf:"bytes,6,opt,name=refund_data,json=refundData,proto3" json:"refund_data"`               //退款数据
	QueryOrderData *WeixinQueryOrderData `protobuf:"bytes,7,opt,name=query_order_data,json=queryOrderData,proto3" json:"query_order_data"` //产订单数据
	CloseOrderData *WeixinCloseOrderData `protobuf:"bytes,8,opt,name=close_order_data,json=closeOrderData,proto3" json:"close_order_data"` //关闭订单数据
}

func (x *WeixinResponse) Reset() {
	*x = WeixinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weixinService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeixinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeixinResponse) ProtoMessage() {}

func (x *WeixinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_weixinService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeixinResponse.ProtoReflect.Descriptor instead.
func (*WeixinResponse) Descriptor() ([]byte, []int) {
	return file_weixinService_proto_rawDescGZIP(), []int{11}
}

func (x *WeixinResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *WeixinResponse) GetAppPayData() *WeixinPayData {
	if x != nil {
		return x.AppPayData
	}
	return nil
}

func (x *WeixinResponse) GetMiniPayData() *WeixinPayData {
	if x != nil {
		return x.MiniPayData
	}
	return nil
}

func (x *WeixinResponse) GetMicroPayData() *WeixinMicroPayData {
	if x != nil {
		return x.MicroPayData
	}
	return nil
}

func (x *WeixinResponse) GetNativePayData() *WeixinPayData {
	if x != nil {
		return x.NativePayData
	}
	return nil
}

func (x *WeixinResponse) GetRefundData() *WeixinRefundData {
	if x != nil {
		return x.RefundData
	}
	return nil
}

func (x *WeixinResponse) GetQueryOrderData() *WeixinQueryOrderData {
	if x != nil {
		return x.QueryOrderData
	}
	return nil
}

func (x *WeixinResponse) GetCloseOrderData() *WeixinCloseOrderData {
	if x != nil {
		return x.CloseOrderData
	}
	return nil
}

type WeixinMicroPayDataResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TradeType      string `protobuf:"bytes,4,opt,name=trade_type,json=tradeType,proto3" json:"trade_type"` //交易类型: 取值如下：JSAPI，NATIVE，APP，MICROPAY
	Openid         string `protobuf:"bytes,6,opt,name=openid,proto3" json:"openid"`
	FeeType        string `protobuf:"bytes,7,opt,name=fee_type,json=feeType,proto3" json:"fee_type"`
	CashFee        int64  `protobuf:"varint,8,opt,name=cash_fee,json=cashFee,proto3" json:"cash_fee"`
	IsSubscribe    string `protobuf:"bytes,9,opt,name=is_subscribe,json=isSubscribe,proto3" json:"is_subscribe"` //是否订阅app(0否，1是)
	SubOpenid      string `protobuf:"bytes,10,opt,name=sub_openid,json=subOpenid,proto3" json:"sub_openid"`
	TransactionId  string `protobuf:"bytes,11,opt,name=transaction_id,json=transactionId,proto3" json:"transaction_id"`
	OutTradeNo     string `protobuf:"bytes,12,opt,name=out_trade_no,json=outTradeNo,proto3" json:"out_trade_no"`
	TotalFee       int64  `protobuf:"varint,13,opt,name=total_fee,json=totalFee,proto3" json:"total_fee"`
	SubIsSubscribe string `protobuf:"bytes,14,opt,name=sub_is_subscribe,json=subIsSubscribe,proto3" json:"sub_is_subscribe"` //是否订阅子APP(0否，1是)
	BankType       string `protobuf:"bytes,15,opt,name=bank_type,json=bankType,proto3" json:"bank_type"`
	TimeEnd        string `protobuf:"bytes,16,opt,name=time_end,json=timeEnd,proto3" json:"time_end"`
}

func (x *WeixinMicroPayDataResult) Reset() {
	*x = WeixinMicroPayDataResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_weixinService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WeixinMicroPayDataResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WeixinMicroPayDataResult) ProtoMessage() {}

func (x *WeixinMicroPayDataResult) ProtoReflect() protoreflect.Message {
	mi := &file_weixinService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WeixinMicroPayDataResult.ProtoReflect.Descriptor instead.
func (*WeixinMicroPayDataResult) Descriptor() ([]byte, []int) {
	return file_weixinService_proto_rawDescGZIP(), []int{7, 0}
}

func (x *WeixinMicroPayDataResult) GetTradeType() string {
	if x != nil {
		return x.TradeType
	}
	return ""
}

func (x *WeixinMicroPayDataResult) GetOpenid() string {
	if x != nil {
		return x.Openid
	}
	return ""
}

func (x *WeixinMicroPayDataResult) GetFeeType() string {
	if x != nil {
		return x.FeeType
	}
	return ""
}

func (x *WeixinMicroPayDataResult) GetCashFee() int64 {
	if x != nil {
		return x.CashFee
	}
	return 0
}

func (x *WeixinMicroPayDataResult) GetIsSubscribe() string {
	if x != nil {
		return x.IsSubscribe
	}
	return ""
}

func (x *WeixinMicroPayDataResult) GetSubOpenid() string {
	if x != nil {
		return x.SubOpenid
	}
	return ""
}

func (x *WeixinMicroPayDataResult) GetTransactionId() string {
	if x != nil {
		return x.TransactionId
	}
	return ""
}

func (x *WeixinMicroPayDataResult) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *WeixinMicroPayDataResult) GetTotalFee() int64 {
	if x != nil {
		return x.TotalFee
	}
	return 0
}

func (x *WeixinMicroPayDataResult) GetSubIsSubscribe() string {
	if x != nil {
		return x.SubIsSubscribe
	}
	return ""
}

func (x *WeixinMicroPayDataResult) GetBankType() string {
	if x != nil {
		return x.BankType
	}
	return ""
}

func (x *WeixinMicroPayDataResult) GetTimeEnd() string {
	if x != nil {
		return x.TimeEnd
	}
	return ""
}

var File_weixinService_proto protoreflect.FileDescriptor

var file_weixinService_proto_rawDesc = []byte{
	0x0a, 0x13, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22,
	0x5a, 0x0a, 0x13, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x4e, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xc7, 0x02, 0x0a, 0x10,
	0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x6e, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x79, 0x4c, 0x6f, 0x67, 0x4e, 0x6f, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0f,
	0x69, 0x73, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x70, 0x75, 0x62, 0x73, 0x75, 0x62, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x73, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x50, 0x75,
	0x62, 0x73, 0x75, 0x62, 0x12, 0x38, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x50, 0x61, 0x79, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x70, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x38,
	0x0a, 0x0a, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x65,
	0x69, 0x78, 0x69, 0x6e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x73,
	0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3b, 0x0a, 0x0b, 0x73, 0x65, 0x74, 0x74,
	0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x53,
	0x65, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x73, 0x65, 0x74, 0x74, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x70, 0x0a, 0x12, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x0a, 0x70,
	0x61, 0x79, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x79, 0x4c, 0x6f, 0x67, 0x4e, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x75, 0x74, 0x68, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x2a, 0x0a, 0x0f, 0x57, 0x65, 0x69, 0x78, 0x69,
	0x6e, 0x50, 0x61, 0x79, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x6f, 0x70,
	0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65,
	0x6e, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x0f, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x53, 0x63, 0x65,
	0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x70, 0x61, 0x79, 0x65, 0x72, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x70, 0x12, 0x1b,
	0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x22, 0x39, 0x0a, 0x10, 0x57,
	0x65, 0x69, 0x78, 0x69, 0x6e, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x25, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x69, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x74, 0x53,
	0x68, 0x61, 0x72, 0x69, 0x6e, 0x67, 0x22, 0x9d, 0x02, 0x0a, 0x0d, 0x57, 0x65, 0x69, 0x78, 0x69,
	0x6e, 0x50, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x70,
	0x61, 0x79, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x69, 0x73, 0x50, 0x61, 0x79, 0x53, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x12, 0x2a,
	0x0a, 0x11, 0x69, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x1c, 0x0a, 0x0a, 0x70, 0x61,
	0x79, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x79, 0x4c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f,
	0x6c, 0x6f, 0x67, 0x5f, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x79, 0x4c, 0x6f, 0x67, 0x4e, 0x6f, 0x12, 0x41, 0x0a, 0x08, 0x6a, 0x73, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x50, 0x61, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x2e, 0x4a, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x08, 0x6a, 0x73, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x1a, 0x3b, 0x0a, 0x0d, 0x4a, 0x73, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe3, 0x05, 0x0a, 0x12, 0x57, 0x65, 0x69, 0x78, 0x69,
	0x6e, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x50, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x24, 0x0a,
	0x0e, 0x69, 0x73, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x75, 0x63, 0x63, 0x65, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x50, 0x61, 0x79, 0x53, 0x75, 0x63, 0x63,
	0x65, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f,
	0x69, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12,
	0x1c, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x79, 0x4c, 0x6f, 0x67, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x0a, 0x70, 0x61, 0x79, 0x5f, 0x6c, 0x6f, 0x67, 0x5f, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x70, 0x61, 0x79, 0x4c, 0x6f, 0x67, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75,
	0x67, 0x67, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x22, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x43, 0x0a, 0x0a, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x4d, 0x69, 0x63, 0x72, 0x6f,
	0x50, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x0a,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xff, 0x02, 0x0a, 0x06, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x66, 0x65, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x66, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61, 0x73, 0x68, 0x5f,
	0x66, 0x65, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x61, 0x73, 0x68, 0x46,
	0x65, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x73, 0x53, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x5f, 0x6f, 0x70, 0x65,
	0x6e, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x4f, 0x70,
	0x65, 0x6e, 0x69, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6f,
	0x75, 0x74, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x46, 0x65, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x73, 0x75,
	0x62, 0x5f, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x49, 0x73, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x22, 0xab, 0x01, 0x0a,
	0x14, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a,
	0x39, 0x0a, 0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xab, 0x01, 0x0a, 0x14, 0x57,
	0x65, 0x69, 0x78, 0x69, 0x6e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x39, 0x0a,
	0x0b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xe9, 0x02, 0x0a, 0x10, 0x57, 0x65, 0x69,
	0x78, 0x69, 0x6e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a,
	0x09, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x75,
	0x74, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4e, 0x6f, 0x12, 0x25,
	0x0a, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x5f, 0x74, 0x72, 0x61,
	0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x12, 0x32, 0x0a, 0x15, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x13, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x22, 0xf0, 0x03, 0x0a, 0x0e, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x39, 0x0a, 0x0c, 0x61, 0x70, 0x70,
	0x5f, 0x70, 0x61, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x65, 0x69, 0x78, 0x69,
	0x6e, 0x50, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x61, 0x70, 0x70, 0x50, 0x61, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x69, 0x5f, 0x70, 0x61, 0x79,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x50, 0x61, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x0b, 0x6d, 0x69, 0x6e, 0x69, 0x50, 0x61, 0x79, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x42, 0x0a, 0x0e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x4d, 0x69, 0x63, 0x72, 0x6f,
	0x50, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x50, 0x61,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x0f, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f,
	0x70, 0x61, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e,
	0x50, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x50,
	0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x48, 0x0a, 0x10, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x48, 0x0a,
	0x10, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x32, 0xf2, 0x03, 0x0a, 0x0d, 0x57, 0x65, 0x69, 0x78,
	0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x41, 0x70, 0x70,
	0x50, 0x61, 0x79, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57,
	0x65, 0x69, 0x78, 0x69, 0x6e, 0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x65, 0x69, 0x78, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x07, 0x4d,
	0x69, 0x6e, 0x69, 0x50, 0x61, 0x79, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x65,
	0x69, 0x78, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42,
	0x0a, 0x08, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x50, 0x61, 0x79, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x50, 0x61, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x43, 0x0a, 0x09, 0x4e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x50, 0x61, 0x79, 0x12,
	0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x65, 0x69, 0x78, 0x69,
	0x6e, 0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0a, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57,
	0x65, 0x69, 0x78, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x46, 0x0a, 0x0a, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1c, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x06, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x65, 0x69,
	0x78, 0x69, 0x6e, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x65, 0x69, 0x78,
	0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b,
	0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_weixinService_proto_rawDescOnce sync.Once
	file_weixinService_proto_rawDescData = file_weixinService_proto_rawDesc
)

func file_weixinService_proto_rawDescGZIP() []byte {
	file_weixinService_proto_rawDescOnce.Do(func() {
		file_weixinService_proto_rawDescData = protoimpl.X.CompressGZIP(file_weixinService_proto_rawDescData)
	})
	return file_weixinService_proto_rawDescData
}

var file_weixinService_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_weixinService_proto_goTypes = []interface{}{
	(*WeixinRefundRequest)(nil),      // 0: services.WeixinRefundRequest
	(*WeixinPayRequest)(nil),         // 1: services.WeixinPayRequest
	(*WeixinOrderRequest)(nil),       // 2: services.WeixinOrderRequest
	(*WeixinPayerInfo)(nil),          // 3: services.WeixinPayerInfo
	(*WeixinSceneInfo)(nil),          // 4: services.WeixinSceneInfo
	(*WeixinSettleInfo)(nil),         // 5: services.WeixinSettleInfo
	(*WeixinPayData)(nil),            // 6: services.WeixinPayData
	(*WeixinMicroPayData)(nil),       // 7: services.WeixinMicroPayData
	(*WeixinQueryOrderData)(nil),     // 8: services.WeixinQueryOrderData
	(*WeixinCloseOrderData)(nil),     // 9: services.WeixinCloseOrderData
	(*WeixinRefundData)(nil),         // 10: services.WeixinRefundData
	(*WeixinResponse)(nil),           // 11: services.WeixinResponse
	nil,                              // 12: services.WeixinPayData.JsConfigEntry
	(*WeixinMicroPayDataResult)(nil), // 13: services.WeixinMicroPayData.result
	nil,                              // 14: services.WeixinQueryOrderData.ParamsEntry
	nil,                              // 15: services.WeixinCloseOrderData.ParamsEntry
}
var file_weixinService_proto_depIdxs = []int32{
	3,  // 0: services.WeixinPayRequest.payer_info:type_name -> services.WeixinPayerInfo
	4,  // 1: services.WeixinPayRequest.scene_info:type_name -> services.WeixinSceneInfo
	5,  // 2: services.WeixinPayRequest.settle_info:type_name -> services.WeixinSettleInfo
	12, // 3: services.WeixinPayData.jsConfig:type_name -> services.WeixinPayData.JsConfigEntry
	13, // 4: services.WeixinMicroPayData.resultInfo:type_name -> services.WeixinMicroPayData.result
	14, // 5: services.WeixinQueryOrderData.params:type_name -> services.WeixinQueryOrderData.ParamsEntry
	15, // 6: services.WeixinCloseOrderData.params:type_name -> services.WeixinCloseOrderData.ParamsEntry
	6,  // 7: services.WeixinResponse.app_pay_data:type_name -> services.WeixinPayData
	6,  // 8: services.WeixinResponse.mini_pay_data:type_name -> services.WeixinPayData
	7,  // 9: services.WeixinResponse.micro_pay_data:type_name -> services.WeixinMicroPayData
	6,  // 10: services.WeixinResponse.native_pay_data:type_name -> services.WeixinPayData
	10, // 11: services.WeixinResponse.refund_data:type_name -> services.WeixinRefundData
	8,  // 12: services.WeixinResponse.query_order_data:type_name -> services.WeixinQueryOrderData
	9,  // 13: services.WeixinResponse.close_order_data:type_name -> services.WeixinCloseOrderData
	1,  // 14: services.WeixinService.AppPay:input_type -> services.WeixinPayRequest
	1,  // 15: services.WeixinService.MiniPay:input_type -> services.WeixinPayRequest
	1,  // 16: services.WeixinService.MicroPay:input_type -> services.WeixinPayRequest
	1,  // 17: services.WeixinService.NativePay:input_type -> services.WeixinPayRequest
	2,  // 18: services.WeixinService.QueryOrder:input_type -> services.WeixinOrderRequest
	2,  // 19: services.WeixinService.CloseOrder:input_type -> services.WeixinOrderRequest
	0,  // 20: services.WeixinService.Refund:input_type -> services.WeixinRefundRequest
	11, // 21: services.WeixinService.AppPay:output_type -> services.WeixinResponse
	11, // 22: services.WeixinService.MiniPay:output_type -> services.WeixinResponse
	11, // 23: services.WeixinService.MicroPay:output_type -> services.WeixinResponse
	11, // 24: services.WeixinService.NativePay:output_type -> services.WeixinResponse
	11, // 25: services.WeixinService.QueryOrder:output_type -> services.WeixinResponse
	11, // 26: services.WeixinService.CloseOrder:output_type -> services.WeixinResponse
	11, // 27: services.WeixinService.Refund:output_type -> services.WeixinResponse
	21, // [21:28] is the sub-list for method output_type
	14, // [14:21] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_weixinService_proto_init() }
func file_weixinService_proto_init() {
	if File_weixinService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_weixinService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeixinRefundRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weixinService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeixinPayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weixinService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeixinOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weixinService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeixinPayerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weixinService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeixinSceneInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weixinService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeixinSettleInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weixinService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeixinPayData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weixinService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeixinMicroPayData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weixinService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeixinQueryOrderData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weixinService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeixinCloseOrderData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weixinService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeixinRefundData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weixinService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeixinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_weixinService_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WeixinMicroPayDataResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_weixinService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_weixinService_proto_goTypes,
		DependencyIndexes: file_weixinService_proto_depIdxs,
		MessageInfos:      file_weixinService_proto_msgTypes,
	}.Build()
	File_weixinService_proto = out.File
	file_weixinService_proto_rawDesc = nil
	file_weixinService_proto_goTypes = nil
	file_weixinService_proto_depIdxs = nil
}
