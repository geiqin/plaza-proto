// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v6.33.0
// source: payAccountService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PayAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int32                `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                     //ID
	AccountNo    string               `protobuf:"bytes,2,opt,name=account_no,json=accountNo,proto3" json:"account_no"`       //支付账号
	AccountName  string               `protobuf:"bytes,3,opt,name=account_name,json=accountName,proto3" json:"account_name"` //账号名称
	PayType      string               `protobuf:"bytes,4,opt,name=pay_type,json=payType,proto3" json:"pay_type"`             //账户类型
	IsProvider   string               `protobuf:"bytes,5,opt,name=is_provider,json=isProvider,proto3" json:"is_provider"`    //是否服务商
	Status       string               `protobuf:"bytes,9,opt,name=status,proto3" json:"status"`                              //启用状态
	CreatedAt    int64                `protobuf:"varint,10,opt,name=created_at,json=createdAt,proto3" json:"created_at"`     //创建时间
	UpdatedAt    int64                `protobuf:"varint,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`     //修改时间
	WeixinConfig *AccountWeixinConfig `protobuf:"bytes,12,opt,name=weixin_config,json=weixinConfig,proto3" json:"weixin_config"`
	AlipayConfig *AccountAlipayConfig `protobuf:"bytes,13,opt,name=alipay_config,json=alipayConfig,proto3" json:"alipay_config"`
}

func (x *PayAccount) Reset() {
	*x = PayAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payAccountService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayAccount) ProtoMessage() {}

func (x *PayAccount) ProtoReflect() protoreflect.Message {
	mi := &file_payAccountService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayAccount.ProtoReflect.Descriptor instead.
func (*PayAccount) Descriptor() ([]byte, []int) {
	return file_payAccountService_proto_rawDescGZIP(), []int{0}
}

func (x *PayAccount) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PayAccount) GetAccountNo() string {
	if x != nil {
		return x.AccountNo
	}
	return ""
}

func (x *PayAccount) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *PayAccount) GetPayType() string {
	if x != nil {
		return x.PayType
	}
	return ""
}

func (x *PayAccount) GetIsProvider() string {
	if x != nil {
		return x.IsProvider
	}
	return ""
}

func (x *PayAccount) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PayAccount) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PayAccount) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *PayAccount) GetWeixinConfig() *AccountWeixinConfig {
	if x != nil {
		return x.WeixinConfig
	}
	return nil
}

func (x *PayAccount) GetAlipayConfig() *AccountAlipayConfig {
	if x != nil {
		return x.AlipayConfig
	}
	return nil
}

// 支付账户微信配置
type AccountWeixinConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MchId             string `protobuf:"bytes,2,opt,name=mch_id,json=mchId,proto3" json:"mch_id"`
	SignType          string `protobuf:"bytes,3,opt,name=sign_type,json=signType,proto3" json:"sign_type"`
	Md5Key            string `protobuf:"bytes,4,opt,name=md5_key,json=md5Key,proto3" json:"md5_key"`
	CertSerialNo      string `protobuf:"bytes,5,opt,name=cert_serial_no,json=certSerialNo,proto3" json:"cert_serial_no"`
	PublicCert        string `protobuf:"bytes,6,opt,name=public_cert,json=publicCert,proto3" json:"public_cert"`
	V2PrivateKey      string `protobuf:"bytes,7,opt,name=v2_private_key,json=v2PrivateKey,proto3" json:"v2_private_key"`
	V2ApiKey          string `protobuf:"bytes,8,opt,name=v2_api_key,json=v2ApiKey,proto3" json:"v2_api_key"`
	V3ApiKey          string `protobuf:"bytes,9,opt,name=v3_api_key,json=v3ApiKey,proto3" json:"v3_api_key"`
	V3PrivateKey      string `protobuf:"bytes,10,opt,name=v3_private_key,json=v3PrivateKey,proto3" json:"v3_private_key"`
	ApiClientCertFile string `protobuf:"bytes,11,opt,name=api_client_cert_file,json=apiClientCertFile,proto3" json:"api_client_cert_file"`
	ApiClientKeyFile  string `protobuf:"bytes,12,opt,name=api_client_key_file,json=apiClientKeyFile,proto3" json:"api_client_key_file"`
	ApiClientP12File  string `protobuf:"bytes,13,opt,name=api_client_p12_file,json=apiClientP12File,proto3" json:"api_client_p12_file"`
}

func (x *AccountWeixinConfig) Reset() {
	*x = AccountWeixinConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payAccountService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountWeixinConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountWeixinConfig) ProtoMessage() {}

func (x *AccountWeixinConfig) ProtoReflect() protoreflect.Message {
	mi := &file_payAccountService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountWeixinConfig.ProtoReflect.Descriptor instead.
func (*AccountWeixinConfig) Descriptor() ([]byte, []int) {
	return file_payAccountService_proto_rawDescGZIP(), []int{1}
}

func (x *AccountWeixinConfig) GetMchId() string {
	if x != nil {
		return x.MchId
	}
	return ""
}

func (x *AccountWeixinConfig) GetSignType() string {
	if x != nil {
		return x.SignType
	}
	return ""
}

func (x *AccountWeixinConfig) GetMd5Key() string {
	if x != nil {
		return x.Md5Key
	}
	return ""
}

func (x *AccountWeixinConfig) GetCertSerialNo() string {
	if x != nil {
		return x.CertSerialNo
	}
	return ""
}

func (x *AccountWeixinConfig) GetPublicCert() string {
	if x != nil {
		return x.PublicCert
	}
	return ""
}

func (x *AccountWeixinConfig) GetV2PrivateKey() string {
	if x != nil {
		return x.V2PrivateKey
	}
	return ""
}

func (x *AccountWeixinConfig) GetV2ApiKey() string {
	if x != nil {
		return x.V2ApiKey
	}
	return ""
}

func (x *AccountWeixinConfig) GetV3ApiKey() string {
	if x != nil {
		return x.V3ApiKey
	}
	return ""
}

func (x *AccountWeixinConfig) GetV3PrivateKey() string {
	if x != nil {
		return x.V3PrivateKey
	}
	return ""
}

func (x *AccountWeixinConfig) GetApiClientCertFile() string {
	if x != nil {
		return x.ApiClientCertFile
	}
	return ""
}

func (x *AccountWeixinConfig) GetApiClientKeyFile() string {
	if x != nil {
		return x.ApiClientKeyFile
	}
	return ""
}

func (x *AccountWeixinConfig) GetApiClientP12File() string {
	if x != nil {
		return x.ApiClientP12File
	}
	return ""
}

// 支付账户支付宝配置
type AccountAlipayConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MchId        string `protobuf:"bytes,2,opt,name=mch_id,json=mchId,proto3" json:"mch_id"`
	SignType     string `protobuf:"bytes,3,opt,name=sign_type,json=signType,proto3" json:"sign_type"`
	Md5Key       string `protobuf:"bytes,4,opt,name=md5_key,json=md5Key,proto3" json:"md5_key"`
	CertSerialNo string `protobuf:"bytes,5,opt,name=cert_serial_no,json=certSerialNo,proto3" json:"cert_serial_no"`
	V2PrivateKey string `protobuf:"bytes,6,opt,name=v2_private_key,json=v2PrivateKey,proto3" json:"v2_private_key"`
	V2ApiKey     string `protobuf:"bytes,7,opt,name=v2_api_key,json=v2ApiKey,proto3" json:"v2_api_key"`
}

func (x *AccountAlipayConfig) Reset() {
	*x = AccountAlipayConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payAccountService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountAlipayConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountAlipayConfig) ProtoMessage() {}

func (x *AccountAlipayConfig) ProtoReflect() protoreflect.Message {
	mi := &file_payAccountService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountAlipayConfig.ProtoReflect.Descriptor instead.
func (*AccountAlipayConfig) Descriptor() ([]byte, []int) {
	return file_payAccountService_proto_rawDescGZIP(), []int{2}
}

func (x *AccountAlipayConfig) GetMchId() string {
	if x != nil {
		return x.MchId
	}
	return ""
}

func (x *AccountAlipayConfig) GetSignType() string {
	if x != nil {
		return x.SignType
	}
	return ""
}

func (x *AccountAlipayConfig) GetMd5Key() string {
	if x != nil {
		return x.Md5Key
	}
	return ""
}

func (x *AccountAlipayConfig) GetCertSerialNo() string {
	if x != nil {
		return x.CertSerialNo
	}
	return ""
}

func (x *AccountAlipayConfig) GetV2PrivateKey() string {
	if x != nil {
		return x.V2PrivateKey
	}
	return ""
}

func (x *AccountAlipayConfig) GetV2ApiKey() string {
	if x != nil {
		return x.V2ApiKey
	}
	return ""
}

type PayAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Top       int32    `protobuf:"varint,1,opt,name=top,proto3" json:"top"`
	Paged     int64    `protobuf:"varint,2,opt,name=paged,proto3" json:"paged"`
	PageSize  int64    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords  string   `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords"`
	Sort      []string `protobuf:"bytes,5,rep,name=sort,proto3" json:"sort"`
	DateRange []string `protobuf:"bytes,6,rep,name=date_range,json=dateRange,proto3" json:"date_range"`
	Ids       []int32  `protobuf:"varint,7,rep,packed,name=ids,proto3" json:"ids"`
	Id        int32    `protobuf:"varint,8,opt,name=id,proto3" json:"id"`
	// 以下为自定义参数
	AccountNo   string `protobuf:"bytes,11,opt,name=account_no,json=accountNo,proto3" json:"account_no"`       //支付账号
	AccountName string `protobuf:"bytes,12,opt,name=account_name,json=accountName,proto3" json:"account_name"` //账号名称
	PayType     string `protobuf:"bytes,13,opt,name=pay_type,json=payType,proto3" json:"pay_type"`             //账户类型
	IsProvider  string `protobuf:"bytes,14,opt,name=is_provider,json=isProvider,proto3" json:"is_provider"`    //是否服务商
	Status      string `protobuf:"bytes,15,opt,name=status,proto3" json:"status"`                              //启用状态
}

func (x *PayAccountRequest) Reset() {
	*x = PayAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payAccountService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayAccountRequest) ProtoMessage() {}

func (x *PayAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_payAccountService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayAccountRequest.ProtoReflect.Descriptor instead.
func (*PayAccountRequest) Descriptor() ([]byte, []int) {
	return file_payAccountService_proto_rawDescGZIP(), []int{3}
}

func (x *PayAccountRequest) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *PayAccountRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *PayAccountRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PayAccountRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *PayAccountRequest) GetSort() []string {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *PayAccountRequest) GetDateRange() []string {
	if x != nil {
		return x.DateRange
	}
	return nil
}

func (x *PayAccountRequest) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *PayAccountRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PayAccountRequest) GetAccountNo() string {
	if x != nil {
		return x.AccountNo
	}
	return ""
}

func (x *PayAccountRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *PayAccountRequest) GetPayType() string {
	if x != nil {
		return x.PayType
	}
	return ""
}

func (x *PayAccountRequest) GetIsProvider() string {
	if x != nil {
		return x.IsProvider
	}
	return ""
}

func (x *PayAccountRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type PayAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *PayAccount   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*PayAccount `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Msg    string        `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg"`
}

func (x *PayAccountResponse) Reset() {
	*x = PayAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_payAccountService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayAccountResponse) ProtoMessage() {}

func (x *PayAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_payAccountService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayAccountResponse.ProtoReflect.Descriptor instead.
func (*PayAccountResponse) Descriptor() ([]byte, []int) {
	return file_payAccountService_proto_rawDescGZIP(), []int{4}
}

func (x *PayAccountResponse) GetEntity() *PayAccount {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *PayAccountResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *PayAccountResponse) GetItems() []*PayAccount {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *PayAccountResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_payAccountService_proto protoreflect.FileDescriptor

var file_payAccountService_proto_rawDesc = []byte{
	0x0a, 0x17, 0x70, 0x61, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf8, 0x02, 0x0a, 0x0a, 0x50, 0x61, 0x79, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x42, 0x0a, 0x0d, 0x77, 0x65, 0x69,
	0x78, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x0c, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x42, 0x0a,
	0x0d, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x0c, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x22, 0xc0, 0x03, 0x0a, 0x13, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x65, 0x69,
	0x78, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x63, 0x68,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x6d, 0x64, 0x35, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6d, 0x64, 0x35, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x65, 0x72, 0x74, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x12, 0x1f, 0x0a, 0x0b,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x43, 0x65, 0x72, 0x74, 0x12, 0x24, 0x0a,
	0x0e, 0x76, 0x32, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x32, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x0a, 0x76, 0x32, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x32, 0x41, 0x70, 0x69, 0x4b, 0x65,
	0x79, 0x12, 0x1c, 0x0a, 0x0a, 0x76, 0x33, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x33, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12,
	0x24, 0x0a, 0x0e, 0x76, 0x33, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x33, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x14, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x61, 0x70, 0x69, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65,
	0x72, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x13, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x70, 0x69, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4b, 0x65,
	0x79, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x13, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x70, 0x31, 0x32, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x61, 0x70, 0x69, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x31, 0x32,
	0x46, 0x69, 0x6c, 0x65, 0x22, 0xcc, 0x01, 0x0a, 0x13, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x15, 0x0a, 0x06,
	0x6d, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x63,
	0x68, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x6d, 0x64, 0x35, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x64, 0x35, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x65, 0x72,
	0x74, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x65, 0x72, 0x74, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x12,
	0x24, 0x0a, 0x0e, 0x76, 0x32, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x32, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x0a, 0x76, 0x32, 0x5f, 0x61, 0x70, 0x69, 0x5f,
	0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x32, 0x41, 0x70, 0x69,
	0x4b, 0x65, 0x79, 0x22, 0xdf, 0x02, 0x0a, 0x11, 0x50, 0x61, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa5, 0x01, 0x0a, 0x12, 0x50, 0x61, 0x79, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x06,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61,
	0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12,
	0x2a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x32, 0x9c, 0x03,
	0x0a, 0x11, 0x50, 0x61, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x14, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50,
	0x61, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x14, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50,
	0x61, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x14, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50,
	0x61, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x14, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x43, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x50, 0x61, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12,
	0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b,
	0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_payAccountService_proto_rawDescOnce sync.Once
	file_payAccountService_proto_rawDescData = file_payAccountService_proto_rawDesc
)

func file_payAccountService_proto_rawDescGZIP() []byte {
	file_payAccountService_proto_rawDescOnce.Do(func() {
		file_payAccountService_proto_rawDescData = protoimpl.X.CompressGZIP(file_payAccountService_proto_rawDescData)
	})
	return file_payAccountService_proto_rawDescData
}

var file_payAccountService_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_payAccountService_proto_goTypes = []interface{}{
	(*PayAccount)(nil),          // 0: services.PayAccount
	(*AccountWeixinConfig)(nil), // 1: services.AccountWeixinConfig
	(*AccountAlipayConfig)(nil), // 2: services.AccountAlipayConfig
	(*PayAccountRequest)(nil),   // 3: services.PayAccountRequest
	(*PayAccountResponse)(nil),  // 4: services.PayAccountResponse
	(*common.Pager)(nil),        // 5: common.Pager
}
var file_payAccountService_proto_depIdxs = []int32{
	1,  // 0: services.PayAccount.weixin_config:type_name -> services.AccountWeixinConfig
	2,  // 1: services.PayAccount.alipay_config:type_name -> services.AccountAlipayConfig
	0,  // 2: services.PayAccountResponse.entity:type_name -> services.PayAccount
	5,  // 3: services.PayAccountResponse.pager:type_name -> common.Pager
	0,  // 4: services.PayAccountResponse.items:type_name -> services.PayAccount
	0,  // 5: services.PayAccountService.Create:input_type -> services.PayAccount
	0,  // 6: services.PayAccountService.Update:input_type -> services.PayAccount
	0,  // 7: services.PayAccountService.Delete:input_type -> services.PayAccount
	0,  // 8: services.PayAccountService.Get:input_type -> services.PayAccount
	3,  // 9: services.PayAccountService.List:input_type -> services.PayAccountRequest
	3,  // 10: services.PayAccountService.Search:input_type -> services.PayAccountRequest
	4,  // 11: services.PayAccountService.Create:output_type -> services.PayAccountResponse
	4,  // 12: services.PayAccountService.Update:output_type -> services.PayAccountResponse
	4,  // 13: services.PayAccountService.Delete:output_type -> services.PayAccountResponse
	4,  // 14: services.PayAccountService.Get:output_type -> services.PayAccountResponse
	4,  // 15: services.PayAccountService.List:output_type -> services.PayAccountResponse
	4,  // 16: services.PayAccountService.Search:output_type -> services.PayAccountResponse
	11, // [11:17] is the sub-list for method output_type
	5,  // [5:11] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_payAccountService_proto_init() }
func file_payAccountService_proto_init() {
	if File_payAccountService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_payAccountService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payAccountService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountWeixinConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payAccountService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountAlipayConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payAccountService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_payAccountService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_payAccountService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_payAccountService_proto_goTypes,
		DependencyIndexes: file_payAccountService_proto_depIdxs,
		MessageInfos:      file_payAccountService_proto_msgTypes,
	}.Build()
	File_payAccountService_proto = out.File
	file_payAccountService_proto_rawDesc = nil
	file_payAccountService_proto_goTypes = nil
	file_payAccountService_proto_depIdxs = nil
}
