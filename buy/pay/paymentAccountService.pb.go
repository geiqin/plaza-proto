// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: paymentAccountService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PaymentAccount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32          `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                     //ID
	AccountNo   string         `protobuf:"bytes,2,opt,name=account_no,json=accountNo,proto3" json:"account_no"`       //支付账号
	AccountName string         `protobuf:"bytes,3,opt,name=account_name,json=accountName,proto3" json:"account_name"` //账号名称
	PaymentType string         `protobuf:"bytes,4,opt,name=payment_type,json=paymentType,proto3" json:"payment_type"` //账户类型
	IsProvider  string         `protobuf:"bytes,5,opt,name=is_provider,json=isProvider,proto3" json:"is_provider"`    //是否服务商
	Config      *AccountConfig `protobuf:"bytes,6,opt,name=config,proto3" json:"config"`                              //参数配置
	PrivateCert string         `protobuf:"bytes,7,opt,name=private_cert,json=privateCert,proto3" json:"private_cert"` //私有证书信息
	PublicCert  string         `protobuf:"bytes,8,opt,name=public_cert,json=publicCert,proto3" json:"public_cert"`    //公共证书信息
	Status      string         `protobuf:"bytes,9,opt,name=status,proto3" json:"status"`                              //启用状态
	CreatedAt   string         `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at"`      //创建时间
	UpdatedAt   string         `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`      //修改时间
}

func (x *PaymentAccount) Reset() {
	*x = PaymentAccount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paymentAccountService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentAccount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentAccount) ProtoMessage() {}

func (x *PaymentAccount) ProtoReflect() protoreflect.Message {
	mi := &file_paymentAccountService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentAccount.ProtoReflect.Descriptor instead.
func (*PaymentAccount) Descriptor() ([]byte, []int) {
	return file_paymentAccountService_proto_rawDescGZIP(), []int{0}
}

func (x *PaymentAccount) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PaymentAccount) GetAccountNo() string {
	if x != nil {
		return x.AccountNo
	}
	return ""
}

func (x *PaymentAccount) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *PaymentAccount) GetPaymentType() string {
	if x != nil {
		return x.PaymentType
	}
	return ""
}

func (x *PaymentAccount) GetIsProvider() string {
	if x != nil {
		return x.IsProvider
	}
	return ""
}

func (x *PaymentAccount) GetConfig() *AccountConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *PaymentAccount) GetPrivateCert() string {
	if x != nil {
		return x.PrivateCert
	}
	return ""
}

func (x *PaymentAccount) GetPublicCert() string {
	if x != nil {
		return x.PublicCert
	}
	return ""
}

func (x *PaymentAccount) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PaymentAccount) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *PaymentAccount) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// 支付账户微信配置
type AccountConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Weixin *AccountConfigWeixin `protobuf:"bytes,1,opt,name=weixin,proto3" json:"weixin"`
	Alipay *AccountConfigAlipay `protobuf:"bytes,2,opt,name=alipay,proto3" json:"alipay"`
}

func (x *AccountConfig) Reset() {
	*x = AccountConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paymentAccountService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountConfig) ProtoMessage() {}

func (x *AccountConfig) ProtoReflect() protoreflect.Message {
	mi := &file_paymentAccountService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountConfig.ProtoReflect.Descriptor instead.
func (*AccountConfig) Descriptor() ([]byte, []int) {
	return file_paymentAccountService_proto_rawDescGZIP(), []int{1}
}

func (x *AccountConfig) GetWeixin() *AccountConfigWeixin {
	if x != nil {
		return x.Weixin
	}
	return nil
}

func (x *AccountConfig) GetAlipay() *AccountConfigAlipay {
	if x != nil {
		return x.Alipay
	}
	return nil
}

// 支付账户微信配置
type AccountConfigWeixin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MchId             string `protobuf:"bytes,2,opt,name=mch_id,json=mchId,proto3" json:"mch_id"`
	SignType          string `protobuf:"bytes,3,opt,name=sign_type,json=signType,proto3" json:"sign_type"`
	Md5Key            string `protobuf:"bytes,4,opt,name=md5_key,json=md5Key,proto3" json:"md5_key"`
	CertSerialNo      string `protobuf:"bytes,5,opt,name=cert_serial_no,json=certSerialNo,proto3" json:"cert_serial_no"`
	PublicCert        string `protobuf:"bytes,6,opt,name=public_cert,json=publicCert,proto3" json:"public_cert"`
	V2PrivateKey      string `protobuf:"bytes,7,opt,name=v2_private_key,json=v2PrivateKey,proto3" json:"v2_private_key"`
	V2ApiKey          string `protobuf:"bytes,8,opt,name=v2_api_key,json=v2ApiKey,proto3" json:"v2_api_key"`
	V3ApiKey          string `protobuf:"bytes,9,opt,name=v3_api_key,json=v3ApiKey,proto3" json:"v3_api_key"`
	V3PrivateKey      string `protobuf:"bytes,10,opt,name=v3_private_key,json=v3PrivateKey,proto3" json:"v3_private_key"`
	ApiClientCertFile string `protobuf:"bytes,11,opt,name=api_client_cert_file,json=apiClientCertFile,proto3" json:"api_client_cert_file"`
	ApiClientKeyFile  string `protobuf:"bytes,12,opt,name=api_client_key_file,json=apiClientKeyFile,proto3" json:"api_client_key_file"`
	ApiClientP12File  string `protobuf:"bytes,13,opt,name=api_client_p12_file,json=apiClientP12File,proto3" json:"api_client_p12_file"`
}

func (x *AccountConfigWeixin) Reset() {
	*x = AccountConfigWeixin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paymentAccountService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountConfigWeixin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountConfigWeixin) ProtoMessage() {}

func (x *AccountConfigWeixin) ProtoReflect() protoreflect.Message {
	mi := &file_paymentAccountService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountConfigWeixin.ProtoReflect.Descriptor instead.
func (*AccountConfigWeixin) Descriptor() ([]byte, []int) {
	return file_paymentAccountService_proto_rawDescGZIP(), []int{2}
}

func (x *AccountConfigWeixin) GetMchId() string {
	if x != nil {
		return x.MchId
	}
	return ""
}

func (x *AccountConfigWeixin) GetSignType() string {
	if x != nil {
		return x.SignType
	}
	return ""
}

func (x *AccountConfigWeixin) GetMd5Key() string {
	if x != nil {
		return x.Md5Key
	}
	return ""
}

func (x *AccountConfigWeixin) GetCertSerialNo() string {
	if x != nil {
		return x.CertSerialNo
	}
	return ""
}

func (x *AccountConfigWeixin) GetPublicCert() string {
	if x != nil {
		return x.PublicCert
	}
	return ""
}

func (x *AccountConfigWeixin) GetV2PrivateKey() string {
	if x != nil {
		return x.V2PrivateKey
	}
	return ""
}

func (x *AccountConfigWeixin) GetV2ApiKey() string {
	if x != nil {
		return x.V2ApiKey
	}
	return ""
}

func (x *AccountConfigWeixin) GetV3ApiKey() string {
	if x != nil {
		return x.V3ApiKey
	}
	return ""
}

func (x *AccountConfigWeixin) GetV3PrivateKey() string {
	if x != nil {
		return x.V3PrivateKey
	}
	return ""
}

func (x *AccountConfigWeixin) GetApiClientCertFile() string {
	if x != nil {
		return x.ApiClientCertFile
	}
	return ""
}

func (x *AccountConfigWeixin) GetApiClientKeyFile() string {
	if x != nil {
		return x.ApiClientKeyFile
	}
	return ""
}

func (x *AccountConfigWeixin) GetApiClientP12File() string {
	if x != nil {
		return x.ApiClientP12File
	}
	return ""
}

// 支付账户支付宝配置
type AccountConfigAlipay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MchId        string `protobuf:"bytes,2,opt,name=mch_id,json=mchId,proto3" json:"mch_id"`
	SignType     string `protobuf:"bytes,3,opt,name=sign_type,json=signType,proto3" json:"sign_type"`
	Md5Key       string `protobuf:"bytes,4,opt,name=md5_key,json=md5Key,proto3" json:"md5_key"`
	CertSerialNo string `protobuf:"bytes,5,opt,name=cert_serial_no,json=certSerialNo,proto3" json:"cert_serial_no"`
	V2PrivateKey string `protobuf:"bytes,6,opt,name=v2_private_key,json=v2PrivateKey,proto3" json:"v2_private_key"`
	V2ApiKey     string `protobuf:"bytes,7,opt,name=v2_api_key,json=v2ApiKey,proto3" json:"v2_api_key"`
}

func (x *AccountConfigAlipay) Reset() {
	*x = AccountConfigAlipay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paymentAccountService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccountConfigAlipay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccountConfigAlipay) ProtoMessage() {}

func (x *AccountConfigAlipay) ProtoReflect() protoreflect.Message {
	mi := &file_paymentAccountService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccountConfigAlipay.ProtoReflect.Descriptor instead.
func (*AccountConfigAlipay) Descriptor() ([]byte, []int) {
	return file_paymentAccountService_proto_rawDescGZIP(), []int{3}
}

func (x *AccountConfigAlipay) GetMchId() string {
	if x != nil {
		return x.MchId
	}
	return ""
}

func (x *AccountConfigAlipay) GetSignType() string {
	if x != nil {
		return x.SignType
	}
	return ""
}

func (x *AccountConfigAlipay) GetMd5Key() string {
	if x != nil {
		return x.Md5Key
	}
	return ""
}

func (x *AccountConfigAlipay) GetCertSerialNo() string {
	if x != nil {
		return x.CertSerialNo
	}
	return ""
}

func (x *AccountConfigAlipay) GetV2PrivateKey() string {
	if x != nil {
		return x.V2PrivateKey
	}
	return ""
}

func (x *AccountConfigAlipay) GetV2ApiKey() string {
	if x != nil {
		return x.V2ApiKey
	}
	return ""
}

type PaymentAccountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Top       int32    `protobuf:"varint,1,opt,name=top,proto3" json:"top"`
	Paged     int64    `protobuf:"varint,2,opt,name=paged,proto3" json:"paged"`
	PageSize  int64    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords  string   `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords"`
	Sort      []string `protobuf:"bytes,5,rep,name=sort,proto3" json:"sort"`
	DateRange []string `protobuf:"bytes,6,rep,name=date_range,json=dateRange,proto3" json:"date_range"`
	Ids       []int32  `protobuf:"varint,7,rep,packed,name=ids,proto3" json:"ids"`
	Id        int32    `protobuf:"varint,8,opt,name=id,proto3" json:"id"`
	//以下为自定义参数
	AccountNo   string `protobuf:"bytes,11,opt,name=account_no,json=accountNo,proto3" json:"account_no"`       //支付账号
	AccountName string `protobuf:"bytes,12,opt,name=account_name,json=accountName,proto3" json:"account_name"` //账号名称
	PaymentType string `protobuf:"bytes,13,opt,name=payment_type,json=paymentType,proto3" json:"payment_type"` //账户类型
	IsProvider  string `protobuf:"bytes,14,opt,name=is_provider,json=isProvider,proto3" json:"is_provider"`    //是否服务商
	Status      string `protobuf:"bytes,15,opt,name=status,proto3" json:"status"`                              //启用状态
}

func (x *PaymentAccountRequest) Reset() {
	*x = PaymentAccountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paymentAccountService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentAccountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentAccountRequest) ProtoMessage() {}

func (x *PaymentAccountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_paymentAccountService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentAccountRequest.ProtoReflect.Descriptor instead.
func (*PaymentAccountRequest) Descriptor() ([]byte, []int) {
	return file_paymentAccountService_proto_rawDescGZIP(), []int{4}
}

func (x *PaymentAccountRequest) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *PaymentAccountRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *PaymentAccountRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PaymentAccountRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *PaymentAccountRequest) GetSort() []string {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *PaymentAccountRequest) GetDateRange() []string {
	if x != nil {
		return x.DateRange
	}
	return nil
}

func (x *PaymentAccountRequest) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *PaymentAccountRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PaymentAccountRequest) GetAccountNo() string {
	if x != nil {
		return x.AccountNo
	}
	return ""
}

func (x *PaymentAccountRequest) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *PaymentAccountRequest) GetPaymentType() string {
	if x != nil {
		return x.PaymentType
	}
	return ""
}

func (x *PaymentAccountRequest) GetIsProvider() string {
	if x != nil {
		return x.IsProvider
	}
	return ""
}

func (x *PaymentAccountRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type PaymentAccountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *PaymentAccount   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager     `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*PaymentAccount `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Info   string            `protobuf:"bytes,4,opt,name=info,proto3" json:"info"`
}

func (x *PaymentAccountResponse) Reset() {
	*x = PaymentAccountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_paymentAccountService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentAccountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentAccountResponse) ProtoMessage() {}

func (x *PaymentAccountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_paymentAccountService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentAccountResponse.ProtoReflect.Descriptor instead.
func (*PaymentAccountResponse) Descriptor() ([]byte, []int) {
	return file_paymentAccountService_proto_rawDescGZIP(), []int{5}
}

func (x *PaymentAccountResponse) GetEntity() *PaymentAccount {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *PaymentAccountResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *PaymentAccountResponse) GetItems() []*PaymentAccount {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *PaymentAccountResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

var File_paymentAccountService_proto protoreflect.FileDescriptor

var file_paymentAccountService_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf1, 0x02, 0x0a, 0x0e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x21, 0x0a, 0x0c,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65,
	0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x06, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f,
	0x63, 0x65, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x43, 0x65, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x43, 0x65, 0x72, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x7d,
	0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x35, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x57, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x52, 0x06,
	0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x12, 0x35, 0x0a, 0x06, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41,
	0x6c, 0x69, 0x70, 0x61, 0x79, 0x52, 0x06, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x22, 0xc0, 0x03,
	0x0a, 0x13, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x57,
	0x65, 0x69, 0x78, 0x69, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x63, 0x68, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x64, 0x35,
	0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x64, 0x35, 0x4b,
	0x65, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x69, 0x61,
	0x6c, 0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x65, 0x72, 0x74,
	0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x63, 0x65, 0x72, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x43, 0x65, 0x72, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x76, 0x32, 0x5f,
	0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x76, 0x32, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12,
	0x1c, 0x0a, 0x0a, 0x76, 0x32, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x32, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x1c, 0x0a,
	0x0a, 0x76, 0x33, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x76, 0x33, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x76,
	0x33, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x33, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x12, 0x2f, 0x0a, 0x14, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x63, 0x65, 0x72, 0x74, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x61, 0x70, 0x69, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x12, 0x2d, 0x0a, 0x13, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x6b, 0x65, 0x79, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x61, 0x70, 0x69, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4b, 0x65, 0x79, 0x46, 0x69, 0x6c,
	0x65, 0x12, 0x2d, 0x0a, 0x13, 0x61, 0x70, 0x69, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x70, 0x31, 0x32, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10,
	0x61, 0x70, 0x69, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x31, 0x32, 0x46, 0x69, 0x6c, 0x65,
	0x22, 0xcc, 0x01, 0x0a, 0x13, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x63, 0x68, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x63, 0x68, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x6d, 0x64, 0x35, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x64, 0x35, 0x4b, 0x65, 0x79, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x65, 0x72, 0x74, 0x5f, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x65, 0x72, 0x74, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x6f, 0x12, 0x24, 0x0a, 0x0e, 0x76,
	0x32, 0x5f, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x32, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65,
	0x79, 0x12, 0x1c, 0x0a, 0x0a, 0x76, 0x32, 0x5f, 0x61, 0x70, 0x69, 0x5f, 0x6b, 0x65, 0x79, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x32, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x22,
	0xeb, 0x02, 0x0a, 0x15, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f,
	0x72, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x21,
	0x0a, 0x0c, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x64, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x50, 0x72, 0x6f,
	0x76, 0x69, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xb3, 0x01,
	0x0a, 0x16, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61,
	0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12,
	0x2e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x32, 0xd0, 0x03, 0x0a, 0x15, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x46, 0x0a,
	0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a,
	0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x18, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x04, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_paymentAccountService_proto_rawDescOnce sync.Once
	file_paymentAccountService_proto_rawDescData = file_paymentAccountService_proto_rawDesc
)

func file_paymentAccountService_proto_rawDescGZIP() []byte {
	file_paymentAccountService_proto_rawDescOnce.Do(func() {
		file_paymentAccountService_proto_rawDescData = protoimpl.X.CompressGZIP(file_paymentAccountService_proto_rawDescData)
	})
	return file_paymentAccountService_proto_rawDescData
}

var file_paymentAccountService_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_paymentAccountService_proto_goTypes = []interface{}{
	(*PaymentAccount)(nil),         // 0: services.PaymentAccount
	(*AccountConfig)(nil),          // 1: services.AccountConfig
	(*AccountConfigWeixin)(nil),    // 2: services.AccountConfigWeixin
	(*AccountConfigAlipay)(nil),    // 3: services.AccountConfigAlipay
	(*PaymentAccountRequest)(nil),  // 4: services.PaymentAccountRequest
	(*PaymentAccountResponse)(nil), // 5: services.PaymentAccountResponse
	(*common.Pager)(nil),           // 6: common.Pager
}
var file_paymentAccountService_proto_depIdxs = []int32{
	1,  // 0: services.PaymentAccount.config:type_name -> services.AccountConfig
	2,  // 1: services.AccountConfig.weixin:type_name -> services.AccountConfigWeixin
	3,  // 2: services.AccountConfig.alipay:type_name -> services.AccountConfigAlipay
	0,  // 3: services.PaymentAccountResponse.entity:type_name -> services.PaymentAccount
	6,  // 4: services.PaymentAccountResponse.pager:type_name -> common.Pager
	0,  // 5: services.PaymentAccountResponse.items:type_name -> services.PaymentAccount
	0,  // 6: services.PaymentAccountService.Create:input_type -> services.PaymentAccount
	0,  // 7: services.PaymentAccountService.Update:input_type -> services.PaymentAccount
	0,  // 8: services.PaymentAccountService.Delete:input_type -> services.PaymentAccount
	0,  // 9: services.PaymentAccountService.Get:input_type -> services.PaymentAccount
	4,  // 10: services.PaymentAccountService.List:input_type -> services.PaymentAccountRequest
	4,  // 11: services.PaymentAccountService.Search:input_type -> services.PaymentAccountRequest
	5,  // 12: services.PaymentAccountService.Create:output_type -> services.PaymentAccountResponse
	5,  // 13: services.PaymentAccountService.Update:output_type -> services.PaymentAccountResponse
	5,  // 14: services.PaymentAccountService.Delete:output_type -> services.PaymentAccountResponse
	5,  // 15: services.PaymentAccountService.Get:output_type -> services.PaymentAccountResponse
	5,  // 16: services.PaymentAccountService.List:output_type -> services.PaymentAccountResponse
	5,  // 17: services.PaymentAccountService.Search:output_type -> services.PaymentAccountResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_paymentAccountService_proto_init() }
func file_paymentAccountService_proto_init() {
	if File_paymentAccountService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_paymentAccountService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentAccount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paymentAccountService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paymentAccountService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountConfigWeixin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paymentAccountService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccountConfigAlipay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paymentAccountService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentAccountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_paymentAccountService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentAccountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_paymentAccountService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_paymentAccountService_proto_goTypes,
		DependencyIndexes: file_paymentAccountService_proto_depIdxs,
		MessageInfos:      file_paymentAccountService_proto_msgTypes,
	}.Build()
	File_paymentAccountService_proto = out.File
	file_paymentAccountService_proto_rawDesc = nil
	file_paymentAccountService_proto_goTypes = nil
	file_paymentAccountService_proto_depIdxs = nil
}
