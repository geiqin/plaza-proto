// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: orderAddressService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrderAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                           //ID
	OrderId      int64   `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`                  //区域ID
	SourceType   string  `protobuf:"bytes,3,opt,name=source_type,json=sourceType,proto3" json:"source_type"`          //来源类型：1-客户地址，2-自提点地址
	SourceAddrId int64   `protobuf:"varint,4,opt,name=source_addr_id,json=sourceAddrId,proto3" json:"source_addr_id"` //来源地址ID
	Name         string  `protobuf:"bytes,6,opt,name=name,proto3" json:"name"`                                        //姓名
	Alias        string  `protobuf:"bytes,7,opt,name=alias,proto3" json:"alias"`                                      //别名
	Tel          string  `protobuf:"bytes,8,opt,name=tel,proto3" json:"tel"`                                          //电话
	ProvinceId   int64   `protobuf:"varint,9,opt,name=province_id,json=provinceId,proto3" json:"province_id"`         //所在省ID
	CityId       int64   `protobuf:"varint,10,opt,name=city_id,json=cityId,proto3" json:"city_id"`                    //所在市ID
	CountyId     int64   `protobuf:"varint,11,opt,name=county_id,json=countyId,proto3" json:"county_id"`              //所在县/区ID
	ProvinceName string  `protobuf:"bytes,12,opt,name=province_name,json=provinceName,proto3" json:"province_name"`   //收件人-省-名称
	CityName     string  `protobuf:"bytes,13,opt,name=city_name,json=cityName,proto3" json:"city_name"`               //收件人-市-名称
	CountyName   string  `protobuf:"bytes,14,opt,name=county_name,json=countyName,proto3" json:"county_name"`         //收件人-县/区-名称
	Address      string  `protobuf:"bytes,15,opt,name=address,proto3" json:"address"`                                 //地址
	Lng          float32 `protobuf:"fixed32,16,opt,name=lng,proto3" json:"lng"`                                       //经度
	Lat          float32 `protobuf:"fixed32,17,opt,name=lat,proto3" json:"lat"`                                       //纬度
	IdcardName   string  `protobuf:"bytes,18,opt,name=idcard_name,json=idcardName,proto3" json:"idcard_name"`         //身份证姓名
	IdcardNumber string  `protobuf:"bytes,19,opt,name=idcard_number,json=idcardNumber,proto3" json:"idcard_number"`   //身份证号码
	IdcardFront  string  `protobuf:"bytes,20,opt,name=idcard_front,json=idcardFront,proto3" json:"idcard_front"`      //身份证人像面图片
	IdcardBack   string  `protobuf:"bytes,21,opt,name=idcard_back,json=idcardBack,proto3" json:"idcard_back"`         //身份证国微面图片
	StreetId     int64   `protobuf:"varint,22,opt,name=street_id,json=streetId,proto3" json:"street_id"`              //街道ID
	StreetName   string  `protobuf:"bytes,23,opt,name=street_name,json=streetName,proto3" json:"street_name"`         //街道名称
	CreatedAt    string  `protobuf:"bytes,24,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt    string  `protobuf:"bytes,25,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
}

func (x *OrderAddress) Reset() {
	*x = OrderAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderAddressService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderAddress) ProtoMessage() {}

func (x *OrderAddress) ProtoReflect() protoreflect.Message {
	mi := &file_orderAddressService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderAddress.ProtoReflect.Descriptor instead.
func (*OrderAddress) Descriptor() ([]byte, []int) {
	return file_orderAddressService_proto_rawDescGZIP(), []int{0}
}

func (x *OrderAddress) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderAddress) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderAddress) GetSourceType() string {
	if x != nil {
		return x.SourceType
	}
	return ""
}

func (x *OrderAddress) GetSourceAddrId() int64 {
	if x != nil {
		return x.SourceAddrId
	}
	return 0
}

func (x *OrderAddress) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrderAddress) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *OrderAddress) GetTel() string {
	if x != nil {
		return x.Tel
	}
	return ""
}

func (x *OrderAddress) GetProvinceId() int64 {
	if x != nil {
		return x.ProvinceId
	}
	return 0
}

func (x *OrderAddress) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *OrderAddress) GetCountyId() int64 {
	if x != nil {
		return x.CountyId
	}
	return 0
}

func (x *OrderAddress) GetProvinceName() string {
	if x != nil {
		return x.ProvinceName
	}
	return ""
}

func (x *OrderAddress) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

func (x *OrderAddress) GetCountyName() string {
	if x != nil {
		return x.CountyName
	}
	return ""
}

func (x *OrderAddress) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *OrderAddress) GetLng() float32 {
	if x != nil {
		return x.Lng
	}
	return 0
}

func (x *OrderAddress) GetLat() float32 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *OrderAddress) GetIdcardName() string {
	if x != nil {
		return x.IdcardName
	}
	return ""
}

func (x *OrderAddress) GetIdcardNumber() string {
	if x != nil {
		return x.IdcardNumber
	}
	return ""
}

func (x *OrderAddress) GetIdcardFront() string {
	if x != nil {
		return x.IdcardFront
	}
	return ""
}

func (x *OrderAddress) GetIdcardBack() string {
	if x != nil {
		return x.IdcardBack
	}
	return ""
}

func (x *OrderAddress) GetStreetId() int64 {
	if x != nil {
		return x.StreetId
	}
	return 0
}

func (x *OrderAddress) GetStreetName() string {
	if x != nil {
		return x.StreetName
	}
	return ""
}

func (x *OrderAddress) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *OrderAddress) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type OrderAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged    int64  `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords string `protobuf:"bytes,3,opt,name=keywords,proto3" json:"keywords"`
	//----------
	Id         int64   `protobuf:"varint,4,opt,name=id,proto3" json:"id"`
	OrderNo    string  `protobuf:"bytes,5,opt,name=order_no,json=orderNo,proto3" json:"order_no"`
	SourceType string  `protobuf:"bytes,6,opt,name=source_type,json=sourceType,proto3" json:"source_type"`
	StartDate  string  `protobuf:"bytes,7,opt,name=start_date,json=startDate,proto3" json:"start_date"`
	EndDate    string  `protobuf:"bytes,8,opt,name=end_date,json=endDate,proto3" json:"end_date"`
	Ids        []int64 `protobuf:"varint,9,rep,packed,name=ids,proto3" json:"ids"`
}

func (x *OrderAddressRequest) Reset() {
	*x = OrderAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderAddressService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderAddressRequest) ProtoMessage() {}

func (x *OrderAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orderAddressService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderAddressRequest.ProtoReflect.Descriptor instead.
func (*OrderAddressRequest) Descriptor() ([]byte, []int) {
	return file_orderAddressService_proto_rawDescGZIP(), []int{1}
}

func (x *OrderAddressRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *OrderAddressRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *OrderAddressRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *OrderAddressRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderAddressRequest) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *OrderAddressRequest) GetSourceType() string {
	if x != nil {
		return x.SourceType
	}
	return ""
}

func (x *OrderAddressRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *OrderAddressRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *OrderAddressRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type OrderAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *OrderAddress   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager   `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*OrderAddress `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Msg    string          `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg"`
}

func (x *OrderAddressResponse) Reset() {
	*x = OrderAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderAddressService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderAddressResponse) ProtoMessage() {}

func (x *OrderAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orderAddressService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderAddressResponse.ProtoReflect.Descriptor instead.
func (*OrderAddressResponse) Descriptor() ([]byte, []int) {
	return file_orderAddressService_proto_rawDescGZIP(), []int{2}
}

func (x *OrderAddressResponse) GetEntity() *OrderAddress {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *OrderAddressResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *OrderAddressResponse) GetItems() []*OrderAddress {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *OrderAddressResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_orderAddressService_proto protoreflect.FileDescriptor

var file_orderAddressService_proto_rawDesc = []byte{
	0x0a, 0x19, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xba, 0x05, 0x0a, 0x0c, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x65, 0x6c, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x74, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79,
	0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6c,
	0x6e, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x12, 0x10, 0x0a,
	0x03, 0x6c, 0x61, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x63, 0x61, 0x72, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x69, 0x64, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x64, 0x63, 0x61, 0x72, 0x64, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x64, 0x63, 0x61, 0x72, 0x64, 0x5f,
	0x66, 0x72, 0x6f, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x64, 0x63,
	0x61, 0x72, 0x64, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x64, 0x63, 0x61,
	0x72, 0x64, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69,
	0x64, 0x63, 0x61, 0x72, 0x64, 0x42, 0x61, 0x63, 0x6b, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72,
	0x65, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x74,
	0x72, 0x65, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x72,
	0x65, 0x65, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xfc, 0x01, 0x0a, 0x13, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61,
	0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72,
	0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x22, 0xab, 0x01, 0x0a, 0x14, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a,
	0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x32, 0xed, 0x02, 0x0a, 0x13, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x1e, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42,
	0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x42, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x16, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_orderAddressService_proto_rawDescOnce sync.Once
	file_orderAddressService_proto_rawDescData = file_orderAddressService_proto_rawDesc
)

func file_orderAddressService_proto_rawDescGZIP() []byte {
	file_orderAddressService_proto_rawDescOnce.Do(func() {
		file_orderAddressService_proto_rawDescData = protoimpl.X.CompressGZIP(file_orderAddressService_proto_rawDescData)
	})
	return file_orderAddressService_proto_rawDescData
}

var file_orderAddressService_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_orderAddressService_proto_goTypes = []interface{}{
	(*OrderAddress)(nil),         // 0: services.OrderAddress
	(*OrderAddressRequest)(nil),  // 1: services.OrderAddressRequest
	(*OrderAddressResponse)(nil), // 2: services.OrderAddressResponse
	(*common.Pager)(nil),         // 3: common.Pager
}
var file_orderAddressService_proto_depIdxs = []int32{
	0, // 0: services.OrderAddressResponse.entity:type_name -> services.OrderAddress
	3, // 1: services.OrderAddressResponse.pager:type_name -> common.Pager
	0, // 2: services.OrderAddressResponse.items:type_name -> services.OrderAddress
	0, // 3: services.OrderAddressService.Create:input_type -> services.OrderAddress
	0, // 4: services.OrderAddressService.Update:input_type -> services.OrderAddress
	0, // 5: services.OrderAddressService.Delete:input_type -> services.OrderAddress
	0, // 6: services.OrderAddressService.Get:input_type -> services.OrderAddress
	1, // 7: services.OrderAddressService.Search:input_type -> services.OrderAddressRequest
	2, // 8: services.OrderAddressService.Create:output_type -> services.OrderAddressResponse
	2, // 9: services.OrderAddressService.Update:output_type -> services.OrderAddressResponse
	2, // 10: services.OrderAddressService.Delete:output_type -> services.OrderAddressResponse
	2, // 11: services.OrderAddressService.Get:output_type -> services.OrderAddressResponse
	2, // 12: services.OrderAddressService.Search:output_type -> services.OrderAddressResponse
	8, // [8:13] is the sub-list for method output_type
	3, // [3:8] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_orderAddressService_proto_init() }
func file_orderAddressService_proto_init() {
	if File_orderAddressService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_orderAddressService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderAddressService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderAddressService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_orderAddressService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_orderAddressService_proto_goTypes,
		DependencyIndexes: file_orderAddressService_proto_depIdxs,
		MessageInfos:      file_orderAddressService_proto_msgTypes,
	}.Build()
	File_orderAddressService_proto = out.File
	file_orderAddressService_proto_rawDesc = nil
	file_orderAddressService_proto_goTypes = nil
	file_orderAddressService_proto_depIdxs = nil
}
