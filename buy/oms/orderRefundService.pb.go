// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: orderRefundService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 订单售后
type OrderRefund struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                                          //ID
	OrderId           int64          `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`                                 //订单ID
	ShopId            int64          `protobuf:"varint,3,opt,name=shop_id,json=shopId,proto3" json:"shop_id"`                                    //多商户ID
	RealstoreId       int64          `protobuf:"varint,4,opt,name=realstore_id,json=realstoreId,proto3" json:"realstore_id"`                     //多门店ID
	MemberId          int64          `protobuf:"varint,5,opt,name=member_id,json=memberId,proto3" json:"member_id"`                              //买家ID
	RefundType        string         `protobuf:"bytes,6,opt,name=refund_type,json=refundType,proto3" json:"refund_type"`                         //退款申请类型
	RefundNum         int64          `protobuf:"varint,7,opt,name=refund_num,json=refundNum,proto3" json:"refund_num"`                           //退款件数
	RefundPrice       int64          `protobuf:"varint,8,opt,name=refund_price,json=refundPrice,proto3" json:"refund_price"`                     //退款金额
	RefundedPrice     int64          `protobuf:"varint,9,opt,name=refunded_price,json=refundedPrice,proto3" json:"refunded_price"`               //已退款金额
	RefundPhone       string         `protobuf:"bytes,10,opt,name=refund_phone,json=refundPhone,proto3" json:"refund_phone"`                     //退款电话
	RefundExpress     string         `protobuf:"bytes,11,opt,name=refund_express,json=refundExpress,proto3" json:"refund_express"`               //退货快递单号
	RefundExpressName string         `protobuf:"bytes,12,opt,name=refund_express_name,json=refundExpressName,proto3" json:"refund_express_name"` //退货快递名称
	RefundExplain     string         `protobuf:"bytes,13,opt,name=refund_explain,json=refundExplain,proto3" json:"refund_explain"`               //退款用户说明
	RefundPics        []string       `protobuf:"bytes,14,rep,name=refund_pics,json=refundPics,proto3" json:"refund_pics"`                        //退款图片
	RefundReason      string         `protobuf:"bytes,15,opt,name=refund_reason,json=refundReason,proto3" json:"refund_reason"`                  //退款理由
	RefuseReason      string         `protobuf:"bytes,16,opt,name=refuse_reason,json=refuseReason,proto3" json:"refuse_reason"`                  //拒绝原因
	RefundedTime      int64          `protobuf:"varint,17,opt,name=refunded_time,json=refundedTime,proto3" json:"refunded_time"`                 //处理时间
	Remark            string         `protobuf:"bytes,18,opt,name=remark,proto3" json:"remark"`                                                  //备注
	CartInfo          []*ProductInfo `protobuf:"bytes,19,rep,name=cart_info,json=cartInfo,proto3" json:"cart_info"`                              //退款商品信息
	IsCancel          string         `protobuf:"bytes,20,opt,name=is_cancel,json=isCancel,proto3" json:"is_cancel"`                              //用户是否取消
	IsPinkCancel      string         `protobuf:"bytes,21,opt,name=is_pink_cancel,json=isPinkCancel,proto3" json:"is_pink_cancel"`                //是否拼团自动取消
	IsDel             string         `protobuf:"bytes,22,opt,name=is_del,json=isDel,proto3" json:"is_del"`                                       //是否取消申请
	IsSystemDel       string         `protobuf:"bytes,23,opt,name=is_system_del,json=isSystemDel,proto3" json:"is_system_del"`                   //是否系统删除
	UpdatedAt         int64          `protobuf:"varint,24,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`                          //创建时间
	CreatedAt         int64          `protobuf:"varint,25,opt,name=created_at,json=createdAt,proto3" json:"created_at"`                          //修改时间
}

func (x *OrderRefund) Reset() {
	*x = OrderRefund{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderRefundService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderRefund) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRefund) ProtoMessage() {}

func (x *OrderRefund) ProtoReflect() protoreflect.Message {
	mi := &file_orderRefundService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRefund.ProtoReflect.Descriptor instead.
func (*OrderRefund) Descriptor() ([]byte, []int) {
	return file_orderRefundService_proto_rawDescGZIP(), []int{0}
}

func (x *OrderRefund) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderRefund) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderRefund) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *OrderRefund) GetRealstoreId() int64 {
	if x != nil {
		return x.RealstoreId
	}
	return 0
}

func (x *OrderRefund) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *OrderRefund) GetRefundType() string {
	if x != nil {
		return x.RefundType
	}
	return ""
}

func (x *OrderRefund) GetRefundNum() int64 {
	if x != nil {
		return x.RefundNum
	}
	return 0
}

func (x *OrderRefund) GetRefundPrice() int64 {
	if x != nil {
		return x.RefundPrice
	}
	return 0
}

func (x *OrderRefund) GetRefundedPrice() int64 {
	if x != nil {
		return x.RefundedPrice
	}
	return 0
}

func (x *OrderRefund) GetRefundPhone() string {
	if x != nil {
		return x.RefundPhone
	}
	return ""
}

func (x *OrderRefund) GetRefundExpress() string {
	if x != nil {
		return x.RefundExpress
	}
	return ""
}

func (x *OrderRefund) GetRefundExpressName() string {
	if x != nil {
		return x.RefundExpressName
	}
	return ""
}

func (x *OrderRefund) GetRefundExplain() string {
	if x != nil {
		return x.RefundExplain
	}
	return ""
}

func (x *OrderRefund) GetRefundPics() []string {
	if x != nil {
		return x.RefundPics
	}
	return nil
}

func (x *OrderRefund) GetRefundReason() string {
	if x != nil {
		return x.RefundReason
	}
	return ""
}

func (x *OrderRefund) GetRefuseReason() string {
	if x != nil {
		return x.RefuseReason
	}
	return ""
}

func (x *OrderRefund) GetRefundedTime() int64 {
	if x != nil {
		return x.RefundedTime
	}
	return 0
}

func (x *OrderRefund) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *OrderRefund) GetCartInfo() []*ProductInfo {
	if x != nil {
		return x.CartInfo
	}
	return nil
}

func (x *OrderRefund) GetIsCancel() string {
	if x != nil {
		return x.IsCancel
	}
	return ""
}

func (x *OrderRefund) GetIsPinkCancel() string {
	if x != nil {
		return x.IsPinkCancel
	}
	return ""
}

func (x *OrderRefund) GetIsDel() string {
	if x != nil {
		return x.IsDel
	}
	return ""
}

func (x *OrderRefund) GetIsSystemDel() string {
	if x != nil {
		return x.IsSystemDel
	}
	return ""
}

func (x *OrderRefund) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *OrderRefund) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

// 订单售后请求请求
type OrderRefundApplyReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId             int64                       `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id"`                                      //订单ID
	RefundType          string                      `protobuf:"bytes,2,opt,name=refund_type,json=refundType,proto3" json:"refund_type"`                              //退款申请类型
	RefundNum           int64                       `protobuf:"varint,3,opt,name=refund_num,json=refundNum,proto3" json:"refund_num"`                                //退款件数
	RefundReason        string                      `protobuf:"bytes,4,opt,name=refund_reason,json=refundReason,proto3" json:"refund_reason"`                        //退货原因
	RefundReasonExplain string                      `protobuf:"bytes,5,opt,name=refund_reason_explain,json=refundReasonExplain,proto3" json:"refund_reason_explain"` //退货原因说明
	RefundReasonImg     []string                    `protobuf:"bytes,6,rep,name=refund_reason_img,json=refundReasonImg,proto3" json:"refund_reason_img"`             //退货原因图片
	Text                string                      `protobuf:"bytes,7,opt,name=text,proto3" json:"text"`                                                            //退款理由
	CartIds             []*OrderRefundApplyReqCarts `protobuf:"bytes,8,rep,name=cart_ids,json=cartIds,proto3" json:"cart_ids"`                                       //部分退款商品
}

func (x *OrderRefundApplyReq) Reset() {
	*x = OrderRefundApplyReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderRefundService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderRefundApplyReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRefundApplyReq) ProtoMessage() {}

func (x *OrderRefundApplyReq) ProtoReflect() protoreflect.Message {
	mi := &file_orderRefundService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRefundApplyReq.ProtoReflect.Descriptor instead.
func (*OrderRefundApplyReq) Descriptor() ([]byte, []int) {
	return file_orderRefundService_proto_rawDescGZIP(), []int{1}
}

func (x *OrderRefundApplyReq) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderRefundApplyReq) GetRefundType() string {
	if x != nil {
		return x.RefundType
	}
	return ""
}

func (x *OrderRefundApplyReq) GetRefundNum() int64 {
	if x != nil {
		return x.RefundNum
	}
	return 0
}

func (x *OrderRefundApplyReq) GetRefundReason() string {
	if x != nil {
		return x.RefundReason
	}
	return ""
}

func (x *OrderRefundApplyReq) GetRefundReasonExplain() string {
	if x != nil {
		return x.RefundReasonExplain
	}
	return ""
}

func (x *OrderRefundApplyReq) GetRefundReasonImg() []string {
	if x != nil {
		return x.RefundReasonImg
	}
	return nil
}

func (x *OrderRefundApplyReq) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *OrderRefundApplyReq) GetCartIds() []*OrderRefundApplyReqCarts {
	if x != nil {
		return x.CartIds
	}
	return nil
}

// 订单售后请求参数
type OrderRefundRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Top       int32    `protobuf:"varint,1,opt,name=top,proto3" json:"top"`
	Paged     int64    `protobuf:"varint,2,opt,name=paged,proto3" json:"paged"`
	PageSize  int64    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords  string   `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords"`
	Sorts     []string `protobuf:"bytes,5,rep,name=sorts,proto3" json:"sorts"`
	DateRange []string `protobuf:"bytes,6,rep,name=date_range,json=dateRange,proto3" json:"date_range"`
	Ids       []int64  `protobuf:"varint,7,rep,packed,name=ids,proto3" json:"ids"`
	Id        int64    `protobuf:"varint,8,opt,name=id,proto3" json:"id"`
	//以下为自定义参数
	OrderId           int64   `protobuf:"varint,11,opt,name=order_id,json=orderId,proto3" json:"order_id"`                                //订单ID
	ShopId            int64   `protobuf:"varint,12,opt,name=shop_id,json=shopId,proto3" json:"shop_id"`                                   //多商户ID
	RealstoreId       int64   `protobuf:"varint,13,opt,name=realstore_id,json=realstoreId,proto3" json:"realstore_id"`                    //多门店ID
	MemberId          int64   `protobuf:"varint,14,opt,name=member_id,json=memberId,proto3" json:"member_id"`                             //买家ID
	RefundType        string  `protobuf:"bytes,15,opt,name=refund_type,json=refundType,proto3" json:"refund_type"`                        //退款申请类型
	RefundExpressName string  `protobuf:"bytes,16,opt,name=refund_express_name,json=refundExpressName,proto3" json:"refund_express_name"` //退货快递名称
	IsCancel          string  `protobuf:"bytes,17,opt,name=is_cancel,json=isCancel,proto3" json:"is_cancel"`                              //用户是否取消
	IsPinkCancel      string  `protobuf:"bytes,18,opt,name=is_pink_cancel,json=isPinkCancel,proto3" json:"is_pink_cancel"`                //是否拼团自动取消
	IsDel             string  `protobuf:"bytes,19,opt,name=is_del,json=isDel,proto3" json:"is_del"`                                       //是否取消申请
	IsSystemDel       string  `protobuf:"bytes,20,opt,name=is_system_del,json=isSystemDel,proto3" json:"is_system_del"`                   //是否系统删除
	CartIds           []int64 `protobuf:"varint,22,rep,packed,name=cart_ids,json=cartIds,proto3" json:"cart_ids"`
}

func (x *OrderRefundRequest) Reset() {
	*x = OrderRefundRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderRefundService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderRefundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRefundRequest) ProtoMessage() {}

func (x *OrderRefundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orderRefundService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRefundRequest.ProtoReflect.Descriptor instead.
func (*OrderRefundRequest) Descriptor() ([]byte, []int) {
	return file_orderRefundService_proto_rawDescGZIP(), []int{2}
}

func (x *OrderRefundRequest) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *OrderRefundRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *OrderRefundRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *OrderRefundRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *OrderRefundRequest) GetSorts() []string {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *OrderRefundRequest) GetDateRange() []string {
	if x != nil {
		return x.DateRange
	}
	return nil
}

func (x *OrderRefundRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *OrderRefundRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderRefundRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderRefundRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *OrderRefundRequest) GetRealstoreId() int64 {
	if x != nil {
		return x.RealstoreId
	}
	return 0
}

func (x *OrderRefundRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *OrderRefundRequest) GetRefundType() string {
	if x != nil {
		return x.RefundType
	}
	return ""
}

func (x *OrderRefundRequest) GetRefundExpressName() string {
	if x != nil {
		return x.RefundExpressName
	}
	return ""
}

func (x *OrderRefundRequest) GetIsCancel() string {
	if x != nil {
		return x.IsCancel
	}
	return ""
}

func (x *OrderRefundRequest) GetIsPinkCancel() string {
	if x != nil {
		return x.IsPinkCancel
	}
	return ""
}

func (x *OrderRefundRequest) GetIsDel() string {
	if x != nil {
		return x.IsDel
	}
	return ""
}

func (x *OrderRefundRequest) GetIsSystemDel() string {
	if x != nil {
		return x.IsSystemDel
	}
	return ""
}

func (x *OrderRefundRequest) GetCartIds() []int64 {
	if x != nil {
		return x.CartIds
	}
	return nil
}

// 订单售后响应数据
type OrderRefundSearch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg   string         `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg"`
	Pager *common.Pager  `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items []*OrderRefund `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
}

func (x *OrderRefundSearch) Reset() {
	*x = OrderRefundSearch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderRefundService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderRefundSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRefundSearch) ProtoMessage() {}

func (x *OrderRefundSearch) ProtoReflect() protoreflect.Message {
	mi := &file_orderRefundService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRefundSearch.ProtoReflect.Descriptor instead.
func (*OrderRefundSearch) Descriptor() ([]byte, []int) {
	return file_orderRefundService_proto_rawDescGZIP(), []int{3}
}

func (x *OrderRefundSearch) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *OrderRefundSearch) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *OrderRefundSearch) GetItems() []*OrderRefund {
	if x != nil {
		return x.Items
	}
	return nil
}

type OrderRefundRefundable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status   *OrderRefundRefundableStatus `protobuf:"bytes,1,opt,name=status,proto3" json:"status"`
	CartInfo []*OrderDetail               `protobuf:"bytes,2,rep,name=cartInfo,proto3" json:"cartInfo"`
}

func (x *OrderRefundRefundable) Reset() {
	*x = OrderRefundRefundable{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderRefundService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderRefundRefundable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRefundRefundable) ProtoMessage() {}

func (x *OrderRefundRefundable) ProtoReflect() protoreflect.Message {
	mi := &file_orderRefundService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRefundRefundable.ProtoReflect.Descriptor instead.
func (*OrderRefundRefundable) Descriptor() ([]byte, []int) {
	return file_orderRefundService_proto_rawDescGZIP(), []int{4}
}

func (x *OrderRefundRefundable) GetStatus() *OrderRefundRefundableStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *OrderRefundRefundable) GetCartInfo() []*OrderDetail {
	if x != nil {
		return x.CartInfo
	}
	return nil
}

type OrderRefundRefundableStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type"`
	IsBack bool  `protobuf:"varint,2,opt,name=is_back,json=isBack,proto3" json:"is_back"`
}

func (x *OrderRefundRefundableStatus) Reset() {
	*x = OrderRefundRefundableStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderRefundService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderRefundRefundableStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRefundRefundableStatus) ProtoMessage() {}

func (x *OrderRefundRefundableStatus) ProtoReflect() protoreflect.Message {
	mi := &file_orderRefundService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRefundRefundableStatus.ProtoReflect.Descriptor instead.
func (*OrderRefundRefundableStatus) Descriptor() ([]byte, []int) {
	return file_orderRefundService_proto_rawDescGZIP(), []int{5}
}

func (x *OrderRefundRefundableStatus) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *OrderRefundRefundableStatus) GetIsBack() bool {
	if x != nil {
		return x.IsBack
	}
	return false
}

// 订单售后响应数据
type OrderRefundResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg        string                 `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg"`
	Detail     *OrderRefund           `protobuf:"bytes,2,opt,name=detail,proto3" json:"detail"`
	List       []*OrderRefund         `protobuf:"bytes,3,rep,name=list,proto3" json:"list"`
	Search     *OrderRefundSearch     `protobuf:"bytes,4,opt,name=search,proto3" json:"search"`
	Reasons    []string               `protobuf:"bytes,5,rep,name=reasons,proto3" json:"reasons"`
	Refundable *OrderRefundRefundable `protobuf:"bytes,6,opt,name=refundable,proto3" json:"refundable"`
}

func (x *OrderRefundResponse) Reset() {
	*x = OrderRefundResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderRefundService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderRefundResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRefundResponse) ProtoMessage() {}

func (x *OrderRefundResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orderRefundService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRefundResponse.ProtoReflect.Descriptor instead.
func (*OrderRefundResponse) Descriptor() ([]byte, []int) {
	return file_orderRefundService_proto_rawDescGZIP(), []int{6}
}

func (x *OrderRefundResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *OrderRefundResponse) GetDetail() *OrderRefund {
	if x != nil {
		return x.Detail
	}
	return nil
}

func (x *OrderRefundResponse) GetList() []*OrderRefund {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *OrderRefundResponse) GetSearch() *OrderRefundSearch {
	if x != nil {
		return x.Search
	}
	return nil
}

func (x *OrderRefundResponse) GetReasons() []string {
	if x != nil {
		return x.Reasons
	}
	return nil
}

func (x *OrderRefundResponse) GetRefundable() *OrderRefundRefundable {
	if x != nil {
		return x.Refundable
	}
	return nil
}

type OrderRefundApplyReqCarts struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CartId  int64 `protobuf:"varint,1,opt,name=cart_id,json=cartId,proto3" json:"cart_id"`
	CartNum int64 `protobuf:"varint,2,opt,name=cart_num,json=cartNum,proto3" json:"cart_num"`
}

func (x *OrderRefundApplyReqCarts) Reset() {
	*x = OrderRefundApplyReqCarts{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderRefundService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderRefundApplyReqCarts) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRefundApplyReqCarts) ProtoMessage() {}

func (x *OrderRefundApplyReqCarts) ProtoReflect() protoreflect.Message {
	mi := &file_orderRefundService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRefundApplyReqCarts.ProtoReflect.Descriptor instead.
func (*OrderRefundApplyReqCarts) Descriptor() ([]byte, []int) {
	return file_orderRefundService_proto_rawDescGZIP(), []int{1, 0}
}

func (x *OrderRefundApplyReqCarts) GetCartId() int64 {
	if x != nil {
		return x.CartId
	}
	return 0
}

func (x *OrderRefundApplyReqCarts) GetCartNum() int64 {
	if x != nil {
		return x.CartNum
	}
	return 0
}

var File_orderRefundService_proto protoreflect.FileDescriptor

var file_orderRefundService_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd4, 0x06, 0x0a, 0x0b, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x21, 0x0a, 0x0c,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65,
	0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x6c, 0x61,
	0x69, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x5f, 0x70, 0x69, 0x63, 0x73, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x50, 0x69, 0x63, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x23, 0x0a,
	0x0d, 0x72, 0x65, 0x66, 0x75, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x73, 0x65, 0x52, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12,
	0x32, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x13, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x63, 0x61, 0x72, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x73, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x70, 0x69, 0x6e, 0x6b, 0x5f, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x73, 0x50, 0x69, 0x6e, 0x6b,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c,
	0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x12, 0x22, 0x0a,
	0x0d, 0x69, 0x73, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x6c, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x44, 0x65,
	0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x86, 0x03, 0x0a, 0x13, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x6e, 0x75,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4e,
	0x75, 0x6d, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x15, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x45, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x12, 0x2a, 0x0a, 0x11, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x5f, 0x69, 0x6d, 0x67,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x49, 0x6d, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x3e, 0x0a, 0x08, 0x63,
	0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x2e, 0x63, 0x61, 0x72,
	0x74, 0x73, 0x52, 0x07, 0x63, 0x61, 0x72, 0x74, 0x49, 0x64, 0x73, 0x1a, 0x3b, 0x0a, 0x05, 0x63,
	0x61, 0x72, 0x74, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x61, 0x72, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x63, 0x61, 0x72, 0x74, 0x4e, 0x75, 0x6d, 0x22, 0xaa, 0x04, 0x0a, 0x12, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x6f,
	0x70, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x13,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x73, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f,
	0x70, 0x69, 0x6e, 0x6b, 0x5f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x69, 0x73, 0x50, 0x69, 0x6e, 0x6b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12,
	0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69,
	0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x61,
	0x72, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x16, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x63, 0x61,
	0x72, 0x74, 0x49, 0x64, 0x73, 0x22, 0x77, 0x0a, 0x11, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x23, 0x0a, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x72, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x89,
	0x01, 0x0a, 0x15, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x31, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x52, 0x08, 0x63, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4a, 0x0a, 0x1b, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x61,
	0x62, 0x6c, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x73, 0x5f, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x69, 0x73, 0x42, 0x61, 0x63, 0x6b, 0x22, 0x91, 0x02, 0x0a, 0x13, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x2d, 0x0a, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x06, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x29, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x06, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x3f, 0x0a, 0x0a, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x0a,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x32, 0xe6, 0x07, 0x0a, 0x12, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x4b, 0x0a, 0x0a, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x61, 0x62, 0x6c, 0x65, 0x12,
	0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41,
	0x0a, 0x07, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x73, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x47, 0x0a, 0x05, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x06, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x1a, 0x1d, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x06,
	0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x1a, 0x1d, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46,
	0x0a, 0x0c, 0x52, 0x65, 0x66, 0x75, 0x73, 0x65, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x15,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0b, 0x41, 0x67, 0x72, 0x65, 0x65, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x1a, 0x1d, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a,
	0x0c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x12, 0x15, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0c, 0x41, 0x67, 0x72, 0x65, 0x65, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x1a, 0x1d, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a,
	0x06, 0x52, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x1a, 0x1d,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x40, 0x0a, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x40, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1c, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x04,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_orderRefundService_proto_rawDescOnce sync.Once
	file_orderRefundService_proto_rawDescData = file_orderRefundService_proto_rawDesc
)

func file_orderRefundService_proto_rawDescGZIP() []byte {
	file_orderRefundService_proto_rawDescOnce.Do(func() {
		file_orderRefundService_proto_rawDescData = protoimpl.X.CompressGZIP(file_orderRefundService_proto_rawDescData)
	})
	return file_orderRefundService_proto_rawDescData
}

var file_orderRefundService_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_orderRefundService_proto_goTypes = []interface{}{
	(*OrderRefund)(nil),                 // 0: services.OrderRefund
	(*OrderRefundApplyReq)(nil),         // 1: services.OrderRefundApplyReq
	(*OrderRefundRequest)(nil),          // 2: services.OrderRefundRequest
	(*OrderRefundSearch)(nil),           // 3: services.OrderRefundSearch
	(*OrderRefundRefundable)(nil),       // 4: services.OrderRefundRefundable
	(*OrderRefundRefundableStatus)(nil), // 5: services.OrderRefundRefundableStatus
	(*OrderRefundResponse)(nil),         // 6: services.OrderRefundResponse
	(*OrderRefundApplyReqCarts)(nil),    // 7: services.OrderRefundApplyReq.carts
	(*ProductInfo)(nil),                 // 8: services.ProductInfo
	(*common.Pager)(nil),                // 9: common.Pager
	(*OrderDetail)(nil),                 // 10: services.OrderDetail
}
var file_orderRefundService_proto_depIdxs = []int32{
	8,  // 0: services.OrderRefund.cart_info:type_name -> services.ProductInfo
	7,  // 1: services.OrderRefundApplyReq.cart_ids:type_name -> services.OrderRefundApplyReq.carts
	9,  // 2: services.OrderRefundSearch.pager:type_name -> common.Pager
	0,  // 3: services.OrderRefundSearch.items:type_name -> services.OrderRefund
	5,  // 4: services.OrderRefundRefundable.status:type_name -> services.OrderRefundRefundableStatus
	10, // 5: services.OrderRefundRefundable.cartInfo:type_name -> services.OrderDetail
	0,  // 6: services.OrderRefundResponse.detail:type_name -> services.OrderRefund
	0,  // 7: services.OrderRefundResponse.list:type_name -> services.OrderRefund
	3,  // 8: services.OrderRefundResponse.search:type_name -> services.OrderRefundSearch
	4,  // 9: services.OrderRefundResponse.refundable:type_name -> services.OrderRefundRefundable
	2,  // 10: services.OrderRefundService.Refundable:input_type -> services.OrderRefundRequest
	0,  // 11: services.OrderRefundService.Reasons:input_type -> services.OrderRefund
	1,  // 12: services.OrderRefundService.Apply:input_type -> services.OrderRefundApplyReq
	0,  // 13: services.OrderRefundService.Cancel:input_type -> services.OrderRefund
	0,  // 14: services.OrderRefundService.Verify:input_type -> services.OrderRefund
	0,  // 15: services.OrderRefundService.RefuseRefund:input_type -> services.OrderRefund
	0,  // 16: services.OrderRefundService.AgreeRefund:input_type -> services.OrderRefund
	0,  // 17: services.OrderRefundService.WriteExpress:input_type -> services.OrderRefund
	0,  // 18: services.OrderRefundService.AgreeExpress:input_type -> services.OrderRefund
	0,  // 19: services.OrderRefundService.Remark:input_type -> services.OrderRefund
	0,  // 20: services.OrderRefundService.Detail:input_type -> services.OrderRefund
	0,  // 21: services.OrderRefundService.Delete:input_type -> services.OrderRefund
	2,  // 22: services.OrderRefundService.Search:input_type -> services.OrderRefundRequest
	2,  // 23: services.OrderRefundService.List:input_type -> services.OrderRefundRequest
	6,  // 24: services.OrderRefundService.Refundable:output_type -> services.OrderRefundResponse
	6,  // 25: services.OrderRefundService.Reasons:output_type -> services.OrderRefundResponse
	6,  // 26: services.OrderRefundService.Apply:output_type -> services.OrderRefundResponse
	6,  // 27: services.OrderRefundService.Cancel:output_type -> services.OrderRefundResponse
	6,  // 28: services.OrderRefundService.Verify:output_type -> services.OrderRefundResponse
	6,  // 29: services.OrderRefundService.RefuseRefund:output_type -> services.OrderRefundResponse
	6,  // 30: services.OrderRefundService.AgreeRefund:output_type -> services.OrderRefundResponse
	6,  // 31: services.OrderRefundService.WriteExpress:output_type -> services.OrderRefundResponse
	6,  // 32: services.OrderRefundService.AgreeExpress:output_type -> services.OrderRefundResponse
	6,  // 33: services.OrderRefundService.Remark:output_type -> services.OrderRefundResponse
	6,  // 34: services.OrderRefundService.Detail:output_type -> services.OrderRefundResponse
	6,  // 35: services.OrderRefundService.Delete:output_type -> services.OrderRefundResponse
	6,  // 36: services.OrderRefundService.Search:output_type -> services.OrderRefundResponse
	6,  // 37: services.OrderRefundService.List:output_type -> services.OrderRefundResponse
	24, // [24:38] is the sub-list for method output_type
	10, // [10:24] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_orderRefundService_proto_init() }
func file_orderRefundService_proto_init() {
	if File_orderRefundService_proto != nil {
		return
	}
	file_baseInfoService_proto_init()
	file_orderDetailService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_orderRefundService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderRefund); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderRefundService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderRefundApplyReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderRefundService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderRefundRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderRefundService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderRefundSearch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderRefundService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderRefundRefundable); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderRefundService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderRefundRefundableStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderRefundService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderRefundResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderRefundService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderRefundApplyReqCarts); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_orderRefundService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_orderRefundService_proto_goTypes,
		DependencyIndexes: file_orderRefundService_proto_depIdxs,
		MessageInfos:      file_orderRefundService_proto_msgTypes,
	}.Build()
	File_orderRefundService_proto = out.File
	file_orderRefundService_proto_rawDesc = nil
	file_orderRefundService_proto_goTypes = nil
	file_orderRefundService_proto_depIdxs = nil
}
