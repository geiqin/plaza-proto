// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: baseInfoService.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 支付方式
type PaymentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Coding          string `protobuf:"bytes,1,opt,name=coding,proto3" json:"coding"`                                            //支付方式标识
	PaymentId       int32  `protobuf:"varint,2,opt,name=payment_id,json=paymentId,proto3" json:"payment_id"`                    //支付方式ID
	PaymentMode     string `protobuf:"bytes,3,opt,name=payment_mode,json=paymentMode,proto3" json:"payment_mode"`               //支付模式:1-线上支付，2-线下支付
	PaymentType     string `protobuf:"bytes,4,opt,name=payment_type,json=paymentType,proto3" json:"payment_type"`               //支付类型
	PaymentTypeName string `protobuf:"bytes,5,opt,name=payment_type_name,json=paymentTypeName,proto3" json:"payment_type_name"` //支付类型名称
	PaymentTypeIcon string `protobuf:"bytes,6,opt,name=payment_type_icon,json=paymentTypeIcon,proto3" json:"payment_type_icon"` //支付类型图标
	ClientType      string `protobuf:"bytes,7,opt,name=client_type,json=clientType,proto3" json:"client_type"`                  //客户端类型:app/pc/h5/cashier
	AccountId       int32  `protobuf:"varint,8,opt,name=account_id,json=accountId,proto3" json:"account_id"`                    //支付账户ID（支付类型为weixin,alipay该项必填）
	ChannelId       int32  `protobuf:"varint,9,opt,name=channel_id,json=channelId,proto3" json:"channel_id"`                    //支付通道ID（支付类型为weixin,alipay该项必填）
	ChannelName     string `protobuf:"bytes,10,opt,name=channel_name,json=channelName,proto3" json:"channel_name"`              //支付通道名称
	ChannelCode     string `protobuf:"bytes,11,opt,name=channel_code,json=channelCode,proto3" json:"channel_code"`              //支付通道编码
	UniappProvider  string `protobuf:"bytes,12,opt,name=uniapp_provider,json=uniappProvider,proto3" json:"uniapp_provider"`     //UniApp支付标识
	IsEnabled       bool   `protobuf:"varint,13,opt,name=is_enabled,json=isEnabled,proto3" json:"is_enabled"`                   //是否启用: (0否，1是)
}

func (x *PaymentInfo) Reset() {
	*x = PaymentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentInfo) ProtoMessage() {}

func (x *PaymentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentInfo.ProtoReflect.Descriptor instead.
func (*PaymentInfo) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{0}
}

func (x *PaymentInfo) GetCoding() string {
	if x != nil {
		return x.Coding
	}
	return ""
}

func (x *PaymentInfo) GetPaymentId() int32 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

func (x *PaymentInfo) GetPaymentMode() string {
	if x != nil {
		return x.PaymentMode
	}
	return ""
}

func (x *PaymentInfo) GetPaymentType() string {
	if x != nil {
		return x.PaymentType
	}
	return ""
}

func (x *PaymentInfo) GetPaymentTypeName() string {
	if x != nil {
		return x.PaymentTypeName
	}
	return ""
}

func (x *PaymentInfo) GetPaymentTypeIcon() string {
	if x != nil {
		return x.PaymentTypeIcon
	}
	return ""
}

func (x *PaymentInfo) GetClientType() string {
	if x != nil {
		return x.ClientType
	}
	return ""
}

func (x *PaymentInfo) GetAccountId() int32 {
	if x != nil {
		return x.AccountId
	}
	return 0
}

func (x *PaymentInfo) GetChannelId() int32 {
	if x != nil {
		return x.ChannelId
	}
	return 0
}

func (x *PaymentInfo) GetChannelName() string {
	if x != nil {
		return x.ChannelName
	}
	return ""
}

func (x *PaymentInfo) GetChannelCode() string {
	if x != nil {
		return x.ChannelCode
	}
	return ""
}

func (x *PaymentInfo) GetUniappProvider() string {
	if x != nil {
		return x.UniappProvider
	}
	return ""
}

func (x *PaymentInfo) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

// 产品信息
type ProductInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type"`                                                                   //商品类型
	ShopId               int64    `protobuf:"varint,3,opt,name=shop_id,json=shopId,proto3" json:"shop_id"`                                                //分店ID
	CategoryId           int64    `protobuf:"varint,4,opt,name=category_id,json=categoryId,proto3" json:"category_id"`                                    //商品分类
	TaxonomyId           int64    `protobuf:"varint,5,opt,name=taxonomy_id,json=taxonomyId,proto3" json:"taxonomy_id"`                                    //商品类目
	BrandId              int32    `protobuf:"varint,6,opt,name=brand_id,json=brandId,proto3" json:"brand_id"`                                             //品牌
	Name                 string   `protobuf:"bytes,7,opt,name=name,proto3" json:"name"`                                                                   //商品名称
	Code                 string   `protobuf:"bytes,8,opt,name=code,proto3" json:"code"`                                                                   //SPU编码
	SellMode             string   `protobuf:"bytes,9,opt,name=sell_mode,json=sellMode,proto3" json:"sell_mode"`                                           //销售模式
	ImageUrl             string   `protobuf:"bytes,10,opt,name=image_url,json=imageUrl,proto3" json:"image_url"`                                          //商品主图
	VideoUrl             string   `protobuf:"bytes,11,opt,name=video_url,json=videoUrl,proto3" json:"video_url"`                                          //主图视频
	ExplainVideoUrl      string   `protobuf:"bytes,12,opt,name=explain_video_url,json=explainVideoUrl,proto3" json:"explain_video_url"`                   //讲解视频
	IsVirtual            string   `protobuf:"bytes,13,opt,name=is_virtual,json=isVirtual,proto3" json:"is_virtual"`                                       //虚拟商品
	IsManySpec           string   `protobuf:"bytes,14,opt,name=is_many_spec,json=isManySpec,proto3" json:"is_many_spec"`                                  //多规格商品
	IsOpenWeigh          string   `protobuf:"bytes,15,opt,name=is_open_weigh,json=isOpenWeigh,proto3" json:"is_open_weigh"`                               //开启称重
	IsMoreBarcode        string   `protobuf:"bytes,16,opt,name=is_more_barcode,json=isMoreBarcode,proto3" json:"is_more_barcode"`                         //一品多码
	UnitId               int32    `protobuf:"varint,17,opt,name=unit_id,json=unitId,proto3" json:"unit_id"`                                               //计量单位ID
	UnitName             string   `protobuf:"bytes,18,opt,name=unit_name,json=unitName,proto3" json:"unit_name"`                                          //计量单位名称
	UnitType             string   `protobuf:"bytes,19,opt,name=unit_type,json=unitType,proto3" json:"unit_type"`                                          //计量单位类型
	InventoryDeductType  string   `protobuf:"bytes,21,opt,name=inventory_deduct_type,json=inventoryDeductType,proto3" json:"inventory_deduct_type"`       //库存扣减类型
	IsShelve             string   `protobuf:"bytes,22,opt,name=is_shelve,json=isShelve,proto3" json:"is_shelve"`                                          //是否上架
	IsMemberRight        string   `protobuf:"bytes,23,opt,name=is_member_right,json=isMemberRight,proto3" json:"is_member_right"`                         //购买权限
	IsMemberPrice        string   `protobuf:"bytes,24,opt,name=is_member_price,json=isMemberPrice,proto3" json:"is_member_price"`                         //是否会员折扣价
	MinOriginalPrice     int64    `protobuf:"varint,25,opt,name=min_original_price,json=minOriginalPrice,proto3" json:"min_original_price"`               //最低原价
	MaxOriginalPrice     int64    `protobuf:"varint,26,opt,name=max_original_price,json=maxOriginalPrice,proto3" json:"max_original_price"`               //最大原价
	MinPrice             int64    `protobuf:"varint,27,opt,name=min_price,json=minPrice,proto3" json:"min_price"`                                         //最低价格
	MaxPrice             int64    `protobuf:"varint,28,opt,name=max_price,json=maxPrice,proto3" json:"max_price"`                                         //最高价格
	BuyMinNumber         int64    `protobuf:"varint,29,opt,name=buy_min_number,json=buyMinNumber,proto3" json:"buy_min_number"`                           //最低起购数量
	BuyMaxNumber         int64    `protobuf:"varint,30,opt,name=buy_max_number,json=buyMaxNumber,proto3" json:"buy_max_number"`                           //最大购买数量
	PhotoCount           int64    `protobuf:"varint,31,opt,name=photo_count,json=photoCount,proto3" json:"photo_count"`                                   //图片数量
	AccessCount          int64    `protobuf:"varint,32,opt,name=access_count,json=accessCount,proto3" json:"access_count"`                                //访问次数
	SaleCount            int64    `protobuf:"varint,33,opt,name=sale_count,json=saleCount,proto3" json:"sale_count"`                                      //实际销量
	InitialSales         int64    `protobuf:"varint,34,opt,name=initial_sales,json=initialSales,proto3" json:"initial_sales"`                             //初始销量
	ButtonMode           string   `protobuf:"bytes,35,opt,name=button_mode,json=buttonMode,proto3" json:"button_mode"`                                    //立即购买按钮
	ButtonCustom         string   `protobuf:"bytes,36,opt,name=button_custom,json=buttonCustom,proto3" json:"button_custom"`                              //按钮自定义名称
	LogisticsTypes       []string `protobuf:"bytes,37,rep,name=logistics_types,json=logisticsTypes,proto3" json:"logistics_types"`                        //支持物流类型
	ExpressFeeType       string   `protobuf:"bytes,38,opt,name=express_fee_type,json=expressFeeType,proto3" json:"express_fee_type"`                      //快递运费类型
	ExpressUniformFee    int64    `protobuf:"varint,39,opt,name=express_uniform_fee,json=expressUniformFee,proto3" json:"express_uniform_fee"`            //快递统一运费
	ExpressFeeTemplateId int64    `protobuf:"varint,40,opt,name=express_fee_template_id,json=expressFeeTemplateId,proto3" json:"express_fee_template_id"` //快递运费模板
	ClientTypes          []string `protobuf:"bytes,41,rep,name=client_types,json=clientTypes,proto3" json:"client_types"`                                 //的客户终端
	Sort                 int32    `protobuf:"varint,49,opt,name=sort,proto3" json:"sort"`                                                                 //排序
	ExtraMainId          string   `protobuf:"bytes,50,opt,name=extra_main_id,json=extraMainId,proto3" json:"extra_main_id"`                               //扩展业务主要ID
	Status               string   `protobuf:"bytes,52,opt,name=status,proto3" json:"status"`                                                              //商品状态
	//sku信息
	SpuId         int64          `protobuf:"varint,62,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`                          //商品ID
	SkuKey        string         `protobuf:"bytes,63,opt,name=sku_key,json=skuKey,proto3" json:"sku_key"`                        //SKUKey
	Coding        string         `protobuf:"bytes,64,opt,name=coding,proto3" json:"coding"`                                      //编号
	Barcode       string         `protobuf:"bytes,65,opt,name=barcode,proto3" json:"barcode"`                                    //条码
	MoreBarcodes  []string       `protobuf:"bytes,66,rep,name=more_barcodes,json=moreBarcodes,proto3" json:"more_barcodes"`      //更多条码
	OriginalPrice int64          `protobuf:"varint,67,opt,name=original_price,json=originalPrice,proto3" json:"original_price"`  //划线价
	CostPrice     int64          `protobuf:"varint,68,opt,name=cost_price,json=costPrice,proto3" json:"cost_price"`              //成本价
	Price         int64          `protobuf:"varint,69,opt,name=price,proto3" json:"price"`                                       //销售价
	Inventory     int64          `protobuf:"varint,70,opt,name=inventory,proto3" json:"inventory"`                               //库存
	Weight        int64          `protobuf:"varint,71,opt,name=weight,proto3" json:"weight"`                                     //重量
	Volume        int64          `protobuf:"varint,72,opt,name=volume,proto3" json:"volume"`                                     //体积
	Spec          []*SkuSpecInfo `protobuf:"bytes,73,rep,name=spec,proto3" json:"spec"`                                          //规格信息
	SpecDesc      string         `protobuf:"bytes,74,opt,name=spec_desc,json=specDesc,proto3" json:"spec_desc"`                  //规格描述
	ExtraDetailId string         `protobuf:"bytes,75,opt,name=extra_detail_id,json=extraDetailId,proto3" json:"extra_detail_id"` //扩展业务明细ID
	OutSystemId   string         `protobuf:"bytes,76,opt,name=out_system_id,json=outSystemId,proto3" json:"out_system_id"`       //外部系统ID
	CreatedAt     string         `protobuf:"bytes,77,opt,name=created_at,json=createdAt,proto3" json:"created_at"`               //创建时间
	UpdatedAt     string         `protobuf:"bytes,78,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`               //修改时间
	DeletedAt     string         `protobuf:"bytes,79,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at"`               //删除时间
	//额外扩展
	GoodsUrl string `protobuf:"bytes,80,opt,name=goods_url,json=goodsUrl,proto3" json:"goods_url"` //商品URL
	IsDelete string `protobuf:"bytes,81,opt,name=is_delete,json=isDelete,proto3" json:"is_delete"` //商品是否已删除（0否，1是）
	IsError  string `protobuf:"bytes,82,opt,name=is_error,json=isError,proto3" json:"is_error"`    //是否错误（0否，1是）
	ErrorMsg string `protobuf:"bytes,83,opt,name=error_msg,json=errorMsg,proto3" json:"error_msg"` //错误信息
}

func (x *ProductInfo) Reset() {
	*x = ProductInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductInfo) ProtoMessage() {}

func (x *ProductInfo) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductInfo.ProtoReflect.Descriptor instead.
func (*ProductInfo) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{1}
}

func (x *ProductInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ProductInfo) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *ProductInfo) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *ProductInfo) GetTaxonomyId() int64 {
	if x != nil {
		return x.TaxonomyId
	}
	return 0
}

func (x *ProductInfo) GetBrandId() int32 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *ProductInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ProductInfo) GetSellMode() string {
	if x != nil {
		return x.SellMode
	}
	return ""
}

func (x *ProductInfo) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *ProductInfo) GetVideoUrl() string {
	if x != nil {
		return x.VideoUrl
	}
	return ""
}

func (x *ProductInfo) GetExplainVideoUrl() string {
	if x != nil {
		return x.ExplainVideoUrl
	}
	return ""
}

func (x *ProductInfo) GetIsVirtual() string {
	if x != nil {
		return x.IsVirtual
	}
	return ""
}

func (x *ProductInfo) GetIsManySpec() string {
	if x != nil {
		return x.IsManySpec
	}
	return ""
}

func (x *ProductInfo) GetIsOpenWeigh() string {
	if x != nil {
		return x.IsOpenWeigh
	}
	return ""
}

func (x *ProductInfo) GetIsMoreBarcode() string {
	if x != nil {
		return x.IsMoreBarcode
	}
	return ""
}

func (x *ProductInfo) GetUnitId() int32 {
	if x != nil {
		return x.UnitId
	}
	return 0
}

func (x *ProductInfo) GetUnitName() string {
	if x != nil {
		return x.UnitName
	}
	return ""
}

func (x *ProductInfo) GetUnitType() string {
	if x != nil {
		return x.UnitType
	}
	return ""
}

func (x *ProductInfo) GetInventoryDeductType() string {
	if x != nil {
		return x.InventoryDeductType
	}
	return ""
}

func (x *ProductInfo) GetIsShelve() string {
	if x != nil {
		return x.IsShelve
	}
	return ""
}

func (x *ProductInfo) GetIsMemberRight() string {
	if x != nil {
		return x.IsMemberRight
	}
	return ""
}

func (x *ProductInfo) GetIsMemberPrice() string {
	if x != nil {
		return x.IsMemberPrice
	}
	return ""
}

func (x *ProductInfo) GetMinOriginalPrice() int64 {
	if x != nil {
		return x.MinOriginalPrice
	}
	return 0
}

func (x *ProductInfo) GetMaxOriginalPrice() int64 {
	if x != nil {
		return x.MaxOriginalPrice
	}
	return 0
}

func (x *ProductInfo) GetMinPrice() int64 {
	if x != nil {
		return x.MinPrice
	}
	return 0
}

func (x *ProductInfo) GetMaxPrice() int64 {
	if x != nil {
		return x.MaxPrice
	}
	return 0
}

func (x *ProductInfo) GetBuyMinNumber() int64 {
	if x != nil {
		return x.BuyMinNumber
	}
	return 0
}

func (x *ProductInfo) GetBuyMaxNumber() int64 {
	if x != nil {
		return x.BuyMaxNumber
	}
	return 0
}

func (x *ProductInfo) GetPhotoCount() int64 {
	if x != nil {
		return x.PhotoCount
	}
	return 0
}

func (x *ProductInfo) GetAccessCount() int64 {
	if x != nil {
		return x.AccessCount
	}
	return 0
}

func (x *ProductInfo) GetSaleCount() int64 {
	if x != nil {
		return x.SaleCount
	}
	return 0
}

func (x *ProductInfo) GetInitialSales() int64 {
	if x != nil {
		return x.InitialSales
	}
	return 0
}

func (x *ProductInfo) GetButtonMode() string {
	if x != nil {
		return x.ButtonMode
	}
	return ""
}

func (x *ProductInfo) GetButtonCustom() string {
	if x != nil {
		return x.ButtonCustom
	}
	return ""
}

func (x *ProductInfo) GetLogisticsTypes() []string {
	if x != nil {
		return x.LogisticsTypes
	}
	return nil
}

func (x *ProductInfo) GetExpressFeeType() string {
	if x != nil {
		return x.ExpressFeeType
	}
	return ""
}

func (x *ProductInfo) GetExpressUniformFee() int64 {
	if x != nil {
		return x.ExpressUniformFee
	}
	return 0
}

func (x *ProductInfo) GetExpressFeeTemplateId() int64 {
	if x != nil {
		return x.ExpressFeeTemplateId
	}
	return 0
}

func (x *ProductInfo) GetClientTypes() []string {
	if x != nil {
		return x.ClientTypes
	}
	return nil
}

func (x *ProductInfo) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ProductInfo) GetExtraMainId() string {
	if x != nil {
		return x.ExtraMainId
	}
	return ""
}

func (x *ProductInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ProductInfo) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *ProductInfo) GetSkuKey() string {
	if x != nil {
		return x.SkuKey
	}
	return ""
}

func (x *ProductInfo) GetCoding() string {
	if x != nil {
		return x.Coding
	}
	return ""
}

func (x *ProductInfo) GetBarcode() string {
	if x != nil {
		return x.Barcode
	}
	return ""
}

func (x *ProductInfo) GetMoreBarcodes() []string {
	if x != nil {
		return x.MoreBarcodes
	}
	return nil
}

func (x *ProductInfo) GetOriginalPrice() int64 {
	if x != nil {
		return x.OriginalPrice
	}
	return 0
}

func (x *ProductInfo) GetCostPrice() int64 {
	if x != nil {
		return x.CostPrice
	}
	return 0
}

func (x *ProductInfo) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ProductInfo) GetInventory() int64 {
	if x != nil {
		return x.Inventory
	}
	return 0
}

func (x *ProductInfo) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *ProductInfo) GetVolume() int64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *ProductInfo) GetSpec() []*SkuSpecInfo {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *ProductInfo) GetSpecDesc() string {
	if x != nil {
		return x.SpecDesc
	}
	return ""
}

func (x *ProductInfo) GetExtraDetailId() string {
	if x != nil {
		return x.ExtraDetailId
	}
	return ""
}

func (x *ProductInfo) GetOutSystemId() string {
	if x != nil {
		return x.OutSystemId
	}
	return ""
}

func (x *ProductInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ProductInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *ProductInfo) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

func (x *ProductInfo) GetGoodsUrl() string {
	if x != nil {
		return x.GoodsUrl
	}
	return ""
}

func (x *ProductInfo) GetIsDelete() string {
	if x != nil {
		return x.IsDelete
	}
	return ""
}

func (x *ProductInfo) GetIsError() string {
	if x != nil {
		return x.IsError
	}
	return ""
}

func (x *ProductInfo) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

// 货品规格信息
type SkuSpecInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  string `protobuf:"bytes,1,opt,name=type,proto3" json:"type"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value"`
}

func (x *SkuSpecInfo) Reset() {
	*x = SkuSpecInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SkuSpecInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuSpecInfo) ProtoMessage() {}

func (x *SkuSpecInfo) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuSpecInfo.ProtoReflect.Descriptor instead.
func (*SkuSpecInfo) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{2}
}

func (x *SkuSpecInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SkuSpecInfo) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// 退货地址库
type ReturnAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                         //ID
	Contacts     string  `protobuf:"bytes,2,opt,name=contacts,proto3" json:"contacts"`                              //联系人
	Tel          string  `protobuf:"bytes,3,opt,name=tel,proto3" json:"tel"`                                        //联系电话
	ProvinceId   int64   `protobuf:"varint,4,opt,name=province_id,json=provinceId,proto3" json:"province_id"`       //所在省
	CityId       int64   `protobuf:"varint,5,opt,name=city_id,json=cityId,proto3" json:"city_id"`                   //所在市
	CountyId     int64   `protobuf:"varint,6,opt,name=county_id,json=countyId,proto3" json:"county_id"`             //所在县
	Address      string  `protobuf:"bytes,7,opt,name=address,proto3" json:"address"`                                //详细地址
	Lng          float32 `protobuf:"fixed32,8,opt,name=lng,proto3" json:"lng"`                                      //经度
	Lat          float32 `protobuf:"fixed32,9,opt,name=lat,proto3" json:"lat"`                                      //纬度
	IsShipping   string  `protobuf:"bytes,10,opt,name=is_shipping,json=isShipping,proto3" json:"is_shipping"`       //是发货地址
	IsReturn     string  `protobuf:"bytes,11,opt,name=is_return,json=isReturn,proto3" json:"is_return"`             //退货地址
	HeaderUrl    string  `protobuf:"bytes,12,opt,name=header_url,json=headerUrl,proto3" json:"header_url"`          //门头照片
	Desc         string  `protobuf:"bytes,13,opt,name=desc,proto3" json:"desc"`                                     //描述
	CreatedAt    string  `protobuf:"bytes,14,opt,name=created_at,json=createdAt,proto3" json:"created_at"`          //创建时间
	UpdatedAt    string  `protobuf:"bytes,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`          //修改时间
	ProvinceName string  `protobuf:"bytes,16,opt,name=province_name,json=provinceName,proto3" json:"province_name"` //所在省
	CityName     string  `protobuf:"bytes,17,opt,name=city_name,json=cityName,proto3" json:"city_name"`             //所在市
	CountyName   string  `protobuf:"bytes,18,opt,name=county_name,json=countyName,proto3" json:"county_name"`       //所在县
}

func (x *ReturnAddress) Reset() {
	*x = ReturnAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReturnAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReturnAddress) ProtoMessage() {}

func (x *ReturnAddress) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReturnAddress.ProtoReflect.Descriptor instead.
func (*ReturnAddress) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{3}
}

func (x *ReturnAddress) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReturnAddress) GetContacts() string {
	if x != nil {
		return x.Contacts
	}
	return ""
}

func (x *ReturnAddress) GetTel() string {
	if x != nil {
		return x.Tel
	}
	return ""
}

func (x *ReturnAddress) GetProvinceId() int64 {
	if x != nil {
		return x.ProvinceId
	}
	return 0
}

func (x *ReturnAddress) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *ReturnAddress) GetCountyId() int64 {
	if x != nil {
		return x.CountyId
	}
	return 0
}

func (x *ReturnAddress) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ReturnAddress) GetLng() float32 {
	if x != nil {
		return x.Lng
	}
	return 0
}

func (x *ReturnAddress) GetLat() float32 {
	if x != nil {
		return x.Lat
	}
	return 0
}

func (x *ReturnAddress) GetIsShipping() string {
	if x != nil {
		return x.IsShipping
	}
	return ""
}

func (x *ReturnAddress) GetIsReturn() string {
	if x != nil {
		return x.IsReturn
	}
	return ""
}

func (x *ReturnAddress) GetHeaderUrl() string {
	if x != nil {
		return x.HeaderUrl
	}
	return ""
}

func (x *ReturnAddress) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ReturnAddress) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ReturnAddress) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *ReturnAddress) GetProvinceName() string {
	if x != nil {
		return x.ProvinceName
	}
	return ""
}

func (x *ReturnAddress) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

func (x *ReturnAddress) GetCountyName() string {
	if x != nil {
		return x.CountyName
	}
	return ""
}

// 参与的活动
type PromotionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`          //活动ID
	Code    string `protobuf:"bytes,2,opt,name=code,proto3" json:"code"`       //活动编码:如：coupon_20210101212
	Title   string `protobuf:"bytes,3,opt,name=title,proto3" json:"title"`     //活动标题
	Type    string `protobuf:"bytes,4,opt,name=type,proto3" json:"type"`       //活动类型:Coupon优惠劵/满减送/限时折扣/秒杀/拼团/通用
	Subtype string `protobuf:"bytes,5,opt,name=subtype,proto3" json:"subtype"` //活动子类型
	Tag     string `protobuf:"bytes,6,opt,name=tag,proto3" json:"tag"`         //标签
}

func (x *PromotionInfo) Reset() {
	*x = PromotionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromotionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromotionInfo) ProtoMessage() {}

func (x *PromotionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromotionInfo.ProtoReflect.Descriptor instead.
func (*PromotionInfo) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{4}
}

func (x *PromotionInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PromotionInfo) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PromotionInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PromotionInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PromotionInfo) GetSubtype() string {
	if x != nil {
		return x.Subtype
	}
	return ""
}

func (x *PromotionInfo) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

// 优惠券信息
type CouponInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                   int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	CouponSn             string  `protobuf:"bytes,2,opt,name=coupon_sn,json=couponSn,proto3" json:"coupon_sn"`
	Title                string  `protobuf:"bytes,3,opt,name=title,proto3" json:"title"`
	IsAtLeast            bool    `protobuf:"varint,4,opt,name=is_at_least,json=isAtLeast,proto3" json:"is_at_least"`
	AtLeast              float32 `protobuf:"fixed32,5,opt,name=at_least,json=atLeast,proto3" json:"at_least"`
	PreferentialType     int32   `protobuf:"varint,6,opt,name=preferential_type,json=preferentialType,proto3" json:"preferential_type"`
	PreferentialMoney    int64   `protobuf:"varint,7,opt,name=preferential_money,json=preferentialMoney,proto3" json:"preferential_money"`
	PreferentialDiscount float32 `protobuf:"fixed32,8,opt,name=preferential_discount,json=preferentialDiscount,proto3" json:"preferential_discount"`
	ExchangeNum          int32   `protobuf:"varint,9,opt,name=exchange_num,json=exchangeNum,proto3" json:"exchange_num"`
	RangeType            string  `protobuf:"bytes,10,opt,name=range_type,json=rangeType,proto3" json:"range_type"`
	Description          string  `protobuf:"bytes,11,opt,name=description,proto3" json:"description"`
	TicketId             int64   `protobuf:"varint,12,opt,name=ticket_id,json=ticketId,proto3" json:"ticket_id"`
	TicketSn             string  `protobuf:"bytes,13,opt,name=ticket_sn,json=ticketSn,proto3" json:"ticket_sn"`
	TicketStartAt        string  `protobuf:"bytes,14,opt,name=ticket_start_at,json=ticketStartAt,proto3" json:"ticket_start_at"`
	TicketEndAt          string  `protobuf:"bytes,15,opt,name=ticket_end_at,json=ticketEndAt,proto3" json:"ticket_end_at"`
}

func (x *CouponInfo) Reset() {
	*x = CouponInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CouponInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CouponInfo) ProtoMessage() {}

func (x *CouponInfo) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CouponInfo.ProtoReflect.Descriptor instead.
func (*CouponInfo) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{5}
}

func (x *CouponInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CouponInfo) GetCouponSn() string {
	if x != nil {
		return x.CouponSn
	}
	return ""
}

func (x *CouponInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CouponInfo) GetIsAtLeast() bool {
	if x != nil {
		return x.IsAtLeast
	}
	return false
}

func (x *CouponInfo) GetAtLeast() float32 {
	if x != nil {
		return x.AtLeast
	}
	return 0
}

func (x *CouponInfo) GetPreferentialType() int32 {
	if x != nil {
		return x.PreferentialType
	}
	return 0
}

func (x *CouponInfo) GetPreferentialMoney() int64 {
	if x != nil {
		return x.PreferentialMoney
	}
	return 0
}

func (x *CouponInfo) GetPreferentialDiscount() float32 {
	if x != nil {
		return x.PreferentialDiscount
	}
	return 0
}

func (x *CouponInfo) GetExchangeNum() int32 {
	if x != nil {
		return x.ExchangeNum
	}
	return 0
}

func (x *CouponInfo) GetRangeType() string {
	if x != nil {
		return x.RangeType
	}
	return ""
}

func (x *CouponInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CouponInfo) GetTicketId() int64 {
	if x != nil {
		return x.TicketId
	}
	return 0
}

func (x *CouponInfo) GetTicketSn() string {
	if x != nil {
		return x.TicketSn
	}
	return ""
}

func (x *CouponInfo) GetTicketStartAt() string {
	if x != nil {
		return x.TicketStartAt
	}
	return ""
}

func (x *CouponInfo) GetTicketEndAt() string {
	if x != nil {
		return x.TicketEndAt
	}
	return ""
}

type MemberInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                         //ID
	Type         string `protobuf:"bytes,2,opt,name=type,proto3" json:"type"`                                      //类型
	Number       string `protobuf:"bytes,3,opt,name=number,proto3" json:"number"`                                  //会员编号
	Username     string `protobuf:"bytes,4,opt,name=username,proto3" json:"username"`                              //用户名称
	Nickname     string `protobuf:"bytes,5,opt,name=nickname,proto3" json:"nickname"`                              //用户昵称
	Gender       string `protobuf:"bytes,6,opt,name=gender,proto3" json:"gender"`                                  //性别
	Birthday     string `protobuf:"bytes,7,opt,name=birthday,proto3" json:"birthday"`                              //会员生日
	ProvinceId   int64  `protobuf:"varint,8,opt,name=province_id,json=provinceId,proto3" json:"province_id"`       //所在省ID
	CityId       int64  `protobuf:"varint,9,opt,name=city_id,json=cityId,proto3" json:"city_id"`                   //所在市ID
	CountyId     int64  `protobuf:"varint,10,opt,name=county_id,json=countyId,proto3" json:"county_id"`            //所在区ID
	ProvinceName string `protobuf:"bytes,11,opt,name=province_name,json=provinceName,proto3" json:"province_name"` //所在省
	CityName     string `protobuf:"bytes,12,opt,name=city_name,json=cityName,proto3" json:"city_name"`             //所在市
	CountyName   string `protobuf:"bytes,13,opt,name=county_name,json=countyName,proto3" json:"county_name"`       //所在区
	Address      string `protobuf:"bytes,14,opt,name=address,proto3" json:"address"`                               //详细地址
	Email        string `protobuf:"bytes,15,opt,name=email,proto3" json:"email"`                                   //邮箱
	Mobile       string `protobuf:"bytes,16,opt,name=mobile,proto3" json:"mobile"`                                 //手机号
	AvatarUrl    string `protobuf:"bytes,17,opt,name=avatar_url,json=avatarUrl,proto3" json:"avatar_url"`          //头像
	Status       string `protobuf:"bytes,20,opt,name=status,proto3" json:"status"`
}

func (x *MemberInfo) Reset() {
	*x = MemberInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberInfo) ProtoMessage() {}

func (x *MemberInfo) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberInfo.ProtoReflect.Descriptor instead.
func (*MemberInfo) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{6}
}

func (x *MemberInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MemberInfo) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *MemberInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *MemberInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *MemberInfo) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *MemberInfo) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *MemberInfo) GetProvinceId() int64 {
	if x != nil {
		return x.ProvinceId
	}
	return 0
}

func (x *MemberInfo) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *MemberInfo) GetCountyId() int64 {
	if x != nil {
		return x.CountyId
	}
	return 0
}

func (x *MemberInfo) GetProvinceName() string {
	if x != nil {
		return x.ProvinceName
	}
	return ""
}

func (x *MemberInfo) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

func (x *MemberInfo) GetCountyName() string {
	if x != nil {
		return x.CountyName
	}
	return ""
}

func (x *MemberInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *MemberInfo) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *MemberInfo) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *MemberInfo) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *MemberInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Type   string `protobuf:"bytes,2,opt,name=type,proto3" json:"type"`
	Name   string `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	Status string `protobuf:"bytes,4,opt,name=status,proto3" json:"status"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{7}
}

func (x *UserInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UserInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type CompanyInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Type   string `protobuf:"bytes,2,opt,name=type,proto3" json:"type"`
	Name   string `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	Status string `protobuf:"bytes,4,opt,name=status,proto3" json:"status"`
}

func (x *CompanyInfo) Reset() {
	*x = CompanyInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompanyInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompanyInfo) ProtoMessage() {}

func (x *CompanyInfo) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompanyInfo.ProtoReflect.Descriptor instead.
func (*CompanyInfo) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{8}
}

func (x *CompanyInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CompanyInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CompanyInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CompanyInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type WarehouseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                     //ID
	Name         string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`                                  //名称
	Alias        string `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias"`                                //别名
	Level        int32  `protobuf:"varint,4,opt,name=level,proto3" json:"level"`                               //权重（数字越大权重越高）
	ContactName  string `protobuf:"bytes,5,opt,name=contact_name,json=contactName,proto3" json:"contact_name"` //联系人姓名
	ContactTel   string `protobuf:"bytes,6,opt,name=contact_tel,json=contactTel,proto3" json:"contact_tel"`    //联系电话
	IconUrl      string `protobuf:"bytes,7,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url"`             //图片
	CityId       int64  `protobuf:"varint,8,opt,name=city_id,json=cityId,proto3" json:"city_id"`               //所在市
	CountyId     int64  `protobuf:"varint,9,opt,name=county_id,json=countyId,proto3" json:"county_id"`         //所在县/区
	Address      string `protobuf:"bytes,10,opt,name=address,proto3" json:"address"`                           //详细地址
	Lng          string `protobuf:"bytes,11,opt,name=lng,proto3" json:"lng"`                                   //经度
	Lat          string `protobuf:"bytes,12,opt,name=lat,proto3" json:"lat"`                                   //纬度
	IsEnable     string `protobuf:"bytes,13,opt,name=is_enable,json=isEnable,proto3" json:"is_enable"`         //是否启用（0否，1是）
	IsDefault    string `protobuf:"bytes,14,opt,name=is_default,json=isDefault,proto3" json:"is_default"`      //是否默认（0否，1是）
	CreatedAt    string `protobuf:"bytes,15,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt    string `protobuf:"bytes,16,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	ProvinceName string `protobuf:"bytes,17,opt,name=province_name,json=provinceName,proto3" json:"province_name"`
	CityName     string `protobuf:"bytes,18,opt,name=city_name,json=cityName,proto3" json:"city_name"`
	CountyName   string `protobuf:"bytes,19,opt,name=county_name,json=countyName,proto3" json:"county_name"`
}

func (x *WarehouseInfo) Reset() {
	*x = WarehouseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WarehouseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WarehouseInfo) ProtoMessage() {}

func (x *WarehouseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WarehouseInfo.ProtoReflect.Descriptor instead.
func (*WarehouseInfo) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{9}
}

func (x *WarehouseInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WarehouseInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WarehouseInfo) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *WarehouseInfo) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *WarehouseInfo) GetContactName() string {
	if x != nil {
		return x.ContactName
	}
	return ""
}

func (x *WarehouseInfo) GetContactTel() string {
	if x != nil {
		return x.ContactTel
	}
	return ""
}

func (x *WarehouseInfo) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *WarehouseInfo) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *WarehouseInfo) GetCountyId() int64 {
	if x != nil {
		return x.CountyId
	}
	return 0
}

func (x *WarehouseInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *WarehouseInfo) GetLng() string {
	if x != nil {
		return x.Lng
	}
	return ""
}

func (x *WarehouseInfo) GetLat() string {
	if x != nil {
		return x.Lat
	}
	return ""
}

func (x *WarehouseInfo) GetIsEnable() string {
	if x != nil {
		return x.IsEnable
	}
	return ""
}

func (x *WarehouseInfo) GetIsDefault() string {
	if x != nil {
		return x.IsDefault
	}
	return ""
}

func (x *WarehouseInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *WarehouseInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *WarehouseInfo) GetProvinceName() string {
	if x != nil {
		return x.ProvinceName
	}
	return ""
}

func (x *WarehouseInfo) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

func (x *WarehouseInfo) GetCountyName() string {
	if x != nil {
		return x.CountyName
	}
	return ""
}

type OrderCurrency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	OrderId        int64   `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
	MemberId       int64   `protobuf:"varint,3,opt,name=member_id,json=memberId,proto3" json:"member_id"`
	CurrencyName   string  `protobuf:"bytes,4,opt,name=currency_name,json=currencyName,proto3" json:"currency_name"`
	CurrencyCode   string  `protobuf:"bytes,5,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code"`
	CurrencySymbol string  `protobuf:"bytes,6,opt,name=currency_symbol,json=currencySymbol,proto3" json:"currency_symbol"`
	CurrencyRate   float32 `protobuf:"fixed32,7,opt,name=currency_rate,json=currencyRate,proto3" json:"currency_rate"`
	CreatedAt      string  `protobuf:"bytes,8,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt      string  `protobuf:"bytes,9,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
}

func (x *OrderCurrency) Reset() {
	*x = OrderCurrency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderCurrency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderCurrency) ProtoMessage() {}

func (x *OrderCurrency) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderCurrency.ProtoReflect.Descriptor instead.
func (*OrderCurrency) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{10}
}

func (x *OrderCurrency) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderCurrency) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderCurrency) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *OrderCurrency) GetCurrencyName() string {
	if x != nil {
		return x.CurrencyName
	}
	return ""
}

func (x *OrderCurrency) GetCurrencyCode() string {
	if x != nil {
		return x.CurrencyCode
	}
	return ""
}

func (x *OrderCurrency) GetCurrencySymbol() string {
	if x != nil {
		return x.CurrencySymbol
	}
	return ""
}

func (x *OrderCurrency) GetCurrencyRate() float32 {
	if x != nil {
		return x.CurrencyRate
	}
	return 0
}

func (x *OrderCurrency) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *OrderCurrency) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type OrderIncrease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                               // ID
	OrderId        int64  `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`                      // 订单ID
	IncreaseType   string `protobuf:"bytes,3,opt,name=increase_type,json=increaseType,proto3" json:"increase_type"`        // 增加类型
	IncreaseAmount int64  `protobuf:"varint,4,opt,name=increase_amount,json=increaseAmount,proto3" json:"increase_amount"` // 增加金额
	RuleDetail     string `protobuf:"bytes,5,opt,name=rule_detail,json=ruleDetail,proto3" json:"rule_detail"`              // 规则详情
	Tips           string `protobuf:"bytes,6,opt,name=tips,proto3" json:"tips"`                                            //提示信息
}

func (x *OrderIncrease) Reset() {
	*x = OrderIncrease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderIncrease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderIncrease) ProtoMessage() {}

func (x *OrderIncrease) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderIncrease.ProtoReflect.Descriptor instead.
func (*OrderIncrease) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{11}
}

func (x *OrderIncrease) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderIncrease) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderIncrease) GetIncreaseType() string {
	if x != nil {
		return x.IncreaseType
	}
	return ""
}

func (x *OrderIncrease) GetIncreaseAmount() int64 {
	if x != nil {
		return x.IncreaseAmount
	}
	return 0
}

func (x *OrderIncrease) GetRuleDetail() string {
	if x != nil {
		return x.RuleDetail
	}
	return ""
}

func (x *OrderIncrease) GetTips() string {
	if x != nil {
		return x.Tips
	}
	return ""
}

type OrderDiscount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                               // ID
	OrderId        int64  `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`                      // 订单ID
	DiscountType   string `protobuf:"bytes,3,opt,name=discount_type,json=discountType,proto3" json:"discount_type"`        // 优惠类型
	DiscountAmount int64  `protobuf:"varint,4,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount"` // 优惠金额
	RuleDetail     string `protobuf:"bytes,5,opt,name=rule_detail,json=ruleDetail,proto3" json:"rule_detail"`              // 规则详情
	ShareDetail    string `protobuf:"bytes,6,opt,name=share_detail,json=shareDetail,proto3" json:"share_detail"`           //分摊明细
	Tips           string `protobuf:"bytes,7,opt,name=tips,proto3" json:"tips"`                                            //提示信息
}

func (x *OrderDiscount) Reset() {
	*x = OrderDiscount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDiscount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDiscount) ProtoMessage() {}

func (x *OrderDiscount) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDiscount.ProtoReflect.Descriptor instead.
func (*OrderDiscount) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{12}
}

func (x *OrderDiscount) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderDiscount) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderDiscount) GetDiscountType() string {
	if x != nil {
		return x.DiscountType
	}
	return ""
}

func (x *OrderDiscount) GetDiscountAmount() int64 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *OrderDiscount) GetRuleDetail() string {
	if x != nil {
		return x.RuleDetail
	}
	return ""
}

func (x *OrderDiscount) GetShareDetail() string {
	if x != nil {
		return x.ShareDetail
	}
	return ""
}

func (x *OrderDiscount) GetTips() string {
	if x != nil {
		return x.Tips
	}
	return ""
}

type OrderExtension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                  // ID
	OrderId    int64  `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`         // OrderID
	Name       string `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`                               // 名称
	Type       string `protobuf:"bytes,4,opt,name=type,proto3" json:"type"`                               // 类型（0减少, 1增加）
	Price      int64  `protobuf:"varint,5,opt,name=price,proto3" json:"price"`                            // 金额
	Business   string `protobuf:"bytes,6,opt,name=business,proto3" json:"business"`                       // 业务类型
	Tips       string `protobuf:"bytes,7,opt,name=tips,proto3" json:"tips"`                               //提示信息
	OriginData string `protobuf:"bytes,8,opt,name=origin_data,json=originData,proto3" json:"origin_data"` //原始数据（内容格式不限）
}

func (x *OrderExtension) Reset() {
	*x = OrderExtension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderExtension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderExtension) ProtoMessage() {}

func (x *OrderExtension) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderExtension.ProtoReflect.Descriptor instead.
func (*OrderExtension) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{13}
}

func (x *OrderExtension) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderExtension) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderExtension) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrderExtension) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OrderExtension) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OrderExtension) GetBusiness() string {
	if x != nil {
		return x.Business
	}
	return ""
}

func (x *OrderExtension) GetTips() string {
	if x != nil {
		return x.Tips
	}
	return ""
}

func (x *OrderExtension) GetOriginData() string {
	if x != nil {
		return x.OriginData
	}
	return ""
}

// 订单详情步骤
type OrderFlow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current *OrderFlowStep   `protobuf:"bytes,1,opt,name=current,proto3" json:"current"`
	Steps   []*OrderFlowStep `protobuf:"bytes,2,rep,name=steps,proto3" json:"steps"`
}

func (x *OrderFlow) Reset() {
	*x = OrderFlow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderFlow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderFlow) ProtoMessage() {}

func (x *OrderFlow) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderFlow.ProtoReflect.Descriptor instead.
func (*OrderFlow) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{14}
}

func (x *OrderFlow) GetCurrent() *OrderFlowStep {
	if x != nil {
		return x.Current
	}
	return nil
}

func (x *OrderFlow) GetSteps() []*OrderFlowStep {
	if x != nil {
		return x.Steps
	}
	return nil
}

type OrderFlowStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	ShortName   string `protobuf:"bytes,3,opt,name=short_name,json=shortName,proto3" json:"short_name"`
	IconUrl     string `protobuf:"bytes,4,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url"`
	Status      string `protobuf:"bytes,5,opt,name=status,proto3" json:"status"`
	HappenAt    string `protobuf:"bytes,6,opt,name=happen_at,json=happenAt,proto3" json:"happen_at"`
	Description string `protobuf:"bytes,7,opt,name=description,proto3" json:"description"`
}

func (x *OrderFlowStep) Reset() {
	*x = OrderFlowStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_baseInfoService_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderFlowStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderFlowStep) ProtoMessage() {}

func (x *OrderFlowStep) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderFlowStep.ProtoReflect.Descriptor instead.
func (*OrderFlowStep) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{14, 0}
}

func (x *OrderFlowStep) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *OrderFlowStep) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrderFlowStep) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *OrderFlowStep) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *OrderFlowStep) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OrderFlowStep) GetHappenAt() string {
	if x != nil {
		return x.HappenAt
	}
	return ""
}

func (x *OrderFlowStep) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_baseInfoService_proto protoreflect.FileDescriptor

var file_baseInfoService_proto_rawDesc = []byte{
	0x0a, 0x15, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x22, 0xcf, 0x03, 0x0a, 0x0b, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a,
	0x0a, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x75,
	0x6e, 0x69, 0x61, 0x70, 0x70, 0x5f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x6e, 0x69, 0x61, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x76,
	0x69, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x22, 0xb4, 0x10, 0x0a, 0x0b, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6c, 0x6c, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x6c, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12,
	0x1b, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x2a, 0x0a, 0x11,
	0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x78, 0x70, 0x6c, 0x61, 0x69, 0x6e,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x76,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x6d, 0x61,
	0x6e, 0x79, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69,
	0x73, 0x4d, 0x61, 0x6e, 0x79, 0x53, 0x70, 0x65, 0x63, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f,
	0x6f, 0x70, 0x65, 0x6e, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x69, 0x73, 0x4f, 0x70, 0x65, 0x6e, 0x57, 0x65, 0x69, 0x67, 0x68, 0x12, 0x26, 0x0a,
	0x0f, 0x69, 0x73, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x42, 0x61,
	0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x74, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x6e, 0x69, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x6e, 0x69, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x6e, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x32, 0x0a, 0x15, 0x69, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x5f, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x69, 0x73, 0x5f, 0x73, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x69, 0x73, 0x53, 0x68, 0x65, 0x6c, 0x76, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x72, 0x69, 0x67, 0x68, 0x74, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x69, 0x73, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x73, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x69, 0x6e,
	0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6d, 0x69, 0x6e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x61, 0x78, 0x5f, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x1a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x24, 0x0a, 0x0e, 0x62, 0x75, 0x79, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x62, 0x75, 0x79, 0x4d, 0x69, 0x6e, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x75, 0x79, 0x5f, 0x6d, 0x61, 0x78,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x62,
	0x75, 0x79, 0x4d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x70,
	0x68, 0x6f, 0x74, 0x6f, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x21, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x61, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23,
	0x0a, 0x0d, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x61, 0x6c, 0x65, 0x73, 0x18,
	0x22, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x61,
	0x6c, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f,
	0x64, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x63,
	0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12, 0x27, 0x0a, 0x0f, 0x6c, 0x6f, 0x67,
	0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x25, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x66, 0x65,
	0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x46, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x13,
	0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x5f,
	0x66, 0x65, 0x65, 0x18, 0x27, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x65, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x55, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x46, 0x65, 0x65, 0x12, 0x35, 0x0a, 0x17,
	0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x28, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x65,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x46, 0x65, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x73, 0x18, 0x29, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x31,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x65, 0x78,
	0x74, 0x72, 0x61, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x32, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x72, 0x61, 0x4d, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x70, 0x75, 0x5f, 0x69, 0x64,
	0x18, 0x3e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x70, 0x75, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x6b, 0x75, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x6b, 0x75, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67,
	0x18, 0x40, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x41, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x6f, 0x72, 0x65,
	0x5f, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x42, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0c, 0x6d, 0x6f, 0x72, 0x65, 0x42, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x25, 0x0a,
	0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x43, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x44, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x45, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x46, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x18, 0x47, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x48, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18,
	0x49, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x53, 0x6b, 0x75, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x73, 0x70,
	0x65, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x4a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x44, 0x65, 0x73, 0x63, 0x12,
	0x26, 0x0a, 0x0f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f,
	0x69, 0x64, 0x18, 0x4b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x72, 0x61, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x5f, 0x73,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x4c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6f, 0x75, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x4d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x4e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x4f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x50, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x18, 0x51, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x73, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x52,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1b, 0x0a,
	0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x53, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x22, 0x37, 0x0a, 0x0b, 0x53, 0x6b,
	0x75, 0x53, 0x70, 0x65, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0xf4, 0x03, 0x0a, 0x0d, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x74, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69,
	0x73, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f,
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x73,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x65, 0x61, 0x64,
	0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69,
	0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x89, 0x01, 0x0a, 0x0d, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x62, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22, 0x85, 0x04, 0x0a, 0x0a, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f,
	0x73, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x53, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x61,
	0x74, 0x5f, 0x6c, 0x65, 0x61, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x41, 0x74, 0x4c, 0x65, 0x61, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x74, 0x5f, 0x6c,
	0x65, 0x61, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x61, 0x74, 0x4c, 0x65,
	0x61, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10,
	0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x2d, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c,
	0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12,
	0x33, 0x0a, 0x15, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x14,
	0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x65, 0x78, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x61, 0x6e,
	0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f,
	0x73, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x53, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x72, 0x74, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x45, 0x6e, 0x64, 0x41, 0x74, 0x22, 0xed,
	0x03, 0x0a, 0x0a, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x69, 0x72,
	0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5a,
	0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5d, 0x0a, 0x0b, 0x43, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x8f, 0x04, 0x0a, 0x0d, 0x57, 0x61,
	0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x74, 0x65, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x54, 0x65, 0x6c, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69,
	0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x69, 0x74,
	0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e,
	0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03,
	0x6c, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76,
	0x69, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x63, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xad, 0x02, 0x0a, 0x0d,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x5f, 0x73, 0x79, 0x6d, 0x62,
	0x6f, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xbd, 0x01, 0x0a, 0x0d,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x63, 0x72,
	0x65, 0x61, 0x73, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x75, 0x6c,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x70, 0x73, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x70, 0x73, 0x22, 0xe0, 0x01, 0x0a, 0x0d,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a,
	0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x75, 0x6c,
	0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69,
	0x70, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x70, 0x73, 0x22, 0xca,
	0x01, 0x0a, 0x0e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x70, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x70, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x22, 0xb1, 0x02, 0x0a, 0x09,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x32, 0x0a, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x2e,
	0x73, 0x74, 0x65, 0x70, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x2e, 0x0a,
	0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x6c, 0x6f,
	0x77, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x52, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x1a, 0xbf, 0x01,
	0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x41, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42,
	0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_baseInfoService_proto_rawDescOnce sync.Once
	file_baseInfoService_proto_rawDescData = file_baseInfoService_proto_rawDesc
)

func file_baseInfoService_proto_rawDescGZIP() []byte {
	file_baseInfoService_proto_rawDescOnce.Do(func() {
		file_baseInfoService_proto_rawDescData = protoimpl.X.CompressGZIP(file_baseInfoService_proto_rawDescData)
	})
	return file_baseInfoService_proto_rawDescData
}

var file_baseInfoService_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_baseInfoService_proto_goTypes = []interface{}{
	(*PaymentInfo)(nil),    // 0: services.PaymentInfo
	(*ProductInfo)(nil),    // 1: services.ProductInfo
	(*SkuSpecInfo)(nil),    // 2: services.SkuSpecInfo
	(*ReturnAddress)(nil),  // 3: services.ReturnAddress
	(*PromotionInfo)(nil),  // 4: services.PromotionInfo
	(*CouponInfo)(nil),     // 5: services.CouponInfo
	(*MemberInfo)(nil),     // 6: services.MemberInfo
	(*UserInfo)(nil),       // 7: services.UserInfo
	(*CompanyInfo)(nil),    // 8: services.CompanyInfo
	(*WarehouseInfo)(nil),  // 9: services.WarehouseInfo
	(*OrderCurrency)(nil),  // 10: services.OrderCurrency
	(*OrderIncrease)(nil),  // 11: services.OrderIncrease
	(*OrderDiscount)(nil),  // 12: services.OrderDiscount
	(*OrderExtension)(nil), // 13: services.OrderExtension
	(*OrderFlow)(nil),      // 14: services.OrderFlow
	(*OrderFlowStep)(nil),  // 15: services.OrderFlow.step
}
var file_baseInfoService_proto_depIdxs = []int32{
	2,  // 0: services.ProductInfo.spec:type_name -> services.SkuSpecInfo
	15, // 1: services.OrderFlow.current:type_name -> services.OrderFlow.step
	15, // 2: services.OrderFlow.steps:type_name -> services.OrderFlow.step
	3,  // [3:3] is the sub-list for method output_type
	3,  // [3:3] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_baseInfoService_proto_init() }
func file_baseInfoService_proto_init() {
	if File_baseInfoService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_baseInfoService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SkuSpecInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReturnAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromotionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CouponInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompanyInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WarehouseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderCurrency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderIncrease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDiscount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderExtension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderFlow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_baseInfoService_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderFlowStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_baseInfoService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_baseInfoService_proto_goTypes,
		DependencyIndexes: file_baseInfoService_proto_depIdxs,
		MessageInfos:      file_baseInfoService_proto_msgTypes,
	}.Build()
	File_baseInfoService_proto = out.File
	file_baseInfoService_proto_rawDesc = nil
	file_baseInfoService_proto_goTypes = nil
	file_baseInfoService_proto_depIdxs = nil
}
