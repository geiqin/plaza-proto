// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: orderConfirmService.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BuyGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Warehouse       *WarehouseInfo   `protobuf:"bytes,1,opt,name=warehouse,proto3" json:"warehouse"`
	OrderBase       *BuyOrderBase    `protobuf:"bytes,2,opt,name=order_base,json=orderBase,proto3" json:"order_base"`                             //订单基本信息
	OrderItems      []*BuyOrderItem  `protobuf:"bytes,3,rep,name=order_items,json=orderItems,proto3" json:"order_items"`                          //订单商品列表
	OrderIncreases  []*OrderIncrease `protobuf:"bytes,4,rep,name=order_increases,json=orderIncreases,proto3" json:"order_increases"`              //订单增加数据
	OrderDiscounts  []*OrderDiscount `protobuf:"bytes,5,rep,name=order_discounts,json=orderDiscounts,proto3" json:"order_discounts"`              //订单优惠数据
	MemberCouponIds []int64          `protobuf:"varint,6,rep,packed,name=member_coupon_ids,json=memberCouponIds,proto3" json:"member_coupon_ids"` //选择的优惠劵IDS
}

func (x *BuyGroup) Reset() {
	*x = BuyGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderConfirmService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyGroup) ProtoMessage() {}

func (x *BuyGroup) ProtoReflect() protoreflect.Message {
	mi := &file_orderConfirmService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyGroup.ProtoReflect.Descriptor instead.
func (*BuyGroup) Descriptor() ([]byte, []int) {
	return file_orderConfirmService_proto_rawDescGZIP(), []int{0}
}

func (x *BuyGroup) GetWarehouse() *WarehouseInfo {
	if x != nil {
		return x.Warehouse
	}
	return nil
}

func (x *BuyGroup) GetOrderBase() *BuyOrderBase {
	if x != nil {
		return x.OrderBase
	}
	return nil
}

func (x *BuyGroup) GetOrderItems() []*BuyOrderItem {
	if x != nil {
		return x.OrderItems
	}
	return nil
}

func (x *BuyGroup) GetOrderIncreases() []*OrderIncrease {
	if x != nil {
		return x.OrderIncreases
	}
	return nil
}

func (x *BuyGroup) GetOrderDiscounts() []*OrderDiscount {
	if x != nil {
		return x.OrderDiscounts
	}
	return nil
}

func (x *BuyGroup) GetMemberCouponIds() []int64 {
	if x != nil {
		return x.MemberCouponIds
	}
	return nil
}

type BuyOrderItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CartId        int64        `protobuf:"varint,1,opt,name=cart_id,json=cartId,proto3" json:"cart_id"`                       //购车ID
	SpuId         int64        `protobuf:"varint,2,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`                          //商品ID
	Unique        string       `protobuf:"bytes,3,opt,name=unique,proto3" json:"unique"`                                      //SKUKey
	SpecWeight    int64        `protobuf:"varint,4,opt,name=spec_weight,json=specWeight,proto3" json:"spec_weight"`           //规格重量
	SpecVolume    int64        `protobuf:"varint,5,opt,name=spec_volume,json=specVolume,proto3" json:"spec_volume"`           //规格体积
	Quantity      int64        `protobuf:"varint,6,opt,name=quantity,proto3" json:"quantity"`                                 //购买数量
	UnitPrice     int64        `protobuf:"varint,7,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price"`              //商品单价
	TruePrice     int64        `protobuf:"varint,8,opt,name=true_price,json=truePrice,proto3" json:"true_price"`              //实付价格
	VipTruePrice  int64        `protobuf:"varint,9,opt,name=vip_true_price,json=vipTruePrice,proto3" json:"vip_true_price"`   //VIP实付价格
	TotalPrice    int64        `protobuf:"varint,10,opt,name=total_price,json=totalPrice,proto3" json:"total_price"`          //合计价格
	DiscountShare int64        `protobuf:"varint,11,opt,name=discount_share,json=discountShare,proto3" json:"discount_share"` //优惠分摊
	FinalPrice    int64        `protobuf:"varint,12,opt,name=final_price,json=finalPrice,proto3" json:"final_price"`          //最终支付价格
	Product       *ProductInfo `protobuf:"bytes,13,opt,name=product,proto3" json:"product"`                                   //商品信息
	IsInvalid     bool         `protobuf:"varint,14,opt,name=is_invalid,json=isInvalid,proto3" json:"is_invalid"`             //是否无效
	InvalidMsg    string       `protobuf:"bytes,15,opt,name=invalid_msg,json=invalidMsg,proto3" json:"invalid_msg"`           //无效信息
}

func (x *BuyOrderItem) Reset() {
	*x = BuyOrderItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderConfirmService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyOrderItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyOrderItem) ProtoMessage() {}

func (x *BuyOrderItem) ProtoReflect() protoreflect.Message {
	mi := &file_orderConfirmService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyOrderItem.ProtoReflect.Descriptor instead.
func (*BuyOrderItem) Descriptor() ([]byte, []int) {
	return file_orderConfirmService_proto_rawDescGZIP(), []int{1}
}

func (x *BuyOrderItem) GetCartId() int64 {
	if x != nil {
		return x.CartId
	}
	return 0
}

func (x *BuyOrderItem) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *BuyOrderItem) GetUnique() string {
	if x != nil {
		return x.Unique
	}
	return ""
}

func (x *BuyOrderItem) GetSpecWeight() int64 {
	if x != nil {
		return x.SpecWeight
	}
	return 0
}

func (x *BuyOrderItem) GetSpecVolume() int64 {
	if x != nil {
		return x.SpecVolume
	}
	return 0
}

func (x *BuyOrderItem) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *BuyOrderItem) GetUnitPrice() int64 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *BuyOrderItem) GetTruePrice() int64 {
	if x != nil {
		return x.TruePrice
	}
	return 0
}

func (x *BuyOrderItem) GetVipTruePrice() int64 {
	if x != nil {
		return x.VipTruePrice
	}
	return 0
}

func (x *BuyOrderItem) GetTotalPrice() int64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *BuyOrderItem) GetDiscountShare() int64 {
	if x != nil {
		return x.DiscountShare
	}
	return 0
}

func (x *BuyOrderItem) GetFinalPrice() int64 {
	if x != nil {
		return x.FinalPrice
	}
	return 0
}

func (x *BuyOrderItem) GetProduct() *ProductInfo {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *BuyOrderItem) GetIsInvalid() bool {
	if x != nil {
		return x.IsInvalid
	}
	return false
}

func (x *BuyOrderItem) GetInvalidMsg() string {
	if x != nil {
		return x.InvalidMsg
	}
	return ""
}

// 订单基础信息
type BuyOrderBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalAmount     int64   `protobuf:"varint,1,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount"`               //订单总价
	FinalAmount     int64   `protobuf:"varint,2,opt,name=final_amount,json=finalAmount,proto3" json:"final_amount"`               //订单实付金额(已减去优惠金额, 已加上增加金额)
	IncreaseAmount  int64   `protobuf:"varint,3,opt,name=increase_amount,json=increaseAmount,proto3" json:"increase_amount"`      //增加金额
	DiscountAmount  int64   `protobuf:"varint,4,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount"`      //优惠金额
	BuyCount        float32 `protobuf:"fixed32,5,opt,name=buy_count,json=buyCount,proto3" json:"buy_count"`                       //购买商品总数量(总件数+总称重（千克）)
	BuyCountNumber  int64   `protobuf:"varint,6,opt,name=buy_count_number,json=buyCountNumber,proto3" json:"buy_count_number"`    //购买商品总件数（非称重商品）
	BuyCountWeighed int64   `protobuf:"varint,7,opt,name=buy_count_weighed,json=buyCountWeighed,proto3" json:"buy_count_weighed"` //购买商品总称重（称重商品.克）
	SpecTotalWeight int64   `protobuf:"varint,8,opt,name=spec_total_weight,json=specTotalWeight,proto3" json:"spec_total_weight"` //规格重量合计
	SpecTotalVolume int64   `protobuf:"varint,9,opt,name=spec_total_volume,json=specTotalVolume,proto3" json:"spec_total_volume"` //规格体积合计
	UseIntegral     int64   `protobuf:"varint,10,opt,name=use_integral,json=useIntegral,proto3" json:"use_integral"`              //使用的积分
	UseSurplus      int64   `protobuf:"varint,11,opt,name=use_surplus,json=useSurplus,proto3" json:"use_surplus"`                 //使用的余额
	MemberId        int64   `protobuf:"varint,12,opt,name=member_id,json=memberId,proto3" json:"member_id"`                       //会员ID
	WarehouseId     int64   `protobuf:"varint,13,opt,name=warehouse_id,json=warehouseId,proto3" json:"warehouse_id"`              //仓库ID
}

func (x *BuyOrderBase) Reset() {
	*x = BuyOrderBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderConfirmService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyOrderBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyOrderBase) ProtoMessage() {}

func (x *BuyOrderBase) ProtoReflect() protoreflect.Message {
	mi := &file_orderConfirmService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyOrderBase.ProtoReflect.Descriptor instead.
func (*BuyOrderBase) Descriptor() ([]byte, []int) {
	return file_orderConfirmService_proto_rawDescGZIP(), []int{2}
}

func (x *BuyOrderBase) GetTotalAmount() int64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *BuyOrderBase) GetFinalAmount() int64 {
	if x != nil {
		return x.FinalAmount
	}
	return 0
}

func (x *BuyOrderBase) GetIncreaseAmount() int64 {
	if x != nil {
		return x.IncreaseAmount
	}
	return 0
}

func (x *BuyOrderBase) GetDiscountAmount() int64 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *BuyOrderBase) GetBuyCount() float32 {
	if x != nil {
		return x.BuyCount
	}
	return 0
}

func (x *BuyOrderBase) GetBuyCountNumber() int64 {
	if x != nil {
		return x.BuyCountNumber
	}
	return 0
}

func (x *BuyOrderBase) GetBuyCountWeighed() int64 {
	if x != nil {
		return x.BuyCountWeighed
	}
	return 0
}

func (x *BuyOrderBase) GetSpecTotalWeight() int64 {
	if x != nil {
		return x.SpecTotalWeight
	}
	return 0
}

func (x *BuyOrderBase) GetSpecTotalVolume() int64 {
	if x != nil {
		return x.SpecTotalVolume
	}
	return 0
}

func (x *BuyOrderBase) GetUseIntegral() int64 {
	if x != nil {
		return x.UseIntegral
	}
	return 0
}

func (x *BuyOrderBase) GetUseSurplus() int64 {
	if x != nil {
		return x.UseSurplus
	}
	return 0
}

func (x *BuyOrderBase) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *BuyOrderBase) GetWarehouseId() int64 {
	if x != nil {
		return x.WarehouseId
	}
	return 0
}

type OrderConfirmIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressInfo      *OrderAddress      `protobuf:"bytes,1,opt,name=addressInfo,proto3" json:"addressInfo"`
	PriceGroup       *ConfirmPriceGroup `protobuf:"bytes,2,opt,name=priceGroup,proto3" json:"priceGroup"` //订单基本信息
	CartInfo         []*CartItem        `protobuf:"bytes,3,rep,name=cartInfo,proto3" json:"cartInfo"`     //订单商品列表
	MemberInfo       *MemberInfo        `protobuf:"bytes,4,opt,name=memberInfo,proto3" json:"memberInfo"`
	AdvanceId        int64              `protobuf:"varint,6,opt,name=advance_id,json=advanceId,proto3" json:"advance_id"`
	BargainId        int64              `protobuf:"varint,7,opt,name=bargain_id,json=bargainId,proto3" json:"bargain_id"`
	CombinationId    int64              `protobuf:"varint,8,opt,name=combination_id,json=combinationId,proto3" json:"combination_id"`
	SeckillId        int64              `protobuf:"varint,9,opt,name=seckill_id,json=seckillId,proto3" json:"seckill_id"`
	SpecialInvoice   bool               `protobuf:"varint,10,opt,name=special_invoice,json=specialInvoice,proto3" json:"special_invoice"`
	UsableIntegral   int64              `protobuf:"varint,11,opt,name=usable_integral,json=usableIntegral,proto3" json:"usable_integral"`
	Deduction        bool               `protobuf:"varint,12,opt,name=deduction,proto3" json:"deduction"`
	IntegralRatio    float32            `protobuf:"fixed32,13,opt,name=integral_ratio,json=integralRatio,proto3" json:"integral_ratio"`
	IntegralOpen     bool               `protobuf:"varint,15,opt,name=integral_open,json=integralOpen,proto3" json:"integral_open"`
	AliPayStatus     bool               `protobuf:"varint,16,opt,name=ali_pay_status,json=aliPayStatus,proto3" json:"ali_pay_status"`
	FriendPayStatus  bool               `protobuf:"varint,17,opt,name=friend_pay_status,json=friendPayStatus,proto3" json:"friend_pay_status"`
	YuePayStatus     bool               `protobuf:"varint,18,opt,name=yue_pay_status,json=yuePayStatus,proto3" json:"yue_pay_status"`
	OfflinePayStatus bool               `protobuf:"varint,19,opt,name=offline_pay_status,json=offlinePayStatus,proto3" json:"offline_pay_status"`
	StoreSelfMention bool               `protobuf:"varint,20,opt,name=store_self_mention,json=storeSelfMention,proto3" json:"store_self_mention"`
	VirtualType      int64              `protobuf:"varint,21,opt,name=virtual_type,json=virtualType,proto3" json:"virtual_type"`
	ValidCount       int64              `protobuf:"varint,22,opt,name=valid_count,json=validCount,proto3" json:"valid_count"`
	StoreFreePostage int64              `protobuf:"varint,23,opt,name=storeFreePostage,proto3" json:"storeFreePostage"`
	CustomForm       []string           `protobuf:"bytes,24,rep,name=custom_form,json=customForm,proto3" json:"custom_form"`
	OrderKey         string             `protobuf:"bytes,25,opt,name=orderKey,proto3" json:"orderKey"`
	UseCouponId      int64              `protobuf:"varint,26,opt,name=use_coupon_id,json=useCouponId,proto3" json:"use_coupon_id"`       //选择的优惠劵ID
	OrderIncreases   []*OrderIncrease   `protobuf:"bytes,27,rep,name=order_increases,json=orderIncreases,proto3" json:"order_increases"` //订单增加数据
	OrderDiscounts   []*OrderDiscount   `protobuf:"bytes,28,rep,name=order_discounts,json=orderDiscounts,proto3" json:"order_discounts"` //订单优惠数据
}

func (x *OrderConfirmIndex) Reset() {
	*x = OrderConfirmIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderConfirmService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderConfirmIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderConfirmIndex) ProtoMessage() {}

func (x *OrderConfirmIndex) ProtoReflect() protoreflect.Message {
	mi := &file_orderConfirmService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderConfirmIndex.ProtoReflect.Descriptor instead.
func (*OrderConfirmIndex) Descriptor() ([]byte, []int) {
	return file_orderConfirmService_proto_rawDescGZIP(), []int{3}
}

func (x *OrderConfirmIndex) GetAddressInfo() *OrderAddress {
	if x != nil {
		return x.AddressInfo
	}
	return nil
}

func (x *OrderConfirmIndex) GetPriceGroup() *ConfirmPriceGroup {
	if x != nil {
		return x.PriceGroup
	}
	return nil
}

func (x *OrderConfirmIndex) GetCartInfo() []*CartItem {
	if x != nil {
		return x.CartInfo
	}
	return nil
}

func (x *OrderConfirmIndex) GetMemberInfo() *MemberInfo {
	if x != nil {
		return x.MemberInfo
	}
	return nil
}

func (x *OrderConfirmIndex) GetAdvanceId() int64 {
	if x != nil {
		return x.AdvanceId
	}
	return 0
}

func (x *OrderConfirmIndex) GetBargainId() int64 {
	if x != nil {
		return x.BargainId
	}
	return 0
}

func (x *OrderConfirmIndex) GetCombinationId() int64 {
	if x != nil {
		return x.CombinationId
	}
	return 0
}

func (x *OrderConfirmIndex) GetSeckillId() int64 {
	if x != nil {
		return x.SeckillId
	}
	return 0
}

func (x *OrderConfirmIndex) GetSpecialInvoice() bool {
	if x != nil {
		return x.SpecialInvoice
	}
	return false
}

func (x *OrderConfirmIndex) GetUsableIntegral() int64 {
	if x != nil {
		return x.UsableIntegral
	}
	return 0
}

func (x *OrderConfirmIndex) GetDeduction() bool {
	if x != nil {
		return x.Deduction
	}
	return false
}

func (x *OrderConfirmIndex) GetIntegralRatio() float32 {
	if x != nil {
		return x.IntegralRatio
	}
	return 0
}

func (x *OrderConfirmIndex) GetIntegralOpen() bool {
	if x != nil {
		return x.IntegralOpen
	}
	return false
}

func (x *OrderConfirmIndex) GetAliPayStatus() bool {
	if x != nil {
		return x.AliPayStatus
	}
	return false
}

func (x *OrderConfirmIndex) GetFriendPayStatus() bool {
	if x != nil {
		return x.FriendPayStatus
	}
	return false
}

func (x *OrderConfirmIndex) GetYuePayStatus() bool {
	if x != nil {
		return x.YuePayStatus
	}
	return false
}

func (x *OrderConfirmIndex) GetOfflinePayStatus() bool {
	if x != nil {
		return x.OfflinePayStatus
	}
	return false
}

func (x *OrderConfirmIndex) GetStoreSelfMention() bool {
	if x != nil {
		return x.StoreSelfMention
	}
	return false
}

func (x *OrderConfirmIndex) GetVirtualType() int64 {
	if x != nil {
		return x.VirtualType
	}
	return 0
}

func (x *OrderConfirmIndex) GetValidCount() int64 {
	if x != nil {
		return x.ValidCount
	}
	return 0
}

func (x *OrderConfirmIndex) GetStoreFreePostage() int64 {
	if x != nil {
		return x.StoreFreePostage
	}
	return 0
}

func (x *OrderConfirmIndex) GetCustomForm() []string {
	if x != nil {
		return x.CustomForm
	}
	return nil
}

func (x *OrderConfirmIndex) GetOrderKey() string {
	if x != nil {
		return x.OrderKey
	}
	return ""
}

func (x *OrderConfirmIndex) GetUseCouponId() int64 {
	if x != nil {
		return x.UseCouponId
	}
	return 0
}

func (x *OrderConfirmIndex) GetOrderIncreases() []*OrderIncrease {
	if x != nil {
		return x.OrderIncreases
	}
	return nil
}

func (x *OrderConfirmIndex) GetOrderDiscounts() []*OrderDiscount {
	if x != nil {
		return x.OrderDiscounts
	}
	return nil
}

// 订单价格组
type ConfirmPriceGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalAmount     int64   `protobuf:"varint,1,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount"`               //订单总价
	FinalAmount     int64   `protobuf:"varint,2,opt,name=final_amount,json=finalAmount,proto3" json:"final_amount"`               //订单实付金额(已减去优惠金额, 已加上增加金额)
	IncreaseAmount  int64   `protobuf:"varint,3,opt,name=increase_amount,json=increaseAmount,proto3" json:"increase_amount"`      //增加金额
	DiscountAmount  int64   `protobuf:"varint,4,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount"`      //优惠金额
	BuyCount        float32 `protobuf:"fixed32,5,opt,name=buy_count,json=buyCount,proto3" json:"buy_count"`                       //购买商品总数量(总件数+总称重（千克）)
	BuyCountNumber  int64   `protobuf:"varint,6,opt,name=buy_count_number,json=buyCountNumber,proto3" json:"buy_count_number"`    //购买商品总件数（非称重商品）
	BuyCountWeighed int64   `protobuf:"varint,7,opt,name=buy_count_weighed,json=buyCountWeighed,proto3" json:"buy_count_weighed"` //购买商品总称重（称重商品.克）
	SpecTotalWeight int64   `protobuf:"varint,8,opt,name=spec_total_weight,json=specTotalWeight,proto3" json:"spec_total_weight"` //规格重量合计
	SpecTotalVolume int64   `protobuf:"varint,9,opt,name=spec_total_volume,json=specTotalVolume,proto3" json:"spec_total_volume"` //规格体积合计
	UsedIntegral    int64   `protobuf:"varint,10,opt,name=used_integral,json=usedIntegral,proto3" json:"used_integral"`           //使用的积分
	UsedSurplus     int64   `protobuf:"varint,11,opt,name=used_surplus,json=usedSurplus,proto3" json:"used_surplus"`              //使用的余额
	MemberId        int64   `protobuf:"varint,12,opt,name=member_id,json=memberId,proto3" json:"member_id"`                       //会员ID
	WarehouseId     int64   `protobuf:"varint,13,opt,name=warehouse_id,json=warehouseId,proto3" json:"warehouse_id"`              //仓库ID
}

func (x *ConfirmPriceGroup) Reset() {
	*x = ConfirmPriceGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderConfirmService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfirmPriceGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfirmPriceGroup) ProtoMessage() {}

func (x *ConfirmPriceGroup) ProtoReflect() protoreflect.Message {
	mi := &file_orderConfirmService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfirmPriceGroup.ProtoReflect.Descriptor instead.
func (*ConfirmPriceGroup) Descriptor() ([]byte, []int) {
	return file_orderConfirmService_proto_rawDescGZIP(), []int{4}
}

func (x *ConfirmPriceGroup) GetTotalAmount() int64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *ConfirmPriceGroup) GetFinalAmount() int64 {
	if x != nil {
		return x.FinalAmount
	}
	return 0
}

func (x *ConfirmPriceGroup) GetIncreaseAmount() int64 {
	if x != nil {
		return x.IncreaseAmount
	}
	return 0
}

func (x *ConfirmPriceGroup) GetDiscountAmount() int64 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *ConfirmPriceGroup) GetBuyCount() float32 {
	if x != nil {
		return x.BuyCount
	}
	return 0
}

func (x *ConfirmPriceGroup) GetBuyCountNumber() int64 {
	if x != nil {
		return x.BuyCountNumber
	}
	return 0
}

func (x *ConfirmPriceGroup) GetBuyCountWeighed() int64 {
	if x != nil {
		return x.BuyCountWeighed
	}
	return 0
}

func (x *ConfirmPriceGroup) GetSpecTotalWeight() int64 {
	if x != nil {
		return x.SpecTotalWeight
	}
	return 0
}

func (x *ConfirmPriceGroup) GetSpecTotalVolume() int64 {
	if x != nil {
		return x.SpecTotalVolume
	}
	return 0
}

func (x *ConfirmPriceGroup) GetUsedIntegral() int64 {
	if x != nil {
		return x.UsedIntegral
	}
	return 0
}

func (x *ConfirmPriceGroup) GetUsedSurplus() int64 {
	if x != nil {
		return x.UsedSurplus
	}
	return 0
}

func (x *ConfirmPriceGroup) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *ConfirmPriceGroup) GetWarehouseId() int64 {
	if x != nil {
		return x.WarehouseId
	}
	return 0
}

type CheckShippingData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type"`
}

func (x *CheckShippingData) Reset() {
	*x = CheckShippingData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderConfirmService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckShippingData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckShippingData) ProtoMessage() {}

func (x *CheckShippingData) ProtoReflect() protoreflect.Message {
	mi := &file_orderConfirmService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckShippingData.ProtoReflect.Descriptor instead.
func (*CheckShippingData) Descriptor() ([]byte, []int) {
	return file_orderConfirmService_proto_rawDescGZIP(), []int{5}
}

func (x *CheckShippingData) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// 计算订单
type ComputedOrderData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SurplusIntegral      int64   `protobuf:"varint,1,opt,name=SurplusIntegral,proto3" json:"SurplusIntegral"`
	CouponPrice          float32 `protobuf:"fixed32,2,opt,name=coupon_price,json=couponPrice,proto3" json:"coupon_price"`
	DeductionPrice       float32 `protobuf:"fixed32,3,opt,name=deduction_price,json=deductionPrice,proto3" json:"deduction_price"`
	IsStoreFreePostage   bool    `protobuf:"varint,4,opt,name=isStoreFreePostage,proto3" json:"isStoreFreePostage"`
	PayPostage           int64   `protobuf:"varint,5,opt,name=pay_postage,json=payPostage,proto3" json:"pay_postage"`
	PayPrice             int64   `protobuf:"varint,6,opt,name=pay_price,json=payPrice,proto3" json:"pay_price"`
	StoreFreePostage     int64   `protobuf:"varint,7,opt,name=storeFreePostage,proto3" json:"storeFreePostage"`
	StorePostageDiscount int64   `protobuf:"varint,8,opt,name=storePostageDiscount,proto3" json:"storePostageDiscount"`
	TotalPrice           int64   `protobuf:"varint,9,opt,name=total_price,json=totalPrice,proto3" json:"total_price"`
	UsedIntegral         int64   `protobuf:"varint,10,opt,name=usedIntegral,proto3" json:"usedIntegral"`
}

func (x *ComputedOrderData) Reset() {
	*x = ComputedOrderData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderConfirmService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ComputedOrderData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ComputedOrderData) ProtoMessage() {}

func (x *ComputedOrderData) ProtoReflect() protoreflect.Message {
	mi := &file_orderConfirmService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ComputedOrderData.ProtoReflect.Descriptor instead.
func (*ComputedOrderData) Descriptor() ([]byte, []int) {
	return file_orderConfirmService_proto_rawDescGZIP(), []int{6}
}

func (x *ComputedOrderData) GetSurplusIntegral() int64 {
	if x != nil {
		return x.SurplusIntegral
	}
	return 0
}

func (x *ComputedOrderData) GetCouponPrice() float32 {
	if x != nil {
		return x.CouponPrice
	}
	return 0
}

func (x *ComputedOrderData) GetDeductionPrice() float32 {
	if x != nil {
		return x.DeductionPrice
	}
	return 0
}

func (x *ComputedOrderData) GetIsStoreFreePostage() bool {
	if x != nil {
		return x.IsStoreFreePostage
	}
	return false
}

func (x *ComputedOrderData) GetPayPostage() int64 {
	if x != nil {
		return x.PayPostage
	}
	return 0
}

func (x *ComputedOrderData) GetPayPrice() int64 {
	if x != nil {
		return x.PayPrice
	}
	return 0
}

func (x *ComputedOrderData) GetStoreFreePostage() int64 {
	if x != nil {
		return x.StoreFreePostage
	}
	return 0
}

func (x *ComputedOrderData) GetStorePostageDiscount() int64 {
	if x != nil {
		return x.StorePostageDiscount
	}
	return 0
}

func (x *ComputedOrderData) GetTotalPrice() int64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *ComputedOrderData) GetUsedIntegral() int64 {
	if x != nil {
		return x.UsedIntegral
	}
	return 0
}

type OrderConfirmCreateResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string `protobuf:"bytes,1,opt,name=key,proto3" json:"key"`
	OrderId string `protobuf:"bytes,2,opt,name=orderId,proto3" json:"orderId"`
}

func (x *OrderConfirmCreateResult) Reset() {
	*x = OrderConfirmCreateResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderConfirmService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderConfirmCreateResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderConfirmCreateResult) ProtoMessage() {}

func (x *OrderConfirmCreateResult) ProtoReflect() protoreflect.Message {
	mi := &file_orderConfirmService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderConfirmCreateResult.ProtoReflect.Descriptor instead.
func (*OrderConfirmCreateResult) Descriptor() ([]byte, []int) {
	return file_orderConfirmService_proto_rawDescGZIP(), []int{7}
}

func (x *OrderConfirmCreateResult) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *OrderConfirmCreateResult) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

// 购买提交数据
type OrderConfirmCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *OrderConfirmCreateResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
	Status string                    `protobuf:"bytes,2,opt,name=status,proto3" json:"status"`
}

func (x *OrderConfirmCreate) Reset() {
	*x = OrderConfirmCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderConfirmService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderConfirmCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderConfirmCreate) ProtoMessage() {}

func (x *OrderConfirmCreate) ProtoReflect() protoreflect.Message {
	mi := &file_orderConfirmService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderConfirmCreate.ProtoReflect.Descriptor instead.
func (*OrderConfirmCreate) Descriptor() ([]byte, []int) {
	return file_orderConfirmService_proto_rawDescGZIP(), []int{8}
}

func (x *OrderConfirmCreate) GetResult() *OrderConfirmCreateResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *OrderConfirmCreate) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// 确认信息请求参数
type OrderConfirmRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuyMode         string  `protobuf:"bytes,1,opt,name=buy_mode,json=buyMode,proto3" json:"buy_mode"`                          //购买模式: direct-直接购买,cart-购物车下单，cashier-收银台下单
	AddressType     string  `protobuf:"bytes,2,opt,name=address_type,json=addressType,proto3" json:"address_type"`              //收货地址类型：1-用户地址：2-自提点地址
	AddressId       int64   `protobuf:"varint,3,opt,name=address_id,json=addressId,proto3" json:"address_id"`                   //收货地址ID
	UserNote        string  `protobuf:"bytes,4,opt,name=user_note,json=userNote,proto3" json:"user_note"`                       //买家留言(50字以内)
	CouponId        int64   `protobuf:"varint,6,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id"`                      //选中的优惠劵凭证ID
	UseIntegral     int64   `protobuf:"varint,7,opt,name=use_integral,json=useIntegral,proto3" json:"use_integral"`             //使用的积分
	UseSurplus      int64   `protobuf:"varint,8,opt,name=use_surplus,json=useSurplus,proto3" json:"use_surplus"`                //使用的余额
	AgentMemberId   int64   `protobuf:"varint,9,opt,name=agent_member_id,json=agentMemberId,proto3" json:"agent_member_id"`     //代理的客户ID（操作员代客下单）
	RealstoreId     int64   `protobuf:"varint,10,opt,name=realstore_id,json=realstoreId,proto3" json:"realstore_id"`            //多门店Id
	ShopId          int64   `protobuf:"varint,11,opt,name=shop_id,json=shopId,proto3" json:"shop_id"`                           //多商户Id
	LocationLng     float32 `protobuf:"fixed32,12,opt,name=location_lng,json=locationLng,proto3" json:"location_lng"`           //位置经度
	LocationLat     float32 `protobuf:"fixed32,13,opt,name=location_lat,json=locationLat,proto3" json:"location_lat"`           //位置纬度
	LocationAddress string  `protobuf:"bytes,14,opt,name=location_address,json=locationAddress,proto3" json:"location_address"` //位置地址信息
	LogisticsType   string  `protobuf:"bytes,15,opt,name=logistics_type,json=logisticsType,proto3" json:"logistics_type"`       //物流类型：1-快递发货，2-同城配送，3-用户自提，4-虚拟发货(无需物流)
	ChoiceCouponId  int64   `protobuf:"varint,16,opt,name=choice_coupon_id,json=choiceCouponId,proto3" json:"choice_coupon_id"` //选中优惠劵
	CartIds         []int64 `protobuf:"varint,17,rep,packed,name=cart_ids,json=cartIds,proto3" json:"cart_ids"`                 //购物车IDS
	ShippingType    int32   `protobuf:"varint,18,opt,name=shipping_type,json=shippingType,proto3" json:"shipping_type"`         //发货类型：需要转换为logistics_type 可以用
	New             bool    `protobuf:"varint,20,opt,name=new,proto3" json:"new"`
	CartId          string  `protobuf:"bytes,21,opt,name=cartId,proto3" json:"cartId"` //购物车ids
	Key             string  `protobuf:"bytes,22,opt,name=key,proto3" json:"key"`
}

func (x *OrderConfirmRequest) Reset() {
	*x = OrderConfirmRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderConfirmService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderConfirmRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderConfirmRequest) ProtoMessage() {}

func (x *OrderConfirmRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orderConfirmService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderConfirmRequest.ProtoReflect.Descriptor instead.
func (*OrderConfirmRequest) Descriptor() ([]byte, []int) {
	return file_orderConfirmService_proto_rawDescGZIP(), []int{9}
}

func (x *OrderConfirmRequest) GetBuyMode() string {
	if x != nil {
		return x.BuyMode
	}
	return ""
}

func (x *OrderConfirmRequest) GetAddressType() string {
	if x != nil {
		return x.AddressType
	}
	return ""
}

func (x *OrderConfirmRequest) GetAddressId() int64 {
	if x != nil {
		return x.AddressId
	}
	return 0
}

func (x *OrderConfirmRequest) GetUserNote() string {
	if x != nil {
		return x.UserNote
	}
	return ""
}

func (x *OrderConfirmRequest) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *OrderConfirmRequest) GetUseIntegral() int64 {
	if x != nil {
		return x.UseIntegral
	}
	return 0
}

func (x *OrderConfirmRequest) GetUseSurplus() int64 {
	if x != nil {
		return x.UseSurplus
	}
	return 0
}

func (x *OrderConfirmRequest) GetAgentMemberId() int64 {
	if x != nil {
		return x.AgentMemberId
	}
	return 0
}

func (x *OrderConfirmRequest) GetRealstoreId() int64 {
	if x != nil {
		return x.RealstoreId
	}
	return 0
}

func (x *OrderConfirmRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *OrderConfirmRequest) GetLocationLng() float32 {
	if x != nil {
		return x.LocationLng
	}
	return 0
}

func (x *OrderConfirmRequest) GetLocationLat() float32 {
	if x != nil {
		return x.LocationLat
	}
	return 0
}

func (x *OrderConfirmRequest) GetLocationAddress() string {
	if x != nil {
		return x.LocationAddress
	}
	return ""
}

func (x *OrderConfirmRequest) GetLogisticsType() string {
	if x != nil {
		return x.LogisticsType
	}
	return ""
}

func (x *OrderConfirmRequest) GetChoiceCouponId() int64 {
	if x != nil {
		return x.ChoiceCouponId
	}
	return 0
}

func (x *OrderConfirmRequest) GetCartIds() []int64 {
	if x != nil {
		return x.CartIds
	}
	return nil
}

func (x *OrderConfirmRequest) GetShippingType() int32 {
	if x != nil {
		return x.ShippingType
	}
	return 0
}

func (x *OrderConfirmRequest) GetNew() bool {
	if x != nil {
		return x.New
	}
	return false
}

func (x *OrderConfirmRequest) GetCartId() string {
	if x != nil {
		return x.CartId
	}
	return ""
}

func (x *OrderConfirmRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type OrderConfirmResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Index         *OrderConfirmIndex  `protobuf:"bytes,1,opt,name=index,proto3" json:"index"`
	Create        *OrderConfirmCreate `protobuf:"bytes,2,opt,name=create,proto3" json:"create"`
	ComputedOrder *ComputedOrderData  `protobuf:"bytes,3,opt,name=computed_order,json=computedOrder,proto3" json:"computed_order"`
	CheckShipping *CheckShippingData  `protobuf:"bytes,4,opt,name=check_shipping,json=checkShipping,proto3" json:"check_shipping"`
	CouponList    []byte              `protobuf:"bytes,5,opt,name=coupon_list,json=couponList,proto3" json:"coupon_list"`
}

func (x *OrderConfirmResponse) Reset() {
	*x = OrderConfirmResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderConfirmService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderConfirmResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderConfirmResponse) ProtoMessage() {}

func (x *OrderConfirmResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orderConfirmService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderConfirmResponse.ProtoReflect.Descriptor instead.
func (*OrderConfirmResponse) Descriptor() ([]byte, []int) {
	return file_orderConfirmService_proto_rawDescGZIP(), []int{10}
}

func (x *OrderConfirmResponse) GetIndex() *OrderConfirmIndex {
	if x != nil {
		return x.Index
	}
	return nil
}

func (x *OrderConfirmResponse) GetCreate() *OrderConfirmCreate {
	if x != nil {
		return x.Create
	}
	return nil
}

func (x *OrderConfirmResponse) GetComputedOrder() *ComputedOrderData {
	if x != nil {
		return x.ComputedOrder
	}
	return nil
}

func (x *OrderConfirmResponse) GetCheckShipping() *CheckShippingData {
	if x != nil {
		return x.CheckShipping
	}
	return nil
}

func (x *OrderConfirmResponse) GetCouponList() []byte {
	if x != nil {
		return x.CouponList
	}
	return nil
}

var File_orderConfirmService_proto protoreflect.FileDescriptor

var file_orderConfirmService_proto_rawDesc = []byte{
	0x0a, 0x19, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x19, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x15, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x63, 0x61, 0x72, 0x74, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe1, 0x02, 0x0a, 0x08, 0x42,
	0x75, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x35, 0x0a, 0x09, 0x77, 0x61, 0x72, 0x65, 0x68,
	0x6f, 0x75, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x35,
	0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x75,
	0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x61, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x40,
	0x0a, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65,
	0x52, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x73,
	0x12, 0x40, 0x0a, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x52, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0f, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x22, 0xf2,
	0x03, 0x0a, 0x0c, 0x42, 0x75, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x17, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x63, 0x61, 0x72, 0x74, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x70, 0x75, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x70, 0x75, 0x49, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x5f,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x70,
	0x65, 0x63, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x70, 0x65, 0x63,
	0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73,
	0x70, 0x65, 0x63, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x75, 0x65, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x72, 0x75, 0x65, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x76, 0x69, 0x70, 0x5f, 0x74, 0x72, 0x75, 0x65, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x76, 0x69, 0x70,
	0x54, 0x72, 0x75, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x49, 0x6e, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x6d, 0x73,
	0x67, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x4d, 0x73, 0x67, 0x22, 0xf5, 0x03, 0x0a, 0x0c, 0x42, 0x75, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x61, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x6e, 0x61, 0x6c,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66,
	0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e,
	0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09,
	0x62, 0x75, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x08, 0x62, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x75, 0x79,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x62, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x75, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x62, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68, 0x65, 0x64, 0x12,
	0x2a, 0x0a, 0x11, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x70, 0x65, 0x63,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x73,
	0x70, 0x65, 0x63, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x70, 0x65, 0x63, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75,
	0x73, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73,
	0x65, 0x5f, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x75, 0x73, 0x65, 0x53, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61, 0x72, 0x65,
	0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x22, 0xd9, 0x08, 0x0a, 0x11,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x12, 0x38, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0b,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3b, 0x0a, 0x0a, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x0a, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2e, 0x0a, 0x08, 0x63, 0x61, 0x72, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x08,
	0x63, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x34, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d,
	0x0a, 0x0a, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e,
	0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c,
	0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x6e,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x70, 0x65,
	0x63, 0x69, 0x61, 0x6c, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x75,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x5f, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x4f, 0x70, 0x65, 0x6e, 0x12, 0x24,
	0x0a, 0x0e, 0x61, 0x6c, 0x69, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x6c, 0x69, 0x50, 0x61, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x70,
	0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x24, 0x0a, 0x0e, 0x79, 0x75, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x79, 0x75, 0x65, 0x50, 0x61, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x13, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x73, 0x65,
	0x6c, 0x66, 0x5f, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x4d, 0x65, 0x6e, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x46,
	0x72, 0x65, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x46, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x61,
	0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x66, 0x6f, 0x72,
	0x6d, 0x18, 0x18, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46,
	0x6f, 0x72, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12,
	0x22, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x63,
	0x72, 0x65, 0x61, 0x73, 0x65, 0x73, 0x18, 0x1b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x63,
	0x72, 0x65, 0x61, 0x73, 0x65, 0x52, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x72,
	0x65, 0x61, 0x73, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x1c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22, 0xfe, 0x03, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x21, 0x0a,
	0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x69, 0x6e,
	0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x79, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x62, 0x75, 0x79, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x75, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x62, 0x75,
	0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x11,
	0x62, 0x75, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x65,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x62, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x57, 0x65, 0x69, 0x67, 0x68, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x70, 0x65, 0x63,
	0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x70, 0x65, 0x63, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0f, 0x73, 0x70, 0x65, 0x63, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x64, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x73, 0x75,
	0x72, 0x70, 0x6c, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x73, 0x65,
	0x64, 0x53, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x77, 0x61, 0x72,
	0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x22, 0x27, 0x0a, 0x11, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x22, 0x9c, 0x03, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x64, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x0f, 0x53, 0x75, 0x72, 0x70, 0x6c,
	0x75, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x53, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x64,
	0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2e, 0x0a,
	0x12, 0x69, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x46, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x73, 0x74,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x73, 0x53, 0x74, 0x6f,
	0x72, 0x65, 0x46, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x70, 0x61, 0x79, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x79, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x61, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x46, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x46, 0x72, 0x65, 0x65,
	0x50, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x50, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x6f, 0x73, 0x74,
	0x61, 0x67, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x75, 0x73, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c,
	0x22, 0x46, 0x0a, 0x18, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x18,
	0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x68, 0x0a, 0x12, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x3a,
	0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x22, 0x92, 0x05, 0x0a, 0x13, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75,
	0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x75,
	0x79, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x6e, 0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x75, 0x72, 0x70,
	0x6c, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x53, 0x75,
	0x72, 0x70, 0x6c, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x0c,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x74, 0x12,
	0x29, 0x0a, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x6f,
	0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x68, 0x6f,
	0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63,
	0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x03, 0x52, 0x07, 0x63,
	0x61, 0x72, 0x74, 0x49, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6e,
	0x65, 0x77, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x6e, 0x65, 0x77, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x61, 0x72, 0x74, 0x49, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63,
	0x61, 0x72, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0xa8, 0x02, 0x0a, 0x14, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x31, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x05, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x34, 0x0a, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x52, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x63, 0x6f, 0x6d,
	0x70, 0x75, 0x74, 0x65, 0x64, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6d,
	0x70, 0x75, 0x74, 0x65, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d,
	0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x42, 0x0a,
	0x0e, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e,
	0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4c, 0x69,
	0x73, 0x74, 0x32, 0x9d, 0x03, 0x0a, 0x13, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x05, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x68, 0x69,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0d, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x65, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0a, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_orderConfirmService_proto_rawDescOnce sync.Once
	file_orderConfirmService_proto_rawDescData = file_orderConfirmService_proto_rawDesc
)

func file_orderConfirmService_proto_rawDescGZIP() []byte {
	file_orderConfirmService_proto_rawDescOnce.Do(func() {
		file_orderConfirmService_proto_rawDescData = protoimpl.X.CompressGZIP(file_orderConfirmService_proto_rawDescData)
	})
	return file_orderConfirmService_proto_rawDescData
}

var file_orderConfirmService_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_orderConfirmService_proto_goTypes = []interface{}{
	(*BuyGroup)(nil),                 // 0: services.BuyGroup
	(*BuyOrderItem)(nil),             // 1: services.BuyOrderItem
	(*BuyOrderBase)(nil),             // 2: services.BuyOrderBase
	(*OrderConfirmIndex)(nil),        // 3: services.OrderConfirmIndex
	(*ConfirmPriceGroup)(nil),        // 4: services.ConfirmPriceGroup
	(*CheckShippingData)(nil),        // 5: services.CheckShippingData
	(*ComputedOrderData)(nil),        // 6: services.ComputedOrderData
	(*OrderConfirmCreateResult)(nil), // 7: services.OrderConfirmCreateResult
	(*OrderConfirmCreate)(nil),       // 8: services.OrderConfirmCreate
	(*OrderConfirmRequest)(nil),      // 9: services.OrderConfirmRequest
	(*OrderConfirmResponse)(nil),     // 10: services.OrderConfirmResponse
	(*WarehouseInfo)(nil),            // 11: services.WarehouseInfo
	(*OrderIncrease)(nil),            // 12: services.OrderIncrease
	(*OrderDiscount)(nil),            // 13: services.OrderDiscount
	(*ProductInfo)(nil),              // 14: services.ProductInfo
	(*OrderAddress)(nil),             // 15: services.OrderAddress
	(*CartItem)(nil),                 // 16: services.CartItem
	(*MemberInfo)(nil),               // 17: services.MemberInfo
}
var file_orderConfirmService_proto_depIdxs = []int32{
	11, // 0: services.BuyGroup.warehouse:type_name -> services.WarehouseInfo
	2,  // 1: services.BuyGroup.order_base:type_name -> services.BuyOrderBase
	1,  // 2: services.BuyGroup.order_items:type_name -> services.BuyOrderItem
	12, // 3: services.BuyGroup.order_increases:type_name -> services.OrderIncrease
	13, // 4: services.BuyGroup.order_discounts:type_name -> services.OrderDiscount
	14, // 5: services.BuyOrderItem.product:type_name -> services.ProductInfo
	15, // 6: services.OrderConfirmIndex.addressInfo:type_name -> services.OrderAddress
	4,  // 7: services.OrderConfirmIndex.priceGroup:type_name -> services.ConfirmPriceGroup
	16, // 8: services.OrderConfirmIndex.cartInfo:type_name -> services.CartItem
	17, // 9: services.OrderConfirmIndex.memberInfo:type_name -> services.MemberInfo
	12, // 10: services.OrderConfirmIndex.order_increases:type_name -> services.OrderIncrease
	13, // 11: services.OrderConfirmIndex.order_discounts:type_name -> services.OrderDiscount
	7,  // 12: services.OrderConfirmCreate.result:type_name -> services.OrderConfirmCreateResult
	3,  // 13: services.OrderConfirmResponse.index:type_name -> services.OrderConfirmIndex
	8,  // 14: services.OrderConfirmResponse.create:type_name -> services.OrderConfirmCreate
	6,  // 15: services.OrderConfirmResponse.computed_order:type_name -> services.ComputedOrderData
	5,  // 16: services.OrderConfirmResponse.check_shipping:type_name -> services.CheckShippingData
	9,  // 17: services.OrderConfirmService.Index:input_type -> services.OrderConfirmRequest
	9,  // 18: services.OrderConfirmService.CheckShipping:input_type -> services.OrderConfirmRequest
	9,  // 19: services.OrderConfirmService.ComputedOrder:input_type -> services.OrderConfirmRequest
	9,  // 20: services.OrderConfirmService.CouponList:input_type -> services.OrderConfirmRequest
	9,  // 21: services.OrderConfirmService.Create:input_type -> services.OrderConfirmRequest
	10, // 22: services.OrderConfirmService.Index:output_type -> services.OrderConfirmResponse
	10, // 23: services.OrderConfirmService.CheckShipping:output_type -> services.OrderConfirmResponse
	10, // 24: services.OrderConfirmService.ComputedOrder:output_type -> services.OrderConfirmResponse
	10, // 25: services.OrderConfirmService.CouponList:output_type -> services.OrderConfirmResponse
	10, // 26: services.OrderConfirmService.Create:output_type -> services.OrderConfirmResponse
	22, // [22:27] is the sub-list for method output_type
	17, // [17:22] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_orderConfirmService_proto_init() }
func file_orderConfirmService_proto_init() {
	if File_orderConfirmService_proto != nil {
		return
	}
	file_orderAddressService_proto_init()
	file_baseInfoService_proto_init()
	file_cartService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_orderConfirmService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderConfirmService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyOrderItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderConfirmService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyOrderBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderConfirmService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderConfirmIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderConfirmService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfirmPriceGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderConfirmService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckShippingData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderConfirmService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ComputedOrderData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderConfirmService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderConfirmCreateResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderConfirmService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderConfirmCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderConfirmService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderConfirmRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderConfirmService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderConfirmResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_orderConfirmService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_orderConfirmService_proto_goTypes,
		DependencyIndexes: file_orderConfirmService_proto_depIdxs,
		MessageInfos:      file_orderConfirmService_proto_msgTypes,
	}.Build()
	File_orderConfirmService_proto = out.File
	file_orderConfirmService_proto_rawDesc = nil
	file_orderConfirmService_proto_goTypes = nil
	file_orderConfirmService_proto_depIdxs = nil
}
