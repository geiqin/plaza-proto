// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: buyOrderService.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrderPriceGroupInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StorePostage         int64 `protobuf:"varint,1,opt,name=storePostage,proto3" json:"storePostage"`
	StoreFreePostage     int64 `protobuf:"varint,2,opt,name=storeFreePostage,proto3" json:"storeFreePostage"`
	IsStoreFreePostage   bool  `protobuf:"varint,3,opt,name=isStoreFreePostage,proto3" json:"isStoreFreePostage"`
	StorePostageDiscount int64 `protobuf:"varint,4,opt,name=storePostageDiscount,proto3" json:"storePostageDiscount"`
	SumPrice             int64 `protobuf:"varint,5,opt,name=sumPrice,proto3" json:"sumPrice"`        //获取订单原总金额
	TotalPrice           int64 `protobuf:"varint,6,opt,name=totalPrice,proto3" json:"totalPrice"`    //获取订单svip、用户等级优惠之后总金额
	CostPrice            int64 `protobuf:"varint,7,opt,name=costPrice,proto3" json:"costPrice"`      //获取订单成本价
	VipPrice             int64 `protobuf:"varint,8,opt,name=vipPrice,proto3" json:"vipPrice"`        //获取订单等级和付费会员总优惠金额
	LevelPrice           int64 `protobuf:"varint,9,opt,name=levelPrice,proto3" json:"levelPrice"`    //获取会员等级优惠
	MemberPrice          int64 `protobuf:"varint,10,opt,name=memberPrice,proto3" json:"memberPrice"` //获取付费会员优惠
	GiftPrice            int64 `protobuf:"varint,11,opt,name=giftPrice,proto3" json:"giftPrice"`
}

func (x *OrderPriceGroupInfo) Reset() {
	*x = OrderPriceGroupInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buyOrderService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPriceGroupInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPriceGroupInfo) ProtoMessage() {}

func (x *OrderPriceGroupInfo) ProtoReflect() protoreflect.Message {
	mi := &file_buyOrderService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPriceGroupInfo.ProtoReflect.Descriptor instead.
func (*OrderPriceGroupInfo) Descriptor() ([]byte, []int) {
	return file_buyOrderService_proto_rawDescGZIP(), []int{0}
}

func (x *OrderPriceGroupInfo) GetStorePostage() int64 {
	if x != nil {
		return x.StorePostage
	}
	return 0
}

func (x *OrderPriceGroupInfo) GetStoreFreePostage() int64 {
	if x != nil {
		return x.StoreFreePostage
	}
	return 0
}

func (x *OrderPriceGroupInfo) GetIsStoreFreePostage() bool {
	if x != nil {
		return x.IsStoreFreePostage
	}
	return false
}

func (x *OrderPriceGroupInfo) GetStorePostageDiscount() int64 {
	if x != nil {
		return x.StorePostageDiscount
	}
	return 0
}

func (x *OrderPriceGroupInfo) GetSumPrice() int64 {
	if x != nil {
		return x.SumPrice
	}
	return 0
}

func (x *OrderPriceGroupInfo) GetTotalPrice() int64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *OrderPriceGroupInfo) GetCostPrice() int64 {
	if x != nil {
		return x.CostPrice
	}
	return 0
}

func (x *OrderPriceGroupInfo) GetVipPrice() int64 {
	if x != nil {
		return x.VipPrice
	}
	return 0
}

func (x *OrderPriceGroupInfo) GetLevelPrice() int64 {
	if x != nil {
		return x.LevelPrice
	}
	return 0
}

func (x *OrderPriceGroupInfo) GetMemberPrice() int64 {
	if x != nil {
		return x.MemberPrice
	}
	return 0
}

func (x *OrderPriceGroupInfo) GetGiftPrice() int64 {
	if x != nil {
		return x.GiftPrice
	}
	return 0
}

type BuyOrderConfirmData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressInfo      *OrderAddress        `protobuf:"bytes,1,opt,name=addressInfo,proto3" json:"addressInfo"` //收货地址
	PriceGroup       *OrderPriceGroupInfo `protobuf:"bytes,2,opt,name=priceGroup,proto3" json:"priceGroup"`   //下单价格组
	CartInfo         []*CartItem          `protobuf:"bytes,3,rep,name=cartInfo,proto3" json:"cartInfo"`       //下单购买清单
	UserInfo         *MemberInfo          `protobuf:"bytes,4,opt,name=userInfo,proto3" json:"userInfo"`       //购买用户信息
	AdvanceId        int64                `protobuf:"varint,6,opt,name=advance_id,json=advanceId,proto3" json:"advance_id"`
	BargainId        int64                `protobuf:"varint,7,opt,name=bargain_id,json=bargainId,proto3" json:"bargain_id"`
	CombinationId    int64                `protobuf:"varint,8,opt,name=combination_id,json=combinationId,proto3" json:"combination_id"`
	SeckillId        int64                `protobuf:"varint,9,opt,name=seckill_id,json=seckillId,proto3" json:"seckill_id"`
	UsableIntegral   int64                `protobuf:"varint,11,opt,name=usable_integral,json=usableIntegral,proto3" json:"usable_integral"`
	Deduction        bool                 `protobuf:"varint,12,opt,name=deduction,proto3" json:"deduction"`
	IntegralRatio    float32              `protobuf:"fixed32,13,opt,name=integral_ratio,json=integralRatio,proto3" json:"integral_ratio"`
	IntegralOpen     bool                 `protobuf:"varint,15,opt,name=integral_open,json=integralOpen,proto3" json:"integral_open"`
	AliPayStatus     bool                 `protobuf:"varint,16,opt,name=ali_pay_status,json=aliPayStatus,proto3" json:"ali_pay_status"`
	FriendPayStatus  bool                 `protobuf:"varint,17,opt,name=friend_pay_status,json=friendPayStatus,proto3" json:"friend_pay_status"`
	YuePayStatus     bool                 `protobuf:"varint,18,opt,name=yue_pay_status,json=yuePayStatus,proto3" json:"yue_pay_status"`
	OfflinePayStatus bool                 `protobuf:"varint,19,opt,name=offline_pay_status,json=offlinePayStatus,proto3" json:"offline_pay_status"`
	StoreSelfMention bool                 `protobuf:"varint,20,opt,name=store_self_mention,json=storeSelfMention,proto3" json:"store_self_mention"`
	VirtualType      int64                `protobuf:"varint,21,opt,name=virtual_type,json=virtualType,proto3" json:"virtual_type"`
	ValidCount       int64                `protobuf:"varint,22,opt,name=valid_count,json=validCount,proto3" json:"valid_count"`
	StoreFreePostage int64                `protobuf:"varint,23,opt,name=storeFreePostage,proto3" json:"storeFreePostage"` //满额包邮
	OfflinePostage   bool                 `protobuf:"varint,24,opt,name=offlinePostage,proto3" json:"offlinePostage"`     //线下支付是否包邮
	InvoiceFunc      bool                 `protobuf:"varint,25,opt,name=invoice_func,json=invoiceFunc,proto3" json:"invoice_func"`
	SpecialInvoice   bool                 `protobuf:"varint,26,opt,name=special_invoice,json=specialInvoice,proto3" json:"special_invoice"`
	CustomForm       []string             `protobuf:"bytes,28,rep,name=custom_form,json=customForm,proto3" json:"custom_form"`
	OrderKey         string               `protobuf:"bytes,29,opt,name=orderKey,proto3" json:"orderKey"`
	UseCouponId      int64                `protobuf:"varint,30,opt,name=use_coupon_id,json=useCouponId,proto3" json:"use_coupon_id"`       //选择的优惠劵ID
	OrderIncreases   []*OrderIncrease     `protobuf:"bytes,31,rep,name=order_increases,json=orderIncreases,proto3" json:"order_increases"` //订单增加数据
	OrderDiscounts   []*OrderDiscount     `protobuf:"bytes,32,rep,name=order_discounts,json=orderDiscounts,proto3" json:"order_discounts"` //订单优惠数据
}

func (x *BuyOrderConfirmData) Reset() {
	*x = BuyOrderConfirmData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buyOrderService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyOrderConfirmData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyOrderConfirmData) ProtoMessage() {}

func (x *BuyOrderConfirmData) ProtoReflect() protoreflect.Message {
	mi := &file_buyOrderService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyOrderConfirmData.ProtoReflect.Descriptor instead.
func (*BuyOrderConfirmData) Descriptor() ([]byte, []int) {
	return file_buyOrderService_proto_rawDescGZIP(), []int{1}
}

func (x *BuyOrderConfirmData) GetAddressInfo() *OrderAddress {
	if x != nil {
		return x.AddressInfo
	}
	return nil
}

func (x *BuyOrderConfirmData) GetPriceGroup() *OrderPriceGroupInfo {
	if x != nil {
		return x.PriceGroup
	}
	return nil
}

func (x *BuyOrderConfirmData) GetCartInfo() []*CartItem {
	if x != nil {
		return x.CartInfo
	}
	return nil
}

func (x *BuyOrderConfirmData) GetUserInfo() *MemberInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *BuyOrderConfirmData) GetAdvanceId() int64 {
	if x != nil {
		return x.AdvanceId
	}
	return 0
}

func (x *BuyOrderConfirmData) GetBargainId() int64 {
	if x != nil {
		return x.BargainId
	}
	return 0
}

func (x *BuyOrderConfirmData) GetCombinationId() int64 {
	if x != nil {
		return x.CombinationId
	}
	return 0
}

func (x *BuyOrderConfirmData) GetSeckillId() int64 {
	if x != nil {
		return x.SeckillId
	}
	return 0
}

func (x *BuyOrderConfirmData) GetUsableIntegral() int64 {
	if x != nil {
		return x.UsableIntegral
	}
	return 0
}

func (x *BuyOrderConfirmData) GetDeduction() bool {
	if x != nil {
		return x.Deduction
	}
	return false
}

func (x *BuyOrderConfirmData) GetIntegralRatio() float32 {
	if x != nil {
		return x.IntegralRatio
	}
	return 0
}

func (x *BuyOrderConfirmData) GetIntegralOpen() bool {
	if x != nil {
		return x.IntegralOpen
	}
	return false
}

func (x *BuyOrderConfirmData) GetAliPayStatus() bool {
	if x != nil {
		return x.AliPayStatus
	}
	return false
}

func (x *BuyOrderConfirmData) GetFriendPayStatus() bool {
	if x != nil {
		return x.FriendPayStatus
	}
	return false
}

func (x *BuyOrderConfirmData) GetYuePayStatus() bool {
	if x != nil {
		return x.YuePayStatus
	}
	return false
}

func (x *BuyOrderConfirmData) GetOfflinePayStatus() bool {
	if x != nil {
		return x.OfflinePayStatus
	}
	return false
}

func (x *BuyOrderConfirmData) GetStoreSelfMention() bool {
	if x != nil {
		return x.StoreSelfMention
	}
	return false
}

func (x *BuyOrderConfirmData) GetVirtualType() int64 {
	if x != nil {
		return x.VirtualType
	}
	return 0
}

func (x *BuyOrderConfirmData) GetValidCount() int64 {
	if x != nil {
		return x.ValidCount
	}
	return 0
}

func (x *BuyOrderConfirmData) GetStoreFreePostage() int64 {
	if x != nil {
		return x.StoreFreePostage
	}
	return 0
}

func (x *BuyOrderConfirmData) GetOfflinePostage() bool {
	if x != nil {
		return x.OfflinePostage
	}
	return false
}

func (x *BuyOrderConfirmData) GetInvoiceFunc() bool {
	if x != nil {
		return x.InvoiceFunc
	}
	return false
}

func (x *BuyOrderConfirmData) GetSpecialInvoice() bool {
	if x != nil {
		return x.SpecialInvoice
	}
	return false
}

func (x *BuyOrderConfirmData) GetCustomForm() []string {
	if x != nil {
		return x.CustomForm
	}
	return nil
}

func (x *BuyOrderConfirmData) GetOrderKey() string {
	if x != nil {
		return x.OrderKey
	}
	return ""
}

func (x *BuyOrderConfirmData) GetUseCouponId() int64 {
	if x != nil {
		return x.UseCouponId
	}
	return 0
}

func (x *BuyOrderConfirmData) GetOrderIncreases() []*OrderIncrease {
	if x != nil {
		return x.OrderIncreases
	}
	return nil
}

func (x *BuyOrderConfirmData) GetOrderDiscounts() []*OrderDiscount {
	if x != nil {
		return x.OrderDiscounts
	}
	return nil
}

// 订单价格组
type BuyOrderPriceGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalAmount     int64   `protobuf:"varint,1,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount"`               //订单总价
	FinalAmount     int64   `protobuf:"varint,2,opt,name=final_amount,json=finalAmount,proto3" json:"final_amount"`               //订单实付金额(已减去优惠金额, 已加上增加金额)
	IncreaseAmount  int64   `protobuf:"varint,3,opt,name=increase_amount,json=increaseAmount,proto3" json:"increase_amount"`      //增加金额
	DiscountAmount  int64   `protobuf:"varint,4,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount"`      //优惠金额
	BuyCount        float32 `protobuf:"fixed32,5,opt,name=buy_count,json=buyCount,proto3" json:"buy_count"`                       //购买商品总数量(总件数+总称重（千克）)
	BuyCountNumber  int64   `protobuf:"varint,6,opt,name=buy_count_number,json=buyCountNumber,proto3" json:"buy_count_number"`    //购买商品总件数（非称重商品）
	BuyCountWeighed int64   `protobuf:"varint,7,opt,name=buy_count_weighed,json=buyCountWeighed,proto3" json:"buy_count_weighed"` //购买商品总称重（称重商品.克）
	SpecTotalWeight int64   `protobuf:"varint,8,opt,name=spec_total_weight,json=specTotalWeight,proto3" json:"spec_total_weight"` //规格重量合计
	SpecTotalVolume int64   `protobuf:"varint,9,opt,name=spec_total_volume,json=specTotalVolume,proto3" json:"spec_total_volume"` //规格体积合计
	UsedIntegral    int64   `protobuf:"varint,10,opt,name=used_integral,json=usedIntegral,proto3" json:"used_integral"`           //使用的积分
	UsedSurplus     int64   `protobuf:"varint,11,opt,name=used_surplus,json=usedSurplus,proto3" json:"used_surplus"`              //使用的余额
	MemberId        int64   `protobuf:"varint,12,opt,name=member_id,json=memberId,proto3" json:"member_id"`                       //会员ID
	WarehouseId     int64   `protobuf:"varint,13,opt,name=warehouse_id,json=warehouseId,proto3" json:"warehouse_id"`              //仓库ID
}

func (x *BuyOrderPriceGroup) Reset() {
	*x = BuyOrderPriceGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buyOrderService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyOrderPriceGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyOrderPriceGroup) ProtoMessage() {}

func (x *BuyOrderPriceGroup) ProtoReflect() protoreflect.Message {
	mi := &file_buyOrderService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyOrderPriceGroup.ProtoReflect.Descriptor instead.
func (*BuyOrderPriceGroup) Descriptor() ([]byte, []int) {
	return file_buyOrderService_proto_rawDescGZIP(), []int{2}
}

func (x *BuyOrderPriceGroup) GetTotalAmount() int64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *BuyOrderPriceGroup) GetFinalAmount() int64 {
	if x != nil {
		return x.FinalAmount
	}
	return 0
}

func (x *BuyOrderPriceGroup) GetIncreaseAmount() int64 {
	if x != nil {
		return x.IncreaseAmount
	}
	return 0
}

func (x *BuyOrderPriceGroup) GetDiscountAmount() int64 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *BuyOrderPriceGroup) GetBuyCount() float32 {
	if x != nil {
		return x.BuyCount
	}
	return 0
}

func (x *BuyOrderPriceGroup) GetBuyCountNumber() int64 {
	if x != nil {
		return x.BuyCountNumber
	}
	return 0
}

func (x *BuyOrderPriceGroup) GetBuyCountWeighed() int64 {
	if x != nil {
		return x.BuyCountWeighed
	}
	return 0
}

func (x *BuyOrderPriceGroup) GetSpecTotalWeight() int64 {
	if x != nil {
		return x.SpecTotalWeight
	}
	return 0
}

func (x *BuyOrderPriceGroup) GetSpecTotalVolume() int64 {
	if x != nil {
		return x.SpecTotalVolume
	}
	return 0
}

func (x *BuyOrderPriceGroup) GetUsedIntegral() int64 {
	if x != nil {
		return x.UsedIntegral
	}
	return 0
}

func (x *BuyOrderPriceGroup) GetUsedSurplus() int64 {
	if x != nil {
		return x.UsedSurplus
	}
	return 0
}

func (x *BuyOrderPriceGroup) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *BuyOrderPriceGroup) GetWarehouseId() int64 {
	if x != nil {
		return x.WarehouseId
	}
	return 0
}

type BuyCheckShippingData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int64 `protobuf:"varint,1,opt,name=type,proto3" json:"type"`
}

func (x *BuyCheckShippingData) Reset() {
	*x = BuyCheckShippingData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buyOrderService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyCheckShippingData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyCheckShippingData) ProtoMessage() {}

func (x *BuyCheckShippingData) ProtoReflect() protoreflect.Message {
	mi := &file_buyOrderService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyCheckShippingData.ProtoReflect.Descriptor instead.
func (*BuyCheckShippingData) Descriptor() ([]byte, []int) {
	return file_buyOrderService_proto_rawDescGZIP(), []int{3}
}

func (x *BuyCheckShippingData) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

// 计算订单
type BuyComputedOrderData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalPrice           int64 `protobuf:"varint,1,opt,name=total_price,json=totalPrice,proto3" json:"total_price"`
	GiftPrice            int64 `protobuf:"varint,2,opt,name=gift_price,json=giftPrice,proto3" json:"gift_price"`
	PayPostage           int64 `protobuf:"varint,3,opt,name=pay_postage,json=payPostage,proto3" json:"pay_postage"`
	PayPrice             int64 `protobuf:"varint,4,opt,name=pay_price,json=payPrice,proto3" json:"pay_price"`
	CouponPrice          int64 `protobuf:"varint,5,opt,name=coupon_price,json=couponPrice,proto3" json:"coupon_price"`
	DeductionPrice       int64 `protobuf:"varint,6,opt,name=deduction_price,json=deductionPrice,proto3" json:"deduction_price"`
	UsedIntegral         int64 `protobuf:"varint,7,opt,name=usedIntegral,proto3" json:"usedIntegral"`
	SurplusIntegral      int64 `protobuf:"varint,8,opt,name=surplusIntegral,proto3" json:"surplusIntegral"`
	StorePostageDiscount int64 `protobuf:"varint,9,opt,name=storePostageDiscount,proto3" json:"storePostageDiscount"`
	IsStoreFreePostage   bool  `protobuf:"varint,10,opt,name=isStoreFreePostage,proto3" json:"isStoreFreePostage"`
	StoreFreePostage     int64 `protobuf:"varint,11,opt,name=storeFreePostage,proto3" json:"storeFreePostage"`
}

func (x *BuyComputedOrderData) Reset() {
	*x = BuyComputedOrderData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buyOrderService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyComputedOrderData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyComputedOrderData) ProtoMessage() {}

func (x *BuyComputedOrderData) ProtoReflect() protoreflect.Message {
	mi := &file_buyOrderService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyComputedOrderData.ProtoReflect.Descriptor instead.
func (*BuyComputedOrderData) Descriptor() ([]byte, []int) {
	return file_buyOrderService_proto_rawDescGZIP(), []int{4}
}

func (x *BuyComputedOrderData) GetTotalPrice() int64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *BuyComputedOrderData) GetGiftPrice() int64 {
	if x != nil {
		return x.GiftPrice
	}
	return 0
}

func (x *BuyComputedOrderData) GetPayPostage() int64 {
	if x != nil {
		return x.PayPostage
	}
	return 0
}

func (x *BuyComputedOrderData) GetPayPrice() int64 {
	if x != nil {
		return x.PayPrice
	}
	return 0
}

func (x *BuyComputedOrderData) GetCouponPrice() int64 {
	if x != nil {
		return x.CouponPrice
	}
	return 0
}

func (x *BuyComputedOrderData) GetDeductionPrice() int64 {
	if x != nil {
		return x.DeductionPrice
	}
	return 0
}

func (x *BuyComputedOrderData) GetUsedIntegral() int64 {
	if x != nil {
		return x.UsedIntegral
	}
	return 0
}

func (x *BuyComputedOrderData) GetSurplusIntegral() int64 {
	if x != nil {
		return x.SurplusIntegral
	}
	return 0
}

func (x *BuyComputedOrderData) GetStorePostageDiscount() int64 {
	if x != nil {
		return x.StorePostageDiscount
	}
	return 0
}

func (x *BuyComputedOrderData) GetIsStoreFreePostage() bool {
	if x != nil {
		return x.IsStoreFreePostage
	}
	return false
}

func (x *BuyComputedOrderData) GetStoreFreePostage() int64 {
	if x != nil {
		return x.StoreFreePostage
	}
	return 0
}

type BuyOrderCreateResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string `protobuf:"bytes,1,opt,name=key,proto3" json:"key"`
	OrderId string `protobuf:"bytes,2,opt,name=orderId,proto3" json:"orderId"`
}

func (x *BuyOrderCreateResult) Reset() {
	*x = BuyOrderCreateResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buyOrderService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyOrderCreateResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyOrderCreateResult) ProtoMessage() {}

func (x *BuyOrderCreateResult) ProtoReflect() protoreflect.Message {
	mi := &file_buyOrderService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyOrderCreateResult.ProtoReflect.Descriptor instead.
func (*BuyOrderCreateResult) Descriptor() ([]byte, []int) {
	return file_buyOrderService_proto_rawDescGZIP(), []int{5}
}

func (x *BuyOrderCreateResult) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *BuyOrderCreateResult) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

// 购买订单提交数据
type BuyOrderSubmitData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *BuyOrderCreateResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result"`
	Status string                `protobuf:"bytes,2,opt,name=status,proto3" json:"status"`
}

func (x *BuyOrderSubmitData) Reset() {
	*x = BuyOrderSubmitData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buyOrderService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyOrderSubmitData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyOrderSubmitData) ProtoMessage() {}

func (x *BuyOrderSubmitData) ProtoReflect() protoreflect.Message {
	mi := &file_buyOrderService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyOrderSubmitData.ProtoReflect.Descriptor instead.
func (*BuyOrderSubmitData) Descriptor() ([]byte, []int) {
	return file_buyOrderService_proto_rawDescGZIP(), []int{6}
}

func (x *BuyOrderSubmitData) GetResult() *BuyOrderCreateResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *BuyOrderSubmitData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// 购买订单结算数据
type BuyOrderCashierData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AliPayStatus     bool   `protobuf:"varint,1,opt,name=ali_pay_status,json=aliPayStatus,proto3" json:"ali_pay_status"`
	FriendPayStatus  bool   `protobuf:"varint,2,opt,name=friend_pay_status,json=friendPayStatus,proto3" json:"friend_pay_status"`
	InvalidTime      int64  `protobuf:"varint,3,opt,name=invalid_time,json=invalidTime,proto3" json:"invalid_time"`
	IsGift           bool   `protobuf:"varint,4,opt,name=is_gift,json=isGift,proto3" json:"is_gift"`
	NowMoney         int64  `protobuf:"varint,5,opt,name=now_money,json=nowMoney,proto3" json:"now_money"`
	OfflinePayStatus bool   `protobuf:"varint,6,opt,name=offline_pay_status,json=offlinePayStatus,proto3" json:"offline_pay_status"`
	OfflinePostage   bool   `protobuf:"varint,7,opt,name=offline_postage,json=offlinePostage,proto3" json:"offline_postage"`
	OrderId          int64  `protobuf:"varint,8,opt,name=order_id,json=orderId,proto3" json:"order_id"`
	OrderNo          string `protobuf:"bytes,9,opt,name=order_no,json=orderNo,proto3" json:"order_no"`
	PayPostage       int64  `protobuf:"varint,10,opt,name=pay_postage,json=payPostage,proto3" json:"pay_postage"`
	PayPrice         int64  `protobuf:"varint,11,opt,name=pay_price,json=payPrice,proto3" json:"pay_price"`
	WechatPayStatus  bool   `protobuf:"varint,12,opt,name=wechat_pay_status,json=wechatPayStatus,proto3" json:"wechat_pay_status"`
	YuePayStatus     bool   `protobuf:"varint,13,opt,name=yue_pay_status,json=yuePayStatus,proto3" json:"yue_pay_status"`
}

func (x *BuyOrderCashierData) Reset() {
	*x = BuyOrderCashierData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buyOrderService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyOrderCashierData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyOrderCashierData) ProtoMessage() {}

func (x *BuyOrderCashierData) ProtoReflect() protoreflect.Message {
	mi := &file_buyOrderService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyOrderCashierData.ProtoReflect.Descriptor instead.
func (*BuyOrderCashierData) Descriptor() ([]byte, []int) {
	return file_buyOrderService_proto_rawDescGZIP(), []int{7}
}

func (x *BuyOrderCashierData) GetAliPayStatus() bool {
	if x != nil {
		return x.AliPayStatus
	}
	return false
}

func (x *BuyOrderCashierData) GetFriendPayStatus() bool {
	if x != nil {
		return x.FriendPayStatus
	}
	return false
}

func (x *BuyOrderCashierData) GetInvalidTime() int64 {
	if x != nil {
		return x.InvalidTime
	}
	return 0
}

func (x *BuyOrderCashierData) GetIsGift() bool {
	if x != nil {
		return x.IsGift
	}
	return false
}

func (x *BuyOrderCashierData) GetNowMoney() int64 {
	if x != nil {
		return x.NowMoney
	}
	return 0
}

func (x *BuyOrderCashierData) GetOfflinePayStatus() bool {
	if x != nil {
		return x.OfflinePayStatus
	}
	return false
}

func (x *BuyOrderCashierData) GetOfflinePostage() bool {
	if x != nil {
		return x.OfflinePostage
	}
	return false
}

func (x *BuyOrderCashierData) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *BuyOrderCashierData) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *BuyOrderCashierData) GetPayPostage() int64 {
	if x != nil {
		return x.PayPostage
	}
	return 0
}

func (x *BuyOrderCashierData) GetPayPrice() int64 {
	if x != nil {
		return x.PayPrice
	}
	return 0
}

func (x *BuyOrderCashierData) GetWechatPayStatus() bool {
	if x != nil {
		return x.WechatPayStatus
	}
	return false
}

func (x *BuyOrderCashierData) GetYuePayStatus() bool {
	if x != nil {
		return x.YuePayStatus
	}
	return false
}

// 确认信息请求参数
type BuyOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuyMode         string  `protobuf:"bytes,1,opt,name=buy_mode,json=buyMode,proto3" json:"buy_mode"`                          //购买模式: direct-直接购买,cart-购物车下单，cashier-收银台下单
	AddressType     string  `protobuf:"bytes,2,opt,name=address_type,json=addressType,proto3" json:"address_type"`              //收货地址类型：1-用户地址：2-自提点地址
	AddressId       int64   `protobuf:"varint,3,opt,name=address_id,json=addressId,proto3" json:"address_id"`                   //收货地址ID
	UserNote        string  `protobuf:"bytes,4,opt,name=user_note,json=userNote,proto3" json:"user_note"`                       //买家留言(50字以内)
	CouponId        int64   `protobuf:"varint,6,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id"`                      //选中的优惠劵凭证ID
	UseIntegral     int64   `protobuf:"varint,7,opt,name=use_integral,json=useIntegral,proto3" json:"use_integral"`             //使用的积分
	UseSurplus      int64   `protobuf:"varint,8,opt,name=use_surplus,json=useSurplus,proto3" json:"use_surplus"`                //使用的余额
	AgentMemberId   int64   `protobuf:"varint,9,opt,name=agent_member_id,json=agentMemberId,proto3" json:"agent_member_id"`     //代理的客户ID（操作员代客下单）
	RealstoreId     int64   `protobuf:"varint,10,opt,name=realstore_id,json=realstoreId,proto3" json:"realstore_id"`            //多门店Id
	ShopId          int64   `protobuf:"varint,11,opt,name=shop_id,json=shopId,proto3" json:"shop_id"`                           //多商户Id
	LocationLng     float32 `protobuf:"fixed32,12,opt,name=location_lng,json=locationLng,proto3" json:"location_lng"`           //位置经度
	LocationLat     float32 `protobuf:"fixed32,13,opt,name=location_lat,json=locationLat,proto3" json:"location_lat"`           //位置纬度
	LocationAddress string  `protobuf:"bytes,14,opt,name=location_address,json=locationAddress,proto3" json:"location_address"` //位置地址信息
	LogisticsType   string  `protobuf:"bytes,15,opt,name=logistics_type,json=logisticsType,proto3" json:"logistics_type"`       //物流类型：1-快递发货，2-同城配送，3-用户自提，4-虚拟发货(无需物流)
	ChoiceCouponId  int64   `protobuf:"varint,16,opt,name=choice_coupon_id,json=choiceCouponId,proto3" json:"choice_coupon_id"` //选中优惠劵
	CartIds         []int64 `protobuf:"varint,17,rep,packed,name=cart_ids,json=cartIds,proto3" json:"cart_ids"`                 //购物车IDS
	ShippingType    int32   `protobuf:"varint,18,opt,name=shipping_type,json=shippingType,proto3" json:"shipping_type"`         //发货类型：需要转换为logistics_type 可以用
	New             bool    `protobuf:"varint,20,opt,name=new,proto3" json:"new"`
	CartId          string  `protobuf:"bytes,21,opt,name=cartId,proto3" json:"cartId"` //购物车ids
	Key             string  `protobuf:"bytes,22,opt,name=key,proto3" json:"key"`
	IsGift          bool    `protobuf:"varint,23,opt,name=is_gift,json=isGift,proto3" json:"is_gift"` //是否为赠送礼物
	InvoiceId       int64   `protobuf:"varint,24,opt,name=invoice_id,json=invoiceId,proto3" json:"invoice_id"`
	CombinationId   int64   `protobuf:"varint,30,opt,name=combinationId,proto3" json:"combinationId"`
	PinkId          int64   `protobuf:"varint,31,opt,name=pinkId,proto3" json:"pinkId"`
	SeckillId       int64   `protobuf:"varint,32,opt,name=seckillId,proto3" json:"seckillId"`
	BargainId       int64   `protobuf:"varint,33,opt,name=bargainId,proto3" json:"bargainId"`
	PayType         string  `protobuf:"bytes,34,opt,name=pay_type,json=payType,proto3" json:"pay_type"`
	FromType        string  `protobuf:"bytes,35,opt,name=from_type,json=fromType,proto3" json:"from_type"`
	OrderId         string  `protobuf:"bytes,36,opt,name=orderId,proto3" json:"orderId"`
}

func (x *BuyOrderRequest) Reset() {
	*x = BuyOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buyOrderService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyOrderRequest) ProtoMessage() {}

func (x *BuyOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_buyOrderService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyOrderRequest.ProtoReflect.Descriptor instead.
func (*BuyOrderRequest) Descriptor() ([]byte, []int) {
	return file_buyOrderService_proto_rawDescGZIP(), []int{8}
}

func (x *BuyOrderRequest) GetBuyMode() string {
	if x != nil {
		return x.BuyMode
	}
	return ""
}

func (x *BuyOrderRequest) GetAddressType() string {
	if x != nil {
		return x.AddressType
	}
	return ""
}

func (x *BuyOrderRequest) GetAddressId() int64 {
	if x != nil {
		return x.AddressId
	}
	return 0
}

func (x *BuyOrderRequest) GetUserNote() string {
	if x != nil {
		return x.UserNote
	}
	return ""
}

func (x *BuyOrderRequest) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *BuyOrderRequest) GetUseIntegral() int64 {
	if x != nil {
		return x.UseIntegral
	}
	return 0
}

func (x *BuyOrderRequest) GetUseSurplus() int64 {
	if x != nil {
		return x.UseSurplus
	}
	return 0
}

func (x *BuyOrderRequest) GetAgentMemberId() int64 {
	if x != nil {
		return x.AgentMemberId
	}
	return 0
}

func (x *BuyOrderRequest) GetRealstoreId() int64 {
	if x != nil {
		return x.RealstoreId
	}
	return 0
}

func (x *BuyOrderRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *BuyOrderRequest) GetLocationLng() float32 {
	if x != nil {
		return x.LocationLng
	}
	return 0
}

func (x *BuyOrderRequest) GetLocationLat() float32 {
	if x != nil {
		return x.LocationLat
	}
	return 0
}

func (x *BuyOrderRequest) GetLocationAddress() string {
	if x != nil {
		return x.LocationAddress
	}
	return ""
}

func (x *BuyOrderRequest) GetLogisticsType() string {
	if x != nil {
		return x.LogisticsType
	}
	return ""
}

func (x *BuyOrderRequest) GetChoiceCouponId() int64 {
	if x != nil {
		return x.ChoiceCouponId
	}
	return 0
}

func (x *BuyOrderRequest) GetCartIds() []int64 {
	if x != nil {
		return x.CartIds
	}
	return nil
}

func (x *BuyOrderRequest) GetShippingType() int32 {
	if x != nil {
		return x.ShippingType
	}
	return 0
}

func (x *BuyOrderRequest) GetNew() bool {
	if x != nil {
		return x.New
	}
	return false
}

func (x *BuyOrderRequest) GetCartId() string {
	if x != nil {
		return x.CartId
	}
	return ""
}

func (x *BuyOrderRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *BuyOrderRequest) GetIsGift() bool {
	if x != nil {
		return x.IsGift
	}
	return false
}

func (x *BuyOrderRequest) GetInvoiceId() int64 {
	if x != nil {
		return x.InvoiceId
	}
	return 0
}

func (x *BuyOrderRequest) GetCombinationId() int64 {
	if x != nil {
		return x.CombinationId
	}
	return 0
}

func (x *BuyOrderRequest) GetPinkId() int64 {
	if x != nil {
		return x.PinkId
	}
	return 0
}

func (x *BuyOrderRequest) GetSeckillId() int64 {
	if x != nil {
		return x.SeckillId
	}
	return 0
}

func (x *BuyOrderRequest) GetBargainId() int64 {
	if x != nil {
		return x.BargainId
	}
	return 0
}

func (x *BuyOrderRequest) GetPayType() string {
	if x != nil {
		return x.PayType
	}
	return ""
}

func (x *BuyOrderRequest) GetFromType() string {
	if x != nil {
		return x.FromType
	}
	return ""
}

func (x *BuyOrderRequest) GetOrderId() string {
	if x != nil {
		return x.OrderId
	}
	return ""
}

type BuyOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Confirm          *BuyOrderConfirmData  `protobuf:"bytes,1,opt,name=confirm,proto3" json:"confirm"`
	Submit           *BuyOrderSubmitData   `protobuf:"bytes,2,opt,name=submit,proto3" json:"submit"`
	ComputedOrder    *BuyComputedOrderData `protobuf:"bytes,3,opt,name=computedOrder,proto3" json:"computedOrder"`
	CheckShipping    *BuyCheckShippingData `protobuf:"bytes,4,opt,name=checkShipping,proto3" json:"checkShipping"`
	Cashier          *BuyOrderCashierData  `protobuf:"bytes,5,opt,name=cashier,proto3" json:"cashier"`
	AvailableCoupons []byte                `protobuf:"bytes,8,opt,name=availableCoupons,proto3" json:"availableCoupons"`
}

func (x *BuyOrderResponse) Reset() {
	*x = BuyOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buyOrderService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyOrderResponse) ProtoMessage() {}

func (x *BuyOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_buyOrderService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyOrderResponse.ProtoReflect.Descriptor instead.
func (*BuyOrderResponse) Descriptor() ([]byte, []int) {
	return file_buyOrderService_proto_rawDescGZIP(), []int{9}
}

func (x *BuyOrderResponse) GetConfirm() *BuyOrderConfirmData {
	if x != nil {
		return x.Confirm
	}
	return nil
}

func (x *BuyOrderResponse) GetSubmit() *BuyOrderSubmitData {
	if x != nil {
		return x.Submit
	}
	return nil
}

func (x *BuyOrderResponse) GetComputedOrder() *BuyComputedOrderData {
	if x != nil {
		return x.ComputedOrder
	}
	return nil
}

func (x *BuyOrderResponse) GetCheckShipping() *BuyCheckShippingData {
	if x != nil {
		return x.CheckShipping
	}
	return nil
}

func (x *BuyOrderResponse) GetCashier() *BuyOrderCashierData {
	if x != nil {
		return x.Cashier
	}
	return nil
}

func (x *BuyOrderResponse) GetAvailableCoupons() []byte {
	if x != nil {
		return x.AvailableCoupons
	}
	return nil
}

var File_buyOrderService_proto protoreflect.FileDescriptor

var file_buyOrderService_proto_rawDesc = []byte{
	0x0a, 0x15, 0x62, 0x75, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x1a, 0x19, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x62, 0x61,
	0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x63, 0x61, 0x72, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9f, 0x03, 0x0a, 0x13, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22,
	0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x61,
	0x67, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x46, 0x72, 0x65, 0x65, 0x50,
	0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x46, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x2e,
	0x0a, 0x12, 0x69, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x46, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x73,
	0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x73, 0x53, 0x74,
	0x6f, 0x72, 0x65, 0x46, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x32,
	0x0a, 0x14, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x6d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x75, 0x6d, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x76, 0x69, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x76, 0x69, 0x70, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x69,
	0x66, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67,
	0x69, 0x66, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xa4, 0x09, 0x0a, 0x13, 0x42, 0x75, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x38, 0x0a, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0b, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3d, 0x0a, 0x0a, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2e, 0x0a, 0x08, 0x63, 0x61, 0x72,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x08, 0x63, 0x61, 0x72, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x30, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61,
	0x72, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d,
	0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x12,
	0x27, 0x0a, 0x0f, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x64, 0x65, 0x64,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x6c, 0x5f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d,
	0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x12, 0x23, 0x0a,
	0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x5f, 0x6f, 0x70, 0x65, 0x6e, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x4f, 0x70,
	0x65, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x61, 0x6c, 0x69, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x6c, 0x69, 0x50,
	0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x79, 0x75, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x79, 0x75,
	0x65, 0x50, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x66,
	0x66, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50,
	0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x74, 0x6f, 0x72,
	0x65, 0x5f, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x4d,
	0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x76, 0x69,
	0x72, 0x74, 0x75, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x46, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x46, 0x72, 0x65, 0x65, 0x50,
	0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e,
	0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x46, 0x75, 0x6e,
	0x63, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x70, 0x65, 0x63, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x73, 0x70, 0x65, 0x63,
	0x69, 0x61, 0x6c, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x1c, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x46, 0x6f, 0x72, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x5f, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x75, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x0f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x73, 0x18, 0x1f,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x52, 0x0e, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x73, 0x12, 0x40, 0x0a,
	0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x18, 0x20, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52,
	0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x22,
	0xff, 0x03, 0x0a, 0x12, 0x42, 0x75, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x6e,
	0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f,
	0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x62, 0x75, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x08, 0x62, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x62,
	0x75, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x62, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x75, 0x79, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x62, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68, 0x65,
	0x64, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x70,
	0x65, 0x63, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2a, 0x0a,
	0x11, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x70, 0x65, 0x63, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x73, 0x65,
	0x64, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x75, 0x73, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x21,
	0x0a, 0x0c, 0x75, 0x73, 0x65, 0x64, 0x5f, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x64, 0x53, 0x75, 0x72, 0x70, 0x6c, 0x75,
	0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49,
	0x64, 0x22, 0x2a, 0x0a, 0x14, 0x42, 0x75, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x68, 0x69,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xbe, 0x03,
	0x0a, 0x14, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x64, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x69, 0x66, 0x74, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x69, 0x66,
	0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x5f, 0x70, 0x6f,
	0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x61, 0x79,
	0x50, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x79, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x64, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x22, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x64, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x49,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73,
	0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x32,
	0x0a, 0x14, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x46, 0x72, 0x65,
	0x65, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12,
	0x69, 0x73, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x46, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x61,
	0x67, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x46, 0x72, 0x65, 0x65, 0x50,
	0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x46, 0x72, 0x65, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x22, 0x42,
	0x0a, 0x14, 0x42, 0x75, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x64, 0x0a, 0x12, 0x42, 0x75, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x36, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xdd, 0x03, 0x0a, 0x13, 0x42, 0x75, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x24, 0x0a, 0x0e, 0x61, 0x6c, 0x69, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x6c, 0x69, 0x50, 0x61, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x5f, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x50, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x67, 0x69, 0x66, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x47, 0x69, 0x66, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x6e, 0x6f, 0x77, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6e, 0x6f, 0x77, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x2c, 0x0a, 0x12, 0x6f,
	0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65,
	0x50, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x66, 0x66,
	0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x61,
	0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x5f,
	0x70, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70,
	0x61, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x79,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74,
	0x5f, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0f, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x50, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x79, 0x75, 0x65, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x79, 0x75, 0x65, 0x50,
	0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x92, 0x07, 0x0a, 0x0f, 0x42, 0x75, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x62, 0x75, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x75, 0x79, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x75,
	0x72, 0x70, 0x6c, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75, 0x73, 0x65,
	0x53, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x6e, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6e, 0x67, 0x12, 0x21,
	0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x61, 0x74, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61,
	0x74, 0x12, 0x29, 0x0a, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63,
	0x68, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x07, 0x63, 0x61, 0x72, 0x74, 0x49, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68, 0x69, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x6e, 0x65, 0x77, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x6e, 0x65, 0x77, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x61, 0x72, 0x74, 0x49, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x61, 0x72, 0x74, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f,
	0x67, 0x69, 0x66, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x47, 0x69,
	0x66, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x69, 0x6e, 0x6b, 0x49,
	0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x18, 0x20, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x18, 0x21, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x61, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x24,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0xf2, 0x02,
	0x0a, 0x10, 0x42, 0x75, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x37, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42,
	0x75, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x34, 0x0a, 0x06, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x73, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x12, 0x44, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x64, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x64, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x70, 0x75, 0x74,
	0x65, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x44, 0x0a, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0d,
	0x63, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x37, 0x0a,
	0x07, 0x63, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x63,
	0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x10, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x73, 0x32, 0xbd, 0x03, 0x0a, 0x0f, 0x42, 0x75, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x06, 0x53, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x42, 0x75, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a,
	0x07, 0x43, 0x61, 0x73, 0x68, 0x69, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42,
	0x75, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x48, 0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69,
	0x6e, 0x67, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x75,
	0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a, 0x0d, 0x43,
	0x6f, 0x6d, 0x70, 0x75, 0x74, 0x65, 0x64, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x19, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x10, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62,
	0x6c, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x73, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x42, 0x75, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_buyOrderService_proto_rawDescOnce sync.Once
	file_buyOrderService_proto_rawDescData = file_buyOrderService_proto_rawDesc
)

func file_buyOrderService_proto_rawDescGZIP() []byte {
	file_buyOrderService_proto_rawDescOnce.Do(func() {
		file_buyOrderService_proto_rawDescData = protoimpl.X.CompressGZIP(file_buyOrderService_proto_rawDescData)
	})
	return file_buyOrderService_proto_rawDescData
}

var file_buyOrderService_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_buyOrderService_proto_goTypes = []interface{}{
	(*OrderPriceGroupInfo)(nil),  // 0: services.OrderPriceGroupInfo
	(*BuyOrderConfirmData)(nil),  // 1: services.BuyOrderConfirmData
	(*BuyOrderPriceGroup)(nil),   // 2: services.BuyOrderPriceGroup
	(*BuyCheckShippingData)(nil), // 3: services.BuyCheckShippingData
	(*BuyComputedOrderData)(nil), // 4: services.BuyComputedOrderData
	(*BuyOrderCreateResult)(nil), // 5: services.BuyOrderCreateResult
	(*BuyOrderSubmitData)(nil),   // 6: services.BuyOrderSubmitData
	(*BuyOrderCashierData)(nil),  // 7: services.BuyOrderCashierData
	(*BuyOrderRequest)(nil),      // 8: services.BuyOrderRequest
	(*BuyOrderResponse)(nil),     // 9: services.BuyOrderResponse
	(*OrderAddress)(nil),         // 10: services.OrderAddress
	(*CartItem)(nil),             // 11: services.CartItem
	(*MemberInfo)(nil),           // 12: services.MemberInfo
	(*OrderIncrease)(nil),        // 13: services.OrderIncrease
	(*OrderDiscount)(nil),        // 14: services.OrderDiscount
}
var file_buyOrderService_proto_depIdxs = []int32{
	10, // 0: services.BuyOrderConfirmData.addressInfo:type_name -> services.OrderAddress
	0,  // 1: services.BuyOrderConfirmData.priceGroup:type_name -> services.OrderPriceGroupInfo
	11, // 2: services.BuyOrderConfirmData.cartInfo:type_name -> services.CartItem
	12, // 3: services.BuyOrderConfirmData.userInfo:type_name -> services.MemberInfo
	13, // 4: services.BuyOrderConfirmData.order_increases:type_name -> services.OrderIncrease
	14, // 5: services.BuyOrderConfirmData.order_discounts:type_name -> services.OrderDiscount
	5,  // 6: services.BuyOrderSubmitData.result:type_name -> services.BuyOrderCreateResult
	1,  // 7: services.BuyOrderResponse.confirm:type_name -> services.BuyOrderConfirmData
	6,  // 8: services.BuyOrderResponse.submit:type_name -> services.BuyOrderSubmitData
	4,  // 9: services.BuyOrderResponse.computedOrder:type_name -> services.BuyComputedOrderData
	3,  // 10: services.BuyOrderResponse.checkShipping:type_name -> services.BuyCheckShippingData
	7,  // 11: services.BuyOrderResponse.cashier:type_name -> services.BuyOrderCashierData
	8,  // 12: services.BuyOrderService.Confirm:input_type -> services.BuyOrderRequest
	8,  // 13: services.BuyOrderService.Submit:input_type -> services.BuyOrderRequest
	8,  // 14: services.BuyOrderService.Cashier:input_type -> services.BuyOrderRequest
	8,  // 15: services.BuyOrderService.CheckShipping:input_type -> services.BuyOrderRequest
	8,  // 16: services.BuyOrderService.ComputedOrder:input_type -> services.BuyOrderRequest
	8,  // 17: services.BuyOrderService.AvailableCoupons:input_type -> services.BuyOrderRequest
	9,  // 18: services.BuyOrderService.Confirm:output_type -> services.BuyOrderResponse
	9,  // 19: services.BuyOrderService.Submit:output_type -> services.BuyOrderResponse
	9,  // 20: services.BuyOrderService.Cashier:output_type -> services.BuyOrderResponse
	9,  // 21: services.BuyOrderService.CheckShipping:output_type -> services.BuyOrderResponse
	9,  // 22: services.BuyOrderService.ComputedOrder:output_type -> services.BuyOrderResponse
	9,  // 23: services.BuyOrderService.AvailableCoupons:output_type -> services.BuyOrderResponse
	18, // [18:24] is the sub-list for method output_type
	12, // [12:18] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_buyOrderService_proto_init() }
func file_buyOrderService_proto_init() {
	if File_buyOrderService_proto != nil {
		return
	}
	file_orderAddressService_proto_init()
	file_baseInfoService_proto_init()
	file_cartService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_buyOrderService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPriceGroupInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buyOrderService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyOrderConfirmData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buyOrderService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyOrderPriceGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buyOrderService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyCheckShippingData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buyOrderService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyComputedOrderData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buyOrderService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyOrderCreateResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buyOrderService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyOrderSubmitData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buyOrderService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyOrderCashierData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buyOrderService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buyOrderService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_buyOrderService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_buyOrderService_proto_goTypes,
		DependencyIndexes: file_buyOrderService_proto_depIdxs,
		MessageInfos:      file_buyOrderService_proto_msgTypes,
	}.Build()
	File_buyOrderService_proto = out.File
	file_buyOrderService_proto_rawDesc = nil
	file_buyOrderService_proto_goTypes = nil
	file_buyOrderService_proto_depIdxs = nil
}
