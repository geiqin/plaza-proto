// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: buyService.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type BuyGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Warehouse       *WarehouseInfo   `protobuf:"bytes,1,opt,name=warehouse,proto3" json:"warehouse"`
	OrderBase       *BuyOrderBase    `protobuf:"bytes,2,opt,name=order_base,json=orderBase,proto3" json:"order_base"`                             //订单基本信息
	OrderItems      []*BuyOrderItem  `protobuf:"bytes,3,rep,name=order_items,json=orderItems,proto3" json:"order_items"`                          //订单商品列表
	OrderIncreases  []*OrderIncrease `protobuf:"bytes,4,rep,name=order_increases,json=orderIncreases,proto3" json:"order_increases"`              //订单增加数据
	OrderDiscounts  []*OrderDiscount `protobuf:"bytes,5,rep,name=order_discounts,json=orderDiscounts,proto3" json:"order_discounts"`              //订单优惠数据
	MemberCouponIds []int64          `protobuf:"varint,6,rep,packed,name=member_coupon_ids,json=memberCouponIds,proto3" json:"member_coupon_ids"` //选择的优惠劵IDS
}

func (x *BuyGroup) Reset() {
	*x = BuyGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buyService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyGroup) ProtoMessage() {}

func (x *BuyGroup) ProtoReflect() protoreflect.Message {
	mi := &file_buyService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyGroup.ProtoReflect.Descriptor instead.
func (*BuyGroup) Descriptor() ([]byte, []int) {
	return file_buyService_proto_rawDescGZIP(), []int{0}
}

func (x *BuyGroup) GetWarehouse() *WarehouseInfo {
	if x != nil {
		return x.Warehouse
	}
	return nil
}

func (x *BuyGroup) GetOrderBase() *BuyOrderBase {
	if x != nil {
		return x.OrderBase
	}
	return nil
}

func (x *BuyGroup) GetOrderItems() []*BuyOrderItem {
	if x != nil {
		return x.OrderItems
	}
	return nil
}

func (x *BuyGroup) GetOrderIncreases() []*OrderIncrease {
	if x != nil {
		return x.OrderIncreases
	}
	return nil
}

func (x *BuyGroup) GetOrderDiscounts() []*OrderDiscount {
	if x != nil {
		return x.OrderDiscounts
	}
	return nil
}

func (x *BuyGroup) GetMemberCouponIds() []int64 {
	if x != nil {
		return x.MemberCouponIds
	}
	return nil
}

type BuyOrderItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpuId         int64        `protobuf:"varint,1,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`                         //商品ID
	SkuKey        string       `protobuf:"bytes,2,opt,name=sku_key,json=skuKey,proto3" json:"sku_key"`                       //SKUKey
	SpecWeight    int64        `protobuf:"varint,3,opt,name=spec_weight,json=specWeight,proto3" json:"spec_weight"`          //规格重量
	SpecVolume    int64        `protobuf:"varint,4,opt,name=spec_volume,json=specVolume,proto3" json:"spec_volume"`          //规格体积
	Quantity      int64        `protobuf:"varint,5,opt,name=quantity,proto3" json:"quantity"`                                //购买数量
	UnitPrice     int64        `protobuf:"varint,6,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price"`             //商品单价
	TotalPrice    int64        `protobuf:"varint,7,opt,name=total_price,json=totalPrice,proto3" json:"total_price"`          //合计价格
	DiscountShare int64        `protobuf:"varint,8,opt,name=discount_share,json=discountShare,proto3" json:"discount_share"` //优惠分摊
	FinalPrice    int64        `protobuf:"varint,9,opt,name=final_price,json=finalPrice,proto3" json:"final_price"`          //支付价格
	Product       *ProductInfo `protobuf:"bytes,10,opt,name=product,proto3" json:"product"`
	IsInvalid     string       `protobuf:"bytes,11,opt,name=is_invalid,json=isInvalid,proto3" json:"is_invalid"` //是否无效（0否，1是）
	IsError       string       `protobuf:"bytes,12,opt,name=is_error,json=isError,proto3" json:"is_error"`       //是否错误（0否，1是）
	ErrorMsg      string       `protobuf:"bytes,13,opt,name=error_msg,json=errorMsg,proto3" json:"error_msg"`    //错误信息
}

func (x *BuyOrderItem) Reset() {
	*x = BuyOrderItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buyService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyOrderItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyOrderItem) ProtoMessage() {}

func (x *BuyOrderItem) ProtoReflect() protoreflect.Message {
	mi := &file_buyService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyOrderItem.ProtoReflect.Descriptor instead.
func (*BuyOrderItem) Descriptor() ([]byte, []int) {
	return file_buyService_proto_rawDescGZIP(), []int{1}
}

func (x *BuyOrderItem) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *BuyOrderItem) GetSkuKey() string {
	if x != nil {
		return x.SkuKey
	}
	return ""
}

func (x *BuyOrderItem) GetSpecWeight() int64 {
	if x != nil {
		return x.SpecWeight
	}
	return 0
}

func (x *BuyOrderItem) GetSpecVolume() int64 {
	if x != nil {
		return x.SpecVolume
	}
	return 0
}

func (x *BuyOrderItem) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *BuyOrderItem) GetUnitPrice() int64 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *BuyOrderItem) GetTotalPrice() int64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *BuyOrderItem) GetDiscountShare() int64 {
	if x != nil {
		return x.DiscountShare
	}
	return 0
}

func (x *BuyOrderItem) GetFinalPrice() int64 {
	if x != nil {
		return x.FinalPrice
	}
	return 0
}

func (x *BuyOrderItem) GetProduct() *ProductInfo {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *BuyOrderItem) GetIsInvalid() string {
	if x != nil {
		return x.IsInvalid
	}
	return ""
}

func (x *BuyOrderItem) GetIsError() string {
	if x != nil {
		return x.IsError
	}
	return ""
}

func (x *BuyOrderItem) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

// 订单基础信息
type BuyOrderBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalAmount     int64   `protobuf:"varint,1,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount"`               //订单总价
	FinalAmount     int64   `protobuf:"varint,2,opt,name=final_amount,json=finalAmount,proto3" json:"final_amount"`               //订单实付金额(已减去优惠金额, 已加上增加金额)
	IncreaseAmount  int64   `protobuf:"varint,3,opt,name=increase_amount,json=increaseAmount,proto3" json:"increase_amount"`      //增加金额
	DiscountAmount  int64   `protobuf:"varint,4,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount"`      //优惠金额
	BuyCount        float32 `protobuf:"fixed32,5,opt,name=buy_count,json=buyCount,proto3" json:"buy_count"`                       //购买商品总数量(总件数+总称重（千克）)
	BuyCountNumber  int64   `protobuf:"varint,6,opt,name=buy_count_number,json=buyCountNumber,proto3" json:"buy_count_number"`    //购买商品总件数（非称重商品）
	BuyCountWeighed int64   `protobuf:"varint,7,opt,name=buy_count_weighed,json=buyCountWeighed,proto3" json:"buy_count_weighed"` //购买商品总称重（称重商品.克）
	SpecTotalWeight int64   `protobuf:"varint,8,opt,name=spec_total_weight,json=specTotalWeight,proto3" json:"spec_total_weight"` //规格重量合计
	SpecTotalVolume int64   `protobuf:"varint,9,opt,name=spec_total_volume,json=specTotalVolume,proto3" json:"spec_total_volume"` //规格体积合计
	UseIntegral     int64   `protobuf:"varint,10,opt,name=use_integral,json=useIntegral,proto3" json:"use_integral"`              //使用的积分
	UseSurplus      int64   `protobuf:"varint,11,opt,name=use_surplus,json=useSurplus,proto3" json:"use_surplus"`                 //使用的余额
	MemberId        int64   `protobuf:"varint,12,opt,name=member_id,json=memberId,proto3" json:"member_id"`                       //会员ID
	WarehouseId     int64   `protobuf:"varint,13,opt,name=warehouse_id,json=warehouseId,proto3" json:"warehouse_id"`              //仓库ID
}

func (x *BuyOrderBase) Reset() {
	*x = BuyOrderBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buyService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyOrderBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyOrderBase) ProtoMessage() {}

func (x *BuyOrderBase) ProtoReflect() protoreflect.Message {
	mi := &file_buyService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyOrderBase.ProtoReflect.Descriptor instead.
func (*BuyOrderBase) Descriptor() ([]byte, []int) {
	return file_buyService_proto_rawDescGZIP(), []int{2}
}

func (x *BuyOrderBase) GetTotalAmount() int64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *BuyOrderBase) GetFinalAmount() int64 {
	if x != nil {
		return x.FinalAmount
	}
	return 0
}

func (x *BuyOrderBase) GetIncreaseAmount() int64 {
	if x != nil {
		return x.IncreaseAmount
	}
	return 0
}

func (x *BuyOrderBase) GetDiscountAmount() int64 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *BuyOrderBase) GetBuyCount() float32 {
	if x != nil {
		return x.BuyCount
	}
	return 0
}

func (x *BuyOrderBase) GetBuyCountNumber() int64 {
	if x != nil {
		return x.BuyCountNumber
	}
	return 0
}

func (x *BuyOrderBase) GetBuyCountWeighed() int64 {
	if x != nil {
		return x.BuyCountWeighed
	}
	return 0
}

func (x *BuyOrderBase) GetSpecTotalWeight() int64 {
	if x != nil {
		return x.SpecTotalWeight
	}
	return 0
}

func (x *BuyOrderBase) GetSpecTotalVolume() int64 {
	if x != nil {
		return x.SpecTotalVolume
	}
	return 0
}

func (x *BuyOrderBase) GetUseIntegral() int64 {
	if x != nil {
		return x.UseIntegral
	}
	return 0
}

func (x *BuyOrderBase) GetUseSurplus() int64 {
	if x != nil {
		return x.UseSurplus
	}
	return 0
}

func (x *BuyOrderBase) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *BuyOrderBase) GetWarehouseId() int64 {
	if x != nil {
		return x.WarehouseId
	}
	return 0
}

// 确认信息请求参数
type BuyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuyMode         string          `protobuf:"bytes,1,opt,name=buy_mode,json=buyMode,proto3" json:"buy_mode"`                                                                                                                      //购买模式: direct-直接购买,cart-购物车下单，cashier-收银台下单
	AddressType     string          `protobuf:"bytes,2,opt,name=address_type,json=addressType,proto3" json:"address_type"`                                                                                                          //收货地址类型：1-用户地址：2-自提点地址
	AddressId       int64           `protobuf:"varint,3,opt,name=address_id,json=addressId,proto3" json:"address_id"`                                                                                                               //收货地址ID
	UserNote        string          `protobuf:"bytes,4,opt,name=user_note,json=userNote,proto3" json:"user_note"`                                                                                                                   //买家留言(50字以内)
	PaymentMethod   string          `protobuf:"bytes,5,opt,name=payment_method,json=paymentMethod,proto3" json:"payment_method"`                                                                                                    //选中的支付方式
	CouponId        int64           `protobuf:"varint,6,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id"`                                                                                                                  //选中的优惠劵凭证ID
	UseIntegral     int64           `protobuf:"varint,7,opt,name=use_integral,json=useIntegral,proto3" json:"use_integral"`                                                                                                         //使用的积分
	UseSurplus      int64           `protobuf:"varint,8,opt,name=use_surplus,json=useSurplus,proto3" json:"use_surplus"`                                                                                                            //使用的余额
	AgentMemberId   int64           `protobuf:"varint,9,opt,name=agent_member_id,json=agentMemberId,proto3" json:"agent_member_id"`                                                                                                 //代理的客户ID（操作员代客下单）
	RealstoreId     int64           `protobuf:"varint,10,opt,name=realstore_id,json=realstoreId,proto3" json:"realstore_id"`                                                                                                        //多门店Id
	ShopId          int64           `protobuf:"varint,11,opt,name=shop_id,json=shopId,proto3" json:"shop_id"`                                                                                                                       //多商户Id
	LocationLng     float32         `protobuf:"fixed32,12,opt,name=location_lng,json=locationLng,proto3" json:"location_lng"`                                                                                                       //位置经度
	LocationLat     float32         `protobuf:"fixed32,13,opt,name=location_lat,json=locationLat,proto3" json:"location_lat"`                                                                                                       //位置纬度
	LocationAddress string          `protobuf:"bytes,14,opt,name=location_address,json=locationAddress,proto3" json:"location_address"`                                                                                             //位置地址信息
	LogisticsType   string          `protobuf:"bytes,22,opt,name=logistics_type,json=logisticsType,proto3" json:"logistics_type"`                                                                                                   //物流类型：1-快递发货，2-同城配送，3-用户自提，4-虚拟发货(无需物流)
	ChoiceCouponIds map[int64]int64 `protobuf:"bytes,15,rep,name=choice_coupon_ids,json=choiceCouponIds,proto3" json:"choice_coupon_ids" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"` //选中优惠劵 <仓库ID,用户优惠劵ID>
	BuyCartIds      []int64         `protobuf:"varint,16,rep,packed,name=buy_cart_ids,json=buyCartIds,proto3" json:"buy_cart_ids"`                                                                                                  ///购物车ids
	BuyCommodity    *BuyCommodity   `protobuf:"bytes,17,opt,name=buy_commodity,json=buyCommodity,proto3" json:"buy_commodity"`                                                                                                      //直接购买商品【单个商品】
	BuyCommodities  []*BuyCommodity `protobuf:"bytes,18,rep,name=buy_commodities,json=buyCommodities,proto3" json:"buy_commodities"`                                                                                                //购买商品清单【多个商品】
	IsUseIntegral   bool            `protobuf:"varint,19,opt,name=is_use_integral,json=isUseIntegral,proto3" json:"is_use_integral"`                                                                                                //是否使用积分
	IsUseSurplus    bool            `protobuf:"varint,20,opt,name=is_use_surplus,json=isUseSurplus,proto3" json:"is_use_surplus"`                                                                                                   //是否使用余额
	IsOrderSubmit   bool            `protobuf:"varint,21,opt,name=is_order_submit,json=isOrderSubmit,proto3" json:"is_order_submit"`                                                                                                //订单是否已提交
}

func (x *BuyRequest) Reset() {
	*x = BuyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buyService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyRequest) ProtoMessage() {}

func (x *BuyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_buyService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyRequest.ProtoReflect.Descriptor instead.
func (*BuyRequest) Descriptor() ([]byte, []int) {
	return file_buyService_proto_rawDescGZIP(), []int{3}
}

func (x *BuyRequest) GetBuyMode() string {
	if x != nil {
		return x.BuyMode
	}
	return ""
}

func (x *BuyRequest) GetAddressType() string {
	if x != nil {
		return x.AddressType
	}
	return ""
}

func (x *BuyRequest) GetAddressId() int64 {
	if x != nil {
		return x.AddressId
	}
	return 0
}

func (x *BuyRequest) GetUserNote() string {
	if x != nil {
		return x.UserNote
	}
	return ""
}

func (x *BuyRequest) GetPaymentMethod() string {
	if x != nil {
		return x.PaymentMethod
	}
	return ""
}

func (x *BuyRequest) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *BuyRequest) GetUseIntegral() int64 {
	if x != nil {
		return x.UseIntegral
	}
	return 0
}

func (x *BuyRequest) GetUseSurplus() int64 {
	if x != nil {
		return x.UseSurplus
	}
	return 0
}

func (x *BuyRequest) GetAgentMemberId() int64 {
	if x != nil {
		return x.AgentMemberId
	}
	return 0
}

func (x *BuyRequest) GetRealstoreId() int64 {
	if x != nil {
		return x.RealstoreId
	}
	return 0
}

func (x *BuyRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *BuyRequest) GetLocationLng() float32 {
	if x != nil {
		return x.LocationLng
	}
	return 0
}

func (x *BuyRequest) GetLocationLat() float32 {
	if x != nil {
		return x.LocationLat
	}
	return 0
}

func (x *BuyRequest) GetLocationAddress() string {
	if x != nil {
		return x.LocationAddress
	}
	return ""
}

func (x *BuyRequest) GetLogisticsType() string {
	if x != nil {
		return x.LogisticsType
	}
	return ""
}

func (x *BuyRequest) GetChoiceCouponIds() map[int64]int64 {
	if x != nil {
		return x.ChoiceCouponIds
	}
	return nil
}

func (x *BuyRequest) GetBuyCartIds() []int64 {
	if x != nil {
		return x.BuyCartIds
	}
	return nil
}

func (x *BuyRequest) GetBuyCommodity() *BuyCommodity {
	if x != nil {
		return x.BuyCommodity
	}
	return nil
}

func (x *BuyRequest) GetBuyCommodities() []*BuyCommodity {
	if x != nil {
		return x.BuyCommodities
	}
	return nil
}

func (x *BuyRequest) GetIsUseIntegral() bool {
	if x != nil {
		return x.IsUseIntegral
	}
	return false
}

func (x *BuyRequest) GetIsUseSurplus() bool {
	if x != nil {
		return x.IsUseSurplus
	}
	return false
}

func (x *BuyRequest) GetIsOrderSubmit() bool {
	if x != nil {
		return x.IsOrderSubmit
	}
	return false
}

// 购买商品信息
type BuyCommodity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpuId  int64  `protobuf:"varint,1,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`    //商品ID
	SkuKey string `protobuf:"bytes,2,opt,name=sku_key,json=skuKey,proto3" json:"sku_key"`  //规格sku_key
	Stock  int64  `protobuf:"varint,3,opt,name=stock,proto3" json:"stock"`                 //数量
	CartId int64  `protobuf:"varint,4,opt,name=cart_id,json=cartId,proto3" json:"cart_id"` //购物车行id【购物车专用】
}

func (x *BuyCommodity) Reset() {
	*x = BuyCommodity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buyService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyCommodity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyCommodity) ProtoMessage() {}

func (x *BuyCommodity) ProtoReflect() protoreflect.Message {
	mi := &file_buyService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyCommodity.ProtoReflect.Descriptor instead.
func (*BuyCommodity) Descriptor() ([]byte, []int) {
	return file_buyService_proto_rawDescGZIP(), []int{4}
}

func (x *BuyCommodity) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *BuyCommodity) GetSkuKey() string {
	if x != nil {
		return x.SkuKey
	}
	return ""
}

func (x *BuyCommodity) GetStock() int64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *BuyCommodity) GetCartId() int64 {
	if x != nil {
		return x.CartId
	}
	return 0
}

// 购买确认数据
type BuyConfirmData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base                 *BuyOrderBase  `protobuf:"bytes,1,opt,name=base,proto3" json:"base"`                                                               //结算信息(汇总)
	GroupList            []*BuyGroup    `protobuf:"bytes,2,rep,name=group_list,json=groupList,proto3" json:"group_list"`                                    //分组商品列表
	PaymentList          []*PaymentInfo `protobuf:"bytes,3,rep,name=payment_list,json=paymentList,proto3" json:"payment_list"`                              //支付方式列表
	RequestData          *BuyRequest    `protobuf:"bytes,4,opt,name=request_data,json=requestData,proto3" json:"request_data"`                              //提交信息反馈
	SubmitButtonText     string         `protobuf:"bytes,5,opt,name=submit_button_text,json=submitButtonText,proto3" json:"submit_button_text"`             //提交按钮文本
	DefaultPaymentMethod string         `protobuf:"bytes,7,opt,name=default_payment_method,json=defaultPaymentMethod,proto3" json:"default_payment_method"` //默认支付方式
	DefaultAddressType   string         `protobuf:"bytes,8,opt,name=default_address_type,json=defaultAddressType,proto3" json:"default_address_type"`       //默认地址类型
	DefaultAddressId     int64          `protobuf:"varint,9,opt,name=default_address_id,json=defaultAddressId,proto3" json:"default_address_id"`            //默认地址ID
	ConsigneeAddress     *OrderAddress  `protobuf:"bytes,10,opt,name=consignee_address,json=consigneeAddress,proto3" json:"consignee_address"`              //收件人地址
	ChoiceDeliveryData   []byte         `protobuf:"bytes,11,opt,name=choice_delivery_data,json=choiceDeliveryData,proto3" json:"choice_delivery_data"`      //选择配送数据
	IntegralData         []byte         `protobuf:"bytes,13,opt,name=integral_data,json=integralData,proto3" json:"integral_data"`                          //积分数据
	IsError              string         `protobuf:"bytes,15,opt,name=is_error,json=isError,proto3" json:"is_error"`                                         //是否有错误（0否，1是）
	ErrorMsg             string         `protobuf:"bytes,16,opt,name=error_msg,json=errorMsg,proto3" json:"error_msg"`                                      //错误信息
}

func (x *BuyConfirmData) Reset() {
	*x = BuyConfirmData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buyService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyConfirmData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyConfirmData) ProtoMessage() {}

func (x *BuyConfirmData) ProtoReflect() protoreflect.Message {
	mi := &file_buyService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyConfirmData.ProtoReflect.Descriptor instead.
func (*BuyConfirmData) Descriptor() ([]byte, []int) {
	return file_buyService_proto_rawDescGZIP(), []int{5}
}

func (x *BuyConfirmData) GetBase() *BuyOrderBase {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *BuyConfirmData) GetGroupList() []*BuyGroup {
	if x != nil {
		return x.GroupList
	}
	return nil
}

func (x *BuyConfirmData) GetPaymentList() []*PaymentInfo {
	if x != nil {
		return x.PaymentList
	}
	return nil
}

func (x *BuyConfirmData) GetRequestData() *BuyRequest {
	if x != nil {
		return x.RequestData
	}
	return nil
}

func (x *BuyConfirmData) GetSubmitButtonText() string {
	if x != nil {
		return x.SubmitButtonText
	}
	return ""
}

func (x *BuyConfirmData) GetDefaultPaymentMethod() string {
	if x != nil {
		return x.DefaultPaymentMethod
	}
	return ""
}

func (x *BuyConfirmData) GetDefaultAddressType() string {
	if x != nil {
		return x.DefaultAddressType
	}
	return ""
}

func (x *BuyConfirmData) GetDefaultAddressId() int64 {
	if x != nil {
		return x.DefaultAddressId
	}
	return 0
}

func (x *BuyConfirmData) GetConsigneeAddress() *OrderAddress {
	if x != nil {
		return x.ConsigneeAddress
	}
	return nil
}

func (x *BuyConfirmData) GetChoiceDeliveryData() []byte {
	if x != nil {
		return x.ChoiceDeliveryData
	}
	return nil
}

func (x *BuyConfirmData) GetIntegralData() []byte {
	if x != nil {
		return x.IntegralData
	}
	return nil
}

func (x *BuyConfirmData) GetIsError() string {
	if x != nil {
		return x.IsError
	}
	return ""
}

func (x *BuyConfirmData) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

// 购买提交数据
type BuySubmitData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderStatus string       `protobuf:"bytes,1,opt,name=order_status,json=orderStatus,proto3" json:"order_status"`
	OrderIds    []int64      `protobuf:"varint,2,rep,packed,name=order_ids,json=orderIds,proto3" json:"order_ids"`
	Payment     *PaymentInfo `protobuf:"bytes,3,opt,name=payment,proto3" json:"payment"`
	JumpUrl     string       `protobuf:"bytes,4,opt,name=jump_url,json=jumpUrl,proto3" json:"jump_url"`
}

func (x *BuySubmitData) Reset() {
	*x = BuySubmitData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buyService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuySubmitData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuySubmitData) ProtoMessage() {}

func (x *BuySubmitData) ProtoReflect() protoreflect.Message {
	mi := &file_buyService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuySubmitData.ProtoReflect.Descriptor instead.
func (*BuySubmitData) Descriptor() ([]byte, []int) {
	return file_buyService_proto_rawDescGZIP(), []int{6}
}

func (x *BuySubmitData) GetOrderStatus() string {
	if x != nil {
		return x.OrderStatus
	}
	return ""
}

func (x *BuySubmitData) GetOrderIds() []int64 {
	if x != nil {
		return x.OrderIds
	}
	return nil
}

func (x *BuySubmitData) GetPayment() *PaymentInfo {
	if x != nil {
		return x.Payment
	}
	return nil
}

func (x *BuySubmitData) GetJumpUrl() string {
	if x != nil {
		return x.JumpUrl
	}
	return ""
}

// 购买提交数据
type BuyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConfirmData *BuyConfirmData `protobuf:"bytes,1,opt,name=confirm_data,json=confirmData,proto3" json:"confirm_data"`
	SubmitData  *BuySubmitData  `protobuf:"bytes,2,opt,name=submit_data,json=submitData,proto3" json:"submit_data"`
}

func (x *BuyResponse) Reset() {
	*x = BuyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_buyService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyResponse) ProtoMessage() {}

func (x *BuyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_buyService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyResponse.ProtoReflect.Descriptor instead.
func (*BuyResponse) Descriptor() ([]byte, []int) {
	return file_buyService_proto_rawDescGZIP(), []int{7}
}

func (x *BuyResponse) GetConfirmData() *BuyConfirmData {
	if x != nil {
		return x.ConfirmData
	}
	return nil
}

func (x *BuyResponse) GetSubmitData() *BuySubmitData {
	if x != nil {
		return x.SubmitData
	}
	return nil
}

var File_buyService_proto protoreflect.FileDescriptor

var file_buyService_proto_rawDesc = []byte{
	0x0a, 0x10, 0x62, 0x75, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x19, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe1,
	0x02, 0x0a, 0x08, 0x42, 0x75, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x35, 0x0a, 0x09, 0x77,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x61, 0x72, 0x65, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75,
	0x73, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x73, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x42, 0x75, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x52, 0x09,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x40, 0x0a, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x63, 0x72,
	0x65, 0x61, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x72,
	0x65, 0x61, 0x73, 0x65, 0x52, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x72, 0x65,
	0x61, 0x73, 0x65, 0x73, 0x12, 0x40, 0x0a, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x11, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x0f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49,
	0x64, 0x73, 0x22, 0xac, 0x03, 0x0a, 0x0c, 0x42, 0x75, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x70, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x70, 0x75, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6b,
	0x75, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6b, 0x75,
	0x4b, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x57, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x76, 0x6f, 0x6c,
	0x75, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x61,
	0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66,
	0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x69, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x73, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x73, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73,
	0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73,
	0x67, 0x22, 0xf5, 0x03, 0x0a, 0x0c, 0x42, 0x75, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x61,
	0x73, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x69, 0x6e,
	0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x72,
	0x65, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75,
	0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x62,
	0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x75, 0x79, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0e, 0x62, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x75, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x62, 0x75,
	0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68, 0x65, 0x64, 0x12, 0x2a, 0x0a,
	0x11, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x70, 0x65, 0x63, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x70, 0x65,
	0x63, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x70, 0x65, 0x63, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x73, 0x65,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x5f,
	0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x75,
	0x73, 0x65, 0x53, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x77, 0x61,
	0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x22, 0xbb, 0x07, 0x0a, 0x0a, 0x42, 0x75,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x79, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x79, 0x4d,
	0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x6f,
	0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f,
	0x74, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x73,
	0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x75, 0x73, 0x65,
	0x5f, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x75, 0x73, 0x65, 0x53, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74,
	0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x6e, 0x67, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6e,
	0x67, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x61,
	0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x61, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x25, 0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x55, 0x0a, 0x11, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0f, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0f, 0x63, 0x68,
	0x6f, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x20, 0x0a,
	0x0c, 0x62, 0x75, 0x79, 0x5f, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x10, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x0a, 0x62, 0x75, 0x79, 0x43, 0x61, 0x72, 0x74, 0x49, 0x64, 0x73, 0x12,
	0x3b, 0x0a, 0x0d, 0x62, 0x75, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x52, 0x0c,
	0x62, 0x75, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x12, 0x3f, 0x0a, 0x0f,
	0x62, 0x75, 0x79, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18,
	0x12, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x52, 0x0e, 0x62,
	0x75, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x69, 0x65, 0x73, 0x12, 0x26, 0x0a,
	0x0f, 0x69, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x55, 0x73, 0x65, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x5f,
	0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69,
	0x73, 0x55, 0x73, 0x65, 0x53, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x69,
	0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x1a, 0x42, 0x0a, 0x14, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x6d, 0x0a, 0x0c, 0x42, 0x75, 0x79, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x64, 0x69, 0x74, 0x79, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x70, 0x75, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x70, 0x75, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x73, 0x6b, 0x75, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x6b, 0x75, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x17, 0x0a,
	0x07, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x63, 0x61, 0x72, 0x74, 0x49, 0x64, 0x22, 0xfa, 0x04, 0x0a, 0x0e, 0x42, 0x75, 0x79, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x52,
	0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x09, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x37, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2c, 0x0a, 0x12, 0x73,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x42,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x12, 0x34, 0x0a, 0x16, 0x64, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x30, 0x0a, 0x14, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12,
	0x43, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x65, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x12, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72,
	0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0c, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x69,
	0x73, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69,
	0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x6d, 0x73, 0x67, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x73, 0x67, 0x22, 0x9b, 0x01, 0x0a, 0x0d, 0x42, 0x75, 0x79, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x2f, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6a, 0x75, 0x6d, 0x70, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6a, 0x75, 0x6d, 0x70, 0x55, 0x72,
	0x6c, 0x22, 0x84, 0x01, 0x0a, 0x0b, 0x42, 0x75, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3b, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x44, 0x61, 0x74, 0x61, 0x12, 0x38,
	0x0a, 0x0b, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42,
	0x75, 0x79, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x73, 0x75,
	0x62, 0x6d, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x32, 0x82, 0x02, 0x0a, 0x0a, 0x42, 0x75, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x12, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x75,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x37, 0x0a, 0x06, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x10, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x14,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x42, 0x75, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a,
	0x0d, 0x42, 0x75, 0x79, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x14,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x42, 0x75, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a,
	0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_buyService_proto_rawDescOnce sync.Once
	file_buyService_proto_rawDescData = file_buyService_proto_rawDesc
)

func file_buyService_proto_rawDescGZIP() []byte {
	file_buyService_proto_rawDescOnce.Do(func() {
		file_buyService_proto_rawDescData = protoimpl.X.CompressGZIP(file_buyService_proto_rawDescData)
	})
	return file_buyService_proto_rawDescData
}

var file_buyService_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_buyService_proto_goTypes = []interface{}{
	(*BuyGroup)(nil),       // 0: services.BuyGroup
	(*BuyOrderItem)(nil),   // 1: services.BuyOrderItem
	(*BuyOrderBase)(nil),   // 2: services.BuyOrderBase
	(*BuyRequest)(nil),     // 3: services.BuyRequest
	(*BuyCommodity)(nil),   // 4: services.BuyCommodity
	(*BuyConfirmData)(nil), // 5: services.BuyConfirmData
	(*BuySubmitData)(nil),  // 6: services.BuySubmitData
	(*BuyResponse)(nil),    // 7: services.BuyResponse
	nil,                    // 8: services.BuyRequest.ChoiceCouponIdsEntry
	(*WarehouseInfo)(nil),  // 9: services.WarehouseInfo
	(*OrderIncrease)(nil),  // 10: services.OrderIncrease
	(*OrderDiscount)(nil),  // 11: services.OrderDiscount
	(*ProductInfo)(nil),    // 12: services.ProductInfo
	(*PaymentInfo)(nil),    // 13: services.PaymentInfo
	(*OrderAddress)(nil),   // 14: services.OrderAddress
}
var file_buyService_proto_depIdxs = []int32{
	9,  // 0: services.BuyGroup.warehouse:type_name -> services.WarehouseInfo
	2,  // 1: services.BuyGroup.order_base:type_name -> services.BuyOrderBase
	1,  // 2: services.BuyGroup.order_items:type_name -> services.BuyOrderItem
	10, // 3: services.BuyGroup.order_increases:type_name -> services.OrderIncrease
	11, // 4: services.BuyGroup.order_discounts:type_name -> services.OrderDiscount
	12, // 5: services.BuyOrderItem.product:type_name -> services.ProductInfo
	8,  // 6: services.BuyRequest.choice_coupon_ids:type_name -> services.BuyRequest.ChoiceCouponIdsEntry
	4,  // 7: services.BuyRequest.buy_commodity:type_name -> services.BuyCommodity
	4,  // 8: services.BuyRequest.buy_commodities:type_name -> services.BuyCommodity
	2,  // 9: services.BuyConfirmData.base:type_name -> services.BuyOrderBase
	0,  // 10: services.BuyConfirmData.group_list:type_name -> services.BuyGroup
	13, // 11: services.BuyConfirmData.payment_list:type_name -> services.PaymentInfo
	3,  // 12: services.BuyConfirmData.request_data:type_name -> services.BuyRequest
	14, // 13: services.BuyConfirmData.consignee_address:type_name -> services.OrderAddress
	13, // 14: services.BuySubmitData.payment:type_name -> services.PaymentInfo
	5,  // 15: services.BuyResponse.confirm_data:type_name -> services.BuyConfirmData
	6,  // 16: services.BuyResponse.submit_data:type_name -> services.BuySubmitData
	3,  // 17: services.BuyService.Confirm:input_type -> services.BuyRequest
	3,  // 18: services.BuyService.Submit:input_type -> services.BuyRequest
	3,  // 19: services.BuyService.OrderSplitHandle:input_type -> services.BuyRequest
	3,  // 20: services.BuyService.BuyGoodsCheck:input_type -> services.BuyRequest
	7,  // 21: services.BuyService.Confirm:output_type -> services.BuyResponse
	7,  // 22: services.BuyService.Submit:output_type -> services.BuyResponse
	7,  // 23: services.BuyService.OrderSplitHandle:output_type -> services.BuyResponse
	7,  // 24: services.BuyService.BuyGoodsCheck:output_type -> services.BuyResponse
	21, // [21:25] is the sub-list for method output_type
	17, // [17:21] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_buyService_proto_init() }
func file_buyService_proto_init() {
	if File_buyService_proto != nil {
		return
	}
	file_orderAddressService_proto_init()
	file_baseInfoService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_buyService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buyService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyOrderItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buyService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyOrderBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buyService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buyService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyCommodity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buyService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyConfirmData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buyService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuySubmitData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_buyService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_buyService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_buyService_proto_goTypes,
		DependencyIndexes: file_buyService_proto_depIdxs,
		MessageInfos:      file_buyService_proto_msgTypes,
	}.Build()
	File_buyService_proto = out.File
	file_buyService_proto_rawDesc = nil
	file_buyService_proto_goTypes = nil
	file_buyService_proto_depIdxs = nil
}
