// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: checkoutService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//账单信息
type BillInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64        `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Name         string       `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Alias        string       `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias"`
	IconUrl      string       `protobuf:"bytes,4,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url"`
	Lng          string       `protobuf:"bytes,5,opt,name=lng,proto3" json:"lng"`
	Lat          string       `protobuf:"bytes,6,opt,name=lat,proto3" json:"lat"`
	AreaId       int64        `protobuf:"varint,7,opt,name=area_id,json=areaId,proto3" json:"area_id"`
	Address      string       `protobuf:"bytes,8,opt,name=address,proto3" json:"address"`
	ProvinceName string       `protobuf:"bytes,9,opt,name=province_name,json=provinceName,proto3" json:"province_name"`
	CityName     string       `protobuf:"bytes,10,opt,name=city_name,json=cityName,proto3" json:"city_name"`
	CountyName   string       `protobuf:"bytes,11,opt,name=county_name,json=countyName,proto3" json:"county_name"`
	OrderBase    *OrderBase   `protobuf:"bytes,12,opt,name=order_base,json=orderBase,proto3" json:"order_base"`    //订单基本信息
	GoodsItems   []*GoodsInfo `protobuf:"bytes,13,rep,name=goods_items,json=goodsItems,proto3" json:"goods_items"` //商品清单
}

func (x *BillInfo) Reset() {
	*x = BillInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkoutService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BillInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BillInfo) ProtoMessage() {}

func (x *BillInfo) ProtoReflect() protoreflect.Message {
	mi := &file_checkoutService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BillInfo.ProtoReflect.Descriptor instead.
func (*BillInfo) Descriptor() ([]byte, []int) {
	return file_checkoutService_proto_rawDescGZIP(), []int{0}
}

func (x *BillInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BillInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BillInfo) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *BillInfo) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *BillInfo) GetLng() string {
	if x != nil {
		return x.Lng
	}
	return ""
}

func (x *BillInfo) GetLat() string {
	if x != nil {
		return x.Lat
	}
	return ""
}

func (x *BillInfo) GetAreaId() int64 {
	if x != nil {
		return x.AreaId
	}
	return 0
}

func (x *BillInfo) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *BillInfo) GetProvinceName() string {
	if x != nil {
		return x.ProvinceName
	}
	return ""
}

func (x *BillInfo) GetCityName() string {
	if x != nil {
		return x.CityName
	}
	return ""
}

func (x *BillInfo) GetCountyName() string {
	if x != nil {
		return x.CountyName
	}
	return ""
}

func (x *BillInfo) GetOrderBase() *OrderBase {
	if x != nil {
		return x.OrderBase
	}
	return nil
}

func (x *BillInfo) GetGoodsItems() []*GoodsInfo {
	if x != nil {
		return x.GoodsItems
	}
	return nil
}

//订单基础信息
type OrderBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CheckoutId        string           `protobuf:"bytes,1,opt,name=checkout_id,json=checkoutId,proto3" json:"checkout_id"`                       //货币类型
	Currency          string           `protobuf:"bytes,2,opt,name=currency,proto3" json:"currency"`                                             //货币类型
	BuyNumberCount    int32            `protobuf:"varint,3,opt,name=buy_number_count,json=buyNumberCount,proto3" json:"buy_number_count"`        //购买商品总数量
	IncreasePrice     int64            `protobuf:"varint,4,opt,name=increase_price,json=increasePrice,proto3" json:"increase_price"`             //增加的金额
	PreferentialPrice int64            `protobuf:"varint,5,opt,name=preferential_price,json=preferentialPrice,proto3" json:"preferential_price"` //优惠金额
	TotalPrice        int64            `protobuf:"varint,6,opt,name=total_price,json=totalPrice,proto3" json:"total_price"`                      //订单总价(订单最终价格)
	ActualPrice       int64            `protobuf:"varint,7,opt,name=actual_price,json=actualPrice,proto3" json:"actual_price"`                   //订单实际支付金额
	PayMoney          int64            `protobuf:"varint,8,opt,name=pay_money,json=payMoney,proto3" json:"pay_money"`                            //支付现金
	FreightFee        int64            `protobuf:"varint,9,opt,name=freight_fee,json=freightFee,proto3" json:"freight_fee"`                      //运费
	InsureFee         int64            `protobuf:"varint,10,opt,name=insure_fee,json=insureFee,proto3" json:"insure_fee"`                        //保险费
	PackFee           int64            `protobuf:"varint,11,opt,name=pack_fee,json=packFee,proto3" json:"pack_fee"`                              //包装费
	Surplus           int64            `protobuf:"varint,12,opt,name=surplus,proto3" json:"surplus"`                                             //使用账户余额
	CouponId          int64            `protobuf:"varint,13,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id"`                           //使用优惠劵ID
	CouponMoney       int64            `protobuf:"varint,14,opt,name=coupon_money,json=couponMoney,proto3" json:"coupon_money"`                  //使用优惠劵金额
	Integral          int64            `protobuf:"varint,15,opt,name=integral,proto3" json:"integral"`                                           //积分数量
	IntegralMoney     int64            `protobuf:"varint,16,opt,name=integral_money,json=integralMoney,proto3" json:"integral_money"`            //积分金额
	PaidMoney         int64            `protobuf:"varint,17,opt,name=paid_money,json=paidMoney,proto3" json:"paid_money"`                        //已支付现金
	MemberId          int64            `protobuf:"varint,18,opt,name=member_id,json=memberId,proto3" json:"member_id"`                           //会员ID
	AddressId         int64            `protobuf:"varint,19,opt,name=address_id,json=addressId,proto3" json:"address_id"`                        //地址ID
	IsShipment        bool             `protobuf:"varint,20,opt,name=is_shipment,json=isShipment,proto3" json:"is_shipment"`                     //是否物流
	GoodsItems        []*GoodsInfo     `protobuf:"bytes,21,rep,name=goods_items,json=goodsItems,proto3" json:"goods_items"`                      //购买商品列表
	ExtensionData     []*ExtensionData `protobuf:"bytes,22,rep,name=extension_data,json=extensionData,proto3" json:"extension_data"`             //扩展数据
}

func (x *OrderBase) Reset() {
	*x = OrderBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkoutService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderBase) ProtoMessage() {}

func (x *OrderBase) ProtoReflect() protoreflect.Message {
	mi := &file_checkoutService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderBase.ProtoReflect.Descriptor instead.
func (*OrderBase) Descriptor() ([]byte, []int) {
	return file_checkoutService_proto_rawDescGZIP(), []int{1}
}

func (x *OrderBase) GetCheckoutId() string {
	if x != nil {
		return x.CheckoutId
	}
	return ""
}

func (x *OrderBase) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *OrderBase) GetBuyNumberCount() int32 {
	if x != nil {
		return x.BuyNumberCount
	}
	return 0
}

func (x *OrderBase) GetIncreasePrice() int64 {
	if x != nil {
		return x.IncreasePrice
	}
	return 0
}

func (x *OrderBase) GetPreferentialPrice() int64 {
	if x != nil {
		return x.PreferentialPrice
	}
	return 0
}

func (x *OrderBase) GetTotalPrice() int64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *OrderBase) GetActualPrice() int64 {
	if x != nil {
		return x.ActualPrice
	}
	return 0
}

func (x *OrderBase) GetPayMoney() int64 {
	if x != nil {
		return x.PayMoney
	}
	return 0
}

func (x *OrderBase) GetFreightFee() int64 {
	if x != nil {
		return x.FreightFee
	}
	return 0
}

func (x *OrderBase) GetInsureFee() int64 {
	if x != nil {
		return x.InsureFee
	}
	return 0
}

func (x *OrderBase) GetPackFee() int64 {
	if x != nil {
		return x.PackFee
	}
	return 0
}

func (x *OrderBase) GetSurplus() int64 {
	if x != nil {
		return x.Surplus
	}
	return 0
}

func (x *OrderBase) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *OrderBase) GetCouponMoney() int64 {
	if x != nil {
		return x.CouponMoney
	}
	return 0
}

func (x *OrderBase) GetIntegral() int64 {
	if x != nil {
		return x.Integral
	}
	return 0
}

func (x *OrderBase) GetIntegralMoney() int64 {
	if x != nil {
		return x.IntegralMoney
	}
	return 0
}

func (x *OrderBase) GetPaidMoney() int64 {
	if x != nil {
		return x.PaidMoney
	}
	return 0
}

func (x *OrderBase) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *OrderBase) GetAddressId() int64 {
	if x != nil {
		return x.AddressId
	}
	return 0
}

func (x *OrderBase) GetIsShipment() bool {
	if x != nil {
		return x.IsShipment
	}
	return false
}

func (x *OrderBase) GetGoodsItems() []*GoodsInfo {
	if x != nil {
		return x.GoodsItems
	}
	return nil
}

func (x *OrderBase) GetExtensionData() []*ExtensionData {
	if x != nil {
		return x.ExtensionData
	}
	return nil
}

type ExtensionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`         //名称
	Price    int64  `protobuf:"varint,2,opt,name=price,proto3" json:"price"`      //价格
	Type     string `protobuf:"bytes,3,opt,name=type,proto3" json:"type"`         //类型
	Business string `protobuf:"bytes,4,opt,name=business,proto3" json:"business"` //业务名称
	Tips     string `protobuf:"bytes,5,opt,name=tips,proto3" json:"tips"`         //提示信息
}

func (x *ExtensionData) Reset() {
	*x = ExtensionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkoutService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtensionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtensionData) ProtoMessage() {}

func (x *ExtensionData) ProtoReflect() protoreflect.Message {
	mi := &file_checkoutService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtensionData.ProtoReflect.Descriptor instead.
func (*ExtensionData) Descriptor() ([]byte, []int) {
	return file_checkoutService_proto_rawDescGZIP(), []int{2}
}

func (x *ExtensionData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExtensionData) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ExtensionData) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ExtensionData) GetBusiness() string {
	if x != nil {
		return x.Business
	}
	return ""
}

func (x *ExtensionData) GetTips() string {
	if x != nil {
		return x.Tips
	}
	return ""
}

//确认信息请求参数
type CheckRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuyType       string             `protobuf:"bytes,1,opt,name=buy_type,json=buyType,proto3" json:"buy_type"`                      //购买类型
	AddressId     int64              `protobuf:"varint,2,opt,name=address_id,json=addressId,proto3" json:"address_id"`               //收货地址ID
	Postscript    string             `protobuf:"bytes,3,opt,name=postscript,proto3" json:"postscript"`                               //买家留言(50字以内)
	ShipmentId    int32              `protobuf:"varint,4,opt,name=shipment_id,json=shipmentId,proto3" json:"shipment_id"`            //选中的配送方式
	PaymentId     int32              `protobuf:"varint,5,opt,name=payment_id,json=paymentId,proto3" json:"payment_id"`               //选中的支付方式
	CouponId      int64              `protobuf:"varint,6,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id"`                  //选中的优惠劵凭证ID
	UseIntegral   int64              `protobuf:"varint,7,opt,name=use_integral,json=useIntegral,proto3" json:"use_integral"`         //使用的积分数
	UseSurplus    int64              `protobuf:"varint,8,opt,name=use_surplus,json=useSurplus,proto3" json:"use_surplus"`            //使用的余额数
	AgentMemberId int64              `protobuf:"varint,9,opt,name=agent_member_id,json=agentMemberId,proto3" json:"agent_member_id"` //代理的客户ID（操作员代客下单）
	SkuId         int64              `protobuf:"varint,10,opt,name=sku_id,json=skuId,proto3" json:"sku_id"`                          //直接购买SkuId
	Number        int32              `protobuf:"varint,11,opt,name=number,proto3" json:"number"`                                     //直接购买数量
	SkuIds        []int64            `protobuf:"varint,12,rep,packed,name=sku_ids,json=skuIds,proto3" json:"sku_ids"`                //商品Ids
	Skus          []*CheckRequestSku `protobuf:"bytes,13,rep,name=skus,proto3" json:"skus"`                                          //商品清单
}

func (x *CheckRequest) Reset() {
	*x = CheckRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkoutService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckRequest) ProtoMessage() {}

func (x *CheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkoutService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckRequest.ProtoReflect.Descriptor instead.
func (*CheckRequest) Descriptor() ([]byte, []int) {
	return file_checkoutService_proto_rawDescGZIP(), []int{3}
}

func (x *CheckRequest) GetBuyType() string {
	if x != nil {
		return x.BuyType
	}
	return ""
}

func (x *CheckRequest) GetAddressId() int64 {
	if x != nil {
		return x.AddressId
	}
	return 0
}

func (x *CheckRequest) GetPostscript() string {
	if x != nil {
		return x.Postscript
	}
	return ""
}

func (x *CheckRequest) GetShipmentId() int32 {
	if x != nil {
		return x.ShipmentId
	}
	return 0
}

func (x *CheckRequest) GetPaymentId() int32 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

func (x *CheckRequest) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *CheckRequest) GetUseIntegral() int64 {
	if x != nil {
		return x.UseIntegral
	}
	return 0
}

func (x *CheckRequest) GetUseSurplus() int64 {
	if x != nil {
		return x.UseSurplus
	}
	return 0
}

func (x *CheckRequest) GetAgentMemberId() int64 {
	if x != nil {
		return x.AgentMemberId
	}
	return 0
}

func (x *CheckRequest) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *CheckRequest) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *CheckRequest) GetSkuIds() []int64 {
	if x != nil {
		return x.SkuIds
	}
	return nil
}

func (x *CheckRequest) GetSkus() []*CheckRequestSku {
	if x != nil {
		return x.Skus
	}
	return nil
}

//填写商品请求参数
type WriteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderType   string            `protobuf:"bytes,1,opt,name=order_type,json=orderType,proto3" json:"order_type"`                                                                  //订单类型（默认为普通订单）
	DirectSkuId int64             `protobuf:"varint,2,opt,name=direct_sku_id,json=directSkuId,proto3" json:"direct_sku_id"`                                                         //直接购买SkuId
	CartCode    string            `protobuf:"bytes,3,opt,name=cart_code,json=cartCode,proto3" json:"cart_code"`                                                                     ////购物车Code
	Params      map[string]string `protobuf:"bytes,5,rep,name=params,proto3" json:"params" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` //附加参数
}

func (x *WriteRequest) Reset() {
	*x = WriteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkoutService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteRequest) ProtoMessage() {}

func (x *WriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_checkoutService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteRequest.ProtoReflect.Descriptor instead.
func (*WriteRequest) Descriptor() ([]byte, []int) {
	return file_checkoutService_proto_rawDescGZIP(), []int{4}
}

func (x *WriteRequest) GetOrderType() string {
	if x != nil {
		return x.OrderType
	}
	return ""
}

func (x *WriteRequest) GetDirectSkuId() int64 {
	if x != nil {
		return x.DirectSkuId
	}
	return 0
}

func (x *WriteRequest) GetCartCode() string {
	if x != nil {
		return x.CartCode
	}
	return ""
}

func (x *WriteRequest) GetParams() map[string]string {
	if x != nil {
		return x.Params
	}
	return nil
}

//自提点地址(待完善)
type ExtractionAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address"`
}

func (x *ExtractionAddress) Reset() {
	*x = ExtractionAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkoutService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtractionAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtractionAddress) ProtoMessage() {}

func (x *ExtractionAddress) ProtoReflect() protoreflect.Message {
	mi := &file_checkoutService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtractionAddress.ProtoReflect.Descriptor instead.
func (*ExtractionAddress) Descriptor() ([]byte, []int) {
	return file_checkoutService_proto_rawDescGZIP(), []int{5}
}

func (x *ExtractionAddress) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ExtractionAddress) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

//插件积分数据
type PluginsIntegralData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIntegral           int64  `protobuf:"varint,1,opt,name=user_integral,json=userIntegral,proto3" json:"user_integral"`                                   //用户积分
	UseIntegral            int64  `protobuf:"varint,2,opt,name=use_integral,json=useIntegral,proto3" json:"use_integral"`                                      //使用积分
	DiscountType           string `protobuf:"bytes,3,opt,name=discount_type,json=discountType,proto3" json:"discount_type"`                                    //优惠类型
	DiscountPrice          int64  `protobuf:"varint,4,opt,name=discount_price,json=discountPrice,proto3" json:"discount_price"`                                //抵扣金额
	IsSupportGoodsExchange bool   `protobuf:"varint,5,opt,name=is_support_goods_exchange,json=isSupportGoodsExchange,proto3" json:"is_support_goods_exchange"` //是否支持商品兑换
	IsChecked              bool   `protobuf:"varint,6,opt,name=is_checked,json=isChecked,proto3" json:"is_checked"`                                            //是否已选中
}

func (x *PluginsIntegralData) Reset() {
	*x = PluginsIntegralData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkoutService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginsIntegralData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginsIntegralData) ProtoMessage() {}

func (x *PluginsIntegralData) ProtoReflect() protoreflect.Message {
	mi := &file_checkoutService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginsIntegralData.ProtoReflect.Descriptor instead.
func (*PluginsIntegralData) Descriptor() ([]byte, []int) {
	return file_checkoutService_proto_rawDescGZIP(), []int{6}
}

func (x *PluginsIntegralData) GetUserIntegral() int64 {
	if x != nil {
		return x.UserIntegral
	}
	return 0
}

func (x *PluginsIntegralData) GetUseIntegral() int64 {
	if x != nil {
		return x.UseIntegral
	}
	return 0
}

func (x *PluginsIntegralData) GetDiscountType() string {
	if x != nil {
		return x.DiscountType
	}
	return ""
}

func (x *PluginsIntegralData) GetDiscountPrice() int64 {
	if x != nil {
		return x.DiscountPrice
	}
	return 0
}

func (x *PluginsIntegralData) GetIsSupportGoodsExchange() bool {
	if x != nil {
		return x.IsSupportGoodsExchange
	}
	return false
}

func (x *PluginsIntegralData) GetIsChecked() bool {
	if x != nil {
		return x.IsChecked
	}
	return false
}

//结算信息
type CheckoutBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TotalPrice        int64                `protobuf:"varint,1,opt,name=total_price,json=totalPrice,proto3" json:"total_price"`                      //订单总价(订单最终价格)
	ActualPrice       int64                `protobuf:"varint,2,opt,name=actual_price,json=actualPrice,proto3" json:"actual_price"`                   //实际支付金额
	PreferentialPrice int64                `protobuf:"varint,3,opt,name=preferential_price,json=preferentialPrice,proto3" json:"preferential_price"` //总优惠金额
	IncreasePrice     int64                `protobuf:"varint,4,opt,name=increase_price,json=increasePrice,proto3" json:"increase_price"`             //总增加金额
	GoodsCount        int32                `protobuf:"varint,5,opt,name=goods_count,json=goodsCount,proto3" json:"goods_count"`                      //商品种类数
	BuyCount          int32                `protobuf:"varint,6,opt,name=buy_count,json=buyCount,proto3" json:"buy_count"`                            //购买数量
	SpecWeightTotal   int64                `protobuf:"varint,7,opt,name=spec_weight_total,json=specWeightTotal,proto3" json:"spec_weight_total"`     //规格总重量
	SpecVolumeTotal   int64                `protobuf:"varint,8,opt,name=spec_volume_total,json=specVolumeTotal,proto3" json:"spec_volume_total"`     //规格总体积
	CommonSiteType    string               `protobuf:"bytes,9,opt,name=common_site_type,json=commonSiteType,proto3" json:"common_site_type"`         //站点类型
	Address           *OrderAddress        `protobuf:"bytes,10,opt,name=address,proto3" json:"address"`                                              //收件地址
	ExtractionAddress []*ExtractionAddress `protobuf:"bytes,11,rep,name=extraction_address,json=extractionAddress,proto3" json:"extraction_address"` //自提点地址
}

func (x *CheckoutBase) Reset() {
	*x = CheckoutBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkoutService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckoutBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckoutBase) ProtoMessage() {}

func (x *CheckoutBase) ProtoReflect() protoreflect.Message {
	mi := &file_checkoutService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckoutBase.ProtoReflect.Descriptor instead.
func (*CheckoutBase) Descriptor() ([]byte, []int) {
	return file_checkoutService_proto_rawDescGZIP(), []int{7}
}

func (x *CheckoutBase) GetTotalPrice() int64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *CheckoutBase) GetActualPrice() int64 {
	if x != nil {
		return x.ActualPrice
	}
	return 0
}

func (x *CheckoutBase) GetPreferentialPrice() int64 {
	if x != nil {
		return x.PreferentialPrice
	}
	return 0
}

func (x *CheckoutBase) GetIncreasePrice() int64 {
	if x != nil {
		return x.IncreasePrice
	}
	return 0
}

func (x *CheckoutBase) GetGoodsCount() int32 {
	if x != nil {
		return x.GoodsCount
	}
	return 0
}

func (x *CheckoutBase) GetBuyCount() int32 {
	if x != nil {
		return x.BuyCount
	}
	return 0
}

func (x *CheckoutBase) GetSpecWeightTotal() int64 {
	if x != nil {
		return x.SpecWeightTotal
	}
	return 0
}

func (x *CheckoutBase) GetSpecVolumeTotal() int64 {
	if x != nil {
		return x.SpecVolumeTotal
	}
	return 0
}

func (x *CheckoutBase) GetCommonSiteType() string {
	if x != nil {
		return x.CommonSiteType
	}
	return ""
}

func (x *CheckoutBase) GetAddress() *OrderAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *CheckoutBase) GetExtractionAddress() []*ExtractionAddress {
	if x != nil {
		return x.ExtractionAddress
	}
	return nil
}

type CheckoutData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base                *CheckoutBase        `protobuf:"bytes,1,opt,name=base,proto3" json:"base"`                                                            //结算信息
	BillList            []*BillInfo          `protobuf:"bytes,2,rep,name=bill_list,json=billList,proto3" json:"bill_list"`                                    //账单列表
	PaymentList         []*PaymentInfo       `protobuf:"bytes,3,rep,name=payment_list,json=paymentList,proto3" json:"payment_list"`                           //支付方式列表
	RequestData         *CheckRequest        `protobuf:"bytes,4,opt,name=request_data,json=requestData,proto3" json:"request_data"`                           //提交信息反馈
	PluginsIntegralData *PluginsIntegralData `protobuf:"bytes,6,opt,name=plugins_integral_data,json=pluginsIntegralData,proto3" json:"plugins_integral_data"` //积分信息
}

func (x *CheckoutData) Reset() {
	*x = CheckoutData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkoutService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckoutData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckoutData) ProtoMessage() {}

func (x *CheckoutData) ProtoReflect() protoreflect.Message {
	mi := &file_checkoutService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckoutData.ProtoReflect.Descriptor instead.
func (*CheckoutData) Descriptor() ([]byte, []int) {
	return file_checkoutService_proto_rawDescGZIP(), []int{8}
}

func (x *CheckoutData) GetBase() *CheckoutBase {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *CheckoutData) GetBillList() []*BillInfo {
	if x != nil {
		return x.BillList
	}
	return nil
}

func (x *CheckoutData) GetPaymentList() []*PaymentInfo {
	if x != nil {
		return x.PaymentList
	}
	return nil
}

func (x *CheckoutData) GetRequestData() *CheckRequest {
	if x != nil {
		return x.RequestData
	}
	return nil
}

func (x *CheckoutData) GetPluginsIntegralData() *PluginsIntegralData {
	if x != nil {
		return x.PluginsIntegralData
	}
	return nil
}

type CheckoutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *CheckoutData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *CheckoutResponse) Reset() {
	*x = CheckoutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkoutService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckoutResponse) ProtoMessage() {}

func (x *CheckoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checkoutService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckoutResponse.ProtoReflect.Descriptor instead.
func (*CheckoutResponse) Descriptor() ([]byte, []int) {
	return file_checkoutService_proto_rawDescGZIP(), []int{9}
}

func (x *CheckoutResponse) GetData() *CheckoutData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CheckoutResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type CheckoutSubmitData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderStatus int32    `protobuf:"varint,1,opt,name=order_status,json=orderStatus,proto3" json:"order_status"`
	OrderIds    []string `protobuf:"bytes,2,rep,name=order_ids,json=orderIds,proto3" json:"order_ids"`
	PaymentId   int32    `protobuf:"varint,3,opt,name=payment_id,json=paymentId,proto3" json:"payment_id"`
}

func (x *CheckoutSubmitData) Reset() {
	*x = CheckoutSubmitData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkoutService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckoutSubmitData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckoutSubmitData) ProtoMessage() {}

func (x *CheckoutSubmitData) ProtoReflect() protoreflect.Message {
	mi := &file_checkoutService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckoutSubmitData.ProtoReflect.Descriptor instead.
func (*CheckoutSubmitData) Descriptor() ([]byte, []int) {
	return file_checkoutService_proto_rawDescGZIP(), []int{10}
}

func (x *CheckoutSubmitData) GetOrderStatus() int32 {
	if x != nil {
		return x.OrderStatus
	}
	return 0
}

func (x *CheckoutSubmitData) GetOrderIds() []string {
	if x != nil {
		return x.OrderIds
	}
	return nil
}

func (x *CheckoutSubmitData) GetPaymentId() int32 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

type CheckoutSubmitResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *CheckoutSubmitData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error       `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *CheckoutSubmitResponse) Reset() {
	*x = CheckoutSubmitResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkoutService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckoutSubmitResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckoutSubmitResponse) ProtoMessage() {}

func (x *CheckoutSubmitResponse) ProtoReflect() protoreflect.Message {
	mi := &file_checkoutService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckoutSubmitResponse.ProtoReflect.Descriptor instead.
func (*CheckoutSubmitResponse) Descriptor() ([]byte, []int) {
	return file_checkoutService_proto_rawDescGZIP(), []int{11}
}

func (x *CheckoutSubmitResponse) GetData() *CheckoutSubmitData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *CheckoutSubmitResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type CheckRequestSku struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkuId int64 `protobuf:"varint,1,opt,name=sku_id,json=skuId,proto3" json:"sku_id"` //商品ID
	Num   int32 `protobuf:"varint,2,opt,name=num,proto3" json:"num"`                  //数量
}

func (x *CheckRequestSku) Reset() {
	*x = CheckRequestSku{}
	if protoimpl.UnsafeEnabled {
		mi := &file_checkoutService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckRequestSku) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckRequestSku) ProtoMessage() {}

func (x *CheckRequestSku) ProtoReflect() protoreflect.Message {
	mi := &file_checkoutService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckRequestSku.ProtoReflect.Descriptor instead.
func (*CheckRequestSku) Descriptor() ([]byte, []int) {
	return file_checkoutService_proto_rawDescGZIP(), []int{3, 0}
}

func (x *CheckRequestSku) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *CheckRequestSku) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

var File_checkoutService_proto protoreflect.FileDescriptor

var file_checkoutService_proto_rawDesc = []byte{
	0x0a, 0x15, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x15, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x83, 0x03, 0x0a, 0x08, 0x42, 0x69, 0x6c, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x6c, 0x69, 0x61, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61,
	0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x23, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x69, 0x74, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x61, 0x73, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x52, 0x09, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x93, 0x06, 0x0a,
	0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x75, 0x79, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0e, 0x62, 0x75, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x72, 0x65,
	0x61, 0x73, 0x65, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x69,
	0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74, 0x75,
	0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x79, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x79, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66,
	0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x46, 0x65, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x73,
	0x75, 0x72, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69,
	0x6e, 0x73, 0x75, 0x72, 0x65, 0x46, 0x65, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x63, 0x6b,
	0x5f, 0x66, 0x65, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x63, 0x6b,
	0x46, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x69, 0x64, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x73, 0x5f, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x69, 0x73, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x34, 0x0a, 0x0b,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x3e, 0x0a, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x0d, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x7d, 0x0a, 0x0d, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x69, 0x70, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x70,
	0x73, 0x22, 0xd9, 0x03, 0x0a, 0x0c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x75, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a,
	0x70, 0x6f, 0x73, 0x74, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x75, 0x73, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x73, 0x65, 0x5f, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x53, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x12, 0x26, 0x0a,
	0x0f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x0c, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x73, 0x12, 0x2e, 0x0a,
	0x04, 0x73, 0x6b, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x73, 0x6b, 0x75, 0x52, 0x04, 0x73, 0x6b, 0x75, 0x73, 0x1a, 0x2e, 0x0a,
	0x03, 0x73, 0x6b, 0x75, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e,
	0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0xe5, 0x01,
	0x0a, 0x0c, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a,
	0x0d, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x5f, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x53, 0x6b, 0x75, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x72, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3a,
	0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x39, 0x0a, 0x0b, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x3d, 0x0a, 0x11, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x22, 0x83, 0x02, 0x0a, 0x13, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73,
	0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x0d,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x49, 0x6e, 0x74, 0x65,
	0x67, 0x72, 0x61, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x39, 0x0a, 0x19, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x16, 0x69, 0x73, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69,
	0x73, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x69, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x22, 0xe6, 0x03, 0x0a, 0x0c, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x42, 0x61, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x61, 0x63, 0x74, 0x75, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x2d, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x70, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x67, 0x6f, 0x6f, 0x64,
	0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x75, 0x79, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x75, 0x79, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x73, 0x70, 0x65, 0x63, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12,
	0x2a, 0x0a, 0x11, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x5f, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x73, 0x70, 0x65, 0x63,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5f, 0x73, 0x69, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x53, 0x69, 0x74,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x4a, 0x0a, 0x12, 0x65, 0x78, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45,
	0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x52, 0x11, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0xb3, 0x02, 0x0a, 0x0c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65,
	0x12, 0x2f, 0x0a, 0x09, 0x62, 0x69, 0x6c, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42,
	0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x62, 0x69, 0x6c, 0x6c, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x38, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x0c, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x0b, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x51, 0x0a, 0x15, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x73, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x13, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x49, 0x6e, 0x74,
	0x65, 0x67, 0x72, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x22, 0x63, 0x0a, 0x10, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x73,
	0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x22, 0x6f, 0x0a, 0x16, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x32, 0x98, 0x01, 0x0a, 0x0f, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75,
	0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x72, 0x6d, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x06, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_checkoutService_proto_rawDescOnce sync.Once
	file_checkoutService_proto_rawDescData = file_checkoutService_proto_rawDesc
)

func file_checkoutService_proto_rawDescGZIP() []byte {
	file_checkoutService_proto_rawDescOnce.Do(func() {
		file_checkoutService_proto_rawDescData = protoimpl.X.CompressGZIP(file_checkoutService_proto_rawDescData)
	})
	return file_checkoutService_proto_rawDescData
}

var file_checkoutService_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_checkoutService_proto_goTypes = []interface{}{
	(*BillInfo)(nil),               // 0: services.BillInfo
	(*OrderBase)(nil),              // 1: services.OrderBase
	(*ExtensionData)(nil),          // 2: services.ExtensionData
	(*CheckRequest)(nil),           // 3: services.CheckRequest
	(*WriteRequest)(nil),           // 4: services.WriteRequest
	(*ExtractionAddress)(nil),      // 5: services.ExtractionAddress
	(*PluginsIntegralData)(nil),    // 6: services.PluginsIntegralData
	(*CheckoutBase)(nil),           // 7: services.CheckoutBase
	(*CheckoutData)(nil),           // 8: services.CheckoutData
	(*CheckoutResponse)(nil),       // 9: services.CheckoutResponse
	(*CheckoutSubmitData)(nil),     // 10: services.CheckoutSubmitData
	(*CheckoutSubmitResponse)(nil), // 11: services.CheckoutSubmitResponse
	(*CheckRequestSku)(nil),        // 12: services.CheckRequest.sku
	nil,                            // 13: services.WriteRequest.ParamsEntry
	(*GoodsInfo)(nil),              // 14: services.GoodsInfo
	(*OrderAddress)(nil),           // 15: services.OrderAddress
	(*PaymentInfo)(nil),            // 16: services.PaymentInfo
	(*common.Error)(nil),           // 17: common.Error
}
var file_checkoutService_proto_depIdxs = []int32{
	1,  // 0: services.BillInfo.order_base:type_name -> services.OrderBase
	14, // 1: services.BillInfo.goods_items:type_name -> services.GoodsInfo
	14, // 2: services.OrderBase.goods_items:type_name -> services.GoodsInfo
	2,  // 3: services.OrderBase.extension_data:type_name -> services.ExtensionData
	12, // 4: services.CheckRequest.skus:type_name -> services.CheckRequest.sku
	13, // 5: services.WriteRequest.params:type_name -> services.WriteRequest.ParamsEntry
	15, // 6: services.CheckoutBase.address:type_name -> services.OrderAddress
	5,  // 7: services.CheckoutBase.extraction_address:type_name -> services.ExtractionAddress
	7,  // 8: services.CheckoutData.base:type_name -> services.CheckoutBase
	0,  // 9: services.CheckoutData.bill_list:type_name -> services.BillInfo
	16, // 10: services.CheckoutData.payment_list:type_name -> services.PaymentInfo
	3,  // 11: services.CheckoutData.request_data:type_name -> services.CheckRequest
	6,  // 12: services.CheckoutData.plugins_integral_data:type_name -> services.PluginsIntegralData
	8,  // 13: services.CheckoutResponse.data:type_name -> services.CheckoutData
	17, // 14: services.CheckoutResponse.error:type_name -> common.Error
	10, // 15: services.CheckoutSubmitResponse.data:type_name -> services.CheckoutSubmitData
	17, // 16: services.CheckoutSubmitResponse.error:type_name -> common.Error
	3,  // 17: services.CheckoutService.Confirm:input_type -> services.CheckRequest
	3,  // 18: services.CheckoutService.Submit:input_type -> services.CheckRequest
	9,  // 19: services.CheckoutService.Confirm:output_type -> services.CheckoutResponse
	11, // 20: services.CheckoutService.Submit:output_type -> services.CheckoutSubmitResponse
	19, // [19:21] is the sub-list for method output_type
	17, // [17:19] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_checkoutService_proto_init() }
func file_checkoutService_proto_init() {
	if File_checkoutService_proto != nil {
		return
	}
	file_orderAddressService_proto_init()
	file_baseInfoService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_checkoutService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BillInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkoutService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkoutService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtensionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkoutService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkoutService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WriteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkoutService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtractionAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkoutService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginsIntegralData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkoutService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckoutBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkoutService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckoutData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkoutService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckoutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkoutService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckoutSubmitData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkoutService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckoutSubmitResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_checkoutService_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckRequestSku); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_checkoutService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_checkoutService_proto_goTypes,
		DependencyIndexes: file_checkoutService_proto_depIdxs,
		MessageInfos:      file_checkoutService_proto_msgTypes,
	}.Build()
	File_checkoutService_proto = out.File
	file_checkoutService_proto_rawDesc = nil
	file_checkoutService_proto_goTypes = nil
	file_checkoutService_proto_depIdxs = nil
}
