// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: orderService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	OrderSn           string            `protobuf:"bytes,2,opt,name=order_sn,json=orderSn,proto3" json:"order_sn"`
	Type              string            `protobuf:"bytes,3,opt,name=type,proto3" json:"type"`
	ShopId            int64             `protobuf:"varint,4,opt,name=shop_id,json=shopId,proto3" json:"shop_id"`
	MemberId          int64             `protobuf:"varint,6,opt,name=member_id,json=memberId,proto3" json:"member_id"`
	TotalNum          int32             `protobuf:"varint,7,opt,name=total_num,json=totalNum,proto3" json:"total_num"`
	TotalWeight       int64             `protobuf:"varint,8,opt,name=total_weight,json=totalWeight,proto3" json:"total_weight"`
	Currency          string            `protobuf:"bytes,9,opt,name=currency,proto3" json:"currency"`
	GoodsAmount       int64             `protobuf:"varint,11,opt,name=goods_amount,json=goodsAmount,proto3" json:"goods_amount"`
	DiscountAmount    int64             `protobuf:"varint,12,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount"`
	ShippingFee       int64             `protobuf:"varint,13,opt,name=shipping_fee,json=shippingFee,proto3" json:"shipping_fee"`
	InsureFee         int64             `protobuf:"varint,14,opt,name=insure_fee,json=insureFee,proto3" json:"insure_fee"`
	PackFee           int64             `protobuf:"varint,15,opt,name=pack_fee,json=packFee,proto3" json:"pack_fee"`
	Surplus           int64             `protobuf:"varint,16,opt,name=surplus,proto3" json:"surplus"`
	CouponMoney       int64             `protobuf:"varint,17,opt,name=coupon_money,json=couponMoney,proto3" json:"coupon_money"`
	Integral          int32             `protobuf:"varint,18,opt,name=integral,proto3" json:"integral"`
	IntegralMoney     int64             `protobuf:"varint,19,opt,name=integral_money,json=integralMoney,proto3" json:"integral_money"`
	Amount            int64             `protobuf:"varint,20,opt,name=amount,proto3" json:"amount"`
	PaidMoney         int64             `protobuf:"varint,21,opt,name=paid_money,json=paidMoney,proto3" json:"paid_money"`
	Subject           string            `protobuf:"bytes,22,opt,name=subject,proto3" json:"subject"`
	Body              string            `protobuf:"bytes,23,opt,name=body,proto3" json:"body"`
	CoverId           int64             `protobuf:"varint,24,opt,name=cover_id,json=coverId,proto3" json:"cover_id"`
	CoverUrl          string            `protobuf:"bytes,25,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url"`
	Postscript        string            `protobuf:"bytes,26,opt,name=postscript,proto3" json:"postscript"`
	ToBuyer           string            `protobuf:"bytes,27,opt,name=to_buyer,json=toBuyer,proto3" json:"to_buyer"`
	PayNote           string            `protobuf:"bytes,28,opt,name=pay_note,json=payNote,proto3" json:"pay_note"`
	Referer           string            `protobuf:"bytes,29,opt,name=referer,proto3" json:"referer"`
	IsCod             bool              `protobuf:"varint,30,opt,name=is_cod,json=isCod,proto3" json:"is_cod"`
	IsInvoiced        bool              `protobuf:"varint,31,opt,name=is_invoiced,json=isInvoiced,proto3" json:"is_invoiced"`
	IsModified        bool              `protobuf:"varint,32,opt,name=is_modified,json=isModified,proto3" json:"is_modified"`
	IsPaid            bool              `protobuf:"varint,33,opt,name=is_paid,json=isPaid,proto3" json:"is_paid"`
	IsSafeguard       bool              `protobuf:"varint,34,opt,name=is_safeguard,json=isSafeguard,proto3" json:"is_safeguard"`
	IsSeparate        bool              `protobuf:"varint,35,opt,name=is_separate,json=isSeparate,proto3" json:"is_separate"`
	IsShipment        bool              `protobuf:"varint,36,opt,name=is_shipment,json=isShipment,proto3" json:"is_shipment"`
	IsRefunded        bool              `protobuf:"varint,37,opt,name=is_refunded,json=isRefunded,proto3" json:"is_refunded"`
	IsPaymentTimeout  bool              `protobuf:"varint,38,opt,name=is_payment_timeout,json=isPaymentTimeout,proto3" json:"is_payment_timeout"`
	IsReturnTimeout   bool              `protobuf:"varint,39,opt,name=is_return_timeout,json=isReturnTimeout,proto3" json:"is_return_timeout"`
	ShipmentId        int32             `protobuf:"varint,40,opt,name=shipment_id,json=shipmentId,proto3" json:"shipment_id"`
	ShipmentCode      string            `protobuf:"bytes,41,opt,name=shipment_code,json=shipmentCode,proto3" json:"shipment_code"`
	PaymentId         int32             `protobuf:"varint,42,opt,name=payment_id,json=paymentId,proto3" json:"payment_id"`
	PaymentCode       string            `protobuf:"bytes,43,opt,name=payment_code,json=paymentCode,proto3" json:"payment_code"`
	PackId            int32             `protobuf:"varint,44,opt,name=pack_id,json=packId,proto3" json:"pack_id"`
	CouponId          int64             `protobuf:"varint,45,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id"`
	ExtensionCode     string            `protobuf:"bytes,46,opt,name=extension_code,json=extensionCode,proto3" json:"extension_code"`
	ExtensionId       int64             `protobuf:"varint,47,opt,name=extension_id,json=extensionId,proto3" json:"extension_id"`
	ParentId          int64             `protobuf:"varint,48,opt,name=parent_id,json=parentId,proto3" json:"parent_id"`
	ShippingStatus    string            `protobuf:"bytes,49,opt,name=shipping_status,json=shippingStatus,proto3" json:"shipping_status"`
	OrderStatus       string            `protobuf:"bytes,50,opt,name=order_status,json=orderStatus,proto3" json:"order_status"`
	PayStatus         string            `protobuf:"bytes,51,opt,name=pay_status,json=payStatus,proto3" json:"pay_status"`
	DisplayStatus     string            `protobuf:"bytes,52,opt,name=display_status,json=displayStatus,proto3" json:"display_status"`
	PaymentExpireDate string            `protobuf:"bytes,53,opt,name=payment_expire_date,json=paymentExpireDate,proto3" json:"payment_expire_date"`
	ReturnExpireDate  string            `protobuf:"bytes,54,opt,name=return_expire_date,json=returnExpireDate,proto3" json:"return_expire_date"`
	ConfirmAt         string            `protobuf:"bytes,55,opt,name=confirm_at,json=confirmAt,proto3" json:"confirm_at"`
	ShippedAt         string            `protobuf:"bytes,56,opt,name=shipped_at,json=shippedAt,proto3" json:"shipped_at"`
	SignedAt          string            `protobuf:"bytes,57,opt,name=signed_at,json=signedAt,proto3" json:"signed_at"`
	RefundedAt        string            `protobuf:"bytes,58,opt,name=refunded_at,json=refundedAt,proto3" json:"refunded_at"`
	FinishedAt        string            `protobuf:"bytes,59,opt,name=finished_at,json=finishedAt,proto3" json:"finished_at"`
	CreatedAt         string            `protobuf:"bytes,60,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt         string            `protobuf:"bytes,61,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	Address           *OrderAddress     `protobuf:"bytes,62,opt,name=address,proto3" json:"address"`
	Member            *MemberInfo       `protobuf:"bytes,63,opt,name=member,proto3" json:"member"`
	Shipment          *Shipment         `protobuf:"bytes,64,opt,name=shipment,proto3" json:"shipment"`
	Payment           *Payment          `protobuf:"bytes,65,opt,name=payment,proto3" json:"payment"`
	Details           []*OrderDetail    `protobuf:"bytes,66,rep,name=details,proto3" json:"details"`
	Gifts             []*OrderGift      `protobuf:"bytes,67,rep,name=gifts,proto3" json:"gifts"`
	Adjustments       []*Adjustment     `protobuf:"bytes,68,rep,name=adjustments,proto3" json:"adjustments"`
	Metas             map[string]string `protobuf:"bytes,69,rep,name=metas,proto3" json:"metas" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_orderService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_orderService_proto_rawDescGZIP(), []int{0}
}

func (x *Order) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Order) GetOrderSn() string {
	if x != nil {
		return x.OrderSn
	}
	return ""
}

func (x *Order) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Order) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *Order) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *Order) GetTotalNum() int32 {
	if x != nil {
		return x.TotalNum
	}
	return 0
}

func (x *Order) GetTotalWeight() int64 {
	if x != nil {
		return x.TotalWeight
	}
	return 0
}

func (x *Order) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Order) GetGoodsAmount() int64 {
	if x != nil {
		return x.GoodsAmount
	}
	return 0
}

func (x *Order) GetDiscountAmount() int64 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *Order) GetShippingFee() int64 {
	if x != nil {
		return x.ShippingFee
	}
	return 0
}

func (x *Order) GetInsureFee() int64 {
	if x != nil {
		return x.InsureFee
	}
	return 0
}

func (x *Order) GetPackFee() int64 {
	if x != nil {
		return x.PackFee
	}
	return 0
}

func (x *Order) GetSurplus() int64 {
	if x != nil {
		return x.Surplus
	}
	return 0
}

func (x *Order) GetCouponMoney() int64 {
	if x != nil {
		return x.CouponMoney
	}
	return 0
}

func (x *Order) GetIntegral() int32 {
	if x != nil {
		return x.Integral
	}
	return 0
}

func (x *Order) GetIntegralMoney() int64 {
	if x != nil {
		return x.IntegralMoney
	}
	return 0
}

func (x *Order) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Order) GetPaidMoney() int64 {
	if x != nil {
		return x.PaidMoney
	}
	return 0
}

func (x *Order) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Order) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *Order) GetCoverId() int64 {
	if x != nil {
		return x.CoverId
	}
	return 0
}

func (x *Order) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *Order) GetPostscript() string {
	if x != nil {
		return x.Postscript
	}
	return ""
}

func (x *Order) GetToBuyer() string {
	if x != nil {
		return x.ToBuyer
	}
	return ""
}

func (x *Order) GetPayNote() string {
	if x != nil {
		return x.PayNote
	}
	return ""
}

func (x *Order) GetReferer() string {
	if x != nil {
		return x.Referer
	}
	return ""
}

func (x *Order) GetIsCod() bool {
	if x != nil {
		return x.IsCod
	}
	return false
}

func (x *Order) GetIsInvoiced() bool {
	if x != nil {
		return x.IsInvoiced
	}
	return false
}

func (x *Order) GetIsModified() bool {
	if x != nil {
		return x.IsModified
	}
	return false
}

func (x *Order) GetIsPaid() bool {
	if x != nil {
		return x.IsPaid
	}
	return false
}

func (x *Order) GetIsSafeguard() bool {
	if x != nil {
		return x.IsSafeguard
	}
	return false
}

func (x *Order) GetIsSeparate() bool {
	if x != nil {
		return x.IsSeparate
	}
	return false
}

func (x *Order) GetIsShipment() bool {
	if x != nil {
		return x.IsShipment
	}
	return false
}

func (x *Order) GetIsRefunded() bool {
	if x != nil {
		return x.IsRefunded
	}
	return false
}

func (x *Order) GetIsPaymentTimeout() bool {
	if x != nil {
		return x.IsPaymentTimeout
	}
	return false
}

func (x *Order) GetIsReturnTimeout() bool {
	if x != nil {
		return x.IsReturnTimeout
	}
	return false
}

func (x *Order) GetShipmentId() int32 {
	if x != nil {
		return x.ShipmentId
	}
	return 0
}

func (x *Order) GetShipmentCode() string {
	if x != nil {
		return x.ShipmentCode
	}
	return ""
}

func (x *Order) GetPaymentId() int32 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

func (x *Order) GetPaymentCode() string {
	if x != nil {
		return x.PaymentCode
	}
	return ""
}

func (x *Order) GetPackId() int32 {
	if x != nil {
		return x.PackId
	}
	return 0
}

func (x *Order) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *Order) GetExtensionCode() string {
	if x != nil {
		return x.ExtensionCode
	}
	return ""
}

func (x *Order) GetExtensionId() int64 {
	if x != nil {
		return x.ExtensionId
	}
	return 0
}

func (x *Order) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *Order) GetShippingStatus() string {
	if x != nil {
		return x.ShippingStatus
	}
	return ""
}

func (x *Order) GetOrderStatus() string {
	if x != nil {
		return x.OrderStatus
	}
	return ""
}

func (x *Order) GetPayStatus() string {
	if x != nil {
		return x.PayStatus
	}
	return ""
}

func (x *Order) GetDisplayStatus() string {
	if x != nil {
		return x.DisplayStatus
	}
	return ""
}

func (x *Order) GetPaymentExpireDate() string {
	if x != nil {
		return x.PaymentExpireDate
	}
	return ""
}

func (x *Order) GetReturnExpireDate() string {
	if x != nil {
		return x.ReturnExpireDate
	}
	return ""
}

func (x *Order) GetConfirmAt() string {
	if x != nil {
		return x.ConfirmAt
	}
	return ""
}

func (x *Order) GetShippedAt() string {
	if x != nil {
		return x.ShippedAt
	}
	return ""
}

func (x *Order) GetSignedAt() string {
	if x != nil {
		return x.SignedAt
	}
	return ""
}

func (x *Order) GetRefundedAt() string {
	if x != nil {
		return x.RefundedAt
	}
	return ""
}

func (x *Order) GetFinishedAt() string {
	if x != nil {
		return x.FinishedAt
	}
	return ""
}

func (x *Order) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Order) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Order) GetAddress() *OrderAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Order) GetMember() *MemberInfo {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *Order) GetShipment() *Shipment {
	if x != nil {
		return x.Shipment
	}
	return nil
}

func (x *Order) GetPayment() *Payment {
	if x != nil {
		return x.Payment
	}
	return nil
}

func (x *Order) GetDetails() []*OrderDetail {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *Order) GetGifts() []*OrderGift {
	if x != nil {
		return x.Gifts
	}
	return nil
}

func (x *Order) GetAdjustments() []*Adjustment {
	if x != nil {
		return x.Adjustments
	}
	return nil
}

func (x *Order) GetMetas() map[string]string {
	if x != nil {
		return x.Metas
	}
	return nil
}

type OrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged    int32  `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords string `protobuf:"bytes,3,opt,name=keywords,proto3" json:"keywords"`
	//----------
	Id             int64   `protobuf:"varint,4,opt,name=id,proto3" json:"id"`
	OrderSn        string  `protobuf:"bytes,5,opt,name=order_sn,json=orderSn,proto3" json:"order_sn"`
	Type           string  `protobuf:"bytes,6,opt,name=type,proto3" json:"type"`
	ShopId         int64   `protobuf:"varint,7,opt,name=shop_id,json=shopId,proto3" json:"shop_id"`
	MemberId       int64   `protobuf:"varint,8,opt,name=member_id,json=memberId,proto3" json:"member_id"`
	PayType        int32   `protobuf:"varint,9,opt,name=pay_type,json=payType,proto3" json:"pay_type"`
	IsShipment     bool    `protobuf:"varint,10,opt,name=is_shipment,json=isShipment,proto3" json:"is_shipment"`
	IsCod          bool    `protobuf:"varint,13,opt,name=is_cod,json=isCod,proto3" json:"is_cod"`
	IsInvoiced     bool    `protobuf:"varint,14,opt,name=is_invoiced,json=isInvoiced,proto3" json:"is_invoiced"`
	IsModified     bool    `protobuf:"varint,15,opt,name=is_modified,json=isModified,proto3" json:"is_modified"`
	IsPaid         bool    `protobuf:"varint,16,opt,name=is_paid,json=isPaid,proto3" json:"is_paid"`
	IsSafeguard    bool    `protobuf:"varint,17,opt,name=is_safeguard,json=isSafeguard,proto3" json:"is_safeguard"`
	IsSeparate     bool    `protobuf:"varint,18,opt,name=is_separate,json=isSeparate,proto3" json:"is_separate"`
	ShippingId     int32   `protobuf:"varint,19,opt,name=shipping_id,json=shippingId,proto3" json:"shipping_id"`
	ShippingName   string  `protobuf:"bytes,20,opt,name=shipping_name,json=shippingName,proto3" json:"shipping_name"`
	PayId          int64   `protobuf:"varint,21,opt,name=pay_id,json=payId,proto3" json:"pay_id"`
	PayName        string  `protobuf:"bytes,22,opt,name=pay_name,json=payName,proto3" json:"pay_name"`
	PackId         int32   `protobuf:"varint,23,opt,name=pack_id,json=packId,proto3" json:"pack_id"`
	CouponId       int64   `protobuf:"varint,24,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id"`
	ExtensionCode  string  `protobuf:"bytes,25,opt,name=extension_code,json=extensionCode,proto3" json:"extension_code"`
	ExtensionId    int64   `protobuf:"varint,26,opt,name=extension_id,json=extensionId,proto3" json:"extension_id"`
	ShippingStatus string  `protobuf:"bytes,27,opt,name=shipping_status,json=shippingStatus,proto3" json:"shipping_status"`
	OrderStatus    string  `protobuf:"bytes,28,opt,name=order_status,json=orderStatus,proto3" json:"order_status"`
	PayStatus      string  `protobuf:"bytes,29,opt,name=pay_status,json=payStatus,proto3" json:"pay_status"`
	DisplayStatus  string  `protobuf:"bytes,30,opt,name=display_status,json=displayStatus,proto3" json:"display_status"`
	StartDate      string  `protobuf:"bytes,31,opt,name=start_date,json=startDate,proto3" json:"start_date"`
	EndDate        string  `protobuf:"bytes,32,opt,name=end_date,json=endDate,proto3" json:"end_date"`
	Ids            []int64 `protobuf:"varint,33,rep,packed,name=ids,proto3" json:"ids"`
}

func (x *OrderRequest) Reset() {
	*x = OrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRequest) ProtoMessage() {}

func (x *OrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orderService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRequest.ProtoReflect.Descriptor instead.
func (*OrderRequest) Descriptor() ([]byte, []int) {
	return file_orderService_proto_rawDescGZIP(), []int{1}
}

func (x *OrderRequest) GetPaged() int32 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *OrderRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *OrderRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *OrderRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderRequest) GetOrderSn() string {
	if x != nil {
		return x.OrderSn
	}
	return ""
}

func (x *OrderRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OrderRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *OrderRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *OrderRequest) GetPayType() int32 {
	if x != nil {
		return x.PayType
	}
	return 0
}

func (x *OrderRequest) GetIsShipment() bool {
	if x != nil {
		return x.IsShipment
	}
	return false
}

func (x *OrderRequest) GetIsCod() bool {
	if x != nil {
		return x.IsCod
	}
	return false
}

func (x *OrderRequest) GetIsInvoiced() bool {
	if x != nil {
		return x.IsInvoiced
	}
	return false
}

func (x *OrderRequest) GetIsModified() bool {
	if x != nil {
		return x.IsModified
	}
	return false
}

func (x *OrderRequest) GetIsPaid() bool {
	if x != nil {
		return x.IsPaid
	}
	return false
}

func (x *OrderRequest) GetIsSafeguard() bool {
	if x != nil {
		return x.IsSafeguard
	}
	return false
}

func (x *OrderRequest) GetIsSeparate() bool {
	if x != nil {
		return x.IsSeparate
	}
	return false
}

func (x *OrderRequest) GetShippingId() int32 {
	if x != nil {
		return x.ShippingId
	}
	return 0
}

func (x *OrderRequest) GetShippingName() string {
	if x != nil {
		return x.ShippingName
	}
	return ""
}

func (x *OrderRequest) GetPayId() int64 {
	if x != nil {
		return x.PayId
	}
	return 0
}

func (x *OrderRequest) GetPayName() string {
	if x != nil {
		return x.PayName
	}
	return ""
}

func (x *OrderRequest) GetPackId() int32 {
	if x != nil {
		return x.PackId
	}
	return 0
}

func (x *OrderRequest) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *OrderRequest) GetExtensionCode() string {
	if x != nil {
		return x.ExtensionCode
	}
	return ""
}

func (x *OrderRequest) GetExtensionId() int64 {
	if x != nil {
		return x.ExtensionId
	}
	return 0
}

func (x *OrderRequest) GetShippingStatus() string {
	if x != nil {
		return x.ShippingStatus
	}
	return ""
}

func (x *OrderRequest) GetOrderStatus() string {
	if x != nil {
		return x.OrderStatus
	}
	return ""
}

func (x *OrderRequest) GetPayStatus() string {
	if x != nil {
		return x.PayStatus
	}
	return ""
}

func (x *OrderRequest) GetDisplayStatus() string {
	if x != nil {
		return x.DisplayStatus
	}
	return ""
}

func (x *OrderRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *OrderRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *OrderRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type OrderData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity    *Order        `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager     *common.Pager `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items     []*Order      `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Info      *common.Info  `protobuf:"bytes,4,opt,name=info,proto3" json:"info"`
	OrderFlow *OrderFlow    `protobuf:"bytes,5,opt,name=order_flow,json=orderFlow,proto3" json:"order_flow"`
}

func (x *OrderData) Reset() {
	*x = OrderData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderData) ProtoMessage() {}

func (x *OrderData) ProtoReflect() protoreflect.Message {
	mi := &file_orderService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderData.ProtoReflect.Descriptor instead.
func (*OrderData) Descriptor() ([]byte, []int) {
	return file_orderService_proto_rawDescGZIP(), []int{2}
}

func (x *OrderData) GetEntity() *Order {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *OrderData) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *OrderData) GetItems() []*Order {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *OrderData) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

func (x *OrderData) GetOrderFlow() *OrderFlow {
	if x != nil {
		return x.OrderFlow
	}
	return nil
}

type OrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *OrderData    `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *OrderResponse) Reset() {
	*x = OrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderResponse) ProtoMessage() {}

func (x *OrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orderService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderResponse.ProtoReflect.Descriptor instead.
func (*OrderResponse) Descriptor() ([]byte, []int) {
	return file_orderService_proto_rawDescGZIP(), []int{3}
}

func (x *OrderResponse) GetData() *OrderData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *OrderResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_orderService_proto protoreflect.FileDescriptor

var file_orderService_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x11,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x18, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x16, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x13, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x14, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x8d, 0x12, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68,
	0x6f, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x12, 0x21,
	0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x21, 0x0a,
	0x0c, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x68, 0x69,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x46, 0x65, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x69, 0x6e, 0x73, 0x75, 0x72, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x69, 0x6e, 0x73, 0x75, 0x72, 0x65, 0x46, 0x65, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x61, 0x63, 0x6b, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70,
	0x61, 0x63, 0x6b, 0x46, 0x65, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75,
	0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12,
	0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x6e, 0x65,
	0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x6c, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x70, 0x61, 0x69, 0x64, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63,
	0x6f, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x55, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x5f, 0x62, 0x75, 0x79, 0x65, 0x72, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x42, 0x75, 0x79, 0x65, 0x72, 0x12, 0x19,
	0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x61, 0x79, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x72, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x18, 0x1e, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x43, 0x6f, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73,
	0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x69, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x69, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x73, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x18, 0x21, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69,
	0x73, 0x50, 0x61, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x73, 0x61, 0x66, 0x65,
	0x67, 0x75, 0x61, 0x72, 0x64, 0x18, 0x22, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x53,
	0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x73,
	0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69,
	0x73, 0x53, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f,
	0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x24, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x69, 0x73, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73,
	0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x25, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x69, 0x73, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x69,
	0x73, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x18, 0x26, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x69, 0x73, 0x50, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f,
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x27,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x68, 0x69, 0x70,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73,
	0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x17, 0x0a,
	0x07, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x70, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x74,
	0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x30, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x31, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x34, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2e, 0x0a, 0x13,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x35, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x2c, 0x0a, 0x12,
	0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x65, 0x18, 0x36, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x45, 0x78, 0x70, 0x69, 0x72, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x61, 0x74, 0x18, 0x37, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x69,
	0x70, 0x70, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x38, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x39, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x69, 0x6e,
	0x69, 0x73, 0x68, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x3e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x08, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x40, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x73, 0x68, 0x69,
	0x70, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2b, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x41, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x42, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x29, 0x0a, 0x05, 0x67, 0x69, 0x66, 0x74, 0x73, 0x18, 0x43, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x52, 0x05, 0x67, 0x69, 0x66, 0x74, 0x73, 0x12, 0x36,
	0x0a, 0x0b, 0x61, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x44, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41,
	0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x64, 0x6a, 0x75, 0x73,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x18,
	0x45, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x05, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x61,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0x9a, 0x07, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x73, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x6e, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x69, 0x70, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x53, 0x68, 0x69, 0x70, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x43, 0x6f, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73,
	0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x69, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0a, 0x69, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x73, 0x5f, 0x70, 0x61, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69,
	0x73, 0x50, 0x61, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x73, 0x61, 0x66, 0x65,
	0x67, 0x75, 0x61, 0x72, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x53,
	0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x73,
	0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69,
	0x73, 0x53, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x69,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x15, 0x0a, 0x06, 0x70, 0x61, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x70, 0x61, 0x79, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x17, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x70, 0x61, 0x63, 0x6b, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x6e,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x68, 0x69, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61,
	0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x20,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x21, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22,
	0xd6, 0x01, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a,
	0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x06,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x12, 0x32, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x66, 0x6c,
	0x6f, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x52, 0x09, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x46, 0x6c, 0x6f, 0x77, 0x22, 0x5d, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xaf, 0x07, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x0b, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x17, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x06, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x12, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x34, 0x0a,
	0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0c, 0x41, 0x70, 0x70, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x6d,
	0x61, 0x72, 0x6b, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0f, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x16, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x43, 0x0a, 0x0e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x64, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x0f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a,
	0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x07, 0x44, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x3a, 0x0a, 0x0c, 0x46, 0x72, 0x6f, 0x6e, 0x74, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x12, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a,
	0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x04, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_orderService_proto_rawDescOnce sync.Once
	file_orderService_proto_rawDescData = file_orderService_proto_rawDesc
)

func file_orderService_proto_rawDescGZIP() []byte {
	file_orderService_proto_rawDescOnce.Do(func() {
		file_orderService_proto_rawDescData = protoimpl.X.CompressGZIP(file_orderService_proto_rawDescData)
	})
	return file_orderService_proto_rawDescData
}

var file_orderService_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_orderService_proto_goTypes = []interface{}{
	(*Order)(nil),         // 0: services.Order
	(*OrderRequest)(nil),  // 1: services.OrderRequest
	(*OrderData)(nil),     // 2: services.OrderData
	(*OrderResponse)(nil), // 3: services.OrderResponse
	nil,                   // 4: services.Order.MetasEntry
	(*OrderAddress)(nil),  // 5: services.OrderAddress
	(*MemberInfo)(nil),    // 6: services.MemberInfo
	(*Shipment)(nil),      // 7: services.Shipment
	(*Payment)(nil),       // 8: services.Payment
	(*OrderDetail)(nil),   // 9: services.OrderDetail
	(*OrderGift)(nil),     // 10: services.OrderGift
	(*Adjustment)(nil),    // 11: services.Adjustment
	(*common.Pager)(nil),  // 12: common.Pager
	(*common.Info)(nil),   // 13: common.Info
	(*OrderFlow)(nil),     // 14: services.OrderFlow
	(*common.Error)(nil),  // 15: common.Error
}
var file_orderService_proto_depIdxs = []int32{
	5,  // 0: services.Order.address:type_name -> services.OrderAddress
	6,  // 1: services.Order.member:type_name -> services.MemberInfo
	7,  // 2: services.Order.shipment:type_name -> services.Shipment
	8,  // 3: services.Order.payment:type_name -> services.Payment
	9,  // 4: services.Order.details:type_name -> services.OrderDetail
	10, // 5: services.Order.gifts:type_name -> services.OrderGift
	11, // 6: services.Order.adjustments:type_name -> services.Adjustment
	4,  // 7: services.Order.metas:type_name -> services.Order.MetasEntry
	0,  // 8: services.OrderData.entity:type_name -> services.Order
	12, // 9: services.OrderData.pager:type_name -> common.Pager
	0,  // 10: services.OrderData.items:type_name -> services.Order
	13, // 11: services.OrderData.info:type_name -> common.Info
	14, // 12: services.OrderData.order_flow:type_name -> services.OrderFlow
	2,  // 13: services.OrderResponse.data:type_name -> services.OrderData
	15, // 14: services.OrderResponse.error:type_name -> common.Error
	0,  // 15: services.OrderService.ModifyPrice:input_type -> services.Order
	5,  // 16: services.OrderService.ModifyAddress:input_type -> services.OrderAddress
	0,  // 17: services.OrderService.Cancel:input_type -> services.Order
	0,  // 18: services.OrderService.Delete:input_type -> services.Order
	1,  // 19: services.OrderService.AppendRemark:input_type -> services.OrderRequest
	1,  // 20: services.OrderService.ConfirmOrder:input_type -> services.OrderRequest
	1,  // 21: services.OrderService.ConfirmReceived:input_type -> services.OrderRequest
	1,  // 22: services.OrderService.ConfirmSettled:input_type -> services.OrderRequest
	1,  // 23: services.OrderService.Verification:input_type -> services.OrderRequest
	0,  // 24: services.OrderService.Get:input_type -> services.Order
	0,  // 25: services.OrderService.Display:input_type -> services.Order
	0,  // 26: services.OrderService.FrontDisplay:input_type -> services.Order
	1,  // 27: services.OrderService.Search:input_type -> services.OrderRequest
	1,  // 28: services.OrderService.List:input_type -> services.OrderRequest
	1,  // 29: services.OrderService.GetCouponList:input_type -> services.OrderRequest
	3,  // 30: services.OrderService.ModifyPrice:output_type -> services.OrderResponse
	3,  // 31: services.OrderService.ModifyAddress:output_type -> services.OrderResponse
	3,  // 32: services.OrderService.Cancel:output_type -> services.OrderResponse
	3,  // 33: services.OrderService.Delete:output_type -> services.OrderResponse
	3,  // 34: services.OrderService.AppendRemark:output_type -> services.OrderResponse
	3,  // 35: services.OrderService.ConfirmOrder:output_type -> services.OrderResponse
	3,  // 36: services.OrderService.ConfirmReceived:output_type -> services.OrderResponse
	3,  // 37: services.OrderService.ConfirmSettled:output_type -> services.OrderResponse
	3,  // 38: services.OrderService.Verification:output_type -> services.OrderResponse
	3,  // 39: services.OrderService.Get:output_type -> services.OrderResponse
	3,  // 40: services.OrderService.Display:output_type -> services.OrderResponse
	3,  // 41: services.OrderService.FrontDisplay:output_type -> services.OrderResponse
	3,  // 42: services.OrderService.Search:output_type -> services.OrderResponse
	3,  // 43: services.OrderService.List:output_type -> services.OrderResponse
	3,  // 44: services.OrderService.GetCouponList:output_type -> services.OrderResponse
	30, // [30:45] is the sub-list for method output_type
	15, // [15:30] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_orderService_proto_init() }
func file_orderService_proto_init() {
	if File_orderService_proto != nil {
		return
	}
	file_orderDetailService_proto_init()
	file_orderAddressService_proto_init()
	file_adjustmentService_proto_init()
	file_orderGiftService_proto_init()
	file_memberInfoService_proto_init()
	file_extendService_proto_init()
	file_shipmentService_proto_init()
	file_paymentService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_orderService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_orderService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_orderService_proto_goTypes,
		DependencyIndexes: file_orderService_proto_depIdxs,
		MessageInfos:      file_orderService_proto_msgTypes,
	}.Build()
	File_orderService_proto = out.File
	file_orderService_proto_rawDesc = nil
	file_orderService_proto_goTypes = nil
	file_orderService_proto_depIdxs = nil
}
