// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: orderService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                    int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                                                       //ID
	OrderNo               string  `protobuf:"bytes,2,opt,name=order_no,json=orderNo,proto3" json:"order_no"`                                               //订单号
	Type                  string  `protobuf:"bytes,3,opt,name=type,proto3" json:"type"`                                                                    //订单类型
	MemberId              int64   `protobuf:"varint,4,opt,name=member_id,json=memberId,proto3" json:"member_id"`                                           //买家ID
	ShopId                int64   `protobuf:"varint,5,opt,name=shop_id,json=shopId,proto3" json:"shop_id"`                                                 //多商户ID
	RealstoreId           int64   `protobuf:"varint,6,opt,name=realstore_id,json=realstoreId,proto3" json:"realstore_id"`                                  //多门店ID
	WarehouseId           int64   `protobuf:"varint,7,opt,name=warehouse_id,json=warehouseId,proto3" json:"warehouse_id"`                                  //仓库ID
	BuyCount              float32 `protobuf:"fixed32,8,opt,name=buy_count,json=buyCount,proto3" json:"buy_count"`                                          //购买总数
	BuyCountNumber        int64   `protobuf:"varint,9,opt,name=buy_count_number,json=buyCountNumber,proto3" json:"buy_count_number"`                       //购买总件数
	BuyCountWeighed       int64   `protobuf:"varint,10,opt,name=buy_count_weighed,json=buyCountWeighed,proto3" json:"buy_count_weighed"`                   //购买总称重
	TotalAmount           int64   `protobuf:"varint,11,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount"`                                 //订单单价
	FinalAmount           int64   `protobuf:"varint,12,opt,name=final_amount,json=finalAmount,proto3" json:"final_amount"`                                 //订单实付
	IncreaseAmount        int64   `protobuf:"varint,13,opt,name=increase_amount,json=increaseAmount,proto3" json:"increase_amount"`                        //增加金额
	DiscountAmount        int64   `protobuf:"varint,14,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount"`                        //优惠金额
	UseIntegral           int64   `protobuf:"varint,15,opt,name=use_integral,json=useIntegral,proto3" json:"use_integral"`                                 //使用积分
	UseSurplus            int64   `protobuf:"varint,16,opt,name=use_surplus,json=useSurplus,proto3" json:"use_surplus"`                                    //使用余额
	UseCouponId           int64   `protobuf:"varint,17,opt,name=use_coupon_id,json=useCouponId,proto3" json:"use_coupon_id"`                               //用户优惠劵
	PaidAmount            int64   `protobuf:"varint,18,opt,name=paid_amount,json=paidAmount,proto3" json:"paid_amount"`                                    //已支付金额
	RefundedAmount        int64   `protobuf:"varint,19,opt,name=refunded_amount,json=refundedAmount,proto3" json:"refunded_amount"`                        //已退款金额
	ReturnedNumber        int64   `protobuf:"varint,20,opt,name=returned_number,json=returnedNumber,proto3" json:"returned_number"`                        //已退货数量
	DeliveredNumber       int64   `protobuf:"varint,21,opt,name=delivered_number,json=deliveredNumber,proto3" json:"delivered_number"`                     //已发货数量
	IntegralDiscountType  string  `protobuf:"bytes,22,opt,name=integral_discount_type,json=integralDiscountType,proto3" json:"integral_discount_type"`     //积分优惠类型
	IntegralDeductionRate int64   `protobuf:"varint,23,opt,name=integral_deduction_rate,json=integralDeductionRate,proto3" json:"integral_deduction_rate"` //积分抵现率
	OrderModel            string  `protobuf:"bytes,24,opt,name=order_model,json=orderModel,proto3" json:"order_model"`                                     //订单模式
	DeliveryType          string  `protobuf:"bytes,25,opt,name=delivery_type,json=deliveryType,proto3" json:"delivery_type"`                               //配送类型：1-快递发货，2-同城配送，3-用户自提，4-虚拟发货(无需物流)
	ShippingMethod        string  `protobuf:"bytes,26,opt,name=shipping_method,json=shippingMethod,proto3" json:"shipping_method"`                         //发货方式
	IsMultiPacket         string  `protobuf:"bytes,28,opt,name=is_multi_packet,json=isMultiPacket,proto3" json:"is_multi_packet"`                          //多包裹发货
	IsAllDelivered        string  `protobuf:"bytes,29,opt,name=is_all_delivered,json=isAllDelivered,proto3" json:"is_all_delivered"`                       //已全部发货
	Subject               string  `protobuf:"bytes,30,opt,name=subject,proto3" json:"subject"`                                                             //订单标题
	CoverUrl              string  `protobuf:"bytes,31,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url"`                                           //订单商品封面
	UserNote              string  `protobuf:"bytes,32,opt,name=user_note,json=userNote,proto3" json:"user_note"`                                           //订单附言
	SellerNote            string  `protobuf:"bytes,33,opt,name=seller_note,json=sellerNote,proto3" json:"seller_note"`                                     //商家留言
	TableCode             string  `protobuf:"bytes,34,opt,name=table_code,json=tableCode,proto3" json:"table_code"`                                        //桌台编号
	IsCod                 string  `protobuf:"bytes,35,opt,name=is_cod,json=isCod,proto3" json:"is_cod"`                                                    //是否货到付款
	IsInvoiced            string  `protobuf:"bytes,36,opt,name=is_invoiced,json=isInvoiced,proto3" json:"is_invoiced"`                                     //已开过发票
	IsRefunded            string  `protobuf:"bytes,37,opt,name=is_refunded,json=isRefunded,proto3" json:"is_refunded"`                                     //已产生退款
	IsModifyAddress       string  `protobuf:"bytes,38,opt,name=is_modify_address,json=isModifyAddress,proto3" json:"is_modify_address"`                    //已修改地址
	IsModifyPrice         string  `protobuf:"bytes,39,opt,name=is_modify_price,json=isModifyPrice,proto3" json:"is_modify_price"`                          //已修改价格
	PaymentId             int32   `protobuf:"varint,40,opt,name=payment_id,json=paymentId,proto3" json:"payment_id"`                                       //支付ID
	PaymentMode           string  `protobuf:"bytes,41,opt,name=payment_mode,json=paymentMode,proto3" json:"payment_mode"`                                  //支付模式
	PaymentType           string  `protobuf:"bytes,42,opt,name=payment_type,json=paymentType,proto3" json:"payment_type"`                                  //支付类型
	PaymentChannel        string  `protobuf:"bytes,43,opt,name=payment_channel,json=paymentChannel,proto3" json:"payment_channel"`                         //支付通道Code
	ClientType            string  `protobuf:"bytes,44,opt,name=client_type,json=clientType,proto3" json:"client_type"`                                     //客户端类型
	PayStatus             string  `protobuf:"bytes,45,opt,name=pay_status,json=payStatus,proto3" json:"pay_status"`                                        //支付状态
	Status                string  `protobuf:"bytes,46,opt,name=status,proto3" json:"status"`                                                               //订单状态
	ConfirmTime           int64   `protobuf:"varint,47,opt,name=confirm_time,json=confirmTime,proto3" json:"confirm_time"`                                 //确认时间
	PayTime               int64   `protobuf:"varint,48,opt,name=pay_time,json=payTime,proto3" json:"pay_time"`                                             //确认时间
	DeliveryTime          int64   `protobuf:"varint,49,opt,name=delivery_time,json=deliveryTime,proto3" json:"delivery_time"`                              //确认时间
	CollectTime           int64   `protobuf:"varint,50,opt,name=collect_time,json=collectTime,proto3" json:"collect_time"`                                 //收货时间
	CancelTime            int64   `protobuf:"varint,51,opt,name=cancel_time,json=cancelTime,proto3" json:"cancel_time"`                                    //取消时间
	CloseTime             int64   `protobuf:"varint,52,opt,name=close_time,json=closeTime,proto3" json:"close_time"`                                       //退款完成时间
	CommentTime           int64   `protobuf:"varint,53,opt,name=comment_time,json=commentTime,proto3" json:"comment_time"`                                 //订单完成时间
	OutSystemId           string  `protobuf:"bytes,54,opt,name=out_system_id,json=outSystemId,proto3" json:"out_system_id"`                                //外部系统ID
	CreatedAt             int64   `protobuf:"varint,55,opt,name=created_at,json=createdAt,proto3" json:"created_at"`                                       //创建时间
	UpdatedAt             int64   `protobuf:"varint,56,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`                                       //修改时间
	Currency              string  `protobuf:"bytes,58,opt,name=currency,proto3" json:"currency"`
	CartId                int64   `protobuf:"varint,59,opt,name=cart_id,json=cartId,proto3" json:"cart_id"`
	//--ext---
	IsCanLaunchAftersale bool               `protobuf:"varint,60,opt,name=is_can_launch_aftersale,json=isCanLaunchAftersale,proto3" json:"is_can_launch_aftersale"` //是否启动售后服务
	ClientTypeName       string             `protobuf:"bytes,61,opt,name=client_type_name,json=clientTypeName,proto3" json:"client_type_name"`                      //终端类型名称
	PaymentTypeName      string             `protobuf:"bytes,62,opt,name=payment_type_name,json=paymentTypeName,proto3" json:"payment_type_name"`                   //支付类型名称
	PaymentWayName       string             `protobuf:"bytes,63,opt,name=payment_way_name,json=paymentWayName,proto3" json:"payment_way_name"`                      //支付通道名称
	StatusName           string             `protobuf:"bytes,64,opt,name=status_name,json=statusName,proto3" json:"status_name"`                                    //状态名称
	StatusColor          string             `protobuf:"bytes,65,opt,name=status_color,json=statusColor,proto3" json:"status_color"`                                 //状态颜色
	PayStatusName        string             `protobuf:"bytes,66,opt,name=pay_status_name,json=payStatusName,proto3" json:"pay_status_name"`                         //状态名称
	LogisticsTypeName    string             `protobuf:"bytes,67,opt,name=logistics_type_name,json=logisticsTypeName,proto3" json:"logistics_type_name"`             //物流模式名称
	DeliveryModeName     string             `protobuf:"bytes,68,opt,name=delivery_mode_name,json=deliveryModeName,proto3" json:"delivery_mode_name"`                //发货模式名称
	Address              *OrderAddress      `protobuf:"bytes,70,opt,name=address,proto3" json:"address"`
	Member               *MemberInfo        `protobuf:"bytes,71,opt,name=member,proto3" json:"member"`
	Payment              *PaymentInfo       `protobuf:"bytes,72,opt,name=payment,proto3" json:"payment"`
	Details              []*OrderDetail     `protobuf:"bytes,73,rep,name=details,proto3" json:"details"`
	Discounts            []*OrderDiscount   `protobuf:"bytes,74,rep,name=discounts,proto3" json:"discounts"`
	Metas                map[string]string  `protobuf:"bytes,75,rep,name=metas,proto3" json:"metas" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Warehouse            *WarehouseInfo     `protobuf:"bytes,76,opt,name=warehouse,proto3" json:"warehouse"`
	Shippings            []*OrderShipping   `protobuf:"bytes,77,rep,name=shippings,proto3" json:"shippings"`
	AdminCommand         *OrderAdminCommand `protobuf:"bytes,78,opt,name=admin_command,json=adminCommand,proto3" json:"admin_command"`
	UserAction           *OrderUserAction   `protobuf:"bytes,79,opt,name=user_action,json=userAction,proto3" json:"user_action"`
	ShipStatus           string             `protobuf:"bytes,80,opt,name=ship_status,json=shipStatus,proto3" json:"ship_status"` //发货状态：1-待发货，2-已发货，3-已完成
	ShowStatus           *ShowStatus        `protobuf:"bytes,81,opt,name=showStatus,proto3" json:"showStatus"`                   //显示状态
	ProgressInfo         *OrderProgress     `protobuf:"bytes,83,opt,name=progress_info,json=progressInfo,proto3" json:"progress_info"`
	CreatedAtStr         string             `protobuf:"bytes,85,opt,name=created_at_str,json=createdAtStr,proto3" json:"created_at_str"`
	HelpInfo             *OrderHelpInfo     `protobuf:"bytes,86,opt,name=help_info,json=helpInfo,proto3" json:"help_info"`
	Paid                 bool               `protobuf:"varint,87,opt,name=paid,proto3" json:"paid"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_orderService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_orderService_proto_rawDescGZIP(), []int{0}
}

func (x *Order) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Order) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *Order) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Order) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *Order) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *Order) GetRealstoreId() int64 {
	if x != nil {
		return x.RealstoreId
	}
	return 0
}

func (x *Order) GetWarehouseId() int64 {
	if x != nil {
		return x.WarehouseId
	}
	return 0
}

func (x *Order) GetBuyCount() float32 {
	if x != nil {
		return x.BuyCount
	}
	return 0
}

func (x *Order) GetBuyCountNumber() int64 {
	if x != nil {
		return x.BuyCountNumber
	}
	return 0
}

func (x *Order) GetBuyCountWeighed() int64 {
	if x != nil {
		return x.BuyCountWeighed
	}
	return 0
}

func (x *Order) GetTotalAmount() int64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *Order) GetFinalAmount() int64 {
	if x != nil {
		return x.FinalAmount
	}
	return 0
}

func (x *Order) GetIncreaseAmount() int64 {
	if x != nil {
		return x.IncreaseAmount
	}
	return 0
}

func (x *Order) GetDiscountAmount() int64 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *Order) GetUseIntegral() int64 {
	if x != nil {
		return x.UseIntegral
	}
	return 0
}

func (x *Order) GetUseSurplus() int64 {
	if x != nil {
		return x.UseSurplus
	}
	return 0
}

func (x *Order) GetUseCouponId() int64 {
	if x != nil {
		return x.UseCouponId
	}
	return 0
}

func (x *Order) GetPaidAmount() int64 {
	if x != nil {
		return x.PaidAmount
	}
	return 0
}

func (x *Order) GetRefundedAmount() int64 {
	if x != nil {
		return x.RefundedAmount
	}
	return 0
}

func (x *Order) GetReturnedNumber() int64 {
	if x != nil {
		return x.ReturnedNumber
	}
	return 0
}

func (x *Order) GetDeliveredNumber() int64 {
	if x != nil {
		return x.DeliveredNumber
	}
	return 0
}

func (x *Order) GetIntegralDiscountType() string {
	if x != nil {
		return x.IntegralDiscountType
	}
	return ""
}

func (x *Order) GetIntegralDeductionRate() int64 {
	if x != nil {
		return x.IntegralDeductionRate
	}
	return 0
}

func (x *Order) GetOrderModel() string {
	if x != nil {
		return x.OrderModel
	}
	return ""
}

func (x *Order) GetDeliveryType() string {
	if x != nil {
		return x.DeliveryType
	}
	return ""
}

func (x *Order) GetShippingMethod() string {
	if x != nil {
		return x.ShippingMethod
	}
	return ""
}

func (x *Order) GetIsMultiPacket() string {
	if x != nil {
		return x.IsMultiPacket
	}
	return ""
}

func (x *Order) GetIsAllDelivered() string {
	if x != nil {
		return x.IsAllDelivered
	}
	return ""
}

func (x *Order) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Order) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *Order) GetUserNote() string {
	if x != nil {
		return x.UserNote
	}
	return ""
}

func (x *Order) GetSellerNote() string {
	if x != nil {
		return x.SellerNote
	}
	return ""
}

func (x *Order) GetTableCode() string {
	if x != nil {
		return x.TableCode
	}
	return ""
}

func (x *Order) GetIsCod() string {
	if x != nil {
		return x.IsCod
	}
	return ""
}

func (x *Order) GetIsInvoiced() string {
	if x != nil {
		return x.IsInvoiced
	}
	return ""
}

func (x *Order) GetIsRefunded() string {
	if x != nil {
		return x.IsRefunded
	}
	return ""
}

func (x *Order) GetIsModifyAddress() string {
	if x != nil {
		return x.IsModifyAddress
	}
	return ""
}

func (x *Order) GetIsModifyPrice() string {
	if x != nil {
		return x.IsModifyPrice
	}
	return ""
}

func (x *Order) GetPaymentId() int32 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

func (x *Order) GetPaymentMode() string {
	if x != nil {
		return x.PaymentMode
	}
	return ""
}

func (x *Order) GetPaymentType() string {
	if x != nil {
		return x.PaymentType
	}
	return ""
}

func (x *Order) GetPaymentChannel() string {
	if x != nil {
		return x.PaymentChannel
	}
	return ""
}

func (x *Order) GetClientType() string {
	if x != nil {
		return x.ClientType
	}
	return ""
}

func (x *Order) GetPayStatus() string {
	if x != nil {
		return x.PayStatus
	}
	return ""
}

func (x *Order) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Order) GetConfirmTime() int64 {
	if x != nil {
		return x.ConfirmTime
	}
	return 0
}

func (x *Order) GetPayTime() int64 {
	if x != nil {
		return x.PayTime
	}
	return 0
}

func (x *Order) GetDeliveryTime() int64 {
	if x != nil {
		return x.DeliveryTime
	}
	return 0
}

func (x *Order) GetCollectTime() int64 {
	if x != nil {
		return x.CollectTime
	}
	return 0
}

func (x *Order) GetCancelTime() int64 {
	if x != nil {
		return x.CancelTime
	}
	return 0
}

func (x *Order) GetCloseTime() int64 {
	if x != nil {
		return x.CloseTime
	}
	return 0
}

func (x *Order) GetCommentTime() int64 {
	if x != nil {
		return x.CommentTime
	}
	return 0
}

func (x *Order) GetOutSystemId() string {
	if x != nil {
		return x.OutSystemId
	}
	return ""
}

func (x *Order) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Order) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Order) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Order) GetCartId() int64 {
	if x != nil {
		return x.CartId
	}
	return 0
}

func (x *Order) GetIsCanLaunchAftersale() bool {
	if x != nil {
		return x.IsCanLaunchAftersale
	}
	return false
}

func (x *Order) GetClientTypeName() string {
	if x != nil {
		return x.ClientTypeName
	}
	return ""
}

func (x *Order) GetPaymentTypeName() string {
	if x != nil {
		return x.PaymentTypeName
	}
	return ""
}

func (x *Order) GetPaymentWayName() string {
	if x != nil {
		return x.PaymentWayName
	}
	return ""
}

func (x *Order) GetStatusName() string {
	if x != nil {
		return x.StatusName
	}
	return ""
}

func (x *Order) GetStatusColor() string {
	if x != nil {
		return x.StatusColor
	}
	return ""
}

func (x *Order) GetPayStatusName() string {
	if x != nil {
		return x.PayStatusName
	}
	return ""
}

func (x *Order) GetLogisticsTypeName() string {
	if x != nil {
		return x.LogisticsTypeName
	}
	return ""
}

func (x *Order) GetDeliveryModeName() string {
	if x != nil {
		return x.DeliveryModeName
	}
	return ""
}

func (x *Order) GetAddress() *OrderAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Order) GetMember() *MemberInfo {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *Order) GetPayment() *PaymentInfo {
	if x != nil {
		return x.Payment
	}
	return nil
}

func (x *Order) GetDetails() []*OrderDetail {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *Order) GetDiscounts() []*OrderDiscount {
	if x != nil {
		return x.Discounts
	}
	return nil
}

func (x *Order) GetMetas() map[string]string {
	if x != nil {
		return x.Metas
	}
	return nil
}

func (x *Order) GetWarehouse() *WarehouseInfo {
	if x != nil {
		return x.Warehouse
	}
	return nil
}

func (x *Order) GetShippings() []*OrderShipping {
	if x != nil {
		return x.Shippings
	}
	return nil
}

func (x *Order) GetAdminCommand() *OrderAdminCommand {
	if x != nil {
		return x.AdminCommand
	}
	return nil
}

func (x *Order) GetUserAction() *OrderUserAction {
	if x != nil {
		return x.UserAction
	}
	return nil
}

func (x *Order) GetShipStatus() string {
	if x != nil {
		return x.ShipStatus
	}
	return ""
}

func (x *Order) GetShowStatus() *ShowStatus {
	if x != nil {
		return x.ShowStatus
	}
	return nil
}

func (x *Order) GetProgressInfo() *OrderProgress {
	if x != nil {
		return x.ProgressInfo
	}
	return nil
}

func (x *Order) GetCreatedAtStr() string {
	if x != nil {
		return x.CreatedAtStr
	}
	return ""
}

func (x *Order) GetHelpInfo() *OrderHelpInfo {
	if x != nil {
		return x.HelpInfo
	}
	return nil
}

func (x *Order) GetPaid() bool {
	if x != nil {
		return x.Paid
	}
	return false
}

// 订单代付信息
type OrderHelpInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayUid      string `protobuf:"bytes,1,opt,name=pay_uid,json=payUid,proto3" json:"pay_uid"`                //代付人ID
	PayNickname string `protobuf:"bytes,2,opt,name=pay_nickname,json=payNickname,proto3" json:"pay_nickname"` //代付人昵称
	PayAvatar   string `protobuf:"bytes,3,opt,name=pay_avatar,json=payAvatar,proto3" json:"pay_avatar"`       //代付人头像
	HelpStatus  string `protobuf:"bytes,4,opt,name=help_status,json=helpStatus,proto3" json:"help_status"`    //代付状态
}

func (x *OrderHelpInfo) Reset() {
	*x = OrderHelpInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderHelpInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderHelpInfo) ProtoMessage() {}

func (x *OrderHelpInfo) ProtoReflect() protoreflect.Message {
	mi := &file_orderService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderHelpInfo.ProtoReflect.Descriptor instead.
func (*OrderHelpInfo) Descriptor() ([]byte, []int) {
	return file_orderService_proto_rawDescGZIP(), []int{1}
}

func (x *OrderHelpInfo) GetPayUid() string {
	if x != nil {
		return x.PayUid
	}
	return ""
}

func (x *OrderHelpInfo) GetPayNickname() string {
	if x != nil {
		return x.PayNickname
	}
	return ""
}

func (x *OrderHelpInfo) GetPayAvatar() string {
	if x != nil {
		return x.PayAvatar
	}
	return ""
}

func (x *OrderHelpInfo) GetHelpStatus() string {
	if x != nil {
		return x.HelpStatus
	}
	return ""
}

// 订单详情步骤
type OrderProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current *OrderProgressStep   `protobuf:"bytes,1,opt,name=current,proto3" json:"current"`
	Steps   []*OrderProgressStep `protobuf:"bytes,2,rep,name=steps,proto3" json:"steps"`
}

func (x *OrderProgress) Reset() {
	*x = OrderProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderProgress) ProtoMessage() {}

func (x *OrderProgress) ProtoReflect() protoreflect.Message {
	mi := &file_orderService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderProgress.ProtoReflect.Descriptor instead.
func (*OrderProgress) Descriptor() ([]byte, []int) {
	return file_orderService_proto_rawDescGZIP(), []int{2}
}

func (x *OrderProgress) GetCurrent() *OrderProgressStep {
	if x != nil {
		return x.Current
	}
	return nil
}

func (x *OrderProgress) GetSteps() []*OrderProgressStep {
	if x != nil {
		return x.Steps
	}
	return nil
}

// 管理员命令
type OrderAdminCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasOrderConfirm      bool `protobuf:"varint,1,opt,name=has_order_confirm,json=hasOrderConfirm,proto3" json:"has_order_confirm"`                  //订单确认
	HasOrderDelivery     bool `protobuf:"varint,2,opt,name=has_order_delivery,json=hasOrderDelivery,proto3" json:"has_order_delivery"`               //订单发货
	HasOrderCancel       bool `protobuf:"varint,3,opt,name=has_order_cancel,json=hasOrderCancel,proto3" json:"has_order_cancel"`                     // 取消订单
	HasOrderDelete       bool `protobuf:"varint,4,opt,name=has_order_delete,json=hasOrderDelete,proto3" json:"has_order_delete"`                     // 删除订单
	HasOfflinePayConfirm bool `protobuf:"varint,5,opt,name=has_offline_pay_confirm,json=hasOfflinePayConfirm,proto3" json:"has_offline_pay_confirm"` // 线下支付确认
	HasModifyAddress     bool `protobuf:"varint,6,opt,name=has_modify_address,json=hasModifyAddress,proto3" json:"has_modify_address"`               // 修改地址
	HasModifyPrice       bool `protobuf:"varint,7,opt,name=has_modify_price,json=hasModifyPrice,proto3" json:"has_modify_price"`                     // 订单改价
}

func (x *OrderAdminCommand) Reset() {
	*x = OrderAdminCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderAdminCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderAdminCommand) ProtoMessage() {}

func (x *OrderAdminCommand) ProtoReflect() protoreflect.Message {
	mi := &file_orderService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderAdminCommand.ProtoReflect.Descriptor instead.
func (*OrderAdminCommand) Descriptor() ([]byte, []int) {
	return file_orderService_proto_rawDescGZIP(), []int{3}
}

func (x *OrderAdminCommand) GetHasOrderConfirm() bool {
	if x != nil {
		return x.HasOrderConfirm
	}
	return false
}

func (x *OrderAdminCommand) GetHasOrderDelivery() bool {
	if x != nil {
		return x.HasOrderDelivery
	}
	return false
}

func (x *OrderAdminCommand) GetHasOrderCancel() bool {
	if x != nil {
		return x.HasOrderCancel
	}
	return false
}

func (x *OrderAdminCommand) GetHasOrderDelete() bool {
	if x != nil {
		return x.HasOrderDelete
	}
	return false
}

func (x *OrderAdminCommand) GetHasOfflinePayConfirm() bool {
	if x != nil {
		return x.HasOfflinePayConfirm
	}
	return false
}

func (x *OrderAdminCommand) GetHasModifyAddress() bool {
	if x != nil {
		return x.HasModifyAddress
	}
	return false
}

func (x *OrderAdminCommand) GetHasModifyPrice() bool {
	if x != nil {
		return x.HasModifyPrice
	}
	return false
}

// 用户命令
type OrderUserAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderPayButton         bool `protobuf:"varint,1,opt,name=order_pay_button,json=orderPayButton,proto3" json:"order_pay_button"`                         //订单支付
	OrderCollectButton     bool `protobuf:"varint,2,opt,name=order_collect_button,json=orderCollectButton,proto3" json:"order_collect_button"`             //订单收货
	OrderCancelButton      bool `protobuf:"varint,3,opt,name=order_cancel_button,json=orderCancelButton,proto3" json:"order_cancel_button"`                // 取消订单
	OrderDeleteButton      bool `protobuf:"varint,4,opt,name=order_delete_button,json=orderDeleteButton,proto3" json:"order_delete_button"`                // 删除订单
	ShippingLogisticsQuery bool `protobuf:"varint,5,opt,name=shipping_logistics_query,json=shippingLogisticsQuery,proto3" json:"shipping_logistics_query"` // 发货物流查询
	RefundLogisticsQuery   bool `protobuf:"varint,6,opt,name=refund_logistics_query,json=refundLogisticsQuery,proto3" json:"refund_logistics_query"`       // 退货物流查询
	OrderCommentButton     bool `protobuf:"varint,7,opt,name=order_comment_button,json=orderCommentButton,proto3" json:"order_comment_button"`             // 订单评论
	WriteReturnButton      bool `protobuf:"varint,8,opt,name=write_return_button,json=writeReturnButton,proto3" json:"write_return_button"`                //填写退货信息
	BuyAgainButton         bool `protobuf:"varint,9,opt,name=buy_again_button,json=buyAgainButton,proto3" json:"buy_again_button"`                         //再次购买
	RefundApplyButton      bool `protobuf:"varint,10,opt,name=refund_apply_button,json=refundApplyButton,proto3" json:"refund_apply_button"`               //申请退款
	RefundCancelButton     bool `protobuf:"varint,11,opt,name=refund_cancel_button,json=refundCancelButton,proto3" json:"refund_cancel_button"`            //取消申请退款
	InvoiceApplyButton     bool `protobuf:"varint,12,opt,name=invoice_apply_button,json=invoiceApplyButton,proto3" json:"invoice_apply_button"`            //申请开票
	InvoiceViewButton      bool `protobuf:"varint,13,opt,name=invoice_view_button,json=invoiceViewButton,proto3" json:"invoice_view_button"`               //查看发票
}

func (x *OrderUserAction) Reset() {
	*x = OrderUserAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderUserAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderUserAction) ProtoMessage() {}

func (x *OrderUserAction) ProtoReflect() protoreflect.Message {
	mi := &file_orderService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderUserAction.ProtoReflect.Descriptor instead.
func (*OrderUserAction) Descriptor() ([]byte, []int) {
	return file_orderService_proto_rawDescGZIP(), []int{4}
}

func (x *OrderUserAction) GetOrderPayButton() bool {
	if x != nil {
		return x.OrderPayButton
	}
	return false
}

func (x *OrderUserAction) GetOrderCollectButton() bool {
	if x != nil {
		return x.OrderCollectButton
	}
	return false
}

func (x *OrderUserAction) GetOrderCancelButton() bool {
	if x != nil {
		return x.OrderCancelButton
	}
	return false
}

func (x *OrderUserAction) GetOrderDeleteButton() bool {
	if x != nil {
		return x.OrderDeleteButton
	}
	return false
}

func (x *OrderUserAction) GetShippingLogisticsQuery() bool {
	if x != nil {
		return x.ShippingLogisticsQuery
	}
	return false
}

func (x *OrderUserAction) GetRefundLogisticsQuery() bool {
	if x != nil {
		return x.RefundLogisticsQuery
	}
	return false
}

func (x *OrderUserAction) GetOrderCommentButton() bool {
	if x != nil {
		return x.OrderCommentButton
	}
	return false
}

func (x *OrderUserAction) GetWriteReturnButton() bool {
	if x != nil {
		return x.WriteReturnButton
	}
	return false
}

func (x *OrderUserAction) GetBuyAgainButton() bool {
	if x != nil {
		return x.BuyAgainButton
	}
	return false
}

func (x *OrderUserAction) GetRefundApplyButton() bool {
	if x != nil {
		return x.RefundApplyButton
	}
	return false
}

func (x *OrderUserAction) GetRefundCancelButton() bool {
	if x != nil {
		return x.RefundCancelButton
	}
	return false
}

func (x *OrderUserAction) GetInvoiceApplyButton() bool {
	if x != nil {
		return x.InvoiceApplyButton
	}
	return false
}

func (x *OrderUserAction) GetInvoiceViewButton() bool {
	if x != nil {
		return x.InvoiceViewButton
	}
	return false
}

// 显示状态
type ShowStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Class        string `protobuf:"bytes,1,opt,name=class,proto3" json:"class"`                          //如:nobuy
	DeliveryType string `protobuf:"bytes,2,opt,name=deliveryType,proto3" json:"deliveryType"`            //配送方式
	Msg          string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg"`                              //提示信息
	PayType      string `protobuf:"bytes,4,opt,name=payType,proto3" json:"payType"`                      //支付类型
	Title        string `protobuf:"bytes,5,opt,name=title,proto3" json:"title"`                          //标题
	Type         string `protobuf:"bytes,6,opt,name=type,proto3" json:"type"`                            //类型
	StatusPic    string `protobuf:"bytes,8,opt,name=status_pic,json=statusPic,proto3" json:"status_pic"` //状态图片
}

func (x *ShowStatus) Reset() {
	*x = ShowStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowStatus) ProtoMessage() {}

func (x *ShowStatus) ProtoReflect() protoreflect.Message {
	mi := &file_orderService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowStatus.ProtoReflect.Descriptor instead.
func (*ShowStatus) Descriptor() ([]byte, []int) {
	return file_orderService_proto_rawDescGZIP(), []int{5}
}

func (x *ShowStatus) GetClass() string {
	if x != nil {
		return x.Class
	}
	return ""
}

func (x *ShowStatus) GetDeliveryType() string {
	if x != nil {
		return x.DeliveryType
	}
	return ""
}

func (x *ShowStatus) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ShowStatus) GetPayType() string {
	if x != nil {
		return x.PayType
	}
	return ""
}

func (x *ShowStatus) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ShowStatus) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ShowStatus) GetStatusPic() string {
	if x != nil {
		return x.StatusPic
	}
	return ""
}

// 订单请求参数
type OrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Top       int32    `protobuf:"varint,1,opt,name=top,proto3" json:"top"`
	Paged     int64    `protobuf:"varint,2,opt,name=paged,proto3" json:"paged"`
	PageSize  int64    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords  string   `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords"`
	Sorts     []string `protobuf:"bytes,5,rep,name=sorts,proto3" json:"sorts"`
	DateRange []string `protobuf:"bytes,6,rep,name=date_range,json=dateRange,proto3" json:"date_range"`
	Ids       []int64  `protobuf:"varint,7,rep,packed,name=ids,proto3" json:"ids"`
	Id        int64    `protobuf:"varint,8,opt,name=id,proto3" json:"id"`
	//以下为自定义参数
	OrderNo         string `protobuf:"bytes,11,opt,name=order_no,json=orderNo,proto3" json:"order_no"`                           //订单号
	Type            string `protobuf:"bytes,12,opt,name=type,proto3" json:"type"`                                                //订单类型
	MemberId        int64  `protobuf:"varint,13,opt,name=member_id,json=memberId,proto3" json:"member_id"`                       //买家ID
	ShopId          int64  `protobuf:"varint,14,opt,name=shop_id,json=shopId,proto3" json:"shop_id"`                             //多商户ID
	RealstoreId     int64  `protobuf:"varint,15,opt,name=realstore_id,json=realstoreId,proto3" json:"realstore_id"`              //多门店ID
	WarehouseId     int64  `protobuf:"varint,16,opt,name=warehouse_id,json=warehouseId,proto3" json:"warehouse_id"`              //仓库ID
	DeliveryType    string `protobuf:"bytes,17,opt,name=delivery_type,json=deliveryType,proto3" json:"delivery_type"`            //物流类型
	ShippingMethod  string `protobuf:"bytes,18,opt,name=shipping_method,json=shippingMethod,proto3" json:"shipping_method"`      //配送方式
	DeliveryMode    string `protobuf:"bytes,19,opt,name=delivery_mode,json=deliveryMode,proto3" json:"delivery_mode"`            //发货模式
	IsMultiPacket   string `protobuf:"bytes,20,opt,name=is_multi_packet,json=isMultiPacket,proto3" json:"is_multi_packet"`       //多包裹发货
	IsAllDelivered  string `protobuf:"bytes,21,opt,name=is_all_delivered,json=isAllDelivered,proto3" json:"is_all_delivered"`    //已全部发货
	TableCode       string `protobuf:"bytes,22,opt,name=table_code,json=tableCode,proto3" json:"table_code"`                     //桌台编号
	IsCod           string `protobuf:"bytes,23,opt,name=is_cod,json=isCod,proto3" json:"is_cod"`                                 //是否货到付款
	IsInvoiced      string `protobuf:"bytes,24,opt,name=is_invoiced,json=isInvoiced,proto3" json:"is_invoiced"`                  //已开过发票
	IsRefunded      string `protobuf:"bytes,25,opt,name=is_refunded,json=isRefunded,proto3" json:"is_refunded"`                  //已产生退款
	IsModifyAddress string `protobuf:"bytes,26,opt,name=is_modify_address,json=isModifyAddress,proto3" json:"is_modify_address"` //已修改地址
	IsModifyPrice   string `protobuf:"bytes,27,opt,name=is_modify_price,json=isModifyPrice,proto3" json:"is_modify_price"`       //已修改价格
	PaymentId       int32  `protobuf:"varint,28,opt,name=payment_id,json=paymentId,proto3" json:"payment_id"`                    //支付ID
	PaymentMode     string `protobuf:"bytes,29,opt,name=payment_mode,json=paymentMode,proto3" json:"payment_mode"`               //支付模式
	PaymentType     string `protobuf:"bytes,30,opt,name=payment_type,json=paymentType,proto3" json:"payment_type"`               //支付类型
	ClientType      string `protobuf:"bytes,31,opt,name=client_type,json=clientType,proto3" json:"client_type"`                  //客户端类型
	PayStatus       string `protobuf:"bytes,32,opt,name=pay_status,json=payStatus,proto3" json:"pay_status"`                     //支付状态
	Status          string `protobuf:"bytes,33,opt,name=status,proto3" json:"status"`                                            //订单状态
	ShipStatus      string `protobuf:"bytes,34,opt,name=ship_status,json=shipStatus,proto3" json:"ship_status"`                  //发货状态：1-待发货，2-已发货，3-已完成
}

func (x *OrderRequest) Reset() {
	*x = OrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRequest) ProtoMessage() {}

func (x *OrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orderService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRequest.ProtoReflect.Descriptor instead.
func (*OrderRequest) Descriptor() ([]byte, []int) {
	return file_orderService_proto_rawDescGZIP(), []int{6}
}

func (x *OrderRequest) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *OrderRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *OrderRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *OrderRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *OrderRequest) GetSorts() []string {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *OrderRequest) GetDateRange() []string {
	if x != nil {
		return x.DateRange
	}
	return nil
}

func (x *OrderRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *OrderRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderRequest) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *OrderRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OrderRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *OrderRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *OrderRequest) GetRealstoreId() int64 {
	if x != nil {
		return x.RealstoreId
	}
	return 0
}

func (x *OrderRequest) GetWarehouseId() int64 {
	if x != nil {
		return x.WarehouseId
	}
	return 0
}

func (x *OrderRequest) GetDeliveryType() string {
	if x != nil {
		return x.DeliveryType
	}
	return ""
}

func (x *OrderRequest) GetShippingMethod() string {
	if x != nil {
		return x.ShippingMethod
	}
	return ""
}

func (x *OrderRequest) GetDeliveryMode() string {
	if x != nil {
		return x.DeliveryMode
	}
	return ""
}

func (x *OrderRequest) GetIsMultiPacket() string {
	if x != nil {
		return x.IsMultiPacket
	}
	return ""
}

func (x *OrderRequest) GetIsAllDelivered() string {
	if x != nil {
		return x.IsAllDelivered
	}
	return ""
}

func (x *OrderRequest) GetTableCode() string {
	if x != nil {
		return x.TableCode
	}
	return ""
}

func (x *OrderRequest) GetIsCod() string {
	if x != nil {
		return x.IsCod
	}
	return ""
}

func (x *OrderRequest) GetIsInvoiced() string {
	if x != nil {
		return x.IsInvoiced
	}
	return ""
}

func (x *OrderRequest) GetIsRefunded() string {
	if x != nil {
		return x.IsRefunded
	}
	return ""
}

func (x *OrderRequest) GetIsModifyAddress() string {
	if x != nil {
		return x.IsModifyAddress
	}
	return ""
}

func (x *OrderRequest) GetIsModifyPrice() string {
	if x != nil {
		return x.IsModifyPrice
	}
	return ""
}

func (x *OrderRequest) GetPaymentId() int32 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

func (x *OrderRequest) GetPaymentMode() string {
	if x != nil {
		return x.PaymentMode
	}
	return ""
}

func (x *OrderRequest) GetPaymentType() string {
	if x != nil {
		return x.PaymentType
	}
	return ""
}

func (x *OrderRequest) GetClientType() string {
	if x != nil {
		return x.ClientType
	}
	return ""
}

func (x *OrderRequest) GetPayStatus() string {
	if x != nil {
		return x.PayStatus
	}
	return ""
}

func (x *OrderRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OrderRequest) GetShipStatus() string {
	if x != nil {
		return x.ShipStatus
	}
	return ""
}

type OrderSearchData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pager *common.Pager `protobuf:"bytes,1,opt,name=pager,proto3" json:"pager"`
	Items []*Order      `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
}

func (x *OrderSearchData) Reset() {
	*x = OrderSearchData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderSearchData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderSearchData) ProtoMessage() {}

func (x *OrderSearchData) ProtoReflect() protoreflect.Message {
	mi := &file_orderService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderSearchData.ProtoReflect.Descriptor instead.
func (*OrderSearchData) Descriptor() ([]byte, []int) {
	return file_orderService_proto_rawDescGZIP(), []int{7}
}

func (x *OrderSearchData) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *OrderSearchData) GetItems() []*Order {
	if x != nil {
		return x.Items
	}
	return nil
}

type OrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg    string           `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg"`
	Order  *Order           `protobuf:"bytes,2,opt,name=order,proto3" json:"order"`
	List   []*Order         `protobuf:"bytes,3,rep,name=list,proto3" json:"list"`
	Search *OrderSearchData `protobuf:"bytes,4,opt,name=search,proto3" json:"search"`
}

func (x *OrderResponse) Reset() {
	*x = OrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderResponse) ProtoMessage() {}

func (x *OrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orderService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderResponse.ProtoReflect.Descriptor instead.
func (*OrderResponse) Descriptor() ([]byte, []int) {
	return file_orderService_proto_rawDescGZIP(), []int{8}
}

func (x *OrderResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *OrderResponse) GetOrder() *Order {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *OrderResponse) GetList() []*Order {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *OrderResponse) GetSearch() *OrderSearchData {
	if x != nil {
		return x.Search
	}
	return nil
}

type OrderProgressStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	ShortName   string `protobuf:"bytes,3,opt,name=short_name,json=shortName,proto3" json:"short_name"`
	IconUrl     string `protobuf:"bytes,4,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url"`
	Status      string `protobuf:"bytes,5,opt,name=status,proto3" json:"status"`
	HappenAt    string `protobuf:"bytes,6,opt,name=happen_at,json=happenAt,proto3" json:"happen_at"`
	Description string `protobuf:"bytes,7,opt,name=description,proto3" json:"description"`
}

func (x *OrderProgressStep) Reset() {
	*x = OrderProgressStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderProgressStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderProgressStep) ProtoMessage() {}

func (x *OrderProgressStep) ProtoReflect() protoreflect.Message {
	mi := &file_orderService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderProgressStep.ProtoReflect.Descriptor instead.
func (*OrderProgressStep) Descriptor() ([]byte, []int) {
	return file_orderService_proto_rawDescGZIP(), []int{2, 0}
}

func (x *OrderProgressStep) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *OrderProgressStep) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrderProgressStep) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *OrderProgressStep) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *OrderProgressStep) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OrderProgressStep) GetHappenAt() string {
	if x != nil {
		return x.HappenAt
	}
	return ""
}

func (x *OrderProgressStep) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_orderService_proto protoreflect.FileDescriptor

var file_orderService_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x11,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x18, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x68, 0x69,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x15, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x80, 0x19, 0x0a, 0x05, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x61, 0x6c,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x77,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x62, 0x75, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x08, 0x62, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x62,
	0x75, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x62, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x75, 0x79, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x62, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68, 0x65,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x61,
	0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x72, 0x65,
	0x61, 0x73, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0e, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x73, 0x65,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x75, 0x73, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b,
	0x75, 0x73, 0x65, 0x5f, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x53, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x12, 0x22, 0x0a,
	0x0d, 0x75, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x61, 0x69, 0x64, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65,
	0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x34, 0x0a, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x17, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61,
	0x6c, 0x5f, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x61, 0x74, 0x65,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x03, 0x52, 0x15, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c,
	0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a,
	0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x23,
	0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x26, 0x0a, 0x0f,
	0x69, 0x73, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x69, 0x73, 0x41, 0x6c, 0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x6f,
	0x74, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f,
	0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x74,
	0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x4e,
	0x6f, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x18, 0x23, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x69, 0x73, 0x43, 0x6f, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f,
	0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x69, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73,
	0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x73, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x69,
	0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x69, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x28, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x21,
	0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x29,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x2c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x2d, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x72, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x30, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x31, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x32, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x34, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x35, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x22,
	0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x36, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x37, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x38, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x3a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x17, 0x0a, 0x07,
	0x63, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63,
	0x61, 0x72, 0x74, 0x49, 0x64, 0x12, 0x35, 0x0a, 0x17, 0x69, 0x73, 0x5f, 0x63, 0x61, 0x6e, 0x5f,
	0x6c, 0x61, 0x75, 0x6e, 0x63, 0x68, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65,
	0x18, 0x3c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x73, 0x43, 0x61, 0x6e, 0x4c, 0x61, 0x75,
	0x6e, 0x63, 0x68, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x3d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x3e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x77, 0x61,
	0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x57, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x40, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x41, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x12, 0x26, 0x0a, 0x0f, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x42, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x6c, 0x6f, 0x67, 0x69,
	0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x43, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x44,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x6f,
	0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x46, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x47, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x18, 0x48, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x18, 0x49, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x35, 0x0a, 0x09, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x4a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x09, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12,
	0x30, 0x0a, 0x05, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x18, 0x4b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6d, 0x65, 0x74, 0x61,
	0x73, 0x12, 0x35, 0x0a, 0x09, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x4c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x57, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x77,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x09, 0x73, 0x68, 0x69, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x4d, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x68, 0x69, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x52, 0x09, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x73, 0x12,
	0x40, 0x0a, 0x0d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x18, 0x4e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x52, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x12, 0x3a, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x4f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x50, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x34,
	0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x51, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x68,
	0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x3c, 0x0a, 0x0d, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x53, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x5f, 0x73, 0x74, 0x72, 0x18, 0x55, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x53, 0x74, 0x72, 0x12, 0x34, 0x0a, 0x09, 0x68, 0x65, 0x6c, 0x70,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x56, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x65, 0x6c, 0x70,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x68, 0x65, 0x6c, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x69, 0x64, 0x18, 0x57, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x70, 0x61,
	0x69, 0x64, 0x1a, 0x38, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x8b, 0x01, 0x0a,
	0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x65, 0x6c, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x61, 0x79, 0x55, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x5f, 0x6e,
	0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70,
	0x61, 0x79, 0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x79, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x79, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x65, 0x6c,
	0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x68, 0x65, 0x6c, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xbd, 0x02, 0x0a, 0x0d, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x36, 0x0a, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x52, 0x07, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x73, 0x74, 0x65,
	0x70, 0x52, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x1a, 0xbf, 0x01, 0x0a, 0x04, 0x73, 0x74, 0x65,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x68, 0x6f, 0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e,
	0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x68,
	0x61, 0x70, 0x70, 0x65, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x68, 0x61, 0x70, 0x70, 0x65, 0x6e, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xd0, 0x02, 0x0a, 0x11, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64,
	0x12, 0x2a, 0x0a, 0x11, 0x68, 0x61, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x68, 0x61, 0x73,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x2c, 0x0a, 0x12,
	0x68, 0x61, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x68, 0x61, 0x73, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x68, 0x61,
	0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x61, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x12, 0x28, 0x0a, 0x10, 0x68, 0x61, 0x73, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e,
	0x68, 0x61, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x35,
	0x0a, 0x17, 0x68, 0x61, 0x73, 0x5f, 0x6f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x70, 0x61,
	0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x14, 0x68, 0x61, 0x73, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x79, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x2c, 0x0a, 0x12, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x68, 0x61, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68,
	0x61, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x8d, 0x05,
	0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x28, 0x0a, 0x10, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x79, 0x5f, 0x62,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x50, 0x61, 0x79, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x62, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x2e, 0x0a,
	0x13, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x62, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x2e, 0x0a,
	0x13, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x5f, 0x62, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x38, 0x0a,
	0x18, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x16, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69,
	0x63, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x34, 0x0a, 0x16, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x4c,
	0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x30, 0x0a,
	0x14, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x62,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12,
	0x2e, 0x0a, 0x13, 0x77, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f,
	0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x77, 0x72,
	0x69, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12,
	0x28, 0x0a, 0x10, 0x62, 0x75, 0x79, 0x5f, 0x61, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x62, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x62, 0x75, 0x79, 0x41, 0x67,
	0x61, 0x69, 0x6e, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x70,
	0x70, 0x6c, 0x79, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x5f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x43,
	0x61, 0x6e, 0x63, 0x65, 0x6c, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x62, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x6e, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x2e, 0x0a,
	0x13, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x76, 0x69, 0x65, 0x77, 0x5f, 0x62, 0x75,
	0x74, 0x74, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x56, 0x69, 0x65, 0x77, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x22, 0xbb, 0x01,
	0x0a, 0x0a, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6c, 0x61,
	0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x70, 0x69, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x50, 0x69, 0x63, 0x22, 0xe0, 0x07, 0x0a, 0x0c,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x74, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6f,
	0x72, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x03, 0x69, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x61,
	0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0b, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x12,
	0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73,
	0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x73, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73,
	0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x73, 0x43, 0x6f, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73,
	0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x73, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x73, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x11,
	0x69, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x69, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x1c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x22, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x5d,
	0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xa0, 0x01,
	0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x12, 0x25, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x31, 0x0a,
	0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x32, 0xbf, 0x07, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x39, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74,
	0x12, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x0b,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x16, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40,
	0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x16, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x41, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0b, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42,
	0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x42, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x61, 0x69, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d,
	0x61, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x06, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x07, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x64, 0x12,
	0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x3b, 0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x12, 0x16, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x31, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x39, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a,
	0x0e, 0x4e, 0x65, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63, 0x65, 0x12,
	0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_orderService_proto_rawDescOnce sync.Once
	file_orderService_proto_rawDescData = file_orderService_proto_rawDesc
)

func file_orderService_proto_rawDescGZIP() []byte {
	file_orderService_proto_rawDescOnce.Do(func() {
		file_orderService_proto_rawDescData = protoimpl.X.CompressGZIP(file_orderService_proto_rawDescData)
	})
	return file_orderService_proto_rawDescData
}

var file_orderService_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_orderService_proto_goTypes = []interface{}{
	(*Order)(nil),             // 0: services.Order
	(*OrderHelpInfo)(nil),     // 1: services.OrderHelpInfo
	(*OrderProgress)(nil),     // 2: services.OrderProgress
	(*OrderAdminCommand)(nil), // 3: services.OrderAdminCommand
	(*OrderUserAction)(nil),   // 4: services.OrderUserAction
	(*ShowStatus)(nil),        // 5: services.ShowStatus
	(*OrderRequest)(nil),      // 6: services.OrderRequest
	(*OrderSearchData)(nil),   // 7: services.OrderSearchData
	(*OrderResponse)(nil),     // 8: services.OrderResponse
	nil,                       // 9: services.Order.MetasEntry
	(*OrderProgressStep)(nil), // 10: services.OrderProgress.step
	(*OrderAddress)(nil),      // 11: services.OrderAddress
	(*MemberInfo)(nil),        // 12: services.MemberInfo
	(*PaymentInfo)(nil),       // 13: services.PaymentInfo
	(*OrderDetail)(nil),       // 14: services.OrderDetail
	(*OrderDiscount)(nil),     // 15: services.OrderDiscount
	(*WarehouseInfo)(nil),     // 16: services.WarehouseInfo
	(*OrderShipping)(nil),     // 17: services.OrderShipping
	(*common.Pager)(nil),      // 18: common.Pager
}
var file_orderService_proto_depIdxs = []int32{
	11, // 0: services.Order.address:type_name -> services.OrderAddress
	12, // 1: services.Order.member:type_name -> services.MemberInfo
	13, // 2: services.Order.payment:type_name -> services.PaymentInfo
	14, // 3: services.Order.details:type_name -> services.OrderDetail
	15, // 4: services.Order.discounts:type_name -> services.OrderDiscount
	9,  // 5: services.Order.metas:type_name -> services.Order.MetasEntry
	16, // 6: services.Order.warehouse:type_name -> services.WarehouseInfo
	17, // 7: services.Order.shippings:type_name -> services.OrderShipping
	3,  // 8: services.Order.admin_command:type_name -> services.OrderAdminCommand
	4,  // 9: services.Order.user_action:type_name -> services.OrderUserAction
	5,  // 10: services.Order.showStatus:type_name -> services.ShowStatus
	2,  // 11: services.Order.progress_info:type_name -> services.OrderProgress
	1,  // 12: services.Order.help_info:type_name -> services.OrderHelpInfo
	10, // 13: services.OrderProgress.current:type_name -> services.OrderProgress.step
	10, // 14: services.OrderProgress.steps:type_name -> services.OrderProgress.step
	18, // 15: services.OrderSearchData.pager:type_name -> common.Pager
	0,  // 16: services.OrderSearchData.items:type_name -> services.Order
	0,  // 17: services.OrderResponse.order:type_name -> services.Order
	0,  // 18: services.OrderResponse.list:type_name -> services.Order
	7,  // 19: services.OrderResponse.search:type_name -> services.OrderSearchData
	0,  // 20: services.OrderService.OrderInsert:input_type -> services.Order
	6,  // 21: services.OrderService.OrderCancel:input_type -> services.OrderRequest
	6,  // 22: services.OrderService.OrderDelete:input_type -> services.OrderRequest
	6,  // 23: services.OrderService.OrderConfirm:input_type -> services.OrderRequest
	0,  // 24: services.OrderService.ModifyPrice:input_type -> services.Order
	11, // 25: services.OrderService.ModifyAddress:input_type -> services.OrderAddress
	6,  // 26: services.OrderService.OrderMainInfo:input_type -> services.OrderRequest
	6,  // 27: services.OrderService.OrderMainList:input_type -> services.OrderRequest
	6,  // 28: services.OrderService.Search:input_type -> services.OrderRequest
	6,  // 29: services.OrderService.Detail:input_type -> services.OrderRequest
	6,  // 30: services.OrderService.Respond:input_type -> services.OrderRequest
	6,  // 31: services.OrderService.Notify:input_type -> services.OrderRequest
	0,  // 32: services.OrderService.Get:input_type -> services.Order
	6,  // 33: services.OrderService.List:input_type -> services.OrderRequest
	6,  // 34: services.OrderService.NewOrderNotice:input_type -> services.OrderRequest
	8,  // 35: services.OrderService.OrderInsert:output_type -> services.OrderResponse
	8,  // 36: services.OrderService.OrderCancel:output_type -> services.OrderResponse
	8,  // 37: services.OrderService.OrderDelete:output_type -> services.OrderResponse
	8,  // 38: services.OrderService.OrderConfirm:output_type -> services.OrderResponse
	8,  // 39: services.OrderService.ModifyPrice:output_type -> services.OrderResponse
	8,  // 40: services.OrderService.ModifyAddress:output_type -> services.OrderResponse
	8,  // 41: services.OrderService.OrderMainInfo:output_type -> services.OrderResponse
	8,  // 42: services.OrderService.OrderMainList:output_type -> services.OrderResponse
	8,  // 43: services.OrderService.Search:output_type -> services.OrderResponse
	8,  // 44: services.OrderService.Detail:output_type -> services.OrderResponse
	8,  // 45: services.OrderService.Respond:output_type -> services.OrderResponse
	8,  // 46: services.OrderService.Notify:output_type -> services.OrderResponse
	8,  // 47: services.OrderService.Get:output_type -> services.OrderResponse
	8,  // 48: services.OrderService.List:output_type -> services.OrderResponse
	8,  // 49: services.OrderService.NewOrderNotice:output_type -> services.OrderResponse
	35, // [35:50] is the sub-list for method output_type
	20, // [20:35] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_orderService_proto_init() }
func file_orderService_proto_init() {
	if File_orderService_proto != nil {
		return
	}
	file_orderDetailService_proto_init()
	file_orderAddressService_proto_init()
	file_orderShippingService_proto_init()
	file_baseInfoService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_orderService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderHelpInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderAdminCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderUserAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderSearchData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderProgressStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_orderService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_orderService_proto_goTypes,
		DependencyIndexes: file_orderService_proto_depIdxs,
		MessageInfos:      file_orderService_proto_msgTypes,
	}.Build()
	File_orderService_proto = out.File
	file_orderService_proto_rawDesc = nil
	file_orderService_proto_goTypes = nil
	file_orderService_proto_depIdxs = nil
}
