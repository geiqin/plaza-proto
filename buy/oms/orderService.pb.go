// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: orderService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64              `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                                    //ID
	OrderNo           string             `protobuf:"bytes,2,opt,name=order_no,json=orderNo,proto3" json:"order_no"`                            //订单号
	Type              string             `protobuf:"bytes,3,opt,name=type,proto3" json:"type"`                                                 //订单类型
	VirtualType       string             `protobuf:"bytes,4,opt,name=virtual_type,json=virtualType,proto3" json:"virtual_type"`                //虚拟类型
	MemberId          int64              `protobuf:"varint,5,opt,name=member_id,json=memberId,proto3" json:"member_id"`                        //买家ID
	ShopId            int64              `protobuf:"varint,6,opt,name=shop_id,json=shopId,proto3" json:"shop_id"`                              //多商户ID
	RealstoreId       int64              `protobuf:"varint,7,opt,name=realstore_id,json=realstoreId,proto3" json:"realstore_id"`               //多门店ID
	ClerkId           int64              `protobuf:"varint,8,opt,name=clerk_id,json=clerkId,proto3" json:"clerk_id"`                           //店员ID
	TotalCount        float32            `protobuf:"fixed32,9,opt,name=total_count,json=totalCount,proto3" json:"total_count"`                 //购买总数
	TotalCountNum     int64              `protobuf:"varint,10,opt,name=total_count_num,json=totalCountNum,proto3" json:"total_count_num"`      //购买总件数
	TotalCountWgt     int64              `protobuf:"varint,11,opt,name=total_count_wgt,json=totalCountWgt,proto3" json:"total_count_wgt"`      //购买总称重
	TotalPrice        int64              `protobuf:"varint,12,opt,name=total_price,json=totalPrice,proto3" json:"total_price"`                 //订单总价
	TotalPostage      int64              `protobuf:"varint,13,opt,name=total_postage,json=totalPostage,proto3" json:"total_postage"`           //总邮费
	IncreaseAmount    int64              `protobuf:"varint,14,opt,name=increase_amount,json=increaseAmount,proto3" json:"increase_amount"`     //增加金额
	DiscountAmount    int64              `protobuf:"varint,15,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount"`     //优惠总额
	FreightPrice      int64              `protobuf:"varint,16,opt,name=freight_price,json=freightPrice,proto3" json:"freight_price"`           //运费金额
	PayPostage        int64              `protobuf:"varint,17,opt,name=pay_postage,json=payPostage,proto3" json:"pay_postage"`                 //支付邮费
	PayPrice          int64              `protobuf:"varint,18,opt,name=pay_price,json=payPrice,proto3" json:"pay_price"`                       //实付金额
	Currency          string             `protobuf:"bytes,19,opt,name=currency,proto3" json:"currency"`                                        //货币类型
	DeductionPrice    int64              `protobuf:"varint,20,opt,name=deduction_price,json=deductionPrice,proto3" json:"deduction_price"`     //抵扣金额
	CouponId          int64              `protobuf:"varint,21,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id"`                       //使用优惠劵ID
	CouponPrice       int64              `protobuf:"varint,22,opt,name=coupon_price,json=couponPrice,proto3" json:"coupon_price"`              //使用优惠劵金额
	IsModifyPrice     string             `protobuf:"bytes,23,opt,name=is_modify_price,json=isModifyPrice,proto3" json:"is_modify_price"`       //已修改价格
	ModifyPrice       int64              `protobuf:"varint,24,opt,name=modify_price,json=modifyPrice,proto3" json:"modify_price"`              //修改优惠金额
	Cost              int64              `protobuf:"varint,25,opt,name=cost,proto3" json:"cost"`                                               //成本价
	PaidAmount        int64              `protobuf:"varint,26,opt,name=paid_amount,json=paidAmount,proto3" json:"paid_amount"`                 //已支付金额
	RefundedAmount    int64              `protobuf:"varint,27,opt,name=refunded_amount,json=refundedAmount,proto3" json:"refunded_amount"`     //已退款金额
	ShippingType      int32              `protobuf:"varint,29,opt,name=shipping_type,json=shippingType,proto3" json:"shipping_type"`           //配送方式
	VerifyCode        string             `protobuf:"bytes,30,opt,name=verify_code,json=verifyCode,proto3" json:"verify_code"`                  //核销码
	IsMultiPackage    string             `protobuf:"bytes,31,opt,name=is_multi_package,json=isMultiPackage,proto3" json:"is_multi_package"`    //多包裹发货
	ShipStatus        string             `protobuf:"bytes,32,opt,name=ship_status,json=shipStatus,proto3" json:"ship_status"`                  //发货状态
	Subject           string             `protobuf:"bytes,33,opt,name=subject,proto3" json:"subject"`                                          //订单标题
	CoverUrl          string             `protobuf:"bytes,34,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url"`                        //订单商品封面
	UserNote          string             `protobuf:"bytes,35,opt,name=user_note,json=userNote,proto3" json:"user_note"`                        //订单附言
	SellerNote        string             `protobuf:"bytes,36,opt,name=seller_note,json=sellerNote,proto3" json:"seller_note"`                  //商家留言
	TableCode         string             `protobuf:"bytes,37,opt,name=table_code,json=tableCode,proto3" json:"table_code"`                     //桌台编号
	IsCod             string             `protobuf:"bytes,38,opt,name=is_cod,json=isCod,proto3" json:"is_cod"`                                 //是否货到付款
	IsInvoiced        string             `protobuf:"bytes,39,opt,name=is_invoiced,json=isInvoiced,proto3" json:"is_invoiced"`                  //已开过发票
	IsRefunded        string             `protobuf:"bytes,40,opt,name=is_refunded,json=isRefunded,proto3" json:"is_refunded"`                  //已产生退款
	IsModifyAddress   string             `protobuf:"bytes,41,opt,name=is_modify_address,json=isModifyAddress,proto3" json:"is_modify_address"` //已修改地址
	CartIds           []int64            `protobuf:"varint,42,rep,packed,name=cart_ids,json=cartIds,proto3" json:"cart_ids"`                   //购物车ids
	PaymentId         int32              `protobuf:"varint,43,opt,name=payment_id,json=paymentId,proto3" json:"payment_id"`                    //支付ID
	PayType           string             `protobuf:"bytes,44,opt,name=pay_type,json=payType,proto3" json:"pay_type"`                           //支付类型
	PayChannel        string             `protobuf:"bytes,45,opt,name=pay_channel,json=payChannel,proto3" json:"pay_channel"`                  //支付通道
	FromType          string             `protobuf:"bytes,46,opt,name=from_type,json=fromType,proto3" json:"from_type"`                        //来源类型
	RoutineType       string             `protobuf:"bytes,47,opt,name=routine_type,json=routineType,proto3" json:"routine_type"`               //来源小程序类型
	OutSystemId       string             `protobuf:"bytes,48,opt,name=out_system_id,json=outSystemId,proto3" json:"out_system_id"`             //外部系统ID
	PayStatus         string             `protobuf:"bytes,49,opt,name=pay_status,json=payStatus,proto3" json:"pay_status"`                     //支付状态
	GainIntegral      int64              `protobuf:"varint,50,opt,name=gain_integral,json=gainIntegral,proto3" json:"gain_integral"`           //消费赚取积分
	UseIntegral       int64              `protobuf:"varint,51,opt,name=use_integral,json=useIntegral,proto3" json:"use_integral"`              //使用积分
	BackIntegral      int64              `protobuf:"varint,52,opt,name=back_integral,json=backIntegral,proto3" json:"back_integral"`           //退回积分
	IsStockUp         string             `protobuf:"bytes,53,opt,name=is_stock_up,json=isStockUp,proto3" json:"is_stock_up"`                   //是否备货中
	RefundStatus      string             `protobuf:"bytes,54,opt,name=refund_status,json=refundStatus,proto3" json:"refund_status"`            //退款状态
	RefundType        int32              `protobuf:"varint,55,opt,name=refund_type,json=refundType,proto3" json:"refund_type"`                 //退款类型
	CombinationId     int64              `protobuf:"varint,56,opt,name=combination_id,json=combinationId,proto3" json:"combination_id"`        //拼团商品id
	PinkId            int64              `protobuf:"varint,57,opt,name=pink_id,json=pinkId,proto3" json:"pink_id"`                             //拼团id
	SeckillId         int64              `protobuf:"varint,58,opt,name=seckill_id,json=seckillId,proto3" json:"seckill_id"`                    //秒杀商品ID
	BargainId         int64              `protobuf:"varint,59,opt,name=bargain_id,json=bargainId,proto3" json:"bargain_id"`                    //砍价id
	AdvanceId         int64              `protobuf:"varint,60,opt,name=advance_id,json=advanceId,proto3" json:"advance_id"`                    //预售商品ID
	SpreadUid         int64              `protobuf:"varint,61,opt,name=spread_uid,json=spreadUid,proto3" json:"spread_uid"`                    //推广人ID
	SpreadTwoUid      int64              `protobuf:"varint,62,opt,name=spread_two_uid,json=spreadTwoUid,proto3" json:"spread_two_uid"`         //上级推广人ID
	IsGift            string             `protobuf:"bytes,63,opt,name=is_gift,json=isGift,proto3" json:"is_gift"`                              //是否礼品订单
	GiftPrice         int64              `protobuf:"varint,64,opt,name=gift_price,json=giftPrice,proto3" json:"gift_price"`                    //礼品附加费
	GiftUid           int64              `protobuf:"varint,65,opt,name=gift_uid,json=giftUid,proto3" json:"gift_uid"`                          //接受礼品用户ID
	GiftMark          string             `protobuf:"bytes,66,opt,name=gift_mark,json=giftMark,proto3" json:"gift_mark"`                        //礼物留言
	Status            string             `protobuf:"bytes,67,opt,name=status,proto3" json:"status"`                                            //订单状态
	AuditTime         int64              `protobuf:"varint,68,opt,name=audit_time,json=auditTime,proto3" json:"audit_time"`                    //审核时间
	PayUid            int64              `protobuf:"varint,69,opt,name=pay_uid,json=payUid,proto3" json:"pay_uid"`                             //支付用户ID
	PayTime           int64              `protobuf:"varint,70,opt,name=pay_time,json=payTime,proto3" json:"pay_time"`                          //确认时间
	DeliveryTime      int64              `protobuf:"varint,71,opt,name=delivery_time,json=deliveryTime,proto3" json:"delivery_time"`           //确认时间
	CollectTime       int64              `protobuf:"varint,72,opt,name=collect_time,json=collectTime,proto3" json:"collect_time"`              //收货时间
	CancelTime        int64              `protobuf:"varint,73,opt,name=cancel_time,json=cancelTime,proto3" json:"cancel_time"`                 //取消时间
	CloseTime         int64              `protobuf:"varint,74,opt,name=close_time,json=closeTime,proto3" json:"close_time"`                    //退款完成时间
	CommentTime       int64              `protobuf:"varint,75,opt,name=comment_time,json=commentTime,proto3" json:"comment_time"`              //订单完成时间
	UpdatedAt         int64              `protobuf:"varint,76,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`                    //创建时间
	CreatedAt         int64              `protobuf:"varint,77,opt,name=created_at,json=createdAt,proto3" json:"created_at"`                    //修改时间
	DeletedAt         string             `protobuf:"bytes,78,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at"`                     //删除时间
	IsCancel          string             `protobuf:"bytes,79,opt,name=is_cancel,json=isCancel,proto3" json:"is_cancel"`                        //是否已取消
	Address           *OrderAddress      `protobuf:"bytes,80,opt,name=address,proto3" json:"address"`
	Member            *MemberInfo        `protobuf:"bytes,81,opt,name=member,proto3" json:"member"`
	Payment           *PaymentInfo       `protobuf:"bytes,82,opt,name=payment,proto3" json:"payment"`
	Details           []*OrderDetail     `protobuf:"bytes,83,rep,name=details,proto3" json:"details"`
	Packages          []*DeliveryOrder   `protobuf:"bytes,87,rep,name=packages,proto3" json:"packages"`
	Metas             map[string]string  `protobuf:"bytes,85,rep,name=metas,proto3" json:"metas" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	AdminAction       *OrderAdminCommand `protobuf:"bytes,88,opt,name=adminAction,proto3" json:"adminAction"`
	UserAction        *OrderUserAction   `protobuf:"bytes,89,opt,name=userAction,proto3" json:"userAction"`
	ShowStatus        *OrderShowStatus   `protobuf:"bytes,91,opt,name=showStatus,proto3" json:"showStatus"` //显示状态
	ProgressInfo      *OrderProgress     `protobuf:"bytes,93,opt,name=progress_info,json=progressInfo,proto3" json:"progress_info"`
	Paid              bool               `protobuf:"varint,95,opt,name=paid,proto3" json:"paid"`                                                      //已支付
	IsApplyRefund     bool               `protobuf:"varint,97,opt,name=is_apply_refund,json=isApplyRefund,proto3" json:"is_apply_refund"`             //是否允许申请退款
	IsRefundAvailable bool               `protobuf:"varint,98,opt,name=is_refund_available,json=isRefundAvailable,proto3" json:"is_refund_available"` //是否可售后服务
	HelpInfo          *OrderPayHelpInfo  `protobuf:"bytes,99,opt,name=help_info,json=helpInfo,proto3" json:"help_info"`
	GiftUserInfo      *OrderGiftUserInfo `protobuf:"bytes,100,opt,name=gift_user_info,json=giftUserInfo,proto3" json:"gift_user_info"`
	//--ext---
	FromTypeName     string `protobuf:"bytes,101,opt,name=from_type_name,json=fromTypeName,proto3" json:"from_type_name"`             //终端类型名称
	RoutineTypeName  string `protobuf:"bytes,102,opt,name=routine_type_name,json=routineTypeName,proto3" json:"routine_type_name"`    //小程序名称
	PayTypeName      string `protobuf:"bytes,103,opt,name=pay_type_name,json=payTypeName,proto3" json:"pay_type_name"`                //支付类型名称
	StatusName       string `protobuf:"bytes,104,opt,name=status_name,json=statusName,proto3" json:"status_name"`                     //状态名称
	StatusColor      string `protobuf:"bytes,105,opt,name=status_color,json=statusColor,proto3" json:"status_color"`                  //状态颜色
	PayStatusName    string `protobuf:"bytes,106,opt,name=pay_status_name,json=payStatusName,proto3" json:"pay_status_name"`          //支付状态名称
	RefundStatusName string `protobuf:"bytes,107,opt,name=refund_status_name,json=refundStatusName,proto3" json:"refund_status_name"` //退款状态名称
	RefundTypeName   string `protobuf:"bytes,108,opt,name=refund_type_name,json=refundTypeName,proto3" json:"refund_type_name"`       //退款类型名称
	ShippingTypeName string `protobuf:"bytes,109,opt,name=shipping_type_name,json=shippingTypeName,proto3" json:"shipping_type_name"` //配送类型名称
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_orderService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_orderService_proto_rawDescGZIP(), []int{0}
}

func (x *Order) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Order) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *Order) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Order) GetVirtualType() string {
	if x != nil {
		return x.VirtualType
	}
	return ""
}

func (x *Order) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *Order) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *Order) GetRealstoreId() int64 {
	if x != nil {
		return x.RealstoreId
	}
	return 0
}

func (x *Order) GetClerkId() int64 {
	if x != nil {
		return x.ClerkId
	}
	return 0
}

func (x *Order) GetTotalCount() float32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

func (x *Order) GetTotalCountNum() int64 {
	if x != nil {
		return x.TotalCountNum
	}
	return 0
}

func (x *Order) GetTotalCountWgt() int64 {
	if x != nil {
		return x.TotalCountWgt
	}
	return 0
}

func (x *Order) GetTotalPrice() int64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *Order) GetTotalPostage() int64 {
	if x != nil {
		return x.TotalPostage
	}
	return 0
}

func (x *Order) GetIncreaseAmount() int64 {
	if x != nil {
		return x.IncreaseAmount
	}
	return 0
}

func (x *Order) GetDiscountAmount() int64 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *Order) GetFreightPrice() int64 {
	if x != nil {
		return x.FreightPrice
	}
	return 0
}

func (x *Order) GetPayPostage() int64 {
	if x != nil {
		return x.PayPostage
	}
	return 0
}

func (x *Order) GetPayPrice() int64 {
	if x != nil {
		return x.PayPrice
	}
	return 0
}

func (x *Order) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Order) GetDeductionPrice() int64 {
	if x != nil {
		return x.DeductionPrice
	}
	return 0
}

func (x *Order) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *Order) GetCouponPrice() int64 {
	if x != nil {
		return x.CouponPrice
	}
	return 0
}

func (x *Order) GetIsModifyPrice() string {
	if x != nil {
		return x.IsModifyPrice
	}
	return ""
}

func (x *Order) GetModifyPrice() int64 {
	if x != nil {
		return x.ModifyPrice
	}
	return 0
}

func (x *Order) GetCost() int64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *Order) GetPaidAmount() int64 {
	if x != nil {
		return x.PaidAmount
	}
	return 0
}

func (x *Order) GetRefundedAmount() int64 {
	if x != nil {
		return x.RefundedAmount
	}
	return 0
}

func (x *Order) GetShippingType() int32 {
	if x != nil {
		return x.ShippingType
	}
	return 0
}

func (x *Order) GetVerifyCode() string {
	if x != nil {
		return x.VerifyCode
	}
	return ""
}

func (x *Order) GetIsMultiPackage() string {
	if x != nil {
		return x.IsMultiPackage
	}
	return ""
}

func (x *Order) GetShipStatus() string {
	if x != nil {
		return x.ShipStatus
	}
	return ""
}

func (x *Order) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Order) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *Order) GetUserNote() string {
	if x != nil {
		return x.UserNote
	}
	return ""
}

func (x *Order) GetSellerNote() string {
	if x != nil {
		return x.SellerNote
	}
	return ""
}

func (x *Order) GetTableCode() string {
	if x != nil {
		return x.TableCode
	}
	return ""
}

func (x *Order) GetIsCod() string {
	if x != nil {
		return x.IsCod
	}
	return ""
}

func (x *Order) GetIsInvoiced() string {
	if x != nil {
		return x.IsInvoiced
	}
	return ""
}

func (x *Order) GetIsRefunded() string {
	if x != nil {
		return x.IsRefunded
	}
	return ""
}

func (x *Order) GetIsModifyAddress() string {
	if x != nil {
		return x.IsModifyAddress
	}
	return ""
}

func (x *Order) GetCartIds() []int64 {
	if x != nil {
		return x.CartIds
	}
	return nil
}

func (x *Order) GetPaymentId() int32 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

func (x *Order) GetPayType() string {
	if x != nil {
		return x.PayType
	}
	return ""
}

func (x *Order) GetPayChannel() string {
	if x != nil {
		return x.PayChannel
	}
	return ""
}

func (x *Order) GetFromType() string {
	if x != nil {
		return x.FromType
	}
	return ""
}

func (x *Order) GetRoutineType() string {
	if x != nil {
		return x.RoutineType
	}
	return ""
}

func (x *Order) GetOutSystemId() string {
	if x != nil {
		return x.OutSystemId
	}
	return ""
}

func (x *Order) GetPayStatus() string {
	if x != nil {
		return x.PayStatus
	}
	return ""
}

func (x *Order) GetGainIntegral() int64 {
	if x != nil {
		return x.GainIntegral
	}
	return 0
}

func (x *Order) GetUseIntegral() int64 {
	if x != nil {
		return x.UseIntegral
	}
	return 0
}

func (x *Order) GetBackIntegral() int64 {
	if x != nil {
		return x.BackIntegral
	}
	return 0
}

func (x *Order) GetIsStockUp() string {
	if x != nil {
		return x.IsStockUp
	}
	return ""
}

func (x *Order) GetRefundStatus() string {
	if x != nil {
		return x.RefundStatus
	}
	return ""
}

func (x *Order) GetRefundType() int32 {
	if x != nil {
		return x.RefundType
	}
	return 0
}

func (x *Order) GetCombinationId() int64 {
	if x != nil {
		return x.CombinationId
	}
	return 0
}

func (x *Order) GetPinkId() int64 {
	if x != nil {
		return x.PinkId
	}
	return 0
}

func (x *Order) GetSeckillId() int64 {
	if x != nil {
		return x.SeckillId
	}
	return 0
}

func (x *Order) GetBargainId() int64 {
	if x != nil {
		return x.BargainId
	}
	return 0
}

func (x *Order) GetAdvanceId() int64 {
	if x != nil {
		return x.AdvanceId
	}
	return 0
}

func (x *Order) GetSpreadUid() int64 {
	if x != nil {
		return x.SpreadUid
	}
	return 0
}

func (x *Order) GetSpreadTwoUid() int64 {
	if x != nil {
		return x.SpreadTwoUid
	}
	return 0
}

func (x *Order) GetIsGift() string {
	if x != nil {
		return x.IsGift
	}
	return ""
}

func (x *Order) GetGiftPrice() int64 {
	if x != nil {
		return x.GiftPrice
	}
	return 0
}

func (x *Order) GetGiftUid() int64 {
	if x != nil {
		return x.GiftUid
	}
	return 0
}

func (x *Order) GetGiftMark() string {
	if x != nil {
		return x.GiftMark
	}
	return ""
}

func (x *Order) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Order) GetAuditTime() int64 {
	if x != nil {
		return x.AuditTime
	}
	return 0
}

func (x *Order) GetPayUid() int64 {
	if x != nil {
		return x.PayUid
	}
	return 0
}

func (x *Order) GetPayTime() int64 {
	if x != nil {
		return x.PayTime
	}
	return 0
}

func (x *Order) GetDeliveryTime() int64 {
	if x != nil {
		return x.DeliveryTime
	}
	return 0
}

func (x *Order) GetCollectTime() int64 {
	if x != nil {
		return x.CollectTime
	}
	return 0
}

func (x *Order) GetCancelTime() int64 {
	if x != nil {
		return x.CancelTime
	}
	return 0
}

func (x *Order) GetCloseTime() int64 {
	if x != nil {
		return x.CloseTime
	}
	return 0
}

func (x *Order) GetCommentTime() int64 {
	if x != nil {
		return x.CommentTime
	}
	return 0
}

func (x *Order) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Order) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Order) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

func (x *Order) GetIsCancel() string {
	if x != nil {
		return x.IsCancel
	}
	return ""
}

func (x *Order) GetAddress() *OrderAddress {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *Order) GetMember() *MemberInfo {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *Order) GetPayment() *PaymentInfo {
	if x != nil {
		return x.Payment
	}
	return nil
}

func (x *Order) GetDetails() []*OrderDetail {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *Order) GetPackages() []*DeliveryOrder {
	if x != nil {
		return x.Packages
	}
	return nil
}

func (x *Order) GetMetas() map[string]string {
	if x != nil {
		return x.Metas
	}
	return nil
}

func (x *Order) GetAdminAction() *OrderAdminCommand {
	if x != nil {
		return x.AdminAction
	}
	return nil
}

func (x *Order) GetUserAction() *OrderUserAction {
	if x != nil {
		return x.UserAction
	}
	return nil
}

func (x *Order) GetShowStatus() *OrderShowStatus {
	if x != nil {
		return x.ShowStatus
	}
	return nil
}

func (x *Order) GetProgressInfo() *OrderProgress {
	if x != nil {
		return x.ProgressInfo
	}
	return nil
}

func (x *Order) GetPaid() bool {
	if x != nil {
		return x.Paid
	}
	return false
}

func (x *Order) GetIsApplyRefund() bool {
	if x != nil {
		return x.IsApplyRefund
	}
	return false
}

func (x *Order) GetIsRefundAvailable() bool {
	if x != nil {
		return x.IsRefundAvailable
	}
	return false
}

func (x *Order) GetHelpInfo() *OrderPayHelpInfo {
	if x != nil {
		return x.HelpInfo
	}
	return nil
}

func (x *Order) GetGiftUserInfo() *OrderGiftUserInfo {
	if x != nil {
		return x.GiftUserInfo
	}
	return nil
}

func (x *Order) GetFromTypeName() string {
	if x != nil {
		return x.FromTypeName
	}
	return ""
}

func (x *Order) GetRoutineTypeName() string {
	if x != nil {
		return x.RoutineTypeName
	}
	return ""
}

func (x *Order) GetPayTypeName() string {
	if x != nil {
		return x.PayTypeName
	}
	return ""
}

func (x *Order) GetStatusName() string {
	if x != nil {
		return x.StatusName
	}
	return ""
}

func (x *Order) GetStatusColor() string {
	if x != nil {
		return x.StatusColor
	}
	return ""
}

func (x *Order) GetPayStatusName() string {
	if x != nil {
		return x.PayStatusName
	}
	return ""
}

func (x *Order) GetRefundStatusName() string {
	if x != nil {
		return x.RefundStatusName
	}
	return ""
}

func (x *Order) GetRefundTypeName() string {
	if x != nil {
		return x.RefundTypeName
	}
	return ""
}

func (x *Order) GetShippingTypeName() string {
	if x != nil {
		return x.ShippingTypeName
	}
	return ""
}

// 订单礼物人信息
type OrderGiftUserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GiftUid      string `protobuf:"bytes,1,opt,name=gift_uid,json=giftUid,proto3" json:"gift_uid"`                //礼物人ID
	GiftNickname string `protobuf:"bytes,2,opt,name=gift_nickname,json=giftNickname,proto3" json:"gift_nickname"` //礼物人昵称
	GiftAvatar   string `protobuf:"bytes,3,opt,name=gift_avatar,json=giftAvatar,proto3" json:"gift_avatar"`       //礼物人头像
}

func (x *OrderGiftUserInfo) Reset() {
	*x = OrderGiftUserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderGiftUserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderGiftUserInfo) ProtoMessage() {}

func (x *OrderGiftUserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_orderService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderGiftUserInfo.ProtoReflect.Descriptor instead.
func (*OrderGiftUserInfo) Descriptor() ([]byte, []int) {
	return file_orderService_proto_rawDescGZIP(), []int{1}
}

func (x *OrderGiftUserInfo) GetGiftUid() string {
	if x != nil {
		return x.GiftUid
	}
	return ""
}

func (x *OrderGiftUserInfo) GetGiftNickname() string {
	if x != nil {
		return x.GiftNickname
	}
	return ""
}

func (x *OrderGiftUserInfo) GetGiftAvatar() string {
	if x != nil {
		return x.GiftAvatar
	}
	return ""
}

// 订单代付信息
type OrderPayHelpInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PayUid      string `protobuf:"bytes,1,opt,name=pay_uid,json=payUid,proto3" json:"pay_uid"`                //代付人ID
	PayNickname string `protobuf:"bytes,2,opt,name=pay_nickname,json=payNickname,proto3" json:"pay_nickname"` //代付人昵称
	PayAvatar   string `protobuf:"bytes,3,opt,name=pay_avatar,json=payAvatar,proto3" json:"pay_avatar"`       //代付人头像
	HelpStatus  string `protobuf:"bytes,4,opt,name=help_status,json=helpStatus,proto3" json:"help_status"`    //代付状态
}

func (x *OrderPayHelpInfo) Reset() {
	*x = OrderPayHelpInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPayHelpInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPayHelpInfo) ProtoMessage() {}

func (x *OrderPayHelpInfo) ProtoReflect() protoreflect.Message {
	mi := &file_orderService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPayHelpInfo.ProtoReflect.Descriptor instead.
func (*OrderPayHelpInfo) Descriptor() ([]byte, []int) {
	return file_orderService_proto_rawDescGZIP(), []int{2}
}

func (x *OrderPayHelpInfo) GetPayUid() string {
	if x != nil {
		return x.PayUid
	}
	return ""
}

func (x *OrderPayHelpInfo) GetPayNickname() string {
	if x != nil {
		return x.PayNickname
	}
	return ""
}

func (x *OrderPayHelpInfo) GetPayAvatar() string {
	if x != nil {
		return x.PayAvatar
	}
	return ""
}

func (x *OrderPayHelpInfo) GetHelpStatus() string {
	if x != nil {
		return x.HelpStatus
	}
	return ""
}

// 订单详情步骤
type OrderProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Current *OrderProgressStep   `protobuf:"bytes,1,opt,name=current,proto3" json:"current"`
	Steps   []*OrderProgressStep `protobuf:"bytes,2,rep,name=steps,proto3" json:"steps"`
}

func (x *OrderProgress) Reset() {
	*x = OrderProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderProgress) ProtoMessage() {}

func (x *OrderProgress) ProtoReflect() protoreflect.Message {
	mi := &file_orderService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderProgress.ProtoReflect.Descriptor instead.
func (*OrderProgress) Descriptor() ([]byte, []int) {
	return file_orderService_proto_rawDescGZIP(), []int{3}
}

func (x *OrderProgress) GetCurrent() *OrderProgressStep {
	if x != nil {
		return x.Current
	}
	return nil
}

func (x *OrderProgress) GetSteps() []*OrderProgressStep {
	if x != nil {
		return x.Steps
	}
	return nil
}

// 管理员命令
type OrderAdminCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasOrderConfirm  bool `protobuf:"varint,1,opt,name=hasOrderConfirm,proto3" json:"hasOrderConfirm"`   //允许确认订单
	HasOrderDelivery bool `protobuf:"varint,2,opt,name=hasOrderDelivery,proto3" json:"hasOrderDelivery"` //允许订单发货
	HasOrderCancel   bool `protobuf:"varint,3,opt,name=hasOrderCancel,proto3" json:"hasOrderCancel"`     // 允许取消订单
	HasOrderDelete   bool `protobuf:"varint,4,opt,name=hasOrderDelete,proto3" json:"hasOrderDelete"`     // 允许删除订单
	HasOfflinePaid   bool `protobuf:"varint,5,opt,name=hasOfflinePaid,proto3" json:"hasOfflinePaid"`     // 允许线下支付确认
	HasModifyAddress bool `protobuf:"varint,6,opt,name=hasModifyAddress,proto3" json:"hasModifyAddress"` // 允许修改地址
	HasModifyPrice   bool `protobuf:"varint,7,opt,name=hasModifyPrice,proto3" json:"hasModifyPrice"`     // 允许订单改价
}

func (x *OrderAdminCommand) Reset() {
	*x = OrderAdminCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderAdminCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderAdminCommand) ProtoMessage() {}

func (x *OrderAdminCommand) ProtoReflect() protoreflect.Message {
	mi := &file_orderService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderAdminCommand.ProtoReflect.Descriptor instead.
func (*OrderAdminCommand) Descriptor() ([]byte, []int) {
	return file_orderService_proto_rawDescGZIP(), []int{4}
}

func (x *OrderAdminCommand) GetHasOrderConfirm() bool {
	if x != nil {
		return x.HasOrderConfirm
	}
	return false
}

func (x *OrderAdminCommand) GetHasOrderDelivery() bool {
	if x != nil {
		return x.HasOrderDelivery
	}
	return false
}

func (x *OrderAdminCommand) GetHasOrderCancel() bool {
	if x != nil {
		return x.HasOrderCancel
	}
	return false
}

func (x *OrderAdminCommand) GetHasOrderDelete() bool {
	if x != nil {
		return x.HasOrderDelete
	}
	return false
}

func (x *OrderAdminCommand) GetHasOfflinePaid() bool {
	if x != nil {
		return x.HasOfflinePaid
	}
	return false
}

func (x *OrderAdminCommand) GetHasModifyAddress() bool {
	if x != nil {
		return x.HasModifyAddress
	}
	return false
}

func (x *OrderAdminCommand) GetHasModifyPrice() bool {
	if x != nil {
		return x.HasModifyPrice
	}
	return false
}

// 用户命令
type OrderUserAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HasOrderPay             bool `protobuf:"varint,1,opt,name=hasOrderPay,proto3" json:"hasOrderPay"`                         //订单支付
	HasOrderCollect         bool `protobuf:"varint,2,opt,name=hasOrderCollect,proto3" json:"hasOrderCollect"`                 //订单收货
	HasOrderCancel          bool `protobuf:"varint,3,opt,name=hasOrderCancel,proto3" json:"hasOrderCancel"`                   // 取消订单
	HasOrderDelete          bool `protobuf:"varint,4,opt,name=hasOrderDelete,proto3" json:"hasOrderDelete"`                   // 删除订单
	HasOrderComment         bool `protobuf:"varint,7,opt,name=hasOrderComment,proto3" json:"hasOrderComment"`                 // 订单评论
	HasLogisticsQuery       bool `protobuf:"varint,5,opt,name=hasLogisticsQuery,proto3" json:"hasLogisticsQuery"`             // 发货物流查询
	HasRefundLogisticsQuery bool `protobuf:"varint,6,opt,name=hasRefundLogisticsQuery,proto3" json:"hasRefundLogisticsQuery"` // 退货物流查询
	HasWriteReturn          bool `protobuf:"varint,8,opt,name=hasWriteReturn,proto3" json:"hasWriteReturn"`                   //填写退货信息
	HasBuyAgain             bool `protobuf:"varint,9,opt,name=hasBuyAgain,proto3" json:"hasBuyAgain"`                         //再次购买
	HasRefundApply          bool `protobuf:"varint,10,opt,name=hasRefundApply,proto3" json:"hasRefundApply"`                  //申请退款
	HasRefundCancel         bool `protobuf:"varint,11,opt,name=hasRefundCancel,proto3" json:"hasRefundCancel"`                //取消申请退款
	HasInvoiceApply         bool `protobuf:"varint,12,opt,name=hasInvoiceApply,proto3" json:"hasInvoiceApply"`                //开票申请
	HasInvoiceView          bool `protobuf:"varint,13,opt,name=hasInvoiceView,proto3" json:"hasInvoiceView"`                  //发票查看
}

func (x *OrderUserAction) Reset() {
	*x = OrderUserAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderUserAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderUserAction) ProtoMessage() {}

func (x *OrderUserAction) ProtoReflect() protoreflect.Message {
	mi := &file_orderService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderUserAction.ProtoReflect.Descriptor instead.
func (*OrderUserAction) Descriptor() ([]byte, []int) {
	return file_orderService_proto_rawDescGZIP(), []int{5}
}

func (x *OrderUserAction) GetHasOrderPay() bool {
	if x != nil {
		return x.HasOrderPay
	}
	return false
}

func (x *OrderUserAction) GetHasOrderCollect() bool {
	if x != nil {
		return x.HasOrderCollect
	}
	return false
}

func (x *OrderUserAction) GetHasOrderCancel() bool {
	if x != nil {
		return x.HasOrderCancel
	}
	return false
}

func (x *OrderUserAction) GetHasOrderDelete() bool {
	if x != nil {
		return x.HasOrderDelete
	}
	return false
}

func (x *OrderUserAction) GetHasOrderComment() bool {
	if x != nil {
		return x.HasOrderComment
	}
	return false
}

func (x *OrderUserAction) GetHasLogisticsQuery() bool {
	if x != nil {
		return x.HasLogisticsQuery
	}
	return false
}

func (x *OrderUserAction) GetHasRefundLogisticsQuery() bool {
	if x != nil {
		return x.HasRefundLogisticsQuery
	}
	return false
}

func (x *OrderUserAction) GetHasWriteReturn() bool {
	if x != nil {
		return x.HasWriteReturn
	}
	return false
}

func (x *OrderUserAction) GetHasBuyAgain() bool {
	if x != nil {
		return x.HasBuyAgain
	}
	return false
}

func (x *OrderUserAction) GetHasRefundApply() bool {
	if x != nil {
		return x.HasRefundApply
	}
	return false
}

func (x *OrderUserAction) GetHasRefundCancel() bool {
	if x != nil {
		return x.HasRefundCancel
	}
	return false
}

func (x *OrderUserAction) GetHasInvoiceApply() bool {
	if x != nil {
		return x.HasInvoiceApply
	}
	return false
}

func (x *OrderUserAction) GetHasInvoiceView() bool {
	if x != nil {
		return x.HasInvoiceView
	}
	return false
}

// 显示状态
type OrderShowStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Class        string `protobuf:"bytes,1,opt,name=class,proto3" json:"class"`                          //如:nobuy
	DeliveryType string `protobuf:"bytes,2,opt,name=deliveryType,proto3" json:"deliveryType"`            //配送方式
	Msg          string `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg"`                              //提示信息
	PayType      string `protobuf:"bytes,4,opt,name=payType,proto3" json:"payType"`                      //支付类型
	Title        string `protobuf:"bytes,5,opt,name=title,proto3" json:"title"`                          //标题
	Type         int64  `protobuf:"varint,6,opt,name=type,proto3" json:"type"`                           //类型
	StatusPic    string `protobuf:"bytes,8,opt,name=status_pic,json=statusPic,proto3" json:"status_pic"` //状态图片
}

func (x *OrderShowStatus) Reset() {
	*x = OrderShowStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderShowStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderShowStatus) ProtoMessage() {}

func (x *OrderShowStatus) ProtoReflect() protoreflect.Message {
	mi := &file_orderService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderShowStatus.ProtoReflect.Descriptor instead.
func (*OrderShowStatus) Descriptor() ([]byte, []int) {
	return file_orderService_proto_rawDescGZIP(), []int{6}
}

func (x *OrderShowStatus) GetClass() string {
	if x != nil {
		return x.Class
	}
	return ""
}

func (x *OrderShowStatus) GetDeliveryType() string {
	if x != nil {
		return x.DeliveryType
	}
	return ""
}

func (x *OrderShowStatus) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *OrderShowStatus) GetPayType() string {
	if x != nil {
		return x.PayType
	}
	return ""
}

func (x *OrderShowStatus) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OrderShowStatus) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *OrderShowStatus) GetStatusPic() string {
	if x != nil {
		return x.StatusPic
	}
	return ""
}

type OrderPayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId    int64   `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id"`
	OrderNo    string  `protobuf:"bytes,2,opt,name=order_no,json=orderNo,proto3" json:"order_no"`
	StrIds     string  `protobuf:"bytes,3,opt,name=str_ids,json=strIds,proto3" json:"str_ids"`
	ClientType string  `protobuf:"bytes,4,opt,name=client_type,json=clientType,proto3" json:"client_type"`
	PaymentId  int32   `protobuf:"varint,5,opt,name=payment_id,json=paymentId,proto3" json:"payment_id"`
	PayType    string  `protobuf:"bytes,6,opt,name=pay_type,json=payType,proto3" json:"pay_type"`    //支付类型
	Proxy      bool    `protobuf:"varint,7,opt,name=proxy,proto3" json:"proxy"`                      //代他人支付
	AuthCode   string  `protobuf:"bytes,8,opt,name=auth_code,json=authCode,proto3" json:"auth_code"` //付款码
	MemberId   int64   `protobuf:"varint,9,opt,name=member_id,json=memberId,proto3" json:"member_id"`
	Ids        []int64 `protobuf:"varint,12,rep,packed,name=ids,proto3" json:"ids"`
}

func (x *OrderPayRequest) Reset() {
	*x = OrderPayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPayRequest) ProtoMessage() {}

func (x *OrderPayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orderService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPayRequest.ProtoReflect.Descriptor instead.
func (*OrderPayRequest) Descriptor() ([]byte, []int) {
	return file_orderService_proto_rawDescGZIP(), []int{7}
}

func (x *OrderPayRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderPayRequest) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *OrderPayRequest) GetStrIds() string {
	if x != nil {
		return x.StrIds
	}
	return ""
}

func (x *OrderPayRequest) GetClientType() string {
	if x != nil {
		return x.ClientType
	}
	return ""
}

func (x *OrderPayRequest) GetPaymentId() int32 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

func (x *OrderPayRequest) GetPayType() string {
	if x != nil {
		return x.PayType
	}
	return ""
}

func (x *OrderPayRequest) GetProxy() bool {
	if x != nil {
		return x.Proxy
	}
	return false
}

func (x *OrderPayRequest) GetAuthCode() string {
	if x != nil {
		return x.AuthCode
	}
	return ""
}

func (x *OrderPayRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *OrderPayRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

// 下线支付确认请求
type OfflinePaidRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransactionNo string `protobuf:"bytes,1,opt,name=transaction_no,json=transactionNo,proto3" json:"transaction_no"` //交易单号
	Channel       string `protobuf:"bytes,2,opt,name=channel,proto3" json:"channel"`                                  //收款渠道
	Recipient     string `protobuf:"bytes,3,opt,name=recipient,proto3" json:"recipient"`                              //收款人
	Account       string `protobuf:"bytes,4,opt,name=account,proto3" json:"account"`                                  //收款账号
	Date          int64  `protobuf:"varint,5,opt,name=date,proto3" json:"date"`                                       //收款日期
	Remark        string `protobuf:"bytes,6,opt,name=remark,proto3" json:"remark"`                                    //备注信息
	OrderId       int64  `protobuf:"varint,7,opt,name=order_id,json=orderId,proto3" json:"order_id"`                  //订单ID
	OrderNo       string `protobuf:"bytes,8,opt,name=order_no,json=orderNo,proto3" json:"order_no"`                   //订单号
}

func (x *OfflinePaidRequest) Reset() {
	*x = OfflinePaidRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OfflinePaidRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OfflinePaidRequest) ProtoMessage() {}

func (x *OfflinePaidRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orderService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OfflinePaidRequest.ProtoReflect.Descriptor instead.
func (*OfflinePaidRequest) Descriptor() ([]byte, []int) {
	return file_orderService_proto_rawDescGZIP(), []int{8}
}

func (x *OfflinePaidRequest) GetTransactionNo() string {
	if x != nil {
		return x.TransactionNo
	}
	return ""
}

func (x *OfflinePaidRequest) GetChannel() string {
	if x != nil {
		return x.Channel
	}
	return ""
}

func (x *OfflinePaidRequest) GetRecipient() string {
	if x != nil {
		return x.Recipient
	}
	return ""
}

func (x *OfflinePaidRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *OfflinePaidRequest) GetDate() int64 {
	if x != nil {
		return x.Date
	}
	return 0
}

func (x *OfflinePaidRequest) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

func (x *OfflinePaidRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OfflinePaidRequest) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

// 订单请求参数
type OrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Top       int32    `protobuf:"varint,1,opt,name=top,proto3" json:"top"`
	Paged     int64    `protobuf:"varint,2,opt,name=paged,proto3" json:"paged"`
	PageSize  int64    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords  string   `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords"`
	Sorts     []string `protobuf:"bytes,5,rep,name=sorts,proto3" json:"sorts"`
	DateRange []string `protobuf:"bytes,6,rep,name=date_range,json=dateRange,proto3" json:"date_range"`
	Ids       []int64  `protobuf:"varint,7,rep,packed,name=ids,proto3" json:"ids"`
	Id        int64    `protobuf:"varint,8,opt,name=id,proto3" json:"id"`
	//以下为自定义参数
	Type            string `protobuf:"bytes,11,opt,name=type,proto3" json:"type"`                                                //订单类型
	MemberId        int64  `protobuf:"varint,12,opt,name=member_id,json=memberId,proto3" json:"member_id"`                       //买家ID
	ShopId          int64  `protobuf:"varint,13,opt,name=shop_id,json=shopId,proto3" json:"shop_id"`                             //多商户ID
	RealstoreId     int64  `protobuf:"varint,14,opt,name=realstore_id,json=realstoreId,proto3" json:"realstore_id"`              //多门店ID
	ClerkId         int64  `protobuf:"varint,15,opt,name=clerk_id,json=clerkId,proto3" json:"clerk_id"`                          //店员ID
	IsModifyPrice   string `protobuf:"bytes,16,opt,name=is_modify_price,json=isModifyPrice,proto3" json:"is_modify_price"`       //已修改价格
	IsMultiPackage  string `protobuf:"bytes,17,opt,name=is_multi_package,json=isMultiPackage,proto3" json:"is_multi_package"`    //多包裹发货
	IsDelivered     string `protobuf:"bytes,18,opt,name=is_delivered,json=isDelivered,proto3" json:"is_delivered"`               //已全部发货
	TableCode       string `protobuf:"bytes,19,opt,name=table_code,json=tableCode,proto3" json:"table_code"`                     //桌台编号
	IsCod           string `protobuf:"bytes,20,opt,name=is_cod,json=isCod,proto3" json:"is_cod"`                                 //是否货到付款
	IsInvoiced      string `protobuf:"bytes,21,opt,name=is_invoiced,json=isInvoiced,proto3" json:"is_invoiced"`                  //已开过发票
	IsRefunded      string `protobuf:"bytes,22,opt,name=is_refunded,json=isRefunded,proto3" json:"is_refunded"`                  //已产生退款
	IsModifyAddress string `protobuf:"bytes,23,opt,name=is_modify_address,json=isModifyAddress,proto3" json:"is_modify_address"` //已修改地址
	RoutineType     string `protobuf:"bytes,24,opt,name=routine_type,json=routineType,proto3" json:"routine_type"`               //小程序类型
	PayType         string `protobuf:"bytes,25,opt,name=pay_type,json=payType,proto3" json:"pay_type"`                           //支付类型
	FromType        string `protobuf:"bytes,26,opt,name=from_type,json=fromType,proto3" json:"from_type"`                        //客户端类型
	OutSystemId     string `protobuf:"bytes,27,opt,name=out_system_id,json=outSystemId,proto3" json:"out_system_id"`             //外部系统ID
	PayStatus       string `protobuf:"bytes,28,opt,name=pay_status,json=payStatus,proto3" json:"pay_status"`                     //支付状态
	CombinationId   int64  `protobuf:"varint,29,opt,name=combination_id,json=combinationId,proto3" json:"combination_id"`        //拼团商品id
	PinkId          int64  `protobuf:"varint,30,opt,name=pink_id,json=pinkId,proto3" json:"pink_id"`                             //拼团id
	SeckillId       int64  `protobuf:"varint,31,opt,name=seckill_id,json=seckillId,proto3" json:"seckill_id"`                    //秒杀商品ID
	BargainId       int64  `protobuf:"varint,32,opt,name=bargain_id,json=bargainId,proto3" json:"bargain_id"`                    //砍价id
	AdvanceId       int64  `protobuf:"varint,33,opt,name=advance_id,json=advanceId,proto3" json:"advance_id"`                    //预售商品ID
	SpreadUid       int64  `protobuf:"varint,34,opt,name=spread_uid,json=spreadUid,proto3" json:"spread_uid"`                    //推广人ID
	IsGift          string `protobuf:"bytes,35,opt,name=is_gift,json=isGift,proto3" json:"is_gift"`                              //是否礼品订单
	Status          string `protobuf:"bytes,36,opt,name=status,proto3" json:"status"`                                            //订单状态:0待支付, 1待发货, 2待收货, 3待评价, 4已完成, 5已关闭
	ShippingType    int32  `protobuf:"varint,37,opt,name=shipping_type,json=shippingType,proto3" json:"shipping_type"`           //配送类型
	//其它参数
	OrderNo    string `protobuf:"bytes,40,opt,name=order_no,json=orderNo,proto3" json:"order_no"`           //订单号
	ShipStatus string `protobuf:"bytes,41,opt,name=ship_status,json=shipStatus,proto3" json:"ship_status"`  //发货状态：1-待发货，2-已发货，3-已完成
	StatusType int32  `protobuf:"varint,42,opt,name=status_type,json=statusType,proto3" json:"status_type"` //状态类型：0-全部,1-待付款，2-待发货，3-待收货，4-待评价，
	SearchType string `protobuf:"bytes,43,opt,name=search_type,json=searchType,proto3" json:"search_type"`  //搜索类型：shipment 订单发货
}

func (x *OrderRequest) Reset() {
	*x = OrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderRequest) ProtoMessage() {}

func (x *OrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_orderService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderRequest.ProtoReflect.Descriptor instead.
func (*OrderRequest) Descriptor() ([]byte, []int) {
	return file_orderService_proto_rawDescGZIP(), []int{9}
}

func (x *OrderRequest) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *OrderRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *OrderRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *OrderRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *OrderRequest) GetSorts() []string {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *OrderRequest) GetDateRange() []string {
	if x != nil {
		return x.DateRange
	}
	return nil
}

func (x *OrderRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *OrderRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *OrderRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *OrderRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *OrderRequest) GetRealstoreId() int64 {
	if x != nil {
		return x.RealstoreId
	}
	return 0
}

func (x *OrderRequest) GetClerkId() int64 {
	if x != nil {
		return x.ClerkId
	}
	return 0
}

func (x *OrderRequest) GetIsModifyPrice() string {
	if x != nil {
		return x.IsModifyPrice
	}
	return ""
}

func (x *OrderRequest) GetIsMultiPackage() string {
	if x != nil {
		return x.IsMultiPackage
	}
	return ""
}

func (x *OrderRequest) GetIsDelivered() string {
	if x != nil {
		return x.IsDelivered
	}
	return ""
}

func (x *OrderRequest) GetTableCode() string {
	if x != nil {
		return x.TableCode
	}
	return ""
}

func (x *OrderRequest) GetIsCod() string {
	if x != nil {
		return x.IsCod
	}
	return ""
}

func (x *OrderRequest) GetIsInvoiced() string {
	if x != nil {
		return x.IsInvoiced
	}
	return ""
}

func (x *OrderRequest) GetIsRefunded() string {
	if x != nil {
		return x.IsRefunded
	}
	return ""
}

func (x *OrderRequest) GetIsModifyAddress() string {
	if x != nil {
		return x.IsModifyAddress
	}
	return ""
}

func (x *OrderRequest) GetRoutineType() string {
	if x != nil {
		return x.RoutineType
	}
	return ""
}

func (x *OrderRequest) GetPayType() string {
	if x != nil {
		return x.PayType
	}
	return ""
}

func (x *OrderRequest) GetFromType() string {
	if x != nil {
		return x.FromType
	}
	return ""
}

func (x *OrderRequest) GetOutSystemId() string {
	if x != nil {
		return x.OutSystemId
	}
	return ""
}

func (x *OrderRequest) GetPayStatus() string {
	if x != nil {
		return x.PayStatus
	}
	return ""
}

func (x *OrderRequest) GetCombinationId() int64 {
	if x != nil {
		return x.CombinationId
	}
	return 0
}

func (x *OrderRequest) GetPinkId() int64 {
	if x != nil {
		return x.PinkId
	}
	return 0
}

func (x *OrderRequest) GetSeckillId() int64 {
	if x != nil {
		return x.SeckillId
	}
	return 0
}

func (x *OrderRequest) GetBargainId() int64 {
	if x != nil {
		return x.BargainId
	}
	return 0
}

func (x *OrderRequest) GetAdvanceId() int64 {
	if x != nil {
		return x.AdvanceId
	}
	return 0
}

func (x *OrderRequest) GetSpreadUid() int64 {
	if x != nil {
		return x.SpreadUid
	}
	return 0
}

func (x *OrderRequest) GetIsGift() string {
	if x != nil {
		return x.IsGift
	}
	return ""
}

func (x *OrderRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OrderRequest) GetShippingType() int32 {
	if x != nil {
		return x.ShippingType
	}
	return 0
}

func (x *OrderRequest) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *OrderRequest) GetShipStatus() string {
	if x != nil {
		return x.ShipStatus
	}
	return ""
}

func (x *OrderRequest) GetStatusType() int32 {
	if x != nil {
		return x.StatusType
	}
	return 0
}

func (x *OrderRequest) GetSearchType() string {
	if x != nil {
		return x.SearchType
	}
	return ""
}

type OrderPayData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  string              `protobuf:"bytes,1,opt,name=status,proto3" json:"status"`                   //支付状态：success 成功,fail 失败, unknown 未知（需要查询确认）
	ErrCode int32               `protobuf:"varint,2,opt,name=err_code,json=errCode,proto3" json:"err_code"` //错误代码
	ErrDesc string              `protobuf:"bytes,3,opt,name=err_desc,json=errDesc,proto3" json:"err_desc"`  //错误代码描述
	Result  *OrderPayResultInfo `protobuf:"bytes,4,opt,name=result,proto3" json:"result"`
}

func (x *OrderPayData) Reset() {
	*x = OrderPayData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPayData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPayData) ProtoMessage() {}

func (x *OrderPayData) ProtoReflect() protoreflect.Message {
	mi := &file_orderService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPayData.ProtoReflect.Descriptor instead.
func (*OrderPayData) Descriptor() ([]byte, []int) {
	return file_orderService_proto_rawDescGZIP(), []int{10}
}

func (x *OrderPayData) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OrderPayData) GetErrCode() int32 {
	if x != nil {
		return x.ErrCode
	}
	return 0
}

func (x *OrderPayData) GetErrDesc() string {
	if x != nil {
		return x.ErrDesc
	}
	return ""
}

func (x *OrderPayData) GetResult() *OrderPayResultInfo {
	if x != nil {
		return x.Result
	}
	return nil
}

type OrderPayResultInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId  int64  `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id"`
	OrderNo  string `protobuf:"bytes,2,opt,name=order_no,json=orderNo,proto3" json:"order_no"`
	PayUrl   string `protobuf:"bytes,3,opt,name=pay_url,json=payUrl,proto3" json:"pay_url"`
	JsConfig []byte `protobuf:"bytes,4,opt,name=jsConfig,proto3" json:"jsConfig"`
}

func (x *OrderPayResultInfo) Reset() {
	*x = OrderPayResultInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderPayResultInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderPayResultInfo) ProtoMessage() {}

func (x *OrderPayResultInfo) ProtoReflect() protoreflect.Message {
	mi := &file_orderService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderPayResultInfo.ProtoReflect.Descriptor instead.
func (*OrderPayResultInfo) Descriptor() ([]byte, []int) {
	return file_orderService_proto_rawDescGZIP(), []int{11}
}

func (x *OrderPayResultInfo) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderPayResultInfo) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *OrderPayResultInfo) GetPayUrl() string {
	if x != nil {
		return x.PayUrl
	}
	return ""
}

func (x *OrderPayResultInfo) GetJsConfig() []byte {
	if x != nil {
		return x.JsConfig
	}
	return nil
}

type OrderSearchData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pager *common.Pager `protobuf:"bytes,1,opt,name=pager,proto3" json:"pager"`
	Items []*Order      `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
}

func (x *OrderSearchData) Reset() {
	*x = OrderSearchData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderSearchData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderSearchData) ProtoMessage() {}

func (x *OrderSearchData) ProtoReflect() protoreflect.Message {
	mi := &file_orderService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderSearchData.ProtoReflect.Descriptor instead.
func (*OrderSearchData) Descriptor() ([]byte, []int) {
	return file_orderService_proto_rawDescGZIP(), []int{12}
}

func (x *OrderSearchData) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *OrderSearchData) GetItems() []*Order {
	if x != nil {
		return x.Items
	}
	return nil
}

type OrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg    string           `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg"`
	Order  *Order           `protobuf:"bytes,2,opt,name=order,proto3" json:"order"`
	List   []*Order         `protobuf:"bytes,3,rep,name=list,proto3" json:"list"`
	Search *OrderSearchData `protobuf:"bytes,4,opt,name=search,proto3" json:"search"`
	Pay    *OrderPayData    `protobuf:"bytes,5,opt,name=pay,proto3" json:"pay"`
}

func (x *OrderResponse) Reset() {
	*x = OrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderResponse) ProtoMessage() {}

func (x *OrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_orderService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderResponse.ProtoReflect.Descriptor instead.
func (*OrderResponse) Descriptor() ([]byte, []int) {
	return file_orderService_proto_rawDescGZIP(), []int{13}
}

func (x *OrderResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *OrderResponse) GetOrder() *Order {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *OrderResponse) GetList() []*Order {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *OrderResponse) GetSearch() *OrderSearchData {
	if x != nil {
		return x.Search
	}
	return nil
}

func (x *OrderResponse) GetPay() *OrderPayData {
	if x != nil {
		return x.Pay
	}
	return nil
}

type OrderProgressStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code        string `protobuf:"bytes,1,opt,name=code,proto3" json:"code"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	ShortName   string `protobuf:"bytes,3,opt,name=short_name,json=shortName,proto3" json:"short_name"`
	IconUrl     string `protobuf:"bytes,4,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url"`
	Status      string `protobuf:"bytes,5,opt,name=status,proto3" json:"status"`
	HappenAt    string `protobuf:"bytes,6,opt,name=happen_at,json=happenAt,proto3" json:"happen_at"`
	Description string `protobuf:"bytes,7,opt,name=description,proto3" json:"description"`
}

func (x *OrderProgressStep) Reset() {
	*x = OrderProgressStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderService_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderProgressStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderProgressStep) ProtoMessage() {}

func (x *OrderProgressStep) ProtoReflect() protoreflect.Message {
	mi := &file_orderService_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderProgressStep.ProtoReflect.Descriptor instead.
func (*OrderProgressStep) Descriptor() ([]byte, []int) {
	return file_orderService_proto_rawDescGZIP(), []int{3, 0}
}

func (x *OrderProgressStep) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *OrderProgressStep) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OrderProgressStep) GetShortName() string {
	if x != nil {
		return x.ShortName
	}
	return ""
}

func (x *OrderProgressStep) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *OrderProgressStep) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *OrderProgressStep) GetHappenAt() string {
	if x != nil {
		return x.HappenAt
	}
	return ""
}

func (x *OrderProgressStep) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

var File_orderService_proto protoreflect.FileDescriptor

var file_orderService_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x11,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x18, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1a, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x15, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf5, 0x1c, 0x0a, 0x05, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72,
	0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x63, 0x6c, 0x65, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x07, 0x63, 0x6c, 0x65, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4e,
	0x75, 0x6d, 0x12, 0x26, 0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x77, 0x67, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x67, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f,
	0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x69, 0x6e, 0x63, 0x72, 0x65,
	0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x66, 0x72, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x5f, 0x70,
	0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x61,
	0x79, 0x50, 0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x79,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63,
	0x79, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x65, 0x64, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73,
	0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x04, 0x63, 0x6f, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x69,
	0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x70, 0x61, 0x69, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x73, 0x68, 0x69, 0x70,
	0x70, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x69,
	0x66, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76,
	0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f,
	0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x1f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x73, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x69, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x68, 0x69, 0x70, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x22, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x6c,
	0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x65, 0x6c, 0x6c, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x63,
	0x6f, 0x64, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x73, 0x43, 0x6f, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x18, 0x27,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x18,
	0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65,
	0x64, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x73,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x2a, 0x20, 0x03, 0x28, 0x03, 0x52,
	0x07, 0x63, 0x61, 0x72, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x2c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x18, 0x2d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x2e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x2f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x75, 0x74, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x30, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x53,
	0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x31, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x32, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x67,
	0x61, 0x69, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x75,
	0x73, 0x65, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x33, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x23,
	0x0a, 0x0d, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18,
	0x34, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x62, 0x61, 0x63, 0x6b, 0x49, 0x6e, 0x74, 0x65, 0x67,
	0x72, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x5f,
	0x75, 0x70, 0x18, 0x35, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x55, 0x70, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x36, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x37, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d,
	0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x38, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x70, 0x69, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x39, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x70, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x63,
	0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x3a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73,
	0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x61, 0x72, 0x67,
	0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x3b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x62, 0x61,
	0x72, 0x67, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x64, 0x76, 0x61, 0x6e,
	0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x64, 0x76,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x70, 0x72, 0x65, 0x61, 0x64,
	0x5f, 0x75, 0x69, 0x64, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x70, 0x72, 0x65,
	0x61, 0x64, 0x55, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x70, 0x72, 0x65, 0x61, 0x64, 0x5f,
	0x74, 0x77, 0x6f, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x3e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x73,
	0x70, 0x72, 0x65, 0x61, 0x64, 0x54, 0x77, 0x6f, 0x55, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69,
	0x73, 0x5f, 0x67, 0x69, 0x66, 0x74, 0x18, 0x3f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73,
	0x47, 0x69, 0x66, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x40, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x67, 0x69, 0x66, 0x74, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x41, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x69, 0x66, 0x74, 0x55, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x42, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x67, 0x69, 0x66, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x43, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x75, 0x64, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x44, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x61, 0x75, 0x64, 0x69, 0x74, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x45, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x61, 0x79, 0x55, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70,
	0x61, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x46, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x47, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x48, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x49, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x4a, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21,
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x4b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x4c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x4d,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x4e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x73, 0x5f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x18, 0x4f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x73, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x30, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2c, 0x0a,
	0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x51, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2f, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x52, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x53, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x33, 0x0a,
	0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x73, 0x18, 0x57, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x6d, 0x65, 0x74, 0x61, 0x73, 0x18, 0x55, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x6d,
	0x65, 0x74, 0x61, 0x73, 0x12, 0x3d, 0x0a, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x58, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x59, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x39,
	0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x5b, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0a, 0x73,
	0x68, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x3c, 0x0a, 0x0d, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x5d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0c, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x69, 0x64, 0x18,
	0x5f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x70, 0x61, 0x69, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x69,
	0x73, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x61,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x5f, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x62, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x11, 0x69, 0x73, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x68, 0x65, 0x6c, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x63, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x48, 0x65, 0x6c, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x08, 0x68, 0x65, 0x6c, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x41, 0x0a, 0x0e,
	0x67, 0x69, 0x66, 0x74, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x0c, 0x67, 0x69, 0x66, 0x74, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x24, 0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x65, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x79, 0x70,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x67, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x68, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x69, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x70, 0x61, 0x79,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x6a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x70, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x2c, 0x0a, 0x12, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x28, 0x0a, 0x10, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x6c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x68, 0x69,
	0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x6d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x54,
	0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x38, 0x0a, 0x0a, 0x4d, 0x65, 0x74, 0x61, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x22, 0x74, 0x0a, 0x11, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x47, 0x69, 0x66, 0x74, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x75,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x67, 0x69, 0x66, 0x74, 0x55, 0x69,
	0x64, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x67, 0x69, 0x66, 0x74, 0x4e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x67, 0x69, 0x66, 0x74, 0x5f, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x69, 0x66,
	0x74, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x22, 0x8e, 0x01, 0x0a, 0x10, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x50, 0x61, 0x79, 0x48, 0x65, 0x6c, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x61, 0x79, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70,
	0x61, 0x79, 0x55, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x5f, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79,
	0x4e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61,
	0x79, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x65, 0x6c, 0x70, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x65,
	0x6c, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xbd, 0x02, 0x0a, 0x0d, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x36, 0x0a, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x74, 0x12, 0x32, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x2e, 0x73, 0x74, 0x65, 0x70, 0x52,
	0x05, 0x73, 0x74, 0x65, 0x70, 0x73, 0x1a, 0xbf, 0x01, 0x0a, 0x04, 0x73, 0x74, 0x65, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x72, 0x74,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61, 0x70,
	0x70, 0x65, 0x6e, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x61,
	0x70, 0x70, 0x65, 0x6e, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb5, 0x02, 0x0a, 0x11, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x28,
	0x0a, 0x0f, 0x68, 0x61, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x68, 0x61, 0x73, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12, 0x2a, 0x0a, 0x10, 0x68, 0x61, 0x73, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x68, 0x61, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x61, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x61,
	0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0e,
	0x68, 0x61, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x61, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x61, 0x73, 0x4f, 0x66, 0x66, 0x6c, 0x69,
	0x6e, 0x65, 0x50, 0x61, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x61,
	0x73, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x10,
	0x68, 0x61, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x61, 0x73, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x68, 0x61, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x22, 0xad, 0x04, 0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x68, 0x61, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x50, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x68, 0x61, 0x73, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x68, 0x61, 0x73, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0f, 0x68, 0x61, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x12, 0x26, 0x0a, 0x0e, 0x68, 0x61, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x61, 0x73, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x61, 0x73, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x68, 0x61, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x68, 0x61, 0x73, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x68, 0x61, 0x73, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x68, 0x61,
	0x73, 0x4c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x68, 0x61, 0x73, 0x4c, 0x6f, 0x67, 0x69, 0x73, 0x74,
	0x69, 0x63, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x38, 0x0a, 0x17, 0x68, 0x61, 0x73, 0x52,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17, 0x68, 0x61, 0x73, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x4c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x61, 0x73, 0x57, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x61, 0x73, 0x57,
	0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x68, 0x61,
	0x73, 0x42, 0x75, 0x79, 0x41, 0x67, 0x61, 0x69, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0b, 0x68, 0x61, 0x73, 0x42, 0x75, 0x79, 0x41, 0x67, 0x61, 0x69, 0x6e, 0x12, 0x26, 0x0a, 0x0e,
	0x68, 0x61, 0x73, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x61, 0x73, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x12, 0x28, 0x0a, 0x0f, 0x68, 0x61, 0x73, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x68,
	0x61, 0x73, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x28,
	0x0a, 0x0f, 0x68, 0x61, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x41, 0x70, 0x70, 0x6c,
	0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x68, 0x61, 0x73, 0x49, 0x6e, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x61, 0x73, 0x49,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x56, 0x69, 0x65, 0x77, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x68, 0x61, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x56, 0x69, 0x65, 0x77,
	0x22, 0xc0, 0x01, 0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x68, 0x6f, 0x77, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x70,
	0x69, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x50, 0x69, 0x63, 0x22, 0x9d, 0x02, 0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x74, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x72, 0x49, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x74, 0x68,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03,
	0x69, 0x64, 0x73, 0x22, 0xef, 0x01, 0x0a, 0x12, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50,
	0x61, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4e,
	0x6f, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x63, 0x69, 0x70, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72,
	0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x4e, 0x6f, 0x22, 0x95, 0x09, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b,
	0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x61, 0x6c,
	0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x72, 0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x63,
	0x6c, 0x65, 0x72, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63,
	0x6c, 0x65, 0x72, 0x6b, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x69, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x28,
	0x0a, 0x10, 0x69, 0x73, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x73, 0x4d, 0x75, 0x6c, 0x74,
	0x69, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x69, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73,
	0x5f, 0x63, 0x6f, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x73, 0x43, 0x6f,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64,
	0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65,
	0x64, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x69, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x21, 0x0a, 0x0c, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x19,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x75,
	0x74, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x6f, 0x75, 0x74, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x25, 0x0a,
	0x0e, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x62, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x69, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x69, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x1f, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a,
	0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x09, 0x62, 0x61, 0x72, 0x67, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x21, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x70,
	0x72, 0x65, 0x61, 0x64, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x22, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x73, 0x70, 0x72, 0x65, 0x61, 0x64, 0x55, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f,
	0x67, 0x69, 0x66, 0x74, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x47, 0x69,
	0x66, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x24, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x68,
	0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x25, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x28, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68,
	0x69, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x68, 0x69, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x2b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x54, 0x79, 0x70, 0x65, 0x22, 0x92, 0x01,
	0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x65, 0x72, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x72, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x72, 0x72, 0x44, 0x65, 0x73, 0x63, 0x12, 0x34, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x22, 0x7f, 0x0a, 0x12, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x17,
	0x0a, 0x07, 0x70, 0x61, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x70, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x6a, 0x73, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x22, 0x5d, 0x0a, 0x0f, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0xca, 0x01, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x25, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x23, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x12, 0x31, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x28, 0x0a, 0x03, 0x70, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x03, 0x70, 0x61, 0x79, 0x32,
	0xe2, 0x08, 0x0a, 0x0c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x3b, 0x0a, 0x03, 0x50, 0x61, 0x79, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a,
	0x06, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x06, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x04, 0x54, 0x61, 0x6b, 0x65, 0x12, 0x0f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x17,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x06, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x0b, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e,
	0x65, 0x50, 0x61, 0x69, 0x64, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x50, 0x61, 0x69, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x39,
	0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x12, 0x0f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x17,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x0b, 0x4d, 0x6f, 0x64,
	0x69, 0x66, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x1a, 0x17, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0d, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x4d, 0x61, 0x69, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0d,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x4d, 0x61, 0x69, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3b, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x34, 0x0a,
	0x06, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x07, 0x50, 0x75, 0x6c, 0x6c, 0x50, 0x61, 0x79, 0x12, 0x16,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x31, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x43, 0x0a, 0x0e, 0x4e, 0x65, 0x77, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x69, 0x63,
	0x65, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_orderService_proto_rawDescOnce sync.Once
	file_orderService_proto_rawDescData = file_orderService_proto_rawDesc
)

func file_orderService_proto_rawDescGZIP() []byte {
	file_orderService_proto_rawDescOnce.Do(func() {
		file_orderService_proto_rawDescData = protoimpl.X.CompressGZIP(file_orderService_proto_rawDescData)
	})
	return file_orderService_proto_rawDescData
}

var file_orderService_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_orderService_proto_goTypes = []interface{}{
	(*Order)(nil),              // 0: services.Order
	(*OrderGiftUserInfo)(nil),  // 1: services.OrderGiftUserInfo
	(*OrderPayHelpInfo)(nil),   // 2: services.OrderPayHelpInfo
	(*OrderProgress)(nil),      // 3: services.OrderProgress
	(*OrderAdminCommand)(nil),  // 4: services.OrderAdminCommand
	(*OrderUserAction)(nil),    // 5: services.OrderUserAction
	(*OrderShowStatus)(nil),    // 6: services.OrderShowStatus
	(*OrderPayRequest)(nil),    // 7: services.OrderPayRequest
	(*OfflinePaidRequest)(nil), // 8: services.OfflinePaidRequest
	(*OrderRequest)(nil),       // 9: services.OrderRequest
	(*OrderPayData)(nil),       // 10: services.OrderPayData
	(*OrderPayResultInfo)(nil), // 11: services.OrderPayResultInfo
	(*OrderSearchData)(nil),    // 12: services.OrderSearchData
	(*OrderResponse)(nil),      // 13: services.OrderResponse
	nil,                        // 14: services.Order.MetasEntry
	(*OrderProgressStep)(nil),  // 15: services.OrderProgress.step
	(*OrderAddress)(nil),       // 16: services.OrderAddress
	(*MemberInfo)(nil),         // 17: services.MemberInfo
	(*PaymentInfo)(nil),        // 18: services.PaymentInfo
	(*OrderDetail)(nil),        // 19: services.OrderDetail
	(*DeliveryOrder)(nil),      // 20: services.DeliveryOrder
	(*common.Pager)(nil),       // 21: common.Pager
}
var file_orderService_proto_depIdxs = []int32{
	16, // 0: services.Order.address:type_name -> services.OrderAddress
	17, // 1: services.Order.member:type_name -> services.MemberInfo
	18, // 2: services.Order.payment:type_name -> services.PaymentInfo
	19, // 3: services.Order.details:type_name -> services.OrderDetail
	20, // 4: services.Order.packages:type_name -> services.DeliveryOrder
	14, // 5: services.Order.metas:type_name -> services.Order.MetasEntry
	4,  // 6: services.Order.adminAction:type_name -> services.OrderAdminCommand
	5,  // 7: services.Order.userAction:type_name -> services.OrderUserAction
	6,  // 8: services.Order.showStatus:type_name -> services.OrderShowStatus
	3,  // 9: services.Order.progress_info:type_name -> services.OrderProgress
	2,  // 10: services.Order.help_info:type_name -> services.OrderPayHelpInfo
	1,  // 11: services.Order.gift_user_info:type_name -> services.OrderGiftUserInfo
	15, // 12: services.OrderProgress.current:type_name -> services.OrderProgress.step
	15, // 13: services.OrderProgress.steps:type_name -> services.OrderProgress.step
	11, // 14: services.OrderPayData.result:type_name -> services.OrderPayResultInfo
	21, // 15: services.OrderSearchData.pager:type_name -> common.Pager
	0,  // 16: services.OrderSearchData.items:type_name -> services.Order
	0,  // 17: services.OrderResponse.order:type_name -> services.Order
	0,  // 18: services.OrderResponse.list:type_name -> services.Order
	12, // 19: services.OrderResponse.search:type_name -> services.OrderSearchData
	10, // 20: services.OrderResponse.pay:type_name -> services.OrderPayData
	7,  // 21: services.OrderService.Pay:input_type -> services.OrderPayRequest
	9,  // 22: services.OrderService.Cancel:input_type -> services.OrderRequest
	9,  // 23: services.OrderService.Delete:input_type -> services.OrderRequest
	9,  // 24: services.OrderService.Confirm:input_type -> services.OrderRequest
	0,  // 25: services.OrderService.Take:input_type -> services.Order
	9,  // 26: services.OrderService.Verify:input_type -> services.OrderRequest
	8,  // 27: services.OrderService.OfflinePaid:input_type -> services.OfflinePaidRequest
	0,  // 28: services.OrderService.OrderInsert:input_type -> services.Order
	0,  // 29: services.OrderService.ModifyPrice:input_type -> services.Order
	16, // 30: services.OrderService.ModifyAddress:input_type -> services.OrderAddress
	9,  // 31: services.OrderService.OrderMainInfo:input_type -> services.OrderRequest
	9,  // 32: services.OrderService.OrderMainList:input_type -> services.OrderRequest
	9,  // 33: services.OrderService.Search:input_type -> services.OrderRequest
	0,  // 34: services.OrderService.Detail:input_type -> services.Order
	9,  // 35: services.OrderService.PullPay:input_type -> services.OrderRequest
	0,  // 36: services.OrderService.Get:input_type -> services.Order
	9,  // 37: services.OrderService.List:input_type -> services.OrderRequest
	9,  // 38: services.OrderService.NewOrderNotice:input_type -> services.OrderRequest
	13, // 39: services.OrderService.Pay:output_type -> services.OrderResponse
	13, // 40: services.OrderService.Cancel:output_type -> services.OrderResponse
	13, // 41: services.OrderService.Delete:output_type -> services.OrderResponse
	13, // 42: services.OrderService.Confirm:output_type -> services.OrderResponse
	13, // 43: services.OrderService.Take:output_type -> services.OrderResponse
	13, // 44: services.OrderService.Verify:output_type -> services.OrderResponse
	13, // 45: services.OrderService.OfflinePaid:output_type -> services.OrderResponse
	13, // 46: services.OrderService.OrderInsert:output_type -> services.OrderResponse
	13, // 47: services.OrderService.ModifyPrice:output_type -> services.OrderResponse
	13, // 48: services.OrderService.ModifyAddress:output_type -> services.OrderResponse
	13, // 49: services.OrderService.OrderMainInfo:output_type -> services.OrderResponse
	13, // 50: services.OrderService.OrderMainList:output_type -> services.OrderResponse
	13, // 51: services.OrderService.Search:output_type -> services.OrderResponse
	13, // 52: services.OrderService.Detail:output_type -> services.OrderResponse
	13, // 53: services.OrderService.PullPay:output_type -> services.OrderResponse
	13, // 54: services.OrderService.Get:output_type -> services.OrderResponse
	13, // 55: services.OrderService.List:output_type -> services.OrderResponse
	13, // 56: services.OrderService.NewOrderNotice:output_type -> services.OrderResponse
	39, // [39:57] is the sub-list for method output_type
	21, // [21:39] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_orderService_proto_init() }
func file_orderService_proto_init() {
	if File_orderService_proto != nil {
		return
	}
	file_orderDetailService_proto_init()
	file_orderAddressService_proto_init()
	file_deliveryOrderService_proto_init()
	file_baseInfoService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_orderService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderGiftUserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPayHelpInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderAdminCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderUserAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderShowStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OfflinePaidRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPayData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderPayResultInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderService_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderSearchData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderService_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderService_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderProgressStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_orderService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_orderService_proto_goTypes,
		DependencyIndexes: file_orderService_proto_depIdxs,
		MessageInfos:      file_orderService_proto_msgTypes,
	}.Build()
	File_orderService_proto = out.File
	file_orderService_proto_rawDesc = nil
	file_orderService_proto_goTypes = nil
	file_orderService_proto_depIdxs = nil
}
