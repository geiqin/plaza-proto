// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: userOrderService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type UserOrderSearchData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pager *common.Pager `protobuf:"bytes,1,opt,name=pager,proto3" json:"pager"`
	Items []*Order      `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
}

func (x *UserOrderSearchData) Reset() {
	*x = UserOrderSearchData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userOrderService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserOrderSearchData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOrderSearchData) ProtoMessage() {}

func (x *UserOrderSearchData) ProtoReflect() protoreflect.Message {
	mi := &file_userOrderService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserOrderSearchData.ProtoReflect.Descriptor instead.
func (*UserOrderSearchData) Descriptor() ([]byte, []int) {
	return file_userOrderService_proto_rawDescGZIP(), []int{0}
}

func (x *UserOrderSearchData) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *UserOrderSearchData) GetItems() []*Order {
	if x != nil {
		return x.Items
	}
	return nil
}

// 订单统计数据
type UserOrderTotalData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CompleteCount  int64 `protobuf:"varint,1,opt,name=complete_count,json=completeCount,proto3" json:"complete_count"`     //已完成数
	EvaluatedCount int64 `protobuf:"varint,2,opt,name=evaluated_count,json=evaluatedCount,proto3" json:"evaluated_count"`  //已评价数
	NoRefundCount  int64 `protobuf:"varint,3,opt,name=no_refund_count,json=noRefundCount,proto3" json:"no_refund_count"`   //未退款数
	PcOrderCount   int64 `protobuf:"varint,5,opt,name=pc_order_count,json=pcOrderCount,proto3" json:"pc_order_count"`      //PC端订单数
	ReceivedCount  int64 `protobuf:"varint,6,opt,name=received_count,json=receivedCount,proto3" json:"received_count"`     //已收货数
	RefundCount    int64 `protobuf:"varint,7,opt,name=refund_count,json=refundCount,proto3" json:"refund_count"`           //退款数
	RefundedCount  int64 `protobuf:"varint,8,opt,name=refunded_count,json=refundedCount,proto3" json:"refunded_count"`     //已退款数
	RefundingCount int64 `protobuf:"varint,9,opt,name=refunding_count,json=refundingCount,proto3" json:"refunding_count"`  //退款中数
	UnpaidCount    int64 `protobuf:"varint,10,opt,name=unpaid_count,json=unpaidCount,proto3" json:"unpaid_count"`          //未支付数
	UnshippedCount int64 `protobuf:"varint,11,opt,name=unshipped_count,json=unshippedCount,proto3" json:"unshipped_count"` //待发货数
	OrderCount     int64 `protobuf:"varint,4,opt,name=order_count,json=orderCount,proto3" json:"order_count"`              //订单总数
	SumPrice       int64 `protobuf:"varint,12,opt,name=sum_price,json=sumPrice,proto3" json:"sum_price"`                   //总消费金额
}

func (x *UserOrderTotalData) Reset() {
	*x = UserOrderTotalData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userOrderService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserOrderTotalData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOrderTotalData) ProtoMessage() {}

func (x *UserOrderTotalData) ProtoReflect() protoreflect.Message {
	mi := &file_userOrderService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserOrderTotalData.ProtoReflect.Descriptor instead.
func (*UserOrderTotalData) Descriptor() ([]byte, []int) {
	return file_userOrderService_proto_rawDescGZIP(), []int{1}
}

func (x *UserOrderTotalData) GetCompleteCount() int64 {
	if x != nil {
		return x.CompleteCount
	}
	return 0
}

func (x *UserOrderTotalData) GetEvaluatedCount() int64 {
	if x != nil {
		return x.EvaluatedCount
	}
	return 0
}

func (x *UserOrderTotalData) GetNoRefundCount() int64 {
	if x != nil {
		return x.NoRefundCount
	}
	return 0
}

func (x *UserOrderTotalData) GetPcOrderCount() int64 {
	if x != nil {
		return x.PcOrderCount
	}
	return 0
}

func (x *UserOrderTotalData) GetReceivedCount() int64 {
	if x != nil {
		return x.ReceivedCount
	}
	return 0
}

func (x *UserOrderTotalData) GetRefundCount() int64 {
	if x != nil {
		return x.RefundCount
	}
	return 0
}

func (x *UserOrderTotalData) GetRefundedCount() int64 {
	if x != nil {
		return x.RefundedCount
	}
	return 0
}

func (x *UserOrderTotalData) GetRefundingCount() int64 {
	if x != nil {
		return x.RefundingCount
	}
	return 0
}

func (x *UserOrderTotalData) GetUnpaidCount() int64 {
	if x != nil {
		return x.UnpaidCount
	}
	return 0
}

func (x *UserOrderTotalData) GetUnshippedCount() int64 {
	if x != nil {
		return x.UnshippedCount
	}
	return 0
}

func (x *UserOrderTotalData) GetOrderCount() int64 {
	if x != nil {
		return x.OrderCount
	}
	return 0
}

func (x *UserOrderTotalData) GetSumPrice() int64 {
	if x != nil {
		return x.SumPrice
	}
	return 0
}

// 订单请求参数
type UserOrderRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Top       int32    `protobuf:"varint,1,opt,name=top,proto3" json:"top"`
	Paged     int64    `protobuf:"varint,2,opt,name=paged,proto3" json:"paged"`
	PageSize  int64    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords  string   `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords"`
	Sorts     []string `protobuf:"bytes,5,rep,name=sorts,proto3" json:"sorts"`
	DateRange []string `protobuf:"bytes,6,rep,name=date_range,json=dateRange,proto3" json:"date_range"`
	Ids       []int64  `protobuf:"varint,7,rep,packed,name=ids,proto3" json:"ids"`
	Id        int64    `protobuf:"varint,8,opt,name=id,proto3" json:"id"`
	//以下为自定义参数
	OrderNo         string `protobuf:"bytes,11,opt,name=order_no,json=orderNo,proto3" json:"order_no"`                           //订单号
	Type            string `protobuf:"bytes,12,opt,name=type,proto3" json:"type"`                                                //订单类型
	MemberId        int64  `protobuf:"varint,13,opt,name=member_id,json=memberId,proto3" json:"member_id"`                       //买家ID
	ShopId          int64  `protobuf:"varint,14,opt,name=shop_id,json=shopId,proto3" json:"shop_id"`                             //多商户ID
	RealstoreId     int64  `protobuf:"varint,15,opt,name=realstore_id,json=realstoreId,proto3" json:"realstore_id"`              //多门店ID
	WarehouseId     int64  `protobuf:"varint,16,opt,name=warehouse_id,json=warehouseId,proto3" json:"warehouse_id"`              //仓库ID
	LogisticsType   string `protobuf:"bytes,17,opt,name=logistics_type,json=logisticsType,proto3" json:"logistics_type"`         //物流类型
	DeliveryMethod  string `protobuf:"bytes,18,opt,name=delivery_method,json=deliveryMethod,proto3" json:"delivery_method"`      //配送方式
	DeliveryMode    string `protobuf:"bytes,19,opt,name=delivery_mode,json=deliveryMode,proto3" json:"delivery_mode"`            //发货模式
	IsMultiPacket   string `protobuf:"bytes,20,opt,name=is_multi_packet,json=isMultiPacket,proto3" json:"is_multi_packet"`       //多包裹发货
	IsAllDelivered  string `protobuf:"bytes,21,opt,name=is_all_delivered,json=isAllDelivered,proto3" json:"is_all_delivered"`    //已全部发货
	TableCode       string `protobuf:"bytes,22,opt,name=table_code,json=tableCode,proto3" json:"table_code"`                     //桌台编号
	IsCod           string `protobuf:"bytes,23,opt,name=is_cod,json=isCod,proto3" json:"is_cod"`                                 //是否货到付款
	IsInvoiced      string `protobuf:"bytes,24,opt,name=is_invoiced,json=isInvoiced,proto3" json:"is_invoiced"`                  //已开过发票
	IsRefunded      string `protobuf:"bytes,25,opt,name=is_refunded,json=isRefunded,proto3" json:"is_refunded"`                  //已产生退款
	IsModifyAddress string `protobuf:"bytes,26,opt,name=is_modify_address,json=isModifyAddress,proto3" json:"is_modify_address"` //已修改地址
	IsModifyPrice   string `protobuf:"bytes,27,opt,name=is_modify_price,json=isModifyPrice,proto3" json:"is_modify_price"`       //已修改价格
	PaymentId       int32  `protobuf:"varint,28,opt,name=payment_id,json=paymentId,proto3" json:"payment_id"`                    //支付ID
	PaymentMode     string `protobuf:"bytes,29,opt,name=payment_mode,json=paymentMode,proto3" json:"payment_mode"`               //支付模式
	PaymentType     string `protobuf:"bytes,30,opt,name=payment_type,json=paymentType,proto3" json:"payment_type"`               //支付类型
	ClientType      string `protobuf:"bytes,31,opt,name=client_type,json=clientType,proto3" json:"client_type"`                  //客户端类型
	PayStatus       string `protobuf:"bytes,32,opt,name=pay_status,json=payStatus,proto3" json:"pay_status"`                     //支付状态
	Status          string `protobuf:"bytes,33,opt,name=status,proto3" json:"status"`                                            //订单状态
}

func (x *UserOrderRequest) Reset() {
	*x = UserOrderRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userOrderService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserOrderRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOrderRequest) ProtoMessage() {}

func (x *UserOrderRequest) ProtoReflect() protoreflect.Message {
	mi := &file_userOrderService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserOrderRequest.ProtoReflect.Descriptor instead.
func (*UserOrderRequest) Descriptor() ([]byte, []int) {
	return file_userOrderService_proto_rawDescGZIP(), []int{2}
}

func (x *UserOrderRequest) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *UserOrderRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *UserOrderRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *UserOrderRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *UserOrderRequest) GetSorts() []string {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *UserOrderRequest) GetDateRange() []string {
	if x != nil {
		return x.DateRange
	}
	return nil
}

func (x *UserOrderRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *UserOrderRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UserOrderRequest) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *UserOrderRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *UserOrderRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *UserOrderRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *UserOrderRequest) GetRealstoreId() int64 {
	if x != nil {
		return x.RealstoreId
	}
	return 0
}

func (x *UserOrderRequest) GetWarehouseId() int64 {
	if x != nil {
		return x.WarehouseId
	}
	return 0
}

func (x *UserOrderRequest) GetLogisticsType() string {
	if x != nil {
		return x.LogisticsType
	}
	return ""
}

func (x *UserOrderRequest) GetDeliveryMethod() string {
	if x != nil {
		return x.DeliveryMethod
	}
	return ""
}

func (x *UserOrderRequest) GetDeliveryMode() string {
	if x != nil {
		return x.DeliveryMode
	}
	return ""
}

func (x *UserOrderRequest) GetIsMultiPacket() string {
	if x != nil {
		return x.IsMultiPacket
	}
	return ""
}

func (x *UserOrderRequest) GetIsAllDelivered() string {
	if x != nil {
		return x.IsAllDelivered
	}
	return ""
}

func (x *UserOrderRequest) GetTableCode() string {
	if x != nil {
		return x.TableCode
	}
	return ""
}

func (x *UserOrderRequest) GetIsCod() string {
	if x != nil {
		return x.IsCod
	}
	return ""
}

func (x *UserOrderRequest) GetIsInvoiced() string {
	if x != nil {
		return x.IsInvoiced
	}
	return ""
}

func (x *UserOrderRequest) GetIsRefunded() string {
	if x != nil {
		return x.IsRefunded
	}
	return ""
}

func (x *UserOrderRequest) GetIsModifyAddress() string {
	if x != nil {
		return x.IsModifyAddress
	}
	return ""
}

func (x *UserOrderRequest) GetIsModifyPrice() string {
	if x != nil {
		return x.IsModifyPrice
	}
	return ""
}

func (x *UserOrderRequest) GetPaymentId() int32 {
	if x != nil {
		return x.PaymentId
	}
	return 0
}

func (x *UserOrderRequest) GetPaymentMode() string {
	if x != nil {
		return x.PaymentMode
	}
	return ""
}

func (x *UserOrderRequest) GetPaymentType() string {
	if x != nil {
		return x.PaymentType
	}
	return ""
}

func (x *UserOrderRequest) GetClientType() string {
	if x != nil {
		return x.ClientType
	}
	return ""
}

func (x *UserOrderRequest) GetPayStatus() string {
	if x != nil {
		return x.PayStatus
	}
	return ""
}

func (x *UserOrderRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type UserOrderResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg    string               `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg"`
	Order  *Order               `protobuf:"bytes,2,opt,name=order,proto3" json:"order"`
	Search *UserOrderSearchData `protobuf:"bytes,3,opt,name=search,proto3" json:"search"`
	Total  *UserOrderTotalData  `protobuf:"bytes,4,opt,name=total,proto3" json:"total"`
}

func (x *UserOrderResponse) Reset() {
	*x = UserOrderResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_userOrderService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserOrderResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserOrderResponse) ProtoMessage() {}

func (x *UserOrderResponse) ProtoReflect() protoreflect.Message {
	mi := &file_userOrderService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserOrderResponse.ProtoReflect.Descriptor instead.
func (*UserOrderResponse) Descriptor() ([]byte, []int) {
	return file_userOrderService_proto_rawDescGZIP(), []int{3}
}

func (x *UserOrderResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *UserOrderResponse) GetOrder() *Order {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *UserOrderResponse) GetSearch() *UserOrderSearchData {
	if x != nil {
		return x.Search
	}
	return nil
}

func (x *UserOrderResponse) GetTotal() *UserOrderTotalData {
	if x != nil {
		return x.Total
	}
	return nil
}

var File_userOrderService_proto protoreflect.FileDescriptor

var file_userOrderService_proto_rawDesc = []byte{
	0x0a, 0x16, 0x75, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x61, 0x0a, 0x13, 0x55, 0x73, 0x65,
	0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xd6, 0x03, 0x0a,
	0x12, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x63, 0x6f, 0x6d,
	0x70, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x76,
	0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x65, 0x76, 0x61, 0x6c, 0x75, 0x61, 0x74, 0x65, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x6f, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6e, 0x6f,
	0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x70,
	0x63, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x70, 0x63, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x75,
	0x6e, 0x70, 0x61, 0x69, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0b, 0x75, 0x6e, 0x70, 0x61, 0x69, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27,
	0x0a, 0x0f, 0x75, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x75, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x70,
	0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x75, 0x6d, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x75, 0x6d,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xc5, 0x07, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f,
	0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x6f, 0x72, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6f, 0x72, 0x74,
	0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x61, 0x6c, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72,
	0x65, 0x61, 0x6c, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61,
	0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x12, 0x25, 0x0a,
	0x0e, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x23, 0x0a,
	0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x13,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x73, 0x4d,
	0x75, 0x6c, 0x74, 0x69, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73,
	0x5f, 0x61, 0x6c, 0x6c, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x65, 0x64, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x73, 0x41, 0x6c, 0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x18, 0x17, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x73, 0x43, 0x6f, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73,
	0x5f, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x73, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69,
	0x73, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x69, 0x73, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x11,
	0x69, 0x73, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66,
	0x79, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x79, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x69, 0x73, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x1c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x79, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xb7, 0x01,
	0x0a, 0x11, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x25, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x35, 0x0a, 0x06,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x12, 0x32, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x32, 0xea, 0x02, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x05,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x43, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x06, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x43, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_userOrderService_proto_rawDescOnce sync.Once
	file_userOrderService_proto_rawDescData = file_userOrderService_proto_rawDesc
)

func file_userOrderService_proto_rawDescGZIP() []byte {
	file_userOrderService_proto_rawDescOnce.Do(func() {
		file_userOrderService_proto_rawDescData = protoimpl.X.CompressGZIP(file_userOrderService_proto_rawDescData)
	})
	return file_userOrderService_proto_rawDescData
}

var file_userOrderService_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_userOrderService_proto_goTypes = []interface{}{
	(*UserOrderSearchData)(nil), // 0: services.UserOrderSearchData
	(*UserOrderTotalData)(nil),  // 1: services.UserOrderTotalData
	(*UserOrderRequest)(nil),    // 2: services.UserOrderRequest
	(*UserOrderResponse)(nil),   // 3: services.UserOrderResponse
	(*common.Pager)(nil),        // 4: common.Pager
	(*Order)(nil),               // 5: services.Order
}
var file_userOrderService_proto_depIdxs = []int32{
	4,  // 0: services.UserOrderSearchData.pager:type_name -> common.Pager
	5,  // 1: services.UserOrderSearchData.items:type_name -> services.Order
	5,  // 2: services.UserOrderResponse.order:type_name -> services.Order
	0,  // 3: services.UserOrderResponse.search:type_name -> services.UserOrderSearchData
	1,  // 4: services.UserOrderResponse.total:type_name -> services.UserOrderTotalData
	2,  // 5: services.UserOrderService.Total:input_type -> services.UserOrderRequest
	2,  // 6: services.UserOrderService.Search:input_type -> services.UserOrderRequest
	2,  // 7: services.UserOrderService.Detail:input_type -> services.UserOrderRequest
	2,  // 8: services.UserOrderService.Cancel:input_type -> services.UserOrderRequest
	2,  // 9: services.UserOrderService.Delete:input_type -> services.UserOrderRequest
	3,  // 10: services.UserOrderService.Total:output_type -> services.UserOrderResponse
	3,  // 11: services.UserOrderService.Search:output_type -> services.UserOrderResponse
	3,  // 12: services.UserOrderService.Detail:output_type -> services.UserOrderResponse
	3,  // 13: services.UserOrderService.Cancel:output_type -> services.UserOrderResponse
	3,  // 14: services.UserOrderService.Delete:output_type -> services.UserOrderResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_userOrderService_proto_init() }
func file_userOrderService_proto_init() {
	if File_userOrderService_proto != nil {
		return
	}
	file_orderService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_userOrderService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserOrderSearchData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userOrderService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserOrderTotalData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userOrderService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserOrderRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_userOrderService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserOrderResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_userOrderService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_userOrderService_proto_goTypes,
		DependencyIndexes: file_userOrderService_proto_depIdxs,
		MessageInfos:      file_userOrderService_proto_msgTypes,
	}.Build()
	File_userOrderService_proto = out.File
	file_userOrderService_proto_rawDesc = nil
	file_userOrderService_proto_goTypes = nil
	file_userOrderService_proto_depIdxs = nil
}
