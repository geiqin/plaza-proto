// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: aftersaleService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Aftersale struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                                //ID
	OrderNo        string            `protobuf:"bytes,2,opt,name=order_no,json=orderNo,proto3" json:"order_no"`                        //订单编号
	OrderId        int64             `protobuf:"varint,3,opt,name=order_id,json=orderId,proto3" json:"order_id"`                       //订单ID
	OrderDetailId  int64             `protobuf:"varint,4,opt,name=order_detail_id,json=orderDetailId,proto3" json:"order_detail_id"`   //订单详情id
	SkuId          int64             `protobuf:"varint,5,opt,name=sku_id,json=skuId,proto3" json:"sku_id"`                             //SkuID
	MemberId       int64             `protobuf:"varint,6,opt,name=member_id,json=memberId,proto3" json:"member_id"`                    //用户id
	Type           string            `protobuf:"bytes,7,opt,name=type,proto3" json:"type"`                                             //业务类型（0仅退款, 1退货退款）
	Refundment     string            `protobuf:"bytes,8,opt,name=refundment,proto3" json:"refundment"`                                 //退款类型（0原路退回, 1退至钱包, 2手动处理）
	Reason         string            `protobuf:"bytes,9,opt,name=reason,proto3" json:"reason"`                                         //申请原因
	Number         int32             `protobuf:"varint,10,opt,name=number,proto3" json:"number"`                                       //退货数量
	Price          int64             `protobuf:"varint,11,opt,name=price,proto3" json:"price"`                                         //退款金额
	FreightSubsidy int64             `protobuf:"varint,12,opt,name=freight_subsidy,json=freightSubsidy,proto3" json:"freight_subsidy"` //运费补贴金
	Msg            string            `protobuf:"bytes,13,opt,name=msg,proto3" json:"msg"`                                              //退款说明
	RefuseReason   string            `protobuf:"bytes,15,opt,name=refuse_reason,json=refuseReason,proto3" json:"refuse_reason"`        //拒绝原因
	ExpressName    string            `protobuf:"bytes,16,opt,name=express_name,json=expressName,proto3" json:"express_name"`           //快递名称
	ExpressNumber  string            `protobuf:"bytes,17,opt,name=express_number,json=expressNumber,proto3" json:"express_number"`     //快递单号
	ApplyTime      string            `protobuf:"bytes,18,opt,name=apply_time,json=applyTime,proto3" json:"apply_time"`                 //申请时间
	ConfirmTime    string            `protobuf:"bytes,19,opt,name=confirm_time,json=confirmTime,proto3" json:"confirm_time"`           //确认时间
	DeliveryTime   string            `protobuf:"bytes,20,opt,name=delivery_time,json=deliveryTime,proto3" json:"delivery_time"`        //退货时间
	AuditTime      string            `protobuf:"bytes,21,opt,name=audit_time,json=auditTime,proto3" json:"audit_time"`                 //审核时间
	CancelTime     string            `protobuf:"bytes,22,opt,name=cancel_time,json=cancelTime,proto3" json:"cancel_time"`              //取消时间
	RefundTime     string            `protobuf:"bytes,23,opt,name=refund_time,json=refundTime,proto3" json:"refund_time"`              //退款时间
	RefundStatus   string            `protobuf:"bytes,24,opt,name=refund_status,json=refundStatus,proto3" json:"refund_status"`        //退款状态（0待退货, 1已退货, 2退款失败）
	Status         string            `protobuf:"bytes,25,opt,name=status,proto3" json:"status"`                                        //状态（0待确认, 1待退货, 2待审核, 3已完成, 4已拒绝, 5已取消）
	CreatedAt      string            `protobuf:"bytes,26,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt      string            `protobuf:"bytes,27,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	Order          *Order            `protobuf:"bytes,29,opt,name=order,proto3" json:"order"`
	Images         []*AftersaleImage `protobuf:"bytes,30,rep,name=images,proto3" json:"images"`
	StatusText     string            `protobuf:"bytes,31,opt,name=status_text,json=statusText,proto3" json:"status_text"`
	TypeText       string            `protobuf:"bytes,32,opt,name=type_text,json=typeText,proto3" json:"type_text"`
	RefundmentText string            `protobuf:"bytes,33,opt,name=refundment_text,json=refundmentText,proto3" json:"refundment_text"`
	TipsMsg        string            `protobuf:"bytes,34,opt,name=tips_msg,json=tipsMsg,proto3" json:"tips_msg"`
	OperateData    map[string]string `protobuf:"bytes,35,rep,name=operate_data,json=operateData,proto3" json:"operate_data" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *Aftersale) Reset() {
	*x = Aftersale{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersaleService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Aftersale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Aftersale) ProtoMessage() {}

func (x *Aftersale) ProtoReflect() protoreflect.Message {
	mi := &file_aftersaleService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Aftersale.ProtoReflect.Descriptor instead.
func (*Aftersale) Descriptor() ([]byte, []int) {
	return file_aftersaleService_proto_rawDescGZIP(), []int{0}
}

func (x *Aftersale) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Aftersale) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *Aftersale) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *Aftersale) GetOrderDetailId() int64 {
	if x != nil {
		return x.OrderDetailId
	}
	return 0
}

func (x *Aftersale) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *Aftersale) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *Aftersale) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Aftersale) GetRefundment() string {
	if x != nil {
		return x.Refundment
	}
	return ""
}

func (x *Aftersale) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Aftersale) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *Aftersale) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *Aftersale) GetFreightSubsidy() int64 {
	if x != nil {
		return x.FreightSubsidy
	}
	return 0
}

func (x *Aftersale) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *Aftersale) GetRefuseReason() string {
	if x != nil {
		return x.RefuseReason
	}
	return ""
}

func (x *Aftersale) GetExpressName() string {
	if x != nil {
		return x.ExpressName
	}
	return ""
}

func (x *Aftersale) GetExpressNumber() string {
	if x != nil {
		return x.ExpressNumber
	}
	return ""
}

func (x *Aftersale) GetApplyTime() string {
	if x != nil {
		return x.ApplyTime
	}
	return ""
}

func (x *Aftersale) GetConfirmTime() string {
	if x != nil {
		return x.ConfirmTime
	}
	return ""
}

func (x *Aftersale) GetDeliveryTime() string {
	if x != nil {
		return x.DeliveryTime
	}
	return ""
}

func (x *Aftersale) GetAuditTime() string {
	if x != nil {
		return x.AuditTime
	}
	return ""
}

func (x *Aftersale) GetCancelTime() string {
	if x != nil {
		return x.CancelTime
	}
	return ""
}

func (x *Aftersale) GetRefundTime() string {
	if x != nil {
		return x.RefundTime
	}
	return ""
}

func (x *Aftersale) GetRefundStatus() string {
	if x != nil {
		return x.RefundStatus
	}
	return ""
}

func (x *Aftersale) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Aftersale) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Aftersale) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Aftersale) GetOrder() *Order {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *Aftersale) GetImages() []*AftersaleImage {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *Aftersale) GetStatusText() string {
	if x != nil {
		return x.StatusText
	}
	return ""
}

func (x *Aftersale) GetTypeText() string {
	if x != nil {
		return x.TypeText
	}
	return ""
}

func (x *Aftersale) GetRefundmentText() string {
	if x != nil {
		return x.RefundmentText
	}
	return ""
}

func (x *Aftersale) GetTipsMsg() string {
	if x != nil {
		return x.TipsMsg
	}
	return ""
}

func (x *Aftersale) GetOperateData() map[string]string {
	if x != nil {
		return x.OperateData
	}
	return nil
}

type AftersaleImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	AftersaleId int64  `protobuf:"varint,2,opt,name=aftersale_id,json=aftersaleId,proto3" json:"aftersale_id"`
	ImageId     int64  `protobuf:"varint,3,opt,name=image_id,json=imageId,proto3" json:"image_id"`
	ImageUrl    string `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3" json:"image_url"`
}

func (x *AftersaleImage) Reset() {
	*x = AftersaleImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersaleService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AftersaleImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AftersaleImage) ProtoMessage() {}

func (x *AftersaleImage) ProtoReflect() protoreflect.Message {
	mi := &file_aftersaleService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AftersaleImage.ProtoReflect.Descriptor instead.
func (*AftersaleImage) Descriptor() ([]byte, []int) {
	return file_aftersaleService_proto_rawDescGZIP(), []int{1}
}

func (x *AftersaleImage) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AftersaleImage) GetAftersaleId() int64 {
	if x != nil {
		return x.AftersaleId
	}
	return 0
}

func (x *AftersaleImage) GetImageId() int64 {
	if x != nil {
		return x.ImageId
	}
	return 0
}

func (x *AftersaleImage) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

//商家收货地址
type AftersaleAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	AreaId int64     `protobuf:"varint,2,opt,name=area_id,json=areaId,proto3" json:"area_id"`
	Addr   string    `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr"`
	Mobile string    `protobuf:"bytes,4,opt,name=mobile,proto3" json:"mobile"`
	Area   *AreaInfo `protobuf:"bytes,5,opt,name=area,proto3" json:"area"`
}

func (x *AftersaleAddress) Reset() {
	*x = AftersaleAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersaleService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AftersaleAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AftersaleAddress) ProtoMessage() {}

func (x *AftersaleAddress) ProtoReflect() protoreflect.Message {
	mi := &file_aftersaleService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AftersaleAddress.ProtoReflect.Descriptor instead.
func (*AftersaleAddress) Descriptor() ([]byte, []int) {
	return file_aftersaleService_proto_rawDescGZIP(), []int{2}
}

func (x *AftersaleAddress) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AftersaleAddress) GetAreaId() int64 {
	if x != nil {
		return x.AreaId
	}
	return 0
}

func (x *AftersaleAddress) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *AftersaleAddress) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *AftersaleAddress) GetArea() *AreaInfo {
	if x != nil {
		return x.Area
	}
	return nil
}

type AftersaleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged         int32    `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize      int32    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Sorting       string   `protobuf:"bytes,3,opt,name=sorting,proto3" json:"sorting"`
	Id            int64    `protobuf:"varint,4,opt,name=id,proto3" json:"id"`
	OrderId       int64    `protobuf:"varint,6,opt,name=order_id,json=orderId,proto3" json:"order_id"`
	OrderDetailId int64    `protobuf:"varint,7,opt,name=order_detail_id,json=orderDetailId,proto3" json:"order_detail_id"`
	MemberId      int64    `protobuf:"varint,8,opt,name=member_id,json=memberId,proto3" json:"member_id"`
	Type          string   `protobuf:"bytes,9,opt,name=type,proto3" json:"type"`
	GoodsId       int64    `protobuf:"varint,10,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	Keywords      string   `protobuf:"bytes,11,opt,name=keywords,proto3" json:"keywords"`
	RefundStatus  string   `protobuf:"bytes,12,opt,name=refund_status,json=refundStatus,proto3" json:"refund_status"`
	Status        string   `protobuf:"bytes,13,opt,name=status,proto3" json:"status"`
	OrderNo       string   `protobuf:"bytes,14,opt,name=order_no,json=orderNo,proto3" json:"order_no"`
	CheckType     string   `protobuf:"bytes,15,opt,name=check_type,json=checkType,proto3" json:"check_type"`
	Refundment    string   `protobuf:"bytes,16,opt,name=refundment,proto3" json:"refundment"`
	StatusList    []string `protobuf:"bytes,17,rep,name=status_list,json=statusList,proto3" json:"status_list"`
	NotStatusList []string `protobuf:"bytes,18,rep,name=not_status_list,json=notStatusList,proto3" json:"not_status_list"`
	Ids           []int64  `protobuf:"varint,19,rep,packed,name=ids,proto3" json:"ids"`
}

func (x *AftersaleRequest) Reset() {
	*x = AftersaleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersaleService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AftersaleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AftersaleRequest) ProtoMessage() {}

func (x *AftersaleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_aftersaleService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AftersaleRequest.ProtoReflect.Descriptor instead.
func (*AftersaleRequest) Descriptor() ([]byte, []int) {
	return file_aftersaleService_proto_rawDescGZIP(), []int{3}
}

func (x *AftersaleRequest) GetPaged() int32 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *AftersaleRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *AftersaleRequest) GetSorting() string {
	if x != nil {
		return x.Sorting
	}
	return ""
}

func (x *AftersaleRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AftersaleRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *AftersaleRequest) GetOrderDetailId() int64 {
	if x != nil {
		return x.OrderDetailId
	}
	return 0
}

func (x *AftersaleRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *AftersaleRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AftersaleRequest) GetGoodsId() int64 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *AftersaleRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *AftersaleRequest) GetRefundStatus() string {
	if x != nil {
		return x.RefundStatus
	}
	return ""
}

func (x *AftersaleRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AftersaleRequest) GetOrderNo() string {
	if x != nil {
		return x.OrderNo
	}
	return ""
}

func (x *AftersaleRequest) GetCheckType() string {
	if x != nil {
		return x.CheckType
	}
	return ""
}

func (x *AftersaleRequest) GetRefundment() string {
	if x != nil {
		return x.Refundment
	}
	return ""
}

func (x *AftersaleRequest) GetStatusList() []string {
	if x != nil {
		return x.StatusList
	}
	return nil
}

func (x *AftersaleRequest) GetNotStatusList() []string {
	if x != nil {
		return x.NotStatusList
	}
	return nil
}

func (x *AftersaleRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type AftersaleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Aftersale *Aftersale    `protobuf:"bytes,1,opt,name=aftersale,proto3" json:"aftersale"`
	Pager     *common.Pager `protobuf:"bytes,4,opt,name=pager,proto3" json:"pager"`
	Items     []*Aftersale  `protobuf:"bytes,5,rep,name=items,proto3" json:"items"`
	Info      *common.Info  `protobuf:"bytes,6,opt,name=info,proto3" json:"info"`
}

func (x *AftersaleData) Reset() {
	*x = AftersaleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersaleService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AftersaleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AftersaleData) ProtoMessage() {}

func (x *AftersaleData) ProtoReflect() protoreflect.Message {
	mi := &file_aftersaleService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AftersaleData.ProtoReflect.Descriptor instead.
func (*AftersaleData) Descriptor() ([]byte, []int) {
	return file_aftersaleService_proto_rawDescGZIP(), []int{4}
}

func (x *AftersaleData) GetAftersale() *Aftersale {
	if x != nil {
		return x.Aftersale
	}
	return nil
}

func (x *AftersaleData) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *AftersaleData) GetItems() []*Aftersale {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *AftersaleData) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

type AftersaleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *AftersaleData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error  `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *AftersaleResponse) Reset() {
	*x = AftersaleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersaleService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AftersaleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AftersaleResponse) ProtoMessage() {}

func (x *AftersaleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aftersaleService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AftersaleResponse.ProtoReflect.Descriptor instead.
func (*AftersaleResponse) Descriptor() ([]byte, []int) {
	return file_aftersaleService_proto_rawDescGZIP(), []int{5}
}

func (x *AftersaleResponse) GetData() *AftersaleData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AftersaleResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type AftersaleStepInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number   int32  `protobuf:"varint,1,opt,name=number,proto3" json:"number"`
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	IsCaret  bool   `protobuf:"varint,3,opt,name=is_caret,json=isCaret,proto3" json:"is_caret"`
	IsAngle  bool   `protobuf:"varint,4,opt,name=is_angle,json=isAngle,proto3" json:"is_angle"`
	IsActive bool   `protobuf:"varint,5,opt,name=is_active,json=isActive,proto3" json:"is_active"`
	IsEnd    bool   `protobuf:"varint,6,opt,name=is_end,json=isEnd,proto3" json:"is_end"`
}

func (x *AftersaleStepInfo) Reset() {
	*x = AftersaleStepInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersaleService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AftersaleStepInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AftersaleStepInfo) ProtoMessage() {}

func (x *AftersaleStepInfo) ProtoReflect() protoreflect.Message {
	mi := &file_aftersaleService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AftersaleStepInfo.ProtoReflect.Descriptor instead.
func (*AftersaleStepInfo) Descriptor() ([]byte, []int) {
	return file_aftersaleService_proto_rawDescGZIP(), []int{6}
}

func (x *AftersaleStepInfo) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *AftersaleStepInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AftersaleStepInfo) GetIsCaret() bool {
	if x != nil {
		return x.IsCaret
	}
	return false
}

func (x *AftersaleStepInfo) GetIsAngle() bool {
	if x != nil {
		return x.IsAngle
	}
	return false
}

func (x *AftersaleStepInfo) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

func (x *AftersaleStepInfo) GetIsEnd() bool {
	if x != nil {
		return x.IsEnd
	}
	return false
}

type AftersaleStepData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Step0 []*AftersaleStepInfo `protobuf:"bytes,1,rep,name=step0,proto3" json:"step0"`
	Step1 []*AftersaleStepInfo `protobuf:"bytes,2,rep,name=step1,proto3" json:"step1"`
}

func (x *AftersaleStepData) Reset() {
	*x = AftersaleStepData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersaleService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AftersaleStepData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AftersaleStepData) ProtoMessage() {}

func (x *AftersaleStepData) ProtoReflect() protoreflect.Message {
	mi := &file_aftersaleService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AftersaleStepData.ProtoReflect.Descriptor instead.
func (*AftersaleStepData) Descriptor() ([]byte, []int) {
	return file_aftersaleService_proto_rawDescGZIP(), []int{7}
}

func (x *AftersaleStepData) GetStep0() []*AftersaleStepInfo {
	if x != nil {
		return x.Step0
	}
	return nil
}

func (x *AftersaleStepData) GetStep1() []*AftersaleStepInfo {
	if x != nil {
		return x.Step1
	}
	return nil
}

type AftersaleReturnedData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReturnedQuantity int32 `protobuf:"varint,1,opt,name=returned_quantity,json=returnedQuantity,proto3" json:"returned_quantity"`
	RefundPrice      int64 `protobuf:"varint,2,opt,name=refund_price,json=refundPrice,proto3" json:"refund_price"`
}

func (x *AftersaleReturnedData) Reset() {
	*x = AftersaleReturnedData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersaleService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AftersaleReturnedData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AftersaleReturnedData) ProtoMessage() {}

func (x *AftersaleReturnedData) ProtoReflect() protoreflect.Message {
	mi := &file_aftersaleService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AftersaleReturnedData.ProtoReflect.Descriptor instead.
func (*AftersaleReturnedData) Descriptor() ([]byte, []int) {
	return file_aftersaleService_proto_rawDescGZIP(), []int{8}
}

func (x *AftersaleReturnedData) GetReturnedQuantity() int32 {
	if x != nil {
		return x.ReturnedQuantity
	}
	return 0
}

func (x *AftersaleReturnedData) GetRefundPrice() int64 {
	if x != nil {
		return x.RefundPrice
	}
	return 0
}

type AftersaleTypeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32  `protobuf:"varint,1,opt,name=value,proto3" json:"value"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Desc  string `protobuf:"bytes,3,opt,name=desc,proto3" json:"desc"`
	Icon  string `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon"`
	Class string `protobuf:"bytes,5,opt,name=class,proto3" json:"class"`
}

func (x *AftersaleTypeInfo) Reset() {
	*x = AftersaleTypeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersaleService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AftersaleTypeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AftersaleTypeInfo) ProtoMessage() {}

func (x *AftersaleTypeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_aftersaleService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AftersaleTypeInfo.ProtoReflect.Descriptor instead.
func (*AftersaleTypeInfo) Descriptor() ([]byte, []int) {
	return file_aftersaleService_proto_rawDescGZIP(), []int{9}
}

func (x *AftersaleTypeInfo) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *AftersaleTypeInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AftersaleTypeInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *AftersaleTypeInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *AftersaleTypeInfo) GetClass() string {
	if x != nil {
		return x.Class
	}
	return ""
}

type AftersaleServiceData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderData              *Order                 `protobuf:"bytes,1,opt,name=order_data,json=orderData,proto3" json:"order_data"`
	NewAftersaleData       *Aftersale             `protobuf:"bytes,2,opt,name=new_aftersale_data,json=newAftersaleData,proto3" json:"new_aftersale_data"`
	StepData               *AftersaleStepData     `protobuf:"bytes,3,opt,name=step_data,json=stepData,proto3" json:"step_data"`
	ReturnedData           *AftersaleReturnedData `protobuf:"bytes,4,opt,name=returned_data,json=returnedData,proto3" json:"returned_data"`
	ReturnOnlyMoneyReason  []string               `protobuf:"bytes,5,rep,name=return_only_money_reason,json=returnOnlyMoneyReason,proto3" json:"return_only_money_reason"`
	ReturnMoneyGoodsReason []string               `protobuf:"bytes,6,rep,name=return_money_goods_reason,json=returnMoneyGoodsReason,proto3" json:"return_money_goods_reason"`
	ReturnGoodsAddress     string                 `protobuf:"bytes,7,opt,name=return_goods_address,json=returnGoodsAddress,proto3" json:"return_goods_address"`
	AftersaleTypeList      []*AftersaleTypeInfo   `protobuf:"bytes,8,rep,name=aftersale_type_list,json=aftersaleTypeList,proto3" json:"aftersale_type_list"`
	EditorPathType         string                 `protobuf:"bytes,9,opt,name=editor_path_type,json=editorPathType,proto3" json:"editor_path_type"`
}

func (x *AftersaleServiceData) Reset() {
	*x = AftersaleServiceData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersaleService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AftersaleServiceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AftersaleServiceData) ProtoMessage() {}

func (x *AftersaleServiceData) ProtoReflect() protoreflect.Message {
	mi := &file_aftersaleService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AftersaleServiceData.ProtoReflect.Descriptor instead.
func (*AftersaleServiceData) Descriptor() ([]byte, []int) {
	return file_aftersaleService_proto_rawDescGZIP(), []int{10}
}

func (x *AftersaleServiceData) GetOrderData() *Order {
	if x != nil {
		return x.OrderData
	}
	return nil
}

func (x *AftersaleServiceData) GetNewAftersaleData() *Aftersale {
	if x != nil {
		return x.NewAftersaleData
	}
	return nil
}

func (x *AftersaleServiceData) GetStepData() *AftersaleStepData {
	if x != nil {
		return x.StepData
	}
	return nil
}

func (x *AftersaleServiceData) GetReturnedData() *AftersaleReturnedData {
	if x != nil {
		return x.ReturnedData
	}
	return nil
}

func (x *AftersaleServiceData) GetReturnOnlyMoneyReason() []string {
	if x != nil {
		return x.ReturnOnlyMoneyReason
	}
	return nil
}

func (x *AftersaleServiceData) GetReturnMoneyGoodsReason() []string {
	if x != nil {
		return x.ReturnMoneyGoodsReason
	}
	return nil
}

func (x *AftersaleServiceData) GetReturnGoodsAddress() string {
	if x != nil {
		return x.ReturnGoodsAddress
	}
	return ""
}

func (x *AftersaleServiceData) GetAftersaleTypeList() []*AftersaleTypeInfo {
	if x != nil {
		return x.AftersaleTypeList
	}
	return nil
}

func (x *AftersaleServiceData) GetEditorPathType() string {
	if x != nil {
		return x.EditorPathType
	}
	return ""
}

type AftersaleServiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *AftersaleServiceData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error         `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *AftersaleServiceResponse) Reset() {
	*x = AftersaleServiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_aftersaleService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AftersaleServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AftersaleServiceResponse) ProtoMessage() {}

func (x *AftersaleServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_aftersaleService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AftersaleServiceResponse.ProtoReflect.Descriptor instead.
func (*AftersaleServiceResponse) Descriptor() ([]byte, []int) {
	return file_aftersaleService_proto_rawDescGZIP(), []int{11}
}

func (x *AftersaleServiceResponse) GetData() *AftersaleServiceData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AftersaleServiceResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_aftersaleService_proto protoreflect.FileDescriptor

var file_aftersaleService_proto_rawDesc = []byte{
	0x0a, 0x16, 0x61, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x62, 0x61, 0x73, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xf8, 0x08, 0x0a, 0x09, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4e, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b,
	0x75, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x72,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x5f, 0x73, 0x75, 0x62, 0x73, 0x69, 0x64, 0x79, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x53, 0x75, 0x62, 0x73,
	0x69, 0x64, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x73, 0x65, 0x5f,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x66, 0x75, 0x73, 0x65, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a,
	0x0e, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x72, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x61,
	0x75, 0x64, 0x69, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x75, 0x64, 0x69, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x19, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x25, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x30,
	0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73,
	0x61, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x65, 0x78,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x20,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x27,
	0x0a, 0x0f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x69, 0x70, 0x73, 0x5f,
	0x6d, 0x73, 0x67, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x69, 0x70, 0x73, 0x4d,
	0x73, 0x67, 0x12, 0x47, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x23, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x2e, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x3e, 0x0a, 0x10, 0x4f,
	0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x7b, 0x0a, 0x0e, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x61, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x61, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x93, 0x01, 0x0a, 0x10, 0x41, 0x66, 0x74,
	0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x64,
	0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x61, 0x72, 0x65, 0x61, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x61, 0x72, 0x65, 0x61, 0x22, 0x8c,
	0x04, 0x0a, 0x10, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x6e, 0x6f, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x4e, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x11, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x6f, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x12, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x6f,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0xb4, 0x01,
	0x0a, 0x0d, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x31, 0x0a, 0x09, 0x61, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x52, 0x09, 0x61, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61,
	0x6c, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72,
	0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x22, 0x65, 0x0a, 0x11, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xa9, 0x01, 0x0a, 0x11,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x53, 0x74, 0x65, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x73, 0x5f, 0x63, 0x61, 0x72, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x69, 0x73, 0x43, 0x61, 0x72, 0x65, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61,
	0x6e, 0x67, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x41, 0x6e,
	0x67, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x69, 0x73, 0x45, 0x6e, 0x64, 0x22, 0x79, 0x0a, 0x11, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x73, 0x61, 0x6c, 0x65, 0x53, 0x74, 0x65, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x31, 0x0a, 0x05,
	0x73, 0x74, 0x65, 0x70, 0x30, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65,
	0x53, 0x74, 0x65, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x73, 0x74, 0x65, 0x70, 0x30, 0x12,
	0x31, 0x0a, 0x05, 0x73, 0x74, 0x65, 0x70, 0x31, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73,
	0x61, 0x6c, 0x65, 0x53, 0x74, 0x65, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x73, 0x74, 0x65,
	0x70, 0x31, 0x22, 0x67, 0x0a, 0x15, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x11, 0x72,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64,
	0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x66, 0x75,
	0x6e, 0x64, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x7b, 0x0a, 0x11, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x12,
	0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x22, 0xa6, 0x04, 0x0a, 0x14, 0x41, 0x66, 0x74,
	0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x2e, 0x0a, 0x0a, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x09, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x41, 0x0a, 0x12, 0x6e, 0x65, 0x77, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61,
	0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61,
	0x6c, 0x65, 0x52, 0x10, 0x6e, 0x65, 0x77, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x65, 0x70, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x53, 0x74, 0x65, 0x70,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x73, 0x74, 0x65, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x44,
	0x0a, 0x0d, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x65, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x65, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x18, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x6f,
	0x6e, 0x6c, 0x79, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x15, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4f, 0x6e,
	0x6c, 0x79, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x39, 0x0a,
	0x19, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x5f, 0x67, 0x6f,
	0x6f, 0x64, 0x73, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x16, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x14, 0x72, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x4b, 0x0a, 0x13, 0x61, 0x66,
	0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x11, 0x61, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x64, 0x69, 0x74, 0x6f,
	0x72, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x65, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x74, 0x68, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x73, 0x0a, 0x18, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xd3, 0x08, 0x0a, 0x10, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x73, 0x61, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61,
	0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x54, 0x0a, 0x10, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x73, 0x61, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1a, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c,
	0x0a, 0x0f, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x66, 0x74,
	0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0f,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12,
	0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x73, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0e, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x13, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c,
	0x65, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x66, 0x74,
	0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x45, 0x0a, 0x0f, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x11, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x73, 0x61, 0x6c, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x13, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c,
	0x65, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x66, 0x74,
	0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x4b, 0x0a, 0x0e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x41, 0x75, 0x64,
	0x69, 0x74, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x66,
	0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73,
	0x61, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a,
	0x0f, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x66, 0x75, 0x73, 0x65,
	0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x66, 0x74, 0x65,
	0x72, 0x73, 0x61, 0x6c, 0x65, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0f, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c,
	0x65, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x1a, 0x1b, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x10, 0x41,
	0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x12,
	0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x73, 0x61, 0x6c, 0x65, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0f, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x1a, 0x1b, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0c, 0x4c, 0x61,
	0x75, 0x6e, 0x63, 0x68, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x1a,
	0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72,
	0x73, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x39,
	0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x04, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x66, 0x74,
	0x65, 0x72, 0x73, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x66, 0x74, 0x65, 0x72, 0x73, 0x61,
	0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b,
	0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_aftersaleService_proto_rawDescOnce sync.Once
	file_aftersaleService_proto_rawDescData = file_aftersaleService_proto_rawDesc
)

func file_aftersaleService_proto_rawDescGZIP() []byte {
	file_aftersaleService_proto_rawDescOnce.Do(func() {
		file_aftersaleService_proto_rawDescData = protoimpl.X.CompressGZIP(file_aftersaleService_proto_rawDescData)
	})
	return file_aftersaleService_proto_rawDescData
}

var file_aftersaleService_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_aftersaleService_proto_goTypes = []interface{}{
	(*Aftersale)(nil),                // 0: services.Aftersale
	(*AftersaleImage)(nil),           // 1: services.AftersaleImage
	(*AftersaleAddress)(nil),         // 2: services.AftersaleAddress
	(*AftersaleRequest)(nil),         // 3: services.AftersaleRequest
	(*AftersaleData)(nil),            // 4: services.AftersaleData
	(*AftersaleResponse)(nil),        // 5: services.AftersaleResponse
	(*AftersaleStepInfo)(nil),        // 6: services.AftersaleStepInfo
	(*AftersaleStepData)(nil),        // 7: services.AftersaleStepData
	(*AftersaleReturnedData)(nil),    // 8: services.AftersaleReturnedData
	(*AftersaleTypeInfo)(nil),        // 9: services.AftersaleTypeInfo
	(*AftersaleServiceData)(nil),     // 10: services.AftersaleServiceData
	(*AftersaleServiceResponse)(nil), // 11: services.AftersaleServiceResponse
	nil,                              // 12: services.Aftersale.OperateDataEntry
	(*Order)(nil),                    // 13: services.Order
	(*AreaInfo)(nil),                 // 14: services.AreaInfo
	(*common.Pager)(nil),             // 15: common.Pager
	(*common.Info)(nil),              // 16: common.Info
	(*common.Error)(nil),             // 17: common.Error
}
var file_aftersaleService_proto_depIdxs = []int32{
	13, // 0: services.Aftersale.order:type_name -> services.Order
	1,  // 1: services.Aftersale.images:type_name -> services.AftersaleImage
	12, // 2: services.Aftersale.operate_data:type_name -> services.Aftersale.OperateDataEntry
	14, // 3: services.AftersaleAddress.area:type_name -> services.AreaInfo
	0,  // 4: services.AftersaleData.aftersale:type_name -> services.Aftersale
	15, // 5: services.AftersaleData.pager:type_name -> common.Pager
	0,  // 6: services.AftersaleData.items:type_name -> services.Aftersale
	16, // 7: services.AftersaleData.info:type_name -> common.Info
	4,  // 8: services.AftersaleResponse.data:type_name -> services.AftersaleData
	17, // 9: services.AftersaleResponse.error:type_name -> common.Error
	6,  // 10: services.AftersaleStepData.step0:type_name -> services.AftersaleStepInfo
	6,  // 11: services.AftersaleStepData.step1:type_name -> services.AftersaleStepInfo
	13, // 12: services.AftersaleServiceData.order_data:type_name -> services.Order
	0,  // 13: services.AftersaleServiceData.new_aftersale_data:type_name -> services.Aftersale
	7,  // 14: services.AftersaleServiceData.step_data:type_name -> services.AftersaleStepData
	8,  // 15: services.AftersaleServiceData.returned_data:type_name -> services.AftersaleReturnedData
	9,  // 16: services.AftersaleServiceData.aftersale_type_list:type_name -> services.AftersaleTypeInfo
	10, // 17: services.AftersaleServiceResponse.data:type_name -> services.AftersaleServiceData
	17, // 18: services.AftersaleServiceResponse.error:type_name -> common.Error
	3,  // 19: services.AftersaleService.AftersaleIndex:input_type -> services.AftersaleRequest
	3,  // 20: services.AftersaleService.AftersaleService:input_type -> services.AftersaleRequest
	3,  // 21: services.AftersaleService.AftersaleDetail:input_type -> services.AftersaleRequest
	3,  // 22: services.AftersaleService.AftersaleSearch:input_type -> services.AftersaleRequest
	0,  // 23: services.AftersaleService.AftersaleTotal:input_type -> services.Aftersale
	0,  // 24: services.AftersaleService.AftersaleCreate:input_type -> services.Aftersale
	0,  // 25: services.AftersaleService.AftersaleDelivery:input_type -> services.Aftersale
	3,  // 26: services.AftersaleService.AftersaleAudit:input_type -> services.AftersaleRequest
	0,  // 27: services.AftersaleService.AftersaleRefuse:input_type -> services.Aftersale
	0,  // 28: services.AftersaleService.AftersaleDelete:input_type -> services.Aftersale
	0,  // 29: services.AftersaleService.AftersaleConfirm:input_type -> services.Aftersale
	0,  // 30: services.AftersaleService.AftersaleCancel:input_type -> services.Aftersale
	0,  // 31: services.AftersaleService.LaunchRefund:input_type -> services.Aftersale
	0,  // 32: services.AftersaleService.Get:input_type -> services.Aftersale
	3,  // 33: services.AftersaleService.List:input_type -> services.AftersaleRequest
	5,  // 34: services.AftersaleService.AftersaleIndex:output_type -> services.AftersaleResponse
	11, // 35: services.AftersaleService.AftersaleService:output_type -> services.AftersaleServiceResponse
	5,  // 36: services.AftersaleService.AftersaleDetail:output_type -> services.AftersaleResponse
	5,  // 37: services.AftersaleService.AftersaleSearch:output_type -> services.AftersaleResponse
	5,  // 38: services.AftersaleService.AftersaleTotal:output_type -> services.AftersaleResponse
	5,  // 39: services.AftersaleService.AftersaleCreate:output_type -> services.AftersaleResponse
	5,  // 40: services.AftersaleService.AftersaleDelivery:output_type -> services.AftersaleResponse
	5,  // 41: services.AftersaleService.AftersaleAudit:output_type -> services.AftersaleResponse
	5,  // 42: services.AftersaleService.AftersaleRefuse:output_type -> services.AftersaleResponse
	5,  // 43: services.AftersaleService.AftersaleDelete:output_type -> services.AftersaleResponse
	5,  // 44: services.AftersaleService.AftersaleConfirm:output_type -> services.AftersaleResponse
	5,  // 45: services.AftersaleService.AftersaleCancel:output_type -> services.AftersaleResponse
	5,  // 46: services.AftersaleService.LaunchRefund:output_type -> services.AftersaleResponse
	5,  // 47: services.AftersaleService.Get:output_type -> services.AftersaleResponse
	5,  // 48: services.AftersaleService.List:output_type -> services.AftersaleResponse
	34, // [34:49] is the sub-list for method output_type
	19, // [19:34] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_aftersaleService_proto_init() }
func file_aftersaleService_proto_init() {
	if File_aftersaleService_proto != nil {
		return
	}
	file_orderService_proto_init()
	file_baseInfoService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_aftersaleService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Aftersale); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersaleService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AftersaleImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersaleService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AftersaleAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersaleService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AftersaleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersaleService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AftersaleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersaleService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AftersaleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersaleService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AftersaleStepInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersaleService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AftersaleStepData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersaleService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AftersaleReturnedData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersaleService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AftersaleTypeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersaleService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AftersaleServiceData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_aftersaleService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AftersaleServiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_aftersaleService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_aftersaleService_proto_goTypes,
		DependencyIndexes: file_aftersaleService_proto_depIdxs,
		MessageInfos:      file_aftersaleService_proto_msgTypes,
	}.Build()
	File_aftersaleService_proto = out.File
	file_aftersaleService_proto_rawDesc = nil
	file_aftersaleService_proto_goTypes = nil
	file_aftersaleService_proto_depIdxs = nil
}
