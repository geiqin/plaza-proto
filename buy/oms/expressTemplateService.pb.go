// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: expressTemplateService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExpressTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged      int64   `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize   int64   `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Sorting    string  `protobuf:"bytes,3,opt,name=sorting,proto3" json:"sorting"`
	Keywords   string  `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords"`
	Id         int64   `protobuf:"varint,5,opt,name=id,proto3" json:"id"`
	ExpressId  int64   `protobuf:"varint,6,opt,name=express_id,json=expressId,proto3" json:"express_id"`
	Ids        []int64 `protobuf:"varint,7,rep,packed,name=ids,proto3" json:"ids"`
	ExpressIds []int64 `protobuf:"varint,8,rep,packed,name=express_ids,json=expressIds,proto3" json:"express_ids"`
}

func (x *ExpressTemplateRequest) Reset() {
	*x = ExpressTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_expressTemplateService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpressTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpressTemplateRequest) ProtoMessage() {}

func (x *ExpressTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_expressTemplateService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpressTemplateRequest.ProtoReflect.Descriptor instead.
func (*ExpressTemplateRequest) Descriptor() ([]byte, []int) {
	return file_expressTemplateService_proto_rawDescGZIP(), []int{0}
}

func (x *ExpressTemplateRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *ExpressTemplateRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ExpressTemplateRequest) GetSorting() string {
	if x != nil {
		return x.Sorting
	}
	return ""
}

func (x *ExpressTemplateRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *ExpressTemplateRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ExpressTemplateRequest) GetExpressId() int64 {
	if x != nil {
		return x.ExpressId
	}
	return 0
}

func (x *ExpressTemplateRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ExpressTemplateRequest) GetExpressIds() []int64 {
	if x != nil {
		return x.ExpressIds
	}
	return nil
}

type ExpressAdjustment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpuId      int64  `protobuf:"varint,1,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`
	Type       string `protobuf:"bytes,2,opt,name=type,proto3" json:"type"`
	Label      string `protobuf:"bytes,3,opt,name=label,proto3" json:"label"`
	TemplateId int64  `protobuf:"varint,4,opt,name=template_id,json=templateId,proto3" json:"template_id"`
	Price      int64  `protobuf:"varint,5,opt,name=price,proto3" json:"price"`
}

func (x *ExpressAdjustment) Reset() {
	*x = ExpressAdjustment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_expressTemplateService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpressAdjustment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpressAdjustment) ProtoMessage() {}

func (x *ExpressAdjustment) ProtoReflect() protoreflect.Message {
	mi := &file_expressTemplateService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpressAdjustment.ProtoReflect.Descriptor instead.
func (*ExpressAdjustment) Descriptor() ([]byte, []int) {
	return file_expressTemplateService_proto_rawDescGZIP(), []int{1}
}

func (x *ExpressAdjustment) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *ExpressAdjustment) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ExpressAdjustment) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ExpressAdjustment) GetTemplateId() int64 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *ExpressAdjustment) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type ExpressTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64                    `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Name          string                   `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Method        string                   `protobuf:"bytes,3,opt,name=method,proto3" json:"method"`
	IsDefault     string                   `protobuf:"bytes,4,opt,name=is_default,json=isDefault,proto3" json:"is_default"`
	CreatedAt     string                   `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt     string                   `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	Details       []*ExpressTemplateDetail `protobuf:"bytes,7,rep,name=details,proto3" json:"details"`
	UseSpuCount   int64                    `protobuf:"varint,8,opt,name=use_spu_count,json=useSpuCount,proto3" json:"use_spu_count"`
	MethodName    string                   `protobuf:"bytes,9,opt,name=method_name,json=methodName,proto3" json:"method_name"`
	IsDefaultName string                   `protobuf:"bytes,10,opt,name=is_default_name,json=isDefaultName,proto3" json:"is_default_name"`
}

func (x *ExpressTemplate) Reset() {
	*x = ExpressTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_expressTemplateService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpressTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpressTemplate) ProtoMessage() {}

func (x *ExpressTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_expressTemplateService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpressTemplate.ProtoReflect.Descriptor instead.
func (*ExpressTemplate) Descriptor() ([]byte, []int) {
	return file_expressTemplateService_proto_rawDescGZIP(), []int{2}
}

func (x *ExpressTemplate) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ExpressTemplate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExpressTemplate) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ExpressTemplate) GetIsDefault() string {
	if x != nil {
		return x.IsDefault
	}
	return ""
}

func (x *ExpressTemplate) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ExpressTemplate) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *ExpressTemplate) GetDetails() []*ExpressTemplateDetail {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ExpressTemplate) GetUseSpuCount() int64 {
	if x != nil {
		return x.UseSpuCount
	}
	return 0
}

func (x *ExpressTemplate) GetMethodName() string {
	if x != nil {
		return x.MethodName
	}
	return ""
}

func (x *ExpressTemplate) GetIsDefaultName() string {
	if x != nil {
		return x.IsDefaultName
	}
	return ""
}

type ExpressTemplateDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstWeight      int64   `protobuf:"varint,3,opt,name=first_weight,json=firstWeight,proto3" json:"first_weight"`
	FirstNumber      int32   `protobuf:"varint,4,opt,name=first_number,json=firstNumber,proto3" json:"first_number"`
	ExpressFee       int64   `protobuf:"varint,5,opt,name=express_fee,json=expressFee,proto3" json:"express_fee"`
	AdditionalWeight int64   `protobuf:"varint,6,opt,name=additional_weight,json=additionalWeight,proto3" json:"additional_weight"`
	AdditionalNumber int32   `protobuf:"varint,7,opt,name=additional_number,json=additionalNumber,proto3" json:"additional_number"`
	AdditionalFee    int64   `protobuf:"varint,8,opt,name=additional_fee,json=additionalFee,proto3" json:"additional_fee"`
	CreatedAt        string  `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt        string  `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	RangeAreaText    string  `protobuf:"bytes,11,opt,name=range_area_text,json=rangeAreaText,proto3" json:"range_area_text"`
	RangeAreaIds     []int64 `protobuf:"varint,12,rep,packed,name=range_area_ids,json=rangeAreaIds,proto3" json:"range_area_ids"`
}

func (x *ExpressTemplateDetail) Reset() {
	*x = ExpressTemplateDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_expressTemplateService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpressTemplateDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpressTemplateDetail) ProtoMessage() {}

func (x *ExpressTemplateDetail) ProtoReflect() protoreflect.Message {
	mi := &file_expressTemplateService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpressTemplateDetail.ProtoReflect.Descriptor instead.
func (*ExpressTemplateDetail) Descriptor() ([]byte, []int) {
	return file_expressTemplateService_proto_rawDescGZIP(), []int{3}
}

func (x *ExpressTemplateDetail) GetFirstWeight() int64 {
	if x != nil {
		return x.FirstWeight
	}
	return 0
}

func (x *ExpressTemplateDetail) GetFirstNumber() int32 {
	if x != nil {
		return x.FirstNumber
	}
	return 0
}

func (x *ExpressTemplateDetail) GetExpressFee() int64 {
	if x != nil {
		return x.ExpressFee
	}
	return 0
}

func (x *ExpressTemplateDetail) GetAdditionalWeight() int64 {
	if x != nil {
		return x.AdditionalWeight
	}
	return 0
}

func (x *ExpressTemplateDetail) GetAdditionalNumber() int32 {
	if x != nil {
		return x.AdditionalNumber
	}
	return 0
}

func (x *ExpressTemplateDetail) GetAdditionalFee() int64 {
	if x != nil {
		return x.AdditionalFee
	}
	return 0
}

func (x *ExpressTemplateDetail) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ExpressTemplateDetail) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *ExpressTemplateDetail) GetRangeAreaText() string {
	if x != nil {
		return x.RangeAreaText
	}
	return ""
}

func (x *ExpressTemplateDetail) GetRangeAreaIds() []int64 {
	if x != nil {
		return x.RangeAreaIds
	}
	return nil
}

type ExpressTemplateData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *ExpressTemplate   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager      `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*ExpressTemplate `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Info   *common.Info       `protobuf:"bytes,4,opt,name=info,proto3" json:"info"`
}

func (x *ExpressTemplateData) Reset() {
	*x = ExpressTemplateData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_expressTemplateService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpressTemplateData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpressTemplateData) ProtoMessage() {}

func (x *ExpressTemplateData) ProtoReflect() protoreflect.Message {
	mi := &file_expressTemplateService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpressTemplateData.ProtoReflect.Descriptor instead.
func (*ExpressTemplateData) Descriptor() ([]byte, []int) {
	return file_expressTemplateService_proto_rawDescGZIP(), []int{4}
}

func (x *ExpressTemplateData) GetEntity() *ExpressTemplate {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *ExpressTemplateData) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *ExpressTemplateData) GetItems() []*ExpressTemplate {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ExpressTemplateData) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

type ExpressTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *ExpressTemplateData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error        `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *ExpressTemplateResponse) Reset() {
	*x = ExpressTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_expressTemplateService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpressTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpressTemplateResponse) ProtoMessage() {}

func (x *ExpressTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_expressTemplateService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpressTemplateResponse.ProtoReflect.Descriptor instead.
func (*ExpressTemplateResponse) Descriptor() ([]byte, []int) {
	return file_expressTemplateService_proto_rawDescGZIP(), []int{5}
}

func (x *ExpressTemplateResponse) GetData() *ExpressTemplateData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *ExpressTemplateResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_expressTemplateService_proto protoreflect.FileDescriptor

var file_expressTemplateService_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe3, 0x01, 0x0a, 0x16,
	0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74,
	0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x69, 0x64, 0x73, 0x18,
	0x08, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x49, 0x64,
	0x73, 0x22, 0x8b, 0x01, 0x0a, 0x11, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x41, 0x64, 0x6a,
	0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x70, 0x75, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x70, 0x75, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22,
	0xd2, 0x02, 0x0a, 0x0f, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x07,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x5f, 0x73,
	0x70, 0x75, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b,
	0x75, 0x73, 0x65, 0x53, 0x70, 0x75, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f,
	0x69, 0x73, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x8b, 0x03, 0x0a, 0x15, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x21,
	0x0a, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f,
	0x66, 0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x46, 0x65, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x10, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x57, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x61,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x25, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x66, 0x65,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x46, 0x65, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x61, 0x72,
	0x65, 0x61, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x41, 0x72, 0x65, 0x61, 0x54, 0x65, 0x78, 0x74, 0x12, 0x24, 0x0a, 0x0e,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x72, 0x65, 0x61, 0x49,
	0x64, 0x73, 0x22, 0xc0, 0x01, 0x0a, 0x13, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x31, 0x0a, 0x06, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x72, 0x12, 0x2f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x71, 0x0a, 0x17, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xdc, 0x05, 0x0a, 0x16, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x48, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x1a, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48, 0x0a,
	0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61,
	0x74, 0x65, 0x1a, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x04, 0x43, 0x6f, 0x70, 0x79, 0x12,
	0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x12, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x19,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x1a, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52,
	0x0a, 0x09, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x65, 0x64, 0x12, 0x20, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x54, 0x65,
	0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x53, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x12, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_expressTemplateService_proto_rawDescOnce sync.Once
	file_expressTemplateService_proto_rawDescData = file_expressTemplateService_proto_rawDesc
)

func file_expressTemplateService_proto_rawDescGZIP() []byte {
	file_expressTemplateService_proto_rawDescOnce.Do(func() {
		file_expressTemplateService_proto_rawDescData = protoimpl.X.CompressGZIP(file_expressTemplateService_proto_rawDescData)
	})
	return file_expressTemplateService_proto_rawDescData
}

var file_expressTemplateService_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_expressTemplateService_proto_goTypes = []interface{}{
	(*ExpressTemplateRequest)(nil),  // 0: services.ExpressTemplateRequest
	(*ExpressAdjustment)(nil),       // 1: services.ExpressAdjustment
	(*ExpressTemplate)(nil),         // 2: services.ExpressTemplate
	(*ExpressTemplateDetail)(nil),   // 3: services.ExpressTemplateDetail
	(*ExpressTemplateData)(nil),     // 4: services.ExpressTemplateData
	(*ExpressTemplateResponse)(nil), // 5: services.ExpressTemplateResponse
	(*common.Pager)(nil),            // 6: common.Pager
	(*common.Info)(nil),             // 7: common.Info
	(*common.Error)(nil),            // 8: common.Error
}
var file_expressTemplateService_proto_depIdxs = []int32{
	3,  // 0: services.ExpressTemplate.details:type_name -> services.ExpressTemplateDetail
	2,  // 1: services.ExpressTemplateData.entity:type_name -> services.ExpressTemplate
	6,  // 2: services.ExpressTemplateData.pager:type_name -> common.Pager
	2,  // 3: services.ExpressTemplateData.items:type_name -> services.ExpressTemplate
	7,  // 4: services.ExpressTemplateData.info:type_name -> common.Info
	4,  // 5: services.ExpressTemplateResponse.data:type_name -> services.ExpressTemplateData
	8,  // 6: services.ExpressTemplateResponse.error:type_name -> common.Error
	2,  // 7: services.ExpressTemplateService.Create:input_type -> services.ExpressTemplate
	2,  // 8: services.ExpressTemplateService.Update:input_type -> services.ExpressTemplate
	0,  // 9: services.ExpressTemplateService.Copy:input_type -> services.ExpressTemplateRequest
	0,  // 10: services.ExpressTemplateService.Delete:input_type -> services.ExpressTemplateRequest
	0,  // 11: services.ExpressTemplateService.Search:input_type -> services.ExpressTemplateRequest
	0,  // 12: services.ExpressTemplateService.List:input_type -> services.ExpressTemplateRequest
	2,  // 13: services.ExpressTemplateService.Get:input_type -> services.ExpressTemplate
	0,  // 14: services.ExpressTemplateService.Defaulted:input_type -> services.ExpressTemplateRequest
	0,  // 15: services.ExpressTemplateService.GetDefault:input_type -> services.ExpressTemplateRequest
	5,  // 16: services.ExpressTemplateService.Create:output_type -> services.ExpressTemplateResponse
	5,  // 17: services.ExpressTemplateService.Update:output_type -> services.ExpressTemplateResponse
	5,  // 18: services.ExpressTemplateService.Copy:output_type -> services.ExpressTemplateResponse
	5,  // 19: services.ExpressTemplateService.Delete:output_type -> services.ExpressTemplateResponse
	5,  // 20: services.ExpressTemplateService.Search:output_type -> services.ExpressTemplateResponse
	5,  // 21: services.ExpressTemplateService.List:output_type -> services.ExpressTemplateResponse
	5,  // 22: services.ExpressTemplateService.Get:output_type -> services.ExpressTemplateResponse
	5,  // 23: services.ExpressTemplateService.Defaulted:output_type -> services.ExpressTemplateResponse
	5,  // 24: services.ExpressTemplateService.GetDefault:output_type -> services.ExpressTemplateResponse
	16, // [16:25] is the sub-list for method output_type
	7,  // [7:16] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_expressTemplateService_proto_init() }
func file_expressTemplateService_proto_init() {
	if File_expressTemplateService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_expressTemplateService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpressTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_expressTemplateService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpressAdjustment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_expressTemplateService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpressTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_expressTemplateService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpressTemplateDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_expressTemplateService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpressTemplateData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_expressTemplateService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpressTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_expressTemplateService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_expressTemplateService_proto_goTypes,
		DependencyIndexes: file_expressTemplateService_proto_depIdxs,
		MessageInfos:      file_expressTemplateService_proto_msgTypes,
	}.Build()
	File_expressTemplateService_proto = out.File
	file_expressTemplateService_proto_rawDesc = nil
	file_expressTemplateService_proto_goTypes = nil
	file_expressTemplateService_proto_depIdxs = nil
}
