syntax = "proto3";
package services;
option go_package = "/.;services";
import "orderAddressService.proto";
import "baseInfoService.proto";
//结账台
service BuyService {
    //确认信息
    rpc Confirm (BuyRequest) returns (BuyResponse) {}
    //提交订单
    rpc Submit (BuyRequest) returns (BuyResponse) {}
    //订单拆分处理【service】
    rpc OrderSplitHandle (BuyRequest) returns (BuyResponse) {}
    //购买商品服务验证【service】
    rpc BuyGoodsCheck (BuyRequest) returns (BuyResponse) {}
}

message BuyGroup {
    WarehouseInfo warehouse =1;
    BuyOrderBase order_base =2;//订单基本信息
    repeated BuyOrderItem order_items = 3; //订单商品列表
    repeated OrderIncrease order_increases = 4; //订单增加数据
    repeated OrderDiscount order_discounts = 5; //订单优惠数据
    repeated int64 member_coupon_ids = 6; //选择的优惠劵IDS
}

message BuyOrderItem  {
    int64 spu_id = 1; //商品ID
    string sku_key = 2; //SKUKey
    int64 spec_weight = 3; //规格重量
    int64 spec_volume = 4; //规格体积
    int64 quantity = 5; //购买数量
    int64 unit_price = 6; //商品单价
    int64 total_price = 7; //合计价格
    int64 discount_share = 8; //优惠分摊
    int64 final_price = 9; //支付价格
    ProductInfo product =10;
    string is_invalid =11;//是否无效（0否，1是）
    string is_error =12;//是否错误（0否，1是）
    string error_msg =13;//错误信息
}


//订单基础信息
message BuyOrderBase {
    int64 total_amount =1; //订单总价
    int64 final_amount =2; //订单实付金额(已减去优惠金额, 已加上增加金额)
    int64 increase_amount =3; //增加金额
    int64 discount_amount =4; //优惠金额
    float buy_count =5;//购买商品总数量(总件数+总称重（千克）)
    int64 buy_count_number =6;//购买商品总件数（非称重商品）
    int64 buy_count_weighed =7;//购买商品总称重（称重商品.克）
    int64 spec_total_weight =8;//规格重量合计
    int64 spec_total_volume =9; //规格体积合计
    int64 use_integral = 10; //使用的积分
    int64 use_surplus = 11; //使用的余额
    int64 member_id = 12; //会员ID
    int64 warehouse_id = 13; //仓库ID
}


//确认信息请求参数
message BuyRequest {
    string buy_mode = 1; //购买模式: direct-直接购买,cart-购物车下单，cashier-收银台下单
    string address_type = 2; //收货地址类型：1-用户地址：2-自提点地址
    int64 address_id = 3; //收货地址ID
    string user_note = 4; //买家留言(50字以内)
    string payment_method = 5; //选中的支付方式
    int64 coupon_id = 6; //选中的优惠劵凭证ID
    int64 use_integral = 7; //使用的积分
    int64 use_surplus = 8; //使用的余额
    int64 agent_member_id = 9; //代理的客户ID（操作员代客下单）
    int64 realstore_id = 10; //多门店Id
    int64 shop_id = 11; //多商户Id
    float location_lng =12;//位置经度
    float location_lat =13;//位置纬度
    string location_address =14;//位置地址信息
    string logistics_type =22;//物流类型：1-快递发货，2-同城配送，3-用户自提，4-虚拟发货(无需物流)
    map<int64,int64> choice_coupon_ids =15;//选中优惠劵 <仓库ID,用户优惠劵ID>
    repeated int64 buy_cart_ids = 16; ///购物车ids
    BuyCommodity buy_commodity =17; //直接购买商品【单个商品】
    repeated BuyCommodity buy_commodities =18; //购买商品清单【多个商品】
    bool is_use_integral = 19; //是否使用积分
    bool is_use_surplus = 20; //是否使用余额
    bool is_order_submit = 21; //订单是否已提交
}

//购买商品信息
message BuyCommodity {
    int64 spu_id = 1; //商品ID
    string sku_key =2;//规格sku_key
    int64 stock = 3; //数量
    int64 cart_id =4;//购物车行id【购物车专用】
}

//购买确认数据
message BuyConfirmData{
    BuyOrderBase base = 1;//结算信息(汇总)
    repeated BuyGroup group_list =2; //分组商品列表
    repeated PaymentInfo payment_list =3; //支付方式列表
    BuyRequest request_data =4;//提交信息反馈
    string submit_button_text =5;//提交按钮文本
    string default_payment_method =7;//默认支付方式
    string default_address_type =8;//默认地址类型
    int64 default_address_id =9;//默认地址ID
    OrderAddress consignee_address =10;//收件人地址
    bytes choice_delivery_data =11;//选择配送数据
    bytes integral_data =13; //积分数据
    string is_error =15;//是否有错误（0否，1是）
    string error_msg =16;//错误信息

    //repeated OrderAddress mention_points =7; //自提点地址
    // map<string,string> plugins_data =10;//插件数据
    // string common_site_type =8;//站点类型
    //string is_order_submit = 12; //是否订单已提交 0否，1是
    //IntegralDeductionData integral_deduction_data =13; //积分抵现数据
    //IntegralExchangeData integral_exchange_data =14; //积分兑换数据
}

/*
//积分数据
message IntegralData{
    int64 actual_use_integral =1; //实际使用积分
    int64 use_integral =2; //使用积分
    int64 discount_price =3;//抵扣积分金额
    int64 user_integral =4;//用户积分
    string is_support_goods_exchange =5;//是否支持积分兑换（0否，1是）
    string discount_type =6;//积分优惠类型（0抵现，1兑换）
}

//积分数据
message IntegralData{
    int64 user_integral =1;//用户积分
    int64 use_integral =2; //使用积分
    int64 require_integral =3; //需要积分
    int64 discount_amount =4;//积分抵扣金额
    bool has_open_deduction =5;//开启积分抵扣
    bool has_open_exchange =6;//开启积分对换
    bool is_error =7;//是否有错误
    string error_msg =8;//错误信息
}
 */
/*

//积分抵现数据
message IntegralDeductionData{
    string is_enabled =1;//是否可用（0否，1是）
    int64 user_integral =2;//用户积分
    int64 use_integral =3; //使用积分
    int64 discount_price =4;//抵扣积分金额
    int64 actual_use_integral =5; //实际使用积分
}

//积分兑换数据
message IntegralExchangeData {
    string is_enabled =1;//是否可用（0否，1是）
    string is_support_exchange =2;//是否支持兑换（0否，1是）
    string is_not_buy =3;//是否不允许购买（0否，1是）
    string exchange_type =4;//兑换类型：0 纯积分兑换，1-积分+金额兑换
    int64 use_integral = 5; //使用积分
    int64 use_price = 6; //使用金额
    int64 discount_price =7; //优惠金额
    string is_error =8;//是否有错误（0否，1是）
    string error_msg =9;//错误信息
    int64 user_integral = 10; //用户积分
}
 */


//购买提交数据
message BuySubmitData {
    string order_status =1;
    repeated int64 order_ids =2;
    PaymentInfo payment =3;
    string jump_url =4;
}

//购买提交数据
message BuyResponse {
    BuyConfirmData confirm_data =1;
    BuySubmitData submit_data =2;
}

