// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: orderDetailService.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrderDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	OrderId                int64          `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
	SpuId                  int64          `protobuf:"varint,3,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`
	SkuType                string         `protobuf:"bytes,5,opt,name=sku_type,json=skuType,proto3" json:"sku_type"`
	SkuId                  int64          `protobuf:"varint,6,opt,name=sku_id,json=skuId,proto3" json:"sku_id"`
	SkuSn                  string         `protobuf:"bytes,7,opt,name=sku_sn,json=skuSn,proto3" json:"sku_sn"`
	ImageId                int64          `protobuf:"varint,8,opt,name=image_id,json=imageId,proto3" json:"image_id"`
	ImageUrl               string         `protobuf:"bytes,9,opt,name=image_url,json=imageUrl,proto3" json:"image_url"`
	Title                  string         `protobuf:"bytes,10,opt,name=title,proto3" json:"title"`
	Weight                 int64          `protobuf:"varint,11,opt,name=weight,proto3" json:"weight"`
	Num                    int32          `protobuf:"varint,12,opt,name=num,proto3" json:"num"`
	Price                  int64          `protobuf:"varint,13,opt,name=price,proto3" json:"price"`
	MarketPrice            int64          `protobuf:"varint,14,opt,name=market_price,json=marketPrice,proto3" json:"market_price"`
	PromotionPrice         int64          `protobuf:"varint,15,opt,name=promotion_price,json=promotionPrice,proto3" json:"promotion_price"`
	CostPrice              int64          `protobuf:"varint,16,opt,name=cost_price,json=costPrice,proto3" json:"cost_price"`
	SubtotalPrice          int64          `protobuf:"varint,17,opt,name=subtotal_price,json=subtotalPrice,proto3" json:"subtotal_price"`
	SubtotalDiscount       int64          `protobuf:"varint,18,opt,name=subtotal_discount,json=subtotalDiscount,proto3" json:"subtotal_discount"`
	SubtotalAmount         int64          `protobuf:"varint,19,opt,name=subtotal_amount,json=subtotalAmount,proto3" json:"subtotal_amount"`
	DiscountAllocation     int64          `protobuf:"varint,20,opt,name=discount_allocation,json=discountAllocation,proto3" json:"discount_allocation"`
	LastDiscountAllocation int64          `protobuf:"varint,21,opt,name=last_discount_allocation,json=lastDiscountAllocation,proto3" json:"last_discount_allocation"`
	BrandId                int32          `protobuf:"varint,22,opt,name=brand_id,json=brandId,proto3" json:"brand_id"`
	BrandName              int32          `protobuf:"varint,23,opt,name=brand_name,json=brandName,proto3" json:"brand_name"`
	Indexes                string         `protobuf:"bytes,24,opt,name=indexes,proto3" json:"indexes"`
	OwnDesc                string         `protobuf:"bytes,25,opt,name=own_desc,json=ownDesc,proto3" json:"own_desc"`
	IsSpec                 bool           `protobuf:"varint,26,opt,name=is_spec,json=isSpec,proto3" json:"is_spec"`
	IsVirtual              bool           `protobuf:"varint,27,opt,name=is_virtual,json=isVirtual,proto3" json:"is_virtual"`
	IsPresale              bool           `protobuf:"varint,28,opt,name=is_presale,json=isPresale,proto3" json:"is_presale"`
	IsModified             bool           `protobuf:"varint,29,opt,name=is_modified,json=isModified,proto3" json:"is_modified"`
	IsPresent              bool           `protobuf:"varint,30,opt,name=is_present,json=isPresent,proto3" json:"is_present"`
	ShippedNum             int32          `protobuf:"varint,31,opt,name=shipped_num,json=shippedNum,proto3" json:"shipped_num"`
	PayIntegral            int64          `protobuf:"varint,32,opt,name=pay_integral,json=payIntegral,proto3" json:"pay_integral"`
	ShipStatus             string         `protobuf:"bytes,33,opt,name=ship_status,json=shipStatus,proto3" json:"ship_status"`
	RefundStatus           string         `protobuf:"bytes,34,opt,name=refund_status,json=refundStatus,proto3" json:"refund_status"`
	ExtendType             string         `protobuf:"bytes,35,opt,name=extend_type,json=extendType,proto3" json:"extend_type"`
	ExtendData             string         `protobuf:"bytes,36,opt,name=extend_data,json=extendData,proto3" json:"extend_data"`
	CreatedAt              string         `protobuf:"bytes,37,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt              string         `protobuf:"bytes,38,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	ExtendVip              *ExtendVipInfo `protobuf:"bytes,39,opt,name=extend_vip,json=extendVip,proto3" json:"extend_vip"`
}

func (x *OrderDetail) Reset() {
	*x = OrderDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderDetailService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderDetail) ProtoMessage() {}

func (x *OrderDetail) ProtoReflect() protoreflect.Message {
	mi := &file_orderDetailService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderDetail.ProtoReflect.Descriptor instead.
func (*OrderDetail) Descriptor() ([]byte, []int) {
	return file_orderDetailService_proto_rawDescGZIP(), []int{0}
}

func (x *OrderDetail) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *OrderDetail) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *OrderDetail) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *OrderDetail) GetSkuType() string {
	if x != nil {
		return x.SkuType
	}
	return ""
}

func (x *OrderDetail) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *OrderDetail) GetSkuSn() string {
	if x != nil {
		return x.SkuSn
	}
	return ""
}

func (x *OrderDetail) GetImageId() int64 {
	if x != nil {
		return x.ImageId
	}
	return 0
}

func (x *OrderDetail) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *OrderDetail) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *OrderDetail) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *OrderDetail) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *OrderDetail) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *OrderDetail) GetMarketPrice() int64 {
	if x != nil {
		return x.MarketPrice
	}
	return 0
}

func (x *OrderDetail) GetPromotionPrice() int64 {
	if x != nil {
		return x.PromotionPrice
	}
	return 0
}

func (x *OrderDetail) GetCostPrice() int64 {
	if x != nil {
		return x.CostPrice
	}
	return 0
}

func (x *OrderDetail) GetSubtotalPrice() int64 {
	if x != nil {
		return x.SubtotalPrice
	}
	return 0
}

func (x *OrderDetail) GetSubtotalDiscount() int64 {
	if x != nil {
		return x.SubtotalDiscount
	}
	return 0
}

func (x *OrderDetail) GetSubtotalAmount() int64 {
	if x != nil {
		return x.SubtotalAmount
	}
	return 0
}

func (x *OrderDetail) GetDiscountAllocation() int64 {
	if x != nil {
		return x.DiscountAllocation
	}
	return 0
}

func (x *OrderDetail) GetLastDiscountAllocation() int64 {
	if x != nil {
		return x.LastDiscountAllocation
	}
	return 0
}

func (x *OrderDetail) GetBrandId() int32 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *OrderDetail) GetBrandName() int32 {
	if x != nil {
		return x.BrandName
	}
	return 0
}

func (x *OrderDetail) GetIndexes() string {
	if x != nil {
		return x.Indexes
	}
	return ""
}

func (x *OrderDetail) GetOwnDesc() string {
	if x != nil {
		return x.OwnDesc
	}
	return ""
}

func (x *OrderDetail) GetIsSpec() bool {
	if x != nil {
		return x.IsSpec
	}
	return false
}

func (x *OrderDetail) GetIsVirtual() bool {
	if x != nil {
		return x.IsVirtual
	}
	return false
}

func (x *OrderDetail) GetIsPresale() bool {
	if x != nil {
		return x.IsPresale
	}
	return false
}

func (x *OrderDetail) GetIsModified() bool {
	if x != nil {
		return x.IsModified
	}
	return false
}

func (x *OrderDetail) GetIsPresent() bool {
	if x != nil {
		return x.IsPresent
	}
	return false
}

func (x *OrderDetail) GetShippedNum() int32 {
	if x != nil {
		return x.ShippedNum
	}
	return 0
}

func (x *OrderDetail) GetPayIntegral() int64 {
	if x != nil {
		return x.PayIntegral
	}
	return 0
}

func (x *OrderDetail) GetShipStatus() string {
	if x != nil {
		return x.ShipStatus
	}
	return ""
}

func (x *OrderDetail) GetRefundStatus() string {
	if x != nil {
		return x.RefundStatus
	}
	return ""
}

func (x *OrderDetail) GetExtendType() string {
	if x != nil {
		return x.ExtendType
	}
	return ""
}

func (x *OrderDetail) GetExtendData() string {
	if x != nil {
		return x.ExtendData
	}
	return ""
}

func (x *OrderDetail) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *OrderDetail) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *OrderDetail) GetExtendVip() *ExtendVipInfo {
	if x != nil {
		return x.ExtendVip
	}
	return nil
}

type ExtendVipInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MemberRankId int32  `protobuf:"varint,1,opt,name=member_rank_id,json=memberRankId,proto3" json:"member_rank_id"`
	KeepType     string `protobuf:"bytes,2,opt,name=keep_type,json=keepType,proto3" json:"keep_type"`
	KeepValue    int32  `protobuf:"varint,3,opt,name=keep_value,json=keepValue,proto3" json:"keep_value"`
}

func (x *ExtendVipInfo) Reset() {
	*x = ExtendVipInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_orderDetailService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtendVipInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtendVipInfo) ProtoMessage() {}

func (x *ExtendVipInfo) ProtoReflect() protoreflect.Message {
	mi := &file_orderDetailService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtendVipInfo.ProtoReflect.Descriptor instead.
func (*ExtendVipInfo) Descriptor() ([]byte, []int) {
	return file_orderDetailService_proto_rawDescGZIP(), []int{1}
}

func (x *ExtendVipInfo) GetMemberRankId() int32 {
	if x != nil {
		return x.MemberRankId
	}
	return 0
}

func (x *ExtendVipInfo) GetKeepType() string {
	if x != nil {
		return x.KeepType
	}
	return ""
}

func (x *ExtendVipInfo) GetKeepValue() int32 {
	if x != nil {
		return x.KeepValue
	}
	return 0
}

var File_orderDetailService_proto protoreflect.FileDescriptor

var file_orderDetailService_proto_rawDesc = []byte{
	0x0a, 0x18, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x22, 0xc1, 0x09, 0x0a, 0x0b, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x15, 0x0a, 0x06, 0x73, 0x70, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x73, 0x70, 0x75, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x75, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6b, 0x75, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f,
	0x73, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x53, 0x6e, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x77,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x73,
	0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63,
	0x6f, 0x73, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0d, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x2b, 0x0a, 0x11, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x73, 0x75, 0x62, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f,
	0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x13, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x12, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x18, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28, 0x03, 0x52, 0x16, 0x6c, 0x61, 0x73, 0x74, 0x44, 0x69,
	0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x41, 0x6c, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x19, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x6e,
	0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x77, 0x6e, 0x5f, 0x64, 0x65, 0x73, 0x63,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x77, 0x6e, 0x44, 0x65, 0x73, 0x63, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x73, 0x70, 0x65, 0x63, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x69, 0x73, 0x53, 0x70, 0x65, 0x63, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x76,
	0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73,
	0x56, 0x69, 0x72, 0x74, 0x75, 0x61, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72,
	0x65, 0x73, 0x61, 0x6c, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50,
	0x72, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x6d, 0x6f, 0x64,
	0x69, 0x66, 0x69, 0x65, 0x64, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x70, 0x72,
	0x65, 0x73, 0x65, 0x6e, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50,
	0x72, 0x65, 0x73, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x69, 0x70, 0x70, 0x65,
	0x64, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x68, 0x69,
	0x70, 0x70, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x61, 0x79, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x20, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x70,
	0x61, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68,
	0x69, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x68, 0x69, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x22, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x24, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x36, 0x0a, 0x0a, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x76, 0x69, 0x70, 0x18, 0x27,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x56, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x65,
	0x78, 0x74, 0x65, 0x6e, 0x64, 0x56, 0x69, 0x70, 0x22, 0x71, 0x0a, 0x0d, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x64, 0x56, 0x69, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x6b, 0x65, 0x65, 0x70, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x65, 0x70, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x6b, 0x65, 0x65, 0x70, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x6b, 0x65, 0x65, 0x70, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0d, 0x5a, 0x0b, 0x2f,
	0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_orderDetailService_proto_rawDescOnce sync.Once
	file_orderDetailService_proto_rawDescData = file_orderDetailService_proto_rawDesc
)

func file_orderDetailService_proto_rawDescGZIP() []byte {
	file_orderDetailService_proto_rawDescOnce.Do(func() {
		file_orderDetailService_proto_rawDescData = protoimpl.X.CompressGZIP(file_orderDetailService_proto_rawDescData)
	})
	return file_orderDetailService_proto_rawDescData
}

var file_orderDetailService_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_orderDetailService_proto_goTypes = []interface{}{
	(*OrderDetail)(nil),   // 0: services.OrderDetail
	(*ExtendVipInfo)(nil), // 1: services.ExtendVipInfo
}
var file_orderDetailService_proto_depIdxs = []int32{
	1, // 0: services.OrderDetail.extend_vip:type_name -> services.ExtendVipInfo
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_orderDetailService_proto_init() }
func file_orderDetailService_proto_init() {
	if File_orderDetailService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_orderDetailService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_orderDetailService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtendVipInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_orderDetailService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_orderDetailService_proto_goTypes,
		DependencyIndexes: file_orderDetailService_proto_depIdxs,
		MessageInfos:      file_orderDetailService_proto_msgTypes,
	}.Build()
	File_orderDetailService_proto = out.File
	file_orderDetailService_proto_rawDesc = nil
	file_orderDetailService_proto_goTypes = nil
	file_orderDetailService_proto_depIdxs = nil
}
