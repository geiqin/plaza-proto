// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: safeguardService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Safeguard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Type               string            `protobuf:"bytes,2,opt,name=type,proto3" json:"type"`
	SafeguardSn        string            `protobuf:"bytes,3,opt,name=safeguard_sn,json=safeguardSn,proto3" json:"safeguard_sn"`
	MemberId           int64             `protobuf:"varint,4,opt,name=member_id,json=memberId,proto3" json:"member_id"`
	ExchangeDeliveryId int64             `protobuf:"varint,5,opt,name=exchange_delivery_id,json=exchangeDeliveryId,proto3" json:"exchange_delivery_id"`
	FreightSubsidy     int64             `protobuf:"varint,6,opt,name=freight_subsidy,json=freightSubsidy,proto3" json:"freight_subsidy"`
	Amount             int64             `protobuf:"varint,7,opt,name=amount,proto3" json:"amount"`
	RefundMethod       string            `protobuf:"bytes,8,opt,name=refund_method,json=refundMethod,proto3" json:"refund_method"`
	ReturnMethod       string            `protobuf:"bytes,9,opt,name=return_method,json=returnMethod,proto3" json:"return_method"`
	Reason             string            `protobuf:"bytes,10,opt,name=reason,proto3" json:"reason"`
	Description        string            `protobuf:"bytes,11,opt,name=description,proto3" json:"description"`
	OrderId            int64             `protobuf:"varint,12,opt,name=order_id,json=orderId,proto3" json:"order_id"`
	SkuId              int64             `protobuf:"varint,13,opt,name=sku_id,json=skuId,proto3" json:"sku_id"`
	Num                int32             `protobuf:"varint,14,opt,name=num,proto3" json:"num"`
	CoverId            int64             `protobuf:"varint,15,opt,name=cover_id,json=coverId,proto3" json:"cover_id"`
	CoverUrl           string            `protobuf:"bytes,16,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url"`
	Memo               string            `protobuf:"bytes,17,opt,name=memo,proto3" json:"memo"`
	IsCanceled         bool              `protobuf:"varint,18,opt,name=is_canceled,json=isCanceled,proto3" json:"is_canceled"`
	RejectType         string            `protobuf:"bytes,19,opt,name=reject_type,json=rejectType,proto3" json:"reject_type"`
	RejectReason       string            `protobuf:"bytes,20,opt,name=reject_reason,json=rejectReason,proto3" json:"reject_reason"`
	RefundStatus       string            `protobuf:"bytes,21,opt,name=refund_status,json=refundStatus,proto3" json:"refund_status"`
	ReturnStatus       string            `protobuf:"bytes,22,opt,name=return_status,json=returnStatus,proto3" json:"return_status"`
	ShipStatus         string            `protobuf:"bytes,23,opt,name=ship_status,json=shipStatus,proto3" json:"ship_status"`
	Status             string            `protobuf:"bytes,24,opt,name=status,proto3" json:"status"`
	RefundedAt         string            `protobuf:"bytes,25,opt,name=refunded_at,json=refundedAt,proto3" json:"refunded_at"`
	CheckedAt          string            `protobuf:"bytes,26,opt,name=checked_at,json=checkedAt,proto3" json:"checked_at"`
	CreatedAt          string            `protobuf:"bytes,27,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt          string            `protobuf:"bytes,28,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	Sku                *SkuInfo          `protobuf:"bytes,29,opt,name=sku,proto3" json:"sku"`
	Order              *Order            `protobuf:"bytes,30,opt,name=order,proto3" json:"order"`
	Images             []*SafeguardImage `protobuf:"bytes,31,rep,name=images,proto3" json:"images"`
	ReturnExpress      *SafeguardReturn  `protobuf:"bytes,32,opt,name=return_express,json=returnExpress,proto3" json:"return_express"` // 买家退货填写的退货物流信息
}

func (x *Safeguard) Reset() {
	*x = Safeguard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_safeguardService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Safeguard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Safeguard) ProtoMessage() {}

func (x *Safeguard) ProtoReflect() protoreflect.Message {
	mi := &file_safeguardService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Safeguard.ProtoReflect.Descriptor instead.
func (*Safeguard) Descriptor() ([]byte, []int) {
	return file_safeguardService_proto_rawDescGZIP(), []int{0}
}

func (x *Safeguard) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Safeguard) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Safeguard) GetSafeguardSn() string {
	if x != nil {
		return x.SafeguardSn
	}
	return ""
}

func (x *Safeguard) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *Safeguard) GetExchangeDeliveryId() int64 {
	if x != nil {
		return x.ExchangeDeliveryId
	}
	return 0
}

func (x *Safeguard) GetFreightSubsidy() int64 {
	if x != nil {
		return x.FreightSubsidy
	}
	return 0
}

func (x *Safeguard) GetAmount() int64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Safeguard) GetRefundMethod() string {
	if x != nil {
		return x.RefundMethod
	}
	return ""
}

func (x *Safeguard) GetReturnMethod() string {
	if x != nil {
		return x.ReturnMethod
	}
	return ""
}

func (x *Safeguard) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *Safeguard) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Safeguard) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *Safeguard) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *Safeguard) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *Safeguard) GetCoverId() int64 {
	if x != nil {
		return x.CoverId
	}
	return 0
}

func (x *Safeguard) GetCoverUrl() string {
	if x != nil {
		return x.CoverUrl
	}
	return ""
}

func (x *Safeguard) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *Safeguard) GetIsCanceled() bool {
	if x != nil {
		return x.IsCanceled
	}
	return false
}

func (x *Safeguard) GetRejectType() string {
	if x != nil {
		return x.RejectType
	}
	return ""
}

func (x *Safeguard) GetRejectReason() string {
	if x != nil {
		return x.RejectReason
	}
	return ""
}

func (x *Safeguard) GetRefundStatus() string {
	if x != nil {
		return x.RefundStatus
	}
	return ""
}

func (x *Safeguard) GetReturnStatus() string {
	if x != nil {
		return x.ReturnStatus
	}
	return ""
}

func (x *Safeguard) GetShipStatus() string {
	if x != nil {
		return x.ShipStatus
	}
	return ""
}

func (x *Safeguard) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Safeguard) GetRefundedAt() string {
	if x != nil {
		return x.RefundedAt
	}
	return ""
}

func (x *Safeguard) GetCheckedAt() string {
	if x != nil {
		return x.CheckedAt
	}
	return ""
}

func (x *Safeguard) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Safeguard) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Safeguard) GetSku() *SkuInfo {
	if x != nil {
		return x.Sku
	}
	return nil
}

func (x *Safeguard) GetOrder() *Order {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *Safeguard) GetImages() []*SafeguardImage {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *Safeguard) GetReturnExpress() *SafeguardReturn {
	if x != nil {
		return x.ReturnExpress
	}
	return nil
}

type SafeguardDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	SafeguardId   int64    `protobuf:"varint,2,opt,name=safeguard_id,json=safeguardId,proto3" json:"safeguard_id"`
	OrderDetailId int64    `protobuf:"varint,3,opt,name=order_detail_id,json=orderDetailId,proto3" json:"order_detail_id"`
	SkuId         int64    `protobuf:"varint,5,opt,name=sku_id,json=skuId,proto3" json:"sku_id"`
	Num           int32    `protobuf:"varint,6,opt,name=num,proto3" json:"num"`
	Sku           *SkuInfo `protobuf:"bytes,7,opt,name=sku,proto3" json:"sku"`
}

func (x *SafeguardDetail) Reset() {
	*x = SafeguardDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_safeguardService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SafeguardDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SafeguardDetail) ProtoMessage() {}

func (x *SafeguardDetail) ProtoReflect() protoreflect.Message {
	mi := &file_safeguardService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SafeguardDetail.ProtoReflect.Descriptor instead.
func (*SafeguardDetail) Descriptor() ([]byte, []int) {
	return file_safeguardService_proto_rawDescGZIP(), []int{1}
}

func (x *SafeguardDetail) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SafeguardDetail) GetSafeguardId() int64 {
	if x != nil {
		return x.SafeguardId
	}
	return 0
}

func (x *SafeguardDetail) GetOrderDetailId() int64 {
	if x != nil {
		return x.OrderDetailId
	}
	return 0
}

func (x *SafeguardDetail) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *SafeguardDetail) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *SafeguardDetail) GetSku() *SkuInfo {
	if x != nil {
		return x.Sku
	}
	return nil
}

type SafeguardImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	SafeguardId int64  `protobuf:"varint,2,opt,name=safeguard_id,json=safeguardId,proto3" json:"safeguard_id"`
	ImageId     int64  `protobuf:"varint,3,opt,name=image_id,json=imageId,proto3" json:"image_id"`
	ImageUrl    string `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3" json:"image_url"`
}

func (x *SafeguardImage) Reset() {
	*x = SafeguardImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_safeguardService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SafeguardImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SafeguardImage) ProtoMessage() {}

func (x *SafeguardImage) ProtoReflect() protoreflect.Message {
	mi := &file_safeguardService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SafeguardImage.ProtoReflect.Descriptor instead.
func (*SafeguardImage) Descriptor() ([]byte, []int) {
	return file_safeguardService_proto_rawDescGZIP(), []int{2}
}

func (x *SafeguardImage) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SafeguardImage) GetSafeguardId() int64 {
	if x != nil {
		return x.SafeguardId
	}
	return 0
}

func (x *SafeguardImage) GetImageId() int64 {
	if x != nil {
		return x.ImageId
	}
	return 0
}

func (x *SafeguardImage) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

//商家收货地址
type SafeguardAddress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name   string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	AreaId int64     `protobuf:"varint,2,opt,name=area_id,json=areaId,proto3" json:"area_id"`
	Addr   string    `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr"`
	Mobile string    `protobuf:"bytes,4,opt,name=mobile,proto3" json:"mobile"`
	Area   *AreaInfo `protobuf:"bytes,5,opt,name=area,proto3" json:"area"`
}

func (x *SafeguardAddress) Reset() {
	*x = SafeguardAddress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_safeguardService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SafeguardAddress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SafeguardAddress) ProtoMessage() {}

func (x *SafeguardAddress) ProtoReflect() protoreflect.Message {
	mi := &file_safeguardService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SafeguardAddress.ProtoReflect.Descriptor instead.
func (*SafeguardAddress) Descriptor() ([]byte, []int) {
	return file_safeguardService_proto_rawDescGZIP(), []int{3}
}

func (x *SafeguardAddress) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SafeguardAddress) GetAreaId() int64 {
	if x != nil {
		return x.AreaId
	}
	return 0
}

func (x *SafeguardAddress) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

func (x *SafeguardAddress) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *SafeguardAddress) GetArea() *AreaInfo {
	if x != nil {
		return x.Area
	}
	return nil
}

// 买家退货填写的退货物流信息
type SafeguardReturn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64             `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	SafeguardId int64             `protobuf:"varint,2,opt,name=safeguard_id,json=safeguardId,proto3" json:"safeguard_id"`
	ExpressName string            `protobuf:"bytes,3,opt,name=express_name,json=expressName,proto3" json:"express_name"`
	ExpressNo   string            `protobuf:"bytes,4,opt,name=express_no,json=expressNo,proto3" json:"express_no"`
	ExpressCode string            `protobuf:"bytes,5,opt,name=express_code,json=expressCode,proto3" json:"express_code"`
	Mobile      string            `protobuf:"bytes,6,opt,name=mobile,proto3" json:"mobile"`
	Images      []*SafeguardImage `protobuf:"bytes,7,rep,name=images,proto3" json:"images"`
}

func (x *SafeguardReturn) Reset() {
	*x = SafeguardReturn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_safeguardService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SafeguardReturn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SafeguardReturn) ProtoMessage() {}

func (x *SafeguardReturn) ProtoReflect() protoreflect.Message {
	mi := &file_safeguardService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SafeguardReturn.ProtoReflect.Descriptor instead.
func (*SafeguardReturn) Descriptor() ([]byte, []int) {
	return file_safeguardService_proto_rawDescGZIP(), []int{4}
}

func (x *SafeguardReturn) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SafeguardReturn) GetSafeguardId() int64 {
	if x != nil {
		return x.SafeguardId
	}
	return 0
}

func (x *SafeguardReturn) GetExpressName() string {
	if x != nil {
		return x.ExpressName
	}
	return ""
}

func (x *SafeguardReturn) GetExpressNo() string {
	if x != nil {
		return x.ExpressNo
	}
	return ""
}

func (x *SafeguardReturn) GetExpressCode() string {
	if x != nil {
		return x.ExpressCode
	}
	return ""
}

func (x *SafeguardReturn) GetMobile() string {
	if x != nil {
		return x.Mobile
	}
	return ""
}

func (x *SafeguardReturn) GetImages() []*SafeguardImage {
	if x != nil {
		return x.Images
	}
	return nil
}

type SafeguardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged        int32   `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize     int32   `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Sorting      string  `protobuf:"bytes,3,opt,name=sorting,proto3" json:"sorting"`
	Id           int64   `protobuf:"varint,4,opt,name=id,proto3" json:"id"`
	OrderId      int64   `protobuf:"varint,6,opt,name=order_id,json=orderId,proto3" json:"order_id"`
	MemberId     int64   `protobuf:"varint,7,opt,name=member_id,json=memberId,proto3" json:"member_id"`
	Type         string  `protobuf:"bytes,8,opt,name=type,proto3" json:"type"`
	KeywordsType string  `protobuf:"bytes,9,opt,name=keywords_type,json=keywordsType,proto3" json:"keywords_type"`
	Keywords     string  `protobuf:"bytes,10,opt,name=keywords,proto3" json:"keywords"`
	RefundStatus string  `protobuf:"bytes,11,opt,name=refund_status,json=refundStatus,proto3" json:"refund_status"`
	Status       string  `protobuf:"bytes,13,opt,name=status,proto3" json:"status"`
	SafeguardSn  string  `protobuf:"bytes,14,opt,name=safeguard_sn,json=safeguardSn,proto3" json:"safeguard_sn"`
	SkuId        int64   `protobuf:"varint,15,opt,name=sku_id,json=skuId,proto3" json:"sku_id"`
	Ids          []int64 `protobuf:"varint,16,rep,packed,name=ids,proto3" json:"ids"`
}

func (x *SafeguardRequest) Reset() {
	*x = SafeguardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_safeguardService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SafeguardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SafeguardRequest) ProtoMessage() {}

func (x *SafeguardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_safeguardService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SafeguardRequest.ProtoReflect.Descriptor instead.
func (*SafeguardRequest) Descriptor() ([]byte, []int) {
	return file_safeguardService_proto_rawDescGZIP(), []int{5}
}

func (x *SafeguardRequest) GetPaged() int32 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *SafeguardRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SafeguardRequest) GetSorting() string {
	if x != nil {
		return x.Sorting
	}
	return ""
}

func (x *SafeguardRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SafeguardRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *SafeguardRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *SafeguardRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SafeguardRequest) GetKeywordsType() string {
	if x != nil {
		return x.KeywordsType
	}
	return ""
}

func (x *SafeguardRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *SafeguardRequest) GetRefundStatus() string {
	if x != nil {
		return x.RefundStatus
	}
	return ""
}

func (x *SafeguardRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SafeguardRequest) GetSafeguardSn() string {
	if x != nil {
		return x.SafeguardSn
	}
	return ""
}

func (x *SafeguardRequest) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *SafeguardRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type SafeguardType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Title   string `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
	Name    string `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	Memo    string `protobuf:"bytes,4,opt,name=memo,proto3" json:"memo"`
	IconUrl string `protobuf:"bytes,5,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url"`
	Enabled bool   `protobuf:"varint,6,opt,name=enabled,proto3" json:"enabled"`
}

func (x *SafeguardType) Reset() {
	*x = SafeguardType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_safeguardService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SafeguardType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SafeguardType) ProtoMessage() {}

func (x *SafeguardType) ProtoReflect() protoreflect.Message {
	mi := &file_safeguardService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SafeguardType.ProtoReflect.Descriptor instead.
func (*SafeguardType) Descriptor() ([]byte, []int) {
	return file_safeguardService_proto_rawDescGZIP(), []int{6}
}

func (x *SafeguardType) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SafeguardType) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SafeguardType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SafeguardType) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *SafeguardType) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *SafeguardType) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type SafeguardData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Safeguard      *Safeguard        `protobuf:"bytes,1,opt,name=safeguard,proto3" json:"safeguard"`
	ReceiveAddress *SafeguardAddress `protobuf:"bytes,2,opt,name=receive_address,json=receiveAddress,proto3" json:"receive_address"` //商家收货地址
	Types          []*SafeguardType  `protobuf:"bytes,3,rep,name=types,proto3" json:"types"`
	Pager          *common.Pager     `protobuf:"bytes,4,opt,name=pager,proto3" json:"pager"`
	Items          []*Safeguard      `protobuf:"bytes,5,rep,name=items,proto3" json:"items"`
	Info           *common.Info      `protobuf:"bytes,6,opt,name=info,proto3" json:"info"`
}

func (x *SafeguardData) Reset() {
	*x = SafeguardData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_safeguardService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SafeguardData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SafeguardData) ProtoMessage() {}

func (x *SafeguardData) ProtoReflect() protoreflect.Message {
	mi := &file_safeguardService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SafeguardData.ProtoReflect.Descriptor instead.
func (*SafeguardData) Descriptor() ([]byte, []int) {
	return file_safeguardService_proto_rawDescGZIP(), []int{7}
}

func (x *SafeguardData) GetSafeguard() *Safeguard {
	if x != nil {
		return x.Safeguard
	}
	return nil
}

func (x *SafeguardData) GetReceiveAddress() *SafeguardAddress {
	if x != nil {
		return x.ReceiveAddress
	}
	return nil
}

func (x *SafeguardData) GetTypes() []*SafeguardType {
	if x != nil {
		return x.Types
	}
	return nil
}

func (x *SafeguardData) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *SafeguardData) GetItems() []*Safeguard {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SafeguardData) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

type SafeguardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *SafeguardData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error  `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *SafeguardResponse) Reset() {
	*x = SafeguardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_safeguardService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SafeguardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SafeguardResponse) ProtoMessage() {}

func (x *SafeguardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_safeguardService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SafeguardResponse.ProtoReflect.Descriptor instead.
func (*SafeguardResponse) Descriptor() ([]byte, []int) {
	return file_safeguardService_proto_rawDescGZIP(), []int{8}
}

func (x *SafeguardResponse) GetData() *SafeguardData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SafeguardResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_safeguardService_proto protoreflect.FileDescriptor

var file_safeguardService_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x62, 0x61, 0x73, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x9e, 0x08, 0x0a, 0x09, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x5f,
	0x73, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x61, 0x66, 0x65, 0x67, 0x75,
	0x61, 0x72, 0x64, 0x53, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x30, 0x0a, 0x14, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x64,
	0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x12, 0x65, 0x78, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x49, 0x64, 0x12, 0x27, 0x0a, 0x0f, 0x66, 0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x5f,
	0x73, 0x75, 0x62, 0x73, 0x69, 0x64, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x66,
	0x72, 0x65, 0x69, 0x67, 0x68, 0x74, 0x53, 0x75, 0x62, 0x73, 0x69, 0x64, 0x79, 0x12, 0x16, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e,
	0x75, 0x6d, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x19, 0x0a,
	0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x76, 0x65,
	0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x76,
	0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f,
	0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x69, 0x73, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65,
	0x6a, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x72,
	0x65, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65,
	0x74, 0x75, 0x72, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68,
	0x69, 0x70, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x73, 0x68, 0x69, 0x70, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x23, 0x0a, 0x03, 0x73, 0x6b, 0x75, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x03, 0x73, 0x6b, 0x75, 0x12, 0x25, 0x0a, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18,
	0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x30, 0x0a,
	0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x1f, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61,
	0x72, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12,
	0x40, 0x0a, 0x0e, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x52, 0x0d, 0x72, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x22, 0xba, 0x01, 0x0a, 0x0f, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61,
	0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x61, 0x66,
	0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x23, 0x0a, 0x03, 0x73, 0x6b, 0x75,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x53, 0x6b, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x03, 0x73, 0x6b, 0x75, 0x22, 0x7b,
	0x0a, 0x0e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x73, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72,
	0x64, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x93, 0x01, 0x0a, 0x10,
	0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61, 0x64, 0x64,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x61, 0x72, 0x65,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x61, 0x72, 0x65,
	0x61, 0x22, 0xf3, 0x01, 0x0a, 0x0f, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61,
	0x72, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x73, 0x61, 0x66,
	0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x65,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x6f, 0x62, 0x69, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x6f, 0x62, 0x69, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x22, 0x85, 0x03, 0x0a, 0x10, 0x53, 0x61, 0x66, 0x65,
	0x67, 0x75, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65,
	0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72,
	0x65, 0x66, 0x75, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64,
	0x5f, 0x73, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x61, 0x66, 0x65, 0x67,
	0x75, 0x61, 0x72, 0x64, 0x53, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22,
	0x92, 0x01, 0x0a, 0x0d, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d,
	0x65, 0x6d, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x22, 0xa8, 0x02, 0x0a, 0x0d, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61,
	0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x12, 0x31, 0x0a, 0x09, 0x73, 0x61, 0x66, 0x65, 0x67, 0x75,
	0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52, 0x09,
	0x73, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x12, 0x43, 0x0a, 0x0f, 0x72, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61,
	0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x0e,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x2d,
	0x0a, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61,
	0x72, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05, 0x74, 0x79, 0x70, 0x65, 0x73, 0x12, 0x23, 0x0a,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x72, 0x12, 0x29, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66,
	0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x20, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22,
	0x65, 0x0a, 0x11, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61,
	0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xc6, 0x08, 0x0a, 0x10, 0x53, 0x61, 0x66, 0x65, 0x67,
	0x75, 0x61, 0x72, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x41,
	0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x1a,
	0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67,
	0x75, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41,
	0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x12, 0x13, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61,
	0x72, 0x64, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61,
	0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x43, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x45, 0x78, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61,
	0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52,
	0x65, 0x70, 0x61, 0x69, 0x72, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x08, 0x47, 0x65, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0b, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x41, 0x67, 0x72, 0x65, 0x65, 0x64, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x1a, 0x1b, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x0c,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x52, 0x65, 0x66, 0x75, 0x73, 0x65, 0x64, 0x12, 0x13, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72,
	0x64, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66,
	0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x45, 0x0a, 0x0f, 0x4d, 0x65, 0x72, 0x63, 0x68, 0x61, 0x6e, 0x74, 0x53, 0x68, 0x69, 0x70,
	0x70, 0x65, 0x64, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53,
	0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x10, 0x4d, 0x65, 0x72, 0x63, 0x68,
	0x61, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x13, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64,
	0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65,
	0x67, 0x75, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x43, 0x0a, 0x0d, 0x42, 0x75, 0x79, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x65, 0x64,
	0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65,
	0x67, 0x75, 0x61, 0x72, 0x64, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x09, 0x42, 0x75, 0x79, 0x65, 0x72, 0x53, 0x65, 0x6e,
	0x74, 0x12, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66,
	0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x1a, 0x1b, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0d, 0x42,
	0x75, 0x79, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x12, 0x13, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72,
	0x64, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66,
	0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x3e, 0x0a, 0x08, 0x44, 0x6f, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x13, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72,
	0x64, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66,
	0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x39, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x1a, 0x1b, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72,
	0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x07, 0x44,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x1a, 0x1b, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x06, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x53, 0x61, 0x66, 0x65, 0x67, 0x75, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x61, 0x66, 0x65,
	0x67, 0x75, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42,
	0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_safeguardService_proto_rawDescOnce sync.Once
	file_safeguardService_proto_rawDescData = file_safeguardService_proto_rawDesc
)

func file_safeguardService_proto_rawDescGZIP() []byte {
	file_safeguardService_proto_rawDescOnce.Do(func() {
		file_safeguardService_proto_rawDescData = protoimpl.X.CompressGZIP(file_safeguardService_proto_rawDescData)
	})
	return file_safeguardService_proto_rawDescData
}

var file_safeguardService_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_safeguardService_proto_goTypes = []interface{}{
	(*Safeguard)(nil),         // 0: services.Safeguard
	(*SafeguardDetail)(nil),   // 1: services.SafeguardDetail
	(*SafeguardImage)(nil),    // 2: services.SafeguardImage
	(*SafeguardAddress)(nil),  // 3: services.SafeguardAddress
	(*SafeguardReturn)(nil),   // 4: services.SafeguardReturn
	(*SafeguardRequest)(nil),  // 5: services.SafeguardRequest
	(*SafeguardType)(nil),     // 6: services.SafeguardType
	(*SafeguardData)(nil),     // 7: services.SafeguardData
	(*SafeguardResponse)(nil), // 8: services.SafeguardResponse
	(*SkuInfo)(nil),           // 9: services.SkuInfo
	(*Order)(nil),             // 10: services.Order
	(*AreaInfo)(nil),          // 11: services.AreaInfo
	(*common.Pager)(nil),      // 12: common.Pager
	(*common.Info)(nil),       // 13: common.Info
	(*common.Error)(nil),      // 14: common.Error
}
var file_safeguardService_proto_depIdxs = []int32{
	9,  // 0: services.Safeguard.sku:type_name -> services.SkuInfo
	10, // 1: services.Safeguard.order:type_name -> services.Order
	2,  // 2: services.Safeguard.images:type_name -> services.SafeguardImage
	4,  // 3: services.Safeguard.return_express:type_name -> services.SafeguardReturn
	9,  // 4: services.SafeguardDetail.sku:type_name -> services.SkuInfo
	11, // 5: services.SafeguardAddress.area:type_name -> services.AreaInfo
	2,  // 6: services.SafeguardReturn.images:type_name -> services.SafeguardImage
	0,  // 7: services.SafeguardData.safeguard:type_name -> services.Safeguard
	3,  // 8: services.SafeguardData.receive_address:type_name -> services.SafeguardAddress
	6,  // 9: services.SafeguardData.types:type_name -> services.SafeguardType
	12, // 10: services.SafeguardData.pager:type_name -> common.Pager
	0,  // 11: services.SafeguardData.items:type_name -> services.Safeguard
	13, // 12: services.SafeguardData.info:type_name -> common.Info
	7,  // 13: services.SafeguardResponse.data:type_name -> services.SafeguardData
	14, // 14: services.SafeguardResponse.error:type_name -> common.Error
	0,  // 15: services.SafeguardService.ApplyRefund:input_type -> services.Safeguard
	0,  // 16: services.SafeguardService.ApplyReturn:input_type -> services.Safeguard
	0,  // 17: services.SafeguardService.ApplyExchange:input_type -> services.Safeguard
	0,  // 18: services.SafeguardService.ApplyRepair:input_type -> services.Safeguard
	0,  // 19: services.SafeguardService.GetTypes:input_type -> services.Safeguard
	0,  // 20: services.SafeguardService.CheckAgreed:input_type -> services.Safeguard
	0,  // 21: services.SafeguardService.CheckRefused:input_type -> services.Safeguard
	0,  // 22: services.SafeguardService.MerchantShipped:input_type -> services.Safeguard
	0,  // 23: services.SafeguardService.MerchantReceived:input_type -> services.Safeguard
	0,  // 24: services.SafeguardService.BuyerCanceled:input_type -> services.Safeguard
	4,  // 25: services.SafeguardService.BuyerSent:input_type -> services.SafeguardReturn
	0,  // 26: services.SafeguardService.BuyerReceived:input_type -> services.Safeguard
	0,  // 27: services.SafeguardService.DoRefund:input_type -> services.Safeguard
	0,  // 28: services.SafeguardService.Get:input_type -> services.Safeguard
	0,  // 29: services.SafeguardService.Display:input_type -> services.Safeguard
	5,  // 30: services.SafeguardService.Search:input_type -> services.SafeguardRequest
	8,  // 31: services.SafeguardService.ApplyRefund:output_type -> services.SafeguardResponse
	8,  // 32: services.SafeguardService.ApplyReturn:output_type -> services.SafeguardResponse
	8,  // 33: services.SafeguardService.ApplyExchange:output_type -> services.SafeguardResponse
	8,  // 34: services.SafeguardService.ApplyRepair:output_type -> services.SafeguardResponse
	8,  // 35: services.SafeguardService.GetTypes:output_type -> services.SafeguardResponse
	8,  // 36: services.SafeguardService.CheckAgreed:output_type -> services.SafeguardResponse
	8,  // 37: services.SafeguardService.CheckRefused:output_type -> services.SafeguardResponse
	8,  // 38: services.SafeguardService.MerchantShipped:output_type -> services.SafeguardResponse
	8,  // 39: services.SafeguardService.MerchantReceived:output_type -> services.SafeguardResponse
	8,  // 40: services.SafeguardService.BuyerCanceled:output_type -> services.SafeguardResponse
	8,  // 41: services.SafeguardService.BuyerSent:output_type -> services.SafeguardResponse
	8,  // 42: services.SafeguardService.BuyerReceived:output_type -> services.SafeguardResponse
	8,  // 43: services.SafeguardService.DoRefund:output_type -> services.SafeguardResponse
	8,  // 44: services.SafeguardService.Get:output_type -> services.SafeguardResponse
	8,  // 45: services.SafeguardService.Display:output_type -> services.SafeguardResponse
	8,  // 46: services.SafeguardService.Search:output_type -> services.SafeguardResponse
	31, // [31:47] is the sub-list for method output_type
	15, // [15:31] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_safeguardService_proto_init() }
func file_safeguardService_proto_init() {
	if File_safeguardService_proto != nil {
		return
	}
	file_orderService_proto_init()
	file_baseInfoService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_safeguardService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Safeguard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_safeguardService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SafeguardDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_safeguardService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SafeguardImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_safeguardService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SafeguardAddress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_safeguardService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SafeguardReturn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_safeguardService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SafeguardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_safeguardService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SafeguardType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_safeguardService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SafeguardData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_safeguardService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SafeguardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_safeguardService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_safeguardService_proto_goTypes,
		DependencyIndexes: file_safeguardService_proto_depIdxs,
		MessageInfos:      file_safeguardService_proto_msgTypes,
	}.Build()
	File_safeguardService_proto = out.File
	file_safeguardService_proto_rawDesc = nil
	file_safeguardService_proto_goTypes = nil
	file_safeguardService_proto_depIdxs = nil
}
