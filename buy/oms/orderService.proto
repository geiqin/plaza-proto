syntax = "proto3";
package services;
option go_package = "/.;services";
import "common/base.proto";
import "orderDetailService.proto";
import "orderAddressService.proto";
import "orderPacketService.proto";
import "baseInfoService.proto";

//订单服务
service OrderService {

    //订单支付【user】
    rpc OrderPay (OrderRequest) returns (OrderPayResponse) {}

    //订单线下支付【admin】
    rpc OrderUnderLinePay (OrderRequest) returns (OrderResponse) {}

    //订单发货【admin】
    rpc OrderDelivery(OrderPacket) returns (OrderResponse) {}

    //订单取消【admin/user】
    rpc OrderCancel (OrderRequest) returns (OrderResponse) {}

    //订单删除【admin/user】
    rpc OrderDelete (OrderRequest) returns (OrderResponse) {}

    //订单确认【admin】
    rpc OrderConfirm (OrderRequest) returns (OrderResponse) {}

    //订单收货【user】
    rpc OrderCollect (OrderRequest) returns (OrderResponse) {}

    //支付状态校验
    rpc OrderPayCheck (OrderRequest) returns (OrderResponse) {}

    //修改订单价格【admin】
    rpc ModifyOrderPrice (Order) returns (OrderResponse) {}

    //修改订单地址【admin】
    rpc ModifyOrderAddress (OrderAddress) returns (OrderResponse) {}

    //订单每个环节状态总数
    rpc OrderStatusStepTotal (OrderRequest) returns (OrderStatusStepTotalResponse) {}

    //订单总数
    rpc OrderTotal (OrderRequest) returns (OrderResponse) {}

    //订单查询【admin/user】
    rpc OrderSearch (OrderRequest) returns (OrderResponse) {}

    //订单详情【admin/user】
    rpc OrderDetail (OrderRequest) returns (OrderDetailResponse) {}

    //支付同步处理
    rpc Respond (OrderRequest) returns (OrderResponse) {}

    //支付异步处理
    rpc Notify (OrderRequest) returns (OrderResponse) {}

    //订单获取【service】
    rpc Get (Order) returns (OrderResponse) {}

    //订单列表【service】
    rpc List (OrderRequest) returns (OrderResponse) {}

    //新订单通知数据
    rpc NewOrderNotice (OrderRequest) returns (OrderResponse) {}

    //扩展列表【service】
    rpc OrderExtensionList (OrderRequest) returns (OrderExtensionResponse) {}
}

message Order {
    int64  id =1;//ID
    string order_no =2;//单号
    int64  member_id =3;//客户ID
    int64  shop_id =4;//多商户ID(依赖多商户插件)
    int64  warehouse_id =6;//仓库ID
    int32  buy_number_count =7;//购买商品总数量
    int64  total_price =8;//订单单价
    int64  actual_price =9;//订单总价(订单最终价格)
    int64  increase_price =10;//增加的金额
    int64  preferential_price =11;//优惠金额
    int64  paid_money =12;//已支付金额
    int64  refunded_money =13;//已退款金额
    int32  returned_number =14;//已退货数量
    int32  delivered_number =15;//已发货数量
    string client_type =16;//客户端类型（pc, h5, ios, android, alipay, weixin, baidu）取APPLICATION_CLIENT_TYPE常量值
    string order_model =17;//订单模式（0销售型, 1展示型, 2自提点, 3虚拟销售）
    string subject =18;//订单标题(为支付提供标题)。
    string cover_url =19;//订单商品封面URL（默认取商品明细里数量最多的商品主图）
    string user_note =20;//订单附言,由用户提交订单前填写
    string seller_note =21;//商家留言,当该字段值时可以在订单查询看到
    string logistics_type =22;//物流模式：1-物流快递，2-同城配送，3-虚拟发货，4-用户自提
    string delivery_mode =23;//发货模式：1-统一发货，2-分拆发货
    string is_all_delivered =24;//是否已全部发货(发货模式为2时有效)（0否，1是）
    string is_under_line =25;//是否线下支付（0否，1是）(如果多次支付以第一次为准)
    string is_cod =26;//是否货到付款
    string is_invoiced =27;//是否已过开票（0否，1是）
    string is_refunded =28;//是否已产生退款（0否，1是）
    string is_modify_address =29;//是否手动修改过订单地址（0否，1是）
    string is_modify_price =30;//是否手动修改过订单价（0否，1是）
    int32  payment_id =31;//用户选择的支付方式的id,取值表payment
    string pay_status =32;//支付状态（0未支付, 1已支付, 2已退款, 3部分退款）
    string status =33;//订单状态（0待确认, 1已确认/待支付, 2已支付/待发货, 3已发货/待收货, 4已完成, 5已取消, 6已关闭）
    string pay_time =34;//支付时间
    string confirm_time =35;//订单确认时间
    string delivery_time =36;//发货时间
    string cancel_time =37;//取消时间
    string collect_time =38;//收货时间
    string close_time =39;//退款完成时间
    string finished_time =40;//订单完成时间
    string created_at =41;
    string updated_at =42;
    //--ext---
    bool is_can_launch_aftersale =44; //是否启动售后服务
    string client_type_name =45; //来源终端
    string status_name =46; //状态名称
    string status_color =47; //状态颜色
    string pay_status_name =48; //状态名称
    string logistics_type_name =49; //物流模式名称
    string delivery_mode_name =50; //发货模式名称
    OrderCurrency  currency=51;
    OrderAddress address =52;
    MemberInfo member = 53;
    PaymentInfo payment = 54;
    repeated OrderDetail details = 55;
    repeated OrderExtension extension_data = 56;
    map<string,string> metas =57;
    WarehouseInfo warehouse_data =58;
    map<string,string> operate_data =59;
    repeated OrderPacket packets =60;
}


message OrderRequest {
    int64 paged =1;
    int64 page_size =2;
    string	keywords =3;
    //----------
    int64 id = 4;
    string order_no = 5;
    string type = 6;
    int64 shop_id =7;
    int64 member_id  =8;
    int32 pay_type = 9;
    string is_shipment = 10;
    string is_cod = 13;
    string is_invoiced = 14;
    string is_modified = 15;
    string is_paid = 16;
    string logistics_type =20;
    int32 payment_id =21;
    string channel_type =22;
    int64 realstore_id =23;
    int64 coupon_id =24;
    string extension_code =25;
    int64 extension_id =26;
    string ship_status =27;
    string status =28;
    string pay_status =29;
    string cancel_type =30;
    string start_date = 31;
    string end_date = 32;
    string str_ids = 33;
    repeated int64 ids = 34;
    string delivery_mode =35;
    string is_all_delivered =36;//是否已全部发货（0否，1是）
}


//订单统计数据
message OrderStatusStepTotalData{
    int64 member_id =1;//会员ID
    int64 order_count =2; //订单总数
    int64 order_pending_count =3; //待审核数量
    int64 order_confirmed_count =4; //待支付数量
    int64 order_paid_count =5; //待发货数量
    int64 order_shipped_count =6; //待发货数量
    int64 order_canceled_count =7; //已取消数量
    int64 order_succeed_count =8; //已完成数量
    int64 order_closed_count =9; //已关闭数量
    int64 aftersale_doing_count =10; //正在售后服务数量
}

message OrderData {
    Order entity = 1;
    common.Pager pager =2;
    repeated Order items = 3;
    common.Info info =4;
    OrderFlow order_flow = 5;
    repeated PaymentInfo payment_list =6;
}

message OrderDetailData {
    Order order = 1;
    common.Info info =2;
    OrderFlow order_flow = 3;
    repeated PaymentInfo payment_list =4;
}

message OrderPayData {
    int64 order_id =1;
    string order_no =2;
    string payment_type =3;
    string is_success =4;
    map<string,string> params = 5;
    PaymentInfo payment  =6;
    string is_html =7;
    string html_text =8;
}

message OrderResponse {
    OrderData data = 1;
    common.Error error = 2;
}

message OrderDetailResponse {
    OrderDetailData data = 1;
    common.Error error = 2;
}

message OrderPayResponse {
    OrderPayData data = 1;
    common.Error error = 2;
}

message OrderStatusStepTotalResponse {
    OrderStatusStepTotalData data = 1;
    common.Error error = 2;
}

message OrderExtensionData {
    OrderExtension entity = 1;
    repeated OrderExtension items =2;
}

message OrderExtensionResponse {
    OrderExtensionData data = 1;
    common.Error error = 2;
}