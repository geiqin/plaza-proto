syntax = "proto3";
package services;
option go_package = "/.;services";
import "common/base.proto";
import "orderDetailService.proto";
import "orderAddressService.proto";
import "adjustmentService.proto";
import "baseInfoService.proto";
import "shipmentService.proto";
import "paymentService.proto";

//订单
service OrderService {
    //修改价格
    rpc ModifyPrice (Order) returns (OrderResponse) {}
    //修改地址
    rpc ModifyAddress (OrderAddress) returns (OrderResponse) {}
    //撤销订单
    rpc Cancel (Order) returns (OrderResponse) {}
    //删除订单
    rpc Delete (Order) returns (OrderResponse) {}
    //订单追加备注
    rpc AppendRemark (OrderRequest) returns (OrderResponse) {}
    //确认订单(接单/拒单操作)
    rpc ConfirmOrder(OrderRequest) returns (OrderResponse) {}
    //确认已收货
    rpc ConfirmReceived(OrderRequest) returns (OrderResponse) {}
    //确认已结算操作
    //结算订单(无法通过正常流程完成订单,需要商家主动完成订单)
    //适用订单: 堂食餐后付款订单、货到付款订单、外卖餐到付款订单
    rpc ConfirmSettled (OrderRequest) returns (OrderResponse) {}
    //扫码核销订单
    rpc Verification (OrderRequest) returns (OrderResponse) {}

    //获取订单信息
    rpc Get (Order) returns (OrderResponse) {}
    //显示订单信息(详细信息)
    rpc Display (Order) returns (OrderResponse) {}
    //前端显示订单信息(详细信息)
    rpc FrontDisplay (Order) returns (OrderResponse) {}
    //查询订单
    rpc Search (OrderRequest) returns (OrderResponse) {}
    //按条件获取订单列表
    rpc List (OrderRequest) returns (OrderResponse) {}
    //获取订单赠送\使用的优惠券列表
    rpc GetCouponList (OrderRequest) returns (OrderResponse) {}
}

message Order {
    int64  id =1;
    string order_sn =2;
    string type =3;
    int64 shop_id =4;
    int64 member_id =6;
    string currency =7;
    int32 total_num =8;
    int64 total_weight =9;
    int64 total_price =10;
    int64 total_discount =11;
    int64 total_amount =12;
    int64 freight_fee =13;
    int64 insure_fee =14;
    int64 pack_fee =15;
    int64 surplus =16;
    int64 coupon_money =17;
    int32 integral =18;
    int64 integral_money =19;
    int64 pay_money =20;
    int64 paid_money =21;
    int64 refunded_money =22;
    string subject =23;
    string body =24;
    int64 cover_id =25;
    string cover_url =26;
    string postscript =27;
    string to_buyer =28;
    string pay_note =29;
    string referer =30;
    string channel_type =31;
    bool is_cod =32;
    bool is_invoiced =33;
    bool is_modified =34;
    bool is_paid =35;
    bool is_safeguard =36;
    bool is_separate =37;
    bool is_shipment =38;
    bool is_refunded =39;
    bool is_payment_timeout =40;
    bool is_return_timeout =41;
    int32 shipment_id =42;
    string shipment_code =43;
    int32 payment_id =44;
    string payment_code =45;
    int32 pack_id =46;
    int64 coupon_id =47;
    string extension_code =48;
    int64 extension_id =49;
    int64 parent_id =50;
    string ship_status =51;
    string status =52;
    string pay_status =53;
    string cancel_type =54;
    string pay_expire_date =55;
    string return_expire_date =56;
    string confirm_at =57;
    string shipped_at =58;
    string signed_at =59;
    string refunded_at =60;
    string finished_at =61;
    string created_at =62;
    string updated_at =63;
    OrderAddress address =64;
    MemberInfo member = 65;
    Shipment shipment = 66;
    Payment payment = 67;
    repeated OrderDetail details = 68;
    repeated Adjustment adjustments = 69;
    map<string,string> metas =70;
}

message OrderRequest {
    int32 paged =1;
    int32 page_size =2;
    string	keywords =3;
    //----------
    int64 id = 4;
    string order_sn = 5;
    string type = 6;
    int64 shop_id =7;
    int64 member_id  =8;
    int32 pay_type = 9;
    bool is_shipment = 10;
    bool is_cod = 13;
    bool is_invoiced = 14;
    bool is_modified = 15;
    bool is_paid = 16;
    bool is_safeguard = 17;
    bool is_separate = 18;
    int32 shipping_id = 19;
    string shipping_name =20;
    int64 pay_account_id =21;
    string channel_type =22;
    int32 pack_id =23;
    int64 coupon_id =24;
    string extension_code =25;
    int64 extension_id =26;
    string ship_status =27;
    string status =28;
    string pay_status =29;
    string cancel_type =30;
    string start_date = 31;
    string end_date = 32;
    repeated int64 ids = 33;
}

message OrderData {
    Order entity = 1;
    common.Pager pager =2;
    repeated Order items = 3;
    common.Info info =4;
    OrderFlow order_flow = 5;
}

message OrderResponse {
    OrderData data = 1;
    common.Error error = 2;
}
