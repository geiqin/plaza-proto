// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: memberIdentityService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 客户实名
type MemberIdentity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                                        //ID
	MemberId          int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id"`                            //会员ID
	RealType          string `protobuf:"bytes,3,opt,name=real_type,json=realType,proto3" json:"real_type"`                             //实名类型
	RealName          string `protobuf:"bytes,4,opt,name=real_name,json=realName,proto3" json:"real_name"`                             //实名名称
	Number            string `protobuf:"bytes,5,opt,name=number,proto3" json:"number"`                                                 //证件号码
	Birthday          string `protobuf:"bytes,6,opt,name=birthday,proto3" json:"birthday"`                                             //出生日期
	Address           string `protobuf:"bytes,7,opt,name=address,proto3" json:"address"`                                               //出生地址
	Issuer            string `protobuf:"bytes,8,opt,name=issuer,proto3" json:"issuer"`                                                 //签证机关
	IsForever         string `protobuf:"bytes,9,opt,name=is_forever,json=isForever,proto3" json:"is_forever"`                          //永久有效
	BeginDate         string `protobuf:"bytes,10,opt,name=begin_date,json=beginDate,proto3" json:"begin_date"`                         //开始日期
	EndDate           string `protobuf:"bytes,11,opt,name=end_date,json=endDate,proto3" json:"end_date"`                               //结束日期
	Gender            string `protobuf:"bytes,12,opt,name=gender,proto3" json:"gender"`                                                //性别
	Nation            string `protobuf:"bytes,13,opt,name=nation,proto3" json:"nation"`                                                //民族
	FrontUrl          string `protobuf:"bytes,14,opt,name=front_url,json=frontUrl,proto3" json:"front_url"`                            //身份证人像面
	BackUrl           string `protobuf:"bytes,15,opt,name=back_url,json=backUrl,proto3" json:"back_url"`                               //身份证国微面
	LegalMan          string `protobuf:"bytes,16,opt,name=legal_man,json=legalMan,proto3" json:"legal_man"`                            //法定代表人
	RegisteredCapital string `protobuf:"bytes,17,opt,name=registered_capital,json=registeredCapital,proto3" json:"registered_capital"` //注册资本
	LicenseUrl        string `protobuf:"bytes,18,opt,name=license_url,json=licenseUrl,proto3" json:"license_url"`                      //营业执照
	Status            string `protobuf:"bytes,19,opt,name=status,proto3" json:"status"`                                                //状态
	CreatedAt         int64  `protobuf:"varint,20,opt,name=created_at,json=createdAt,proto3" json:"created_at"`                        //创建时间
	UpdatedAt         int64  `protobuf:"varint,21,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`                        //修改时间
}

func (x *MemberIdentity) Reset() {
	*x = MemberIdentity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_memberIdentityService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberIdentity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberIdentity) ProtoMessage() {}

func (x *MemberIdentity) ProtoReflect() protoreflect.Message {
	mi := &file_memberIdentityService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberIdentity.ProtoReflect.Descriptor instead.
func (*MemberIdentity) Descriptor() ([]byte, []int) {
	return file_memberIdentityService_proto_rawDescGZIP(), []int{0}
}

func (x *MemberIdentity) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberIdentity) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *MemberIdentity) GetRealType() string {
	if x != nil {
		return x.RealType
	}
	return ""
}

func (x *MemberIdentity) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *MemberIdentity) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *MemberIdentity) GetBirthday() string {
	if x != nil {
		return x.Birthday
	}
	return ""
}

func (x *MemberIdentity) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *MemberIdentity) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *MemberIdentity) GetIsForever() string {
	if x != nil {
		return x.IsForever
	}
	return ""
}

func (x *MemberIdentity) GetBeginDate() string {
	if x != nil {
		return x.BeginDate
	}
	return ""
}

func (x *MemberIdentity) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *MemberIdentity) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *MemberIdentity) GetNation() string {
	if x != nil {
		return x.Nation
	}
	return ""
}

func (x *MemberIdentity) GetFrontUrl() string {
	if x != nil {
		return x.FrontUrl
	}
	return ""
}

func (x *MemberIdentity) GetBackUrl() string {
	if x != nil {
		return x.BackUrl
	}
	return ""
}

func (x *MemberIdentity) GetLegalMan() string {
	if x != nil {
		return x.LegalMan
	}
	return ""
}

func (x *MemberIdentity) GetRegisteredCapital() string {
	if x != nil {
		return x.RegisteredCapital
	}
	return ""
}

func (x *MemberIdentity) GetLicenseUrl() string {
	if x != nil {
		return x.LicenseUrl
	}
	return ""
}

func (x *MemberIdentity) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *MemberIdentity) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *MemberIdentity) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

// 客户实名请求参数
type MemberIdentityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Top       int32    `protobuf:"varint,1,opt,name=top,proto3" json:"top"`
	Paged     int64    `protobuf:"varint,2,opt,name=paged,proto3" json:"paged"`
	PageSize  int64    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords  string   `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords"`
	Sort      []string `protobuf:"bytes,5,rep,name=sort,proto3" json:"sort"`
	DateRange []string `protobuf:"bytes,6,rep,name=date_range,json=dateRange,proto3" json:"date_range"`
	Ids       []int64  `protobuf:"varint,7,rep,packed,name=ids,proto3" json:"ids"`
	Id        int64    `protobuf:"varint,8,opt,name=id,proto3" json:"id"`
	//以下为自定义参数
	MemberId  int64  `protobuf:"varint,11,opt,name=member_id,json=memberId,proto3" json:"member_id"`   //会员ID
	RealType  string `protobuf:"bytes,12,opt,name=real_type,json=realType,proto3" json:"real_type"`    //实名类型
	RealName  string `protobuf:"bytes,13,opt,name=real_name,json=realName,proto3" json:"real_name"`    //实名名称
	IsForever string `protobuf:"bytes,14,opt,name=is_forever,json=isForever,proto3" json:"is_forever"` //永久有效
	Status    string `protobuf:"bytes,15,opt,name=status,proto3" json:"status"`                        //状态
}

func (x *MemberIdentityRequest) Reset() {
	*x = MemberIdentityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_memberIdentityService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberIdentityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberIdentityRequest) ProtoMessage() {}

func (x *MemberIdentityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_memberIdentityService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberIdentityRequest.ProtoReflect.Descriptor instead.
func (*MemberIdentityRequest) Descriptor() ([]byte, []int) {
	return file_memberIdentityService_proto_rawDescGZIP(), []int{1}
}

func (x *MemberIdentityRequest) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *MemberIdentityRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *MemberIdentityRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *MemberIdentityRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *MemberIdentityRequest) GetSort() []string {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *MemberIdentityRequest) GetDateRange() []string {
	if x != nil {
		return x.DateRange
	}
	return nil
}

func (x *MemberIdentityRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *MemberIdentityRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberIdentityRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *MemberIdentityRequest) GetRealType() string {
	if x != nil {
		return x.RealType
	}
	return ""
}

func (x *MemberIdentityRequest) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *MemberIdentityRequest) GetIsForever() string {
	if x != nil {
		return x.IsForever
	}
	return ""
}

func (x *MemberIdentityRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// 客户实名响应数据
type MemberIdentityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg    string            `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg"`
	Pager  *common.Pager     `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Entity *MemberIdentity   `protobuf:"bytes,3,opt,name=entity,proto3" json:"entity"`
	Items  []*MemberIdentity `protobuf:"bytes,4,rep,name=items,proto3" json:"items"`
}

func (x *MemberIdentityResponse) Reset() {
	*x = MemberIdentityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_memberIdentityService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberIdentityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberIdentityResponse) ProtoMessage() {}

func (x *MemberIdentityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_memberIdentityService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberIdentityResponse.ProtoReflect.Descriptor instead.
func (*MemberIdentityResponse) Descriptor() ([]byte, []int) {
	return file_memberIdentityService_proto_rawDescGZIP(), []int{2}
}

func (x *MemberIdentityResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *MemberIdentityResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *MemberIdentityResponse) GetEntity() *MemberIdentity {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *MemberIdentityResponse) GetItems() []*MemberIdentity {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_memberIdentityService_proto protoreflect.FileDescriptor

var file_memberIdentityService_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe1, 0x04, 0x0a, 0x0e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65,
	0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x62, 0x69, 0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73,
	0x5f, 0x66, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x69, 0x73, 0x46, 0x6f, 0x72, 0x65, 0x76, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x65, 0x67,
	0x69, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62,
	0x65, 0x67, 0x69, 0x6e, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f,
	0x64, 0x61, 0x74, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6e,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x55, 0x72, 0x6c,
	0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x6c,
	0x65, 0x67, 0x61, 0x6c, 0x5f, 0x6d, 0x61, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6c, 0x65, 0x67, 0x61, 0x6c, 0x4d, 0x61, 0x6e, 0x12, 0x2d, 0x0a, 0x12, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64,
	0x43, 0x61, 0x70, 0x69, 0x74, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x6c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xdb,
	0x02, 0x0a, 0x15, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61,
	0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x72,
	0x65, 0x61, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x61, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x6c,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61,
	0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x72, 0x65,
	0x76, 0x65, 0x72, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73, 0x46, 0x6f, 0x72,
	0x65, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xb1, 0x01, 0x0a,
	0x16, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x30,
	0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x2e, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x32, 0xf3, 0x01, 0x0a, 0x15, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x46, 0x0a, 0x06, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x1a, 0x20,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x43, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x12, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_memberIdentityService_proto_rawDescOnce sync.Once
	file_memberIdentityService_proto_rawDescData = file_memberIdentityService_proto_rawDesc
)

func file_memberIdentityService_proto_rawDescGZIP() []byte {
	file_memberIdentityService_proto_rawDescOnce.Do(func() {
		file_memberIdentityService_proto_rawDescData = protoimpl.X.CompressGZIP(file_memberIdentityService_proto_rawDescData)
	})
	return file_memberIdentityService_proto_rawDescData
}

var file_memberIdentityService_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_memberIdentityService_proto_goTypes = []interface{}{
	(*MemberIdentity)(nil),         // 0: services.MemberIdentity
	(*MemberIdentityRequest)(nil),  // 1: services.MemberIdentityRequest
	(*MemberIdentityResponse)(nil), // 2: services.MemberIdentityResponse
	(*common.Pager)(nil),           // 3: common.Pager
}
var file_memberIdentityService_proto_depIdxs = []int32{
	3, // 0: services.MemberIdentityResponse.pager:type_name -> common.Pager
	0, // 1: services.MemberIdentityResponse.entity:type_name -> services.MemberIdentity
	0, // 2: services.MemberIdentityResponse.items:type_name -> services.MemberIdentity
	0, // 3: services.MemberIdentityService.Create:input_type -> services.MemberIdentity
	0, // 4: services.MemberIdentityService.Get:input_type -> services.MemberIdentity
	1, // 5: services.MemberIdentityService.Search:input_type -> services.MemberIdentityRequest
	2, // 6: services.MemberIdentityService.Create:output_type -> services.MemberIdentityResponse
	2, // 7: services.MemberIdentityService.Get:output_type -> services.MemberIdentityResponse
	2, // 8: services.MemberIdentityService.Search:output_type -> services.MemberIdentityResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_memberIdentityService_proto_init() }
func file_memberIdentityService_proto_init() {
	if File_memberIdentityService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_memberIdentityService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberIdentity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_memberIdentityService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberIdentityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_memberIdentityService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberIdentityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_memberIdentityService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_memberIdentityService_proto_goTypes,
		DependencyIndexes: file_memberIdentityService_proto_depIdxs,
		MessageInfos:      file_memberIdentityService_proto_msgTypes,
	}.Build()
	File_memberIdentityService_proto = out.File
	file_memberIdentityService_proto_rawDesc = nil
	file_memberIdentityService_proto_goTypes = nil
	file_memberIdentityService_proto_depIdxs = nil
}
