// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: levelService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Level struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int32           `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                                            //ID
	Type              string          `protobuf:"bytes,2,opt,name=type,proto3" json:"type"`                                                         //类型：free免费等级，1付费等级
	Name              string          `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`                                                         //等级名称
	BgMode            string          `protobuf:"bytes,4,opt,name=bg_mode,json=bgMode,proto3" json:"bg_mode"`                                       //背景模式：0背景色，1背景图
	BgColor           string          `protobuf:"bytes,5,opt,name=bg_color,json=bgColor,proto3" json:"bg_color"`                                    //卡面背景颜色
	BgImageUrl        string          `protobuf:"bytes,6,opt,name=bg_image_url,json=bgImageUrl,proto3" json:"bg_image_url"`                         //背景图URL
	IconUrl           string          `protobuf:"bytes,7,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url"`                                    //图标URL
	Grade             int32           `protobuf:"varint,8,opt,name=grade,proto3" json:"grade"`                                                      //会员等级级别
	GrowthValue       int32           `protobuf:"varint,9,opt,name=growth_value,json=growthValue,proto3" json:"growth_value"`                       //需要成长值【免费会员】
	Description       string          `protobuf:"bytes,10,opt,name=description,proto3" json:"description"`                                          //等级描述/使用须知
	IsFreeShipping    string          `protobuf:"bytes,11,opt,name=is_free_shipping,json=isFreeShipping,proto3" json:"is_free_shipping"`            //是否会员包邮(0否，1是)【会员权益】
	IsDiscount        string          `protobuf:"bytes,12,opt,name=is_discount,json=isDiscount,proto3" json:"is_discount"`                          //是否会员折扣(0否，1是)【会员权益】
	IsPointFeedback   string          `protobuf:"bytes,13,opt,name=is_point_feedback,json=isPointFeedback,proto3" json:"is_point_feedback"`         //是否积分回馈(0否，1是)【会员权益】
	DiscountRate      float32         `protobuf:"fixed32,14,opt,name=discount_rate,json=discountRate,proto3" json:"discount_rate"`                  //会员折扣率(折扣率取0到10之间)
	PointFeedbackRate float32         `protobuf:"fixed32,15,opt,name=point_feedback_rate,json=pointFeedbackRate,proto3" json:"point_feedback_rate"` //积分回馈倍率(积分倍率不能大于 50)
	IsAutoUpgrade     string          `protobuf:"bytes,16,opt,name=is_auto_upgrade,json=isAutoUpgrade,proto3" json:"is_auto_upgrade"`               //是否开启自动升级【免费会员】
	IsAutoRenewal     string          `protobuf:"bytes,17,opt,name=is_auto_renewal,json=isAutoRenewal,proto3" json:"is_auto_renewal"`               //是否开启自动续费【付费会员】
	Status            string          `protobuf:"bytes,18,opt,name=status,proto3" json:"status"`                                                    //状态：启用，禁用
	CreatedAt         string          `protobuf:"bytes,19,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt         string          `protobuf:"bytes,20,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	UpgradePackage    *LevelPackage   `protobuf:"bytes,21,opt,name=upgrade_package,json=upgradePackage,proto3" json:"upgrade_package"`
	Benefits          []*Benefit      `protobuf:"bytes,22,rep,name=benefits,proto3" json:"benefits"`
	PayRules          []*LevelPayRule `protobuf:"bytes,23,rep,name=pay_rules,json=payRules,proto3" json:"pay_rules"`
	GradeName         string          `protobuf:"bytes,24,opt,name=grade_name,json=gradeName,proto3" json:"grade_name"`
	StatusName        string          `protobuf:"bytes,25,opt,name=status_name,json=statusName,proto3" json:"status_name"`
	BenefitText       string          `protobuf:"bytes,26,opt,name=benefit_text,json=benefitText,proto3" json:"benefit_text"`
	PayTextList       []string        `protobuf:"bytes,27,rep,name=pay_text_list,json=payTextList,proto3" json:"pay_text_list"`
	MemberCount       int64           `protobuf:"varint,28,opt,name=member_count,json=memberCount,proto3" json:"member_count"`
	AllowDelete       bool            `protobuf:"varint,29,opt,name=allow_delete,json=allowDelete,proto3" json:"allow_delete"` //列表删除操作使用
}

func (x *Level) Reset() {
	*x = Level{}
	if protoimpl.UnsafeEnabled {
		mi := &file_levelService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Level) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Level) ProtoMessage() {}

func (x *Level) ProtoReflect() protoreflect.Message {
	mi := &file_levelService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Level.ProtoReflect.Descriptor instead.
func (*Level) Descriptor() ([]byte, []int) {
	return file_levelService_proto_rawDescGZIP(), []int{0}
}

func (x *Level) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Level) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Level) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Level) GetBgMode() string {
	if x != nil {
		return x.BgMode
	}
	return ""
}

func (x *Level) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *Level) GetBgImageUrl() string {
	if x != nil {
		return x.BgImageUrl
	}
	return ""
}

func (x *Level) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *Level) GetGrade() int32 {
	if x != nil {
		return x.Grade
	}
	return 0
}

func (x *Level) GetGrowthValue() int32 {
	if x != nil {
		return x.GrowthValue
	}
	return 0
}

func (x *Level) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Level) GetIsFreeShipping() string {
	if x != nil {
		return x.IsFreeShipping
	}
	return ""
}

func (x *Level) GetIsDiscount() string {
	if x != nil {
		return x.IsDiscount
	}
	return ""
}

func (x *Level) GetIsPointFeedback() string {
	if x != nil {
		return x.IsPointFeedback
	}
	return ""
}

func (x *Level) GetDiscountRate() float32 {
	if x != nil {
		return x.DiscountRate
	}
	return 0
}

func (x *Level) GetPointFeedbackRate() float32 {
	if x != nil {
		return x.PointFeedbackRate
	}
	return 0
}

func (x *Level) GetIsAutoUpgrade() string {
	if x != nil {
		return x.IsAutoUpgrade
	}
	return ""
}

func (x *Level) GetIsAutoRenewal() string {
	if x != nil {
		return x.IsAutoRenewal
	}
	return ""
}

func (x *Level) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Level) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Level) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Level) GetUpgradePackage() *LevelPackage {
	if x != nil {
		return x.UpgradePackage
	}
	return nil
}

func (x *Level) GetBenefits() []*Benefit {
	if x != nil {
		return x.Benefits
	}
	return nil
}

func (x *Level) GetPayRules() []*LevelPayRule {
	if x != nil {
		return x.PayRules
	}
	return nil
}

func (x *Level) GetGradeName() string {
	if x != nil {
		return x.GradeName
	}
	return ""
}

func (x *Level) GetStatusName() string {
	if x != nil {
		return x.StatusName
	}
	return ""
}

func (x *Level) GetBenefitText() string {
	if x != nil {
		return x.BenefitText
	}
	return ""
}

func (x *Level) GetPayTextList() []string {
	if x != nil {
		return x.PayTextList
	}
	return nil
}

func (x *Level) GetMemberCount() int64 {
	if x != nil {
		return x.MemberCount
	}
	return 0
}

func (x *Level) GetAllowDelete() bool {
	if x != nil {
		return x.AllowDelete
	}
	return false
}

type LevelPayRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Month     int32  `protobuf:"varint,2,opt,name=month,proto3" json:"month"`                         //月份
	Price     int64  `protobuf:"varint,3,opt,name=price,proto3" json:"price"`                         //价格
	MonthName string `protobuf:"bytes,4,opt,name=month_name,json=monthName,proto3" json:"month_name"` //月份名称
}

func (x *LevelPayRule) Reset() {
	*x = LevelPayRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_levelService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelPayRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelPayRule) ProtoMessage() {}

func (x *LevelPayRule) ProtoReflect() protoreflect.Message {
	mi := &file_levelService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelPayRule.ProtoReflect.Descriptor instead.
func (*LevelPayRule) Descriptor() ([]byte, []int) {
	return file_levelService_proto_rawDescGZIP(), []int{1}
}

func (x *LevelPayRule) GetMonth() int32 {
	if x != nil {
		return x.Month
	}
	return 0
}

func (x *LevelPayRule) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *LevelPayRule) GetMonthName() string {
	if x != nil {
		return x.MonthName
	}
	return ""
}

//等级礼包
type LevelPackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsSendIntegral string                `protobuf:"bytes,1,opt,name=is_send_integral,json=isSendIntegral,proto3" json:"is_send_integral"` //是否赠送积分(0否，1是)
	IsSendCoupon   string                `protobuf:"bytes,2,opt,name=is_send_coupon,json=isSendCoupon,proto3" json:"is_send_coupon"`       //是否赠送优惠劵(会员权益)(0否，1是)
	IsSendGoods    string                `protobuf:"bytes,3,opt,name=is_send_goods,json=isSendGoods,proto3" json:"is_send_goods"`          //是否赠送礼品(会员权益)(0否，1是)
	SendIntegral   int64                 `protobuf:"varint,4,opt,name=send_integral,json=sendIntegral,proto3" json:"send_integral"`        //赠送积分数
	SendCouponData []*LevelPackageCoupon `protobuf:"bytes,5,rep,name=send_coupon_data,json=sendCouponData,proto3" json:"send_coupon_data"` //赠送优惠劵数据
	SendGoodsData  []*LevelPackageGoods  `protobuf:"bytes,6,rep,name=send_goods_data,json=sendGoodsData,proto3" json:"send_goods_data"`    //赠送礼品数据
}

func (x *LevelPackage) Reset() {
	*x = LevelPackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_levelService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelPackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelPackage) ProtoMessage() {}

func (x *LevelPackage) ProtoReflect() protoreflect.Message {
	mi := &file_levelService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelPackage.ProtoReflect.Descriptor instead.
func (*LevelPackage) Descriptor() ([]byte, []int) {
	return file_levelService_proto_rawDescGZIP(), []int{2}
}

func (x *LevelPackage) GetIsSendIntegral() string {
	if x != nil {
		return x.IsSendIntegral
	}
	return ""
}

func (x *LevelPackage) GetIsSendCoupon() string {
	if x != nil {
		return x.IsSendCoupon
	}
	return ""
}

func (x *LevelPackage) GetIsSendGoods() string {
	if x != nil {
		return x.IsSendGoods
	}
	return ""
}

func (x *LevelPackage) GetSendIntegral() int64 {
	if x != nil {
		return x.SendIntegral
	}
	return 0
}

func (x *LevelPackage) GetSendCouponData() []*LevelPackageCoupon {
	if x != nil {
		return x.SendCouponData
	}
	return nil
}

func (x *LevelPackage) GetSendGoodsData() []*LevelPackageGoods {
	if x != nil {
		return x.SendGoodsData
	}
	return nil
}

type LevelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged    int64 `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	//以下为自定义参数
	Id       int32  `protobuf:"varint,3,opt,name=id,proto3" json:"id"`
	Name     string `protobuf:"bytes,4,opt,name=name,proto3" json:"name"`
	Type     string `protobuf:"bytes,5,opt,name=type,proto3" json:"type"`
	Status   string `protobuf:"bytes,6,opt,name=status,proto3" json:"status"`
	MemberId int64  `protobuf:"varint,7,opt,name=member_id,json=memberId,proto3" json:"member_id"`
}

func (x *LevelRequest) Reset() {
	*x = LevelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_levelService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelRequest) ProtoMessage() {}

func (x *LevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_levelService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelRequest.ProtoReflect.Descriptor instead.
func (*LevelRequest) Descriptor() ([]byte, []int) {
	return file_levelService_proto_rawDescGZIP(), []int{3}
}

func (x *LevelRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *LevelRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *LevelRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LevelRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LevelRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LevelRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *LevelRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

type LevelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *Level        `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*Level      `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Info   string        `protobuf:"bytes,4,opt,name=info,proto3" json:"info"`
}

func (x *LevelResponse) Reset() {
	*x = LevelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_levelService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelResponse) ProtoMessage() {}

func (x *LevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_levelService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelResponse.ProtoReflect.Descriptor instead.
func (*LevelResponse) Descriptor() ([]byte, []int) {
	return file_levelService_proto_rawDescGZIP(), []int{4}
}

func (x *LevelResponse) GetEntity() *Level {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *LevelResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *LevelResponse) GetItems() []*Level {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *LevelResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type LevelPackageCoupon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CouponId int64  `protobuf:"varint,1,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id"`
	Title    string `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
	Number   int32  `protobuf:"varint,3,opt,name=number,proto3" json:"number"`
}

func (x *LevelPackageCoupon) Reset() {
	*x = LevelPackageCoupon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_levelService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelPackageCoupon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelPackageCoupon) ProtoMessage() {}

func (x *LevelPackageCoupon) ProtoReflect() protoreflect.Message {
	mi := &file_levelService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelPackageCoupon.ProtoReflect.Descriptor instead.
func (*LevelPackageCoupon) Descriptor() ([]byte, []int) {
	return file_levelService_proto_rawDescGZIP(), []int{2, 0}
}

func (x *LevelPackageCoupon) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *LevelPackageCoupon) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *LevelPackageCoupon) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

type LevelPackageGoods struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpuId    int64  `protobuf:"varint,1,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`
	Md5Key   string `protobuf:"bytes,2,opt,name=md5_key,json=md5Key,proto3" json:"md5_key"`
	Title    string `protobuf:"bytes,3,opt,name=title,proto3" json:"title"`
	Unit     string `protobuf:"bytes,4,opt,name=unit,proto3" json:"unit"`
	ImageUrl string `protobuf:"bytes,5,opt,name=image_url,json=imageUrl,proto3" json:"image_url"`
	Number   int32  `protobuf:"varint,6,opt,name=number,proto3" json:"number"`
}

func (x *LevelPackageGoods) Reset() {
	*x = LevelPackageGoods{}
	if protoimpl.UnsafeEnabled {
		mi := &file_levelService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LevelPackageGoods) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelPackageGoods) ProtoMessage() {}

func (x *LevelPackageGoods) ProtoReflect() protoreflect.Message {
	mi := &file_levelService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelPackageGoods.ProtoReflect.Descriptor instead.
func (*LevelPackageGoods) Descriptor() ([]byte, []int) {
	return file_levelService_proto_rawDescGZIP(), []int{2, 1}
}

func (x *LevelPackageGoods) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *LevelPackageGoods) GetMd5Key() string {
	if x != nil {
		return x.Md5Key
	}
	return ""
}

func (x *LevelPackageGoods) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *LevelPackageGoods) GetUnit() string {
	if x != nil {
		return x.Unit
	}
	return ""
}

func (x *LevelPackageGoods) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *LevelPackageGoods) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

var File_levelService_proto protoreflect.FileDescriptor

var file_levelService_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x11,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x14, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xef, 0x07, 0x0a, 0x05, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x62, 0x67, 0x5f,
	0x6d, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x67, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x20, 0x0a,
	0x0c, 0x62, 0x67, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x67, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12,
	0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x12, 0x21, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x67, 0x72, 0x6f, 0x77, 0x74, 0x68, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x66, 0x72, 0x65, 0x65,
	0x5f, 0x73, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x69, 0x73, 0x46, 0x72, 0x65, 0x65, 0x53, 0x68, 0x69, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12,
	0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x66, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x69, 0x73, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x23, 0x0a, 0x0d,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x62,
	0x61, 0x63, 0x6b, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x02, 0x52, 0x11,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x61, 0x74,
	0x65, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x61, 0x75, 0x74, 0x6f, 0x5f, 0x75, 0x70, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x73, 0x41, 0x75,
	0x74, 0x6f, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f,
	0x61, 0x75, 0x74, 0x6f, 0x5f, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x61, 0x6c, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x61,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3f, 0x0a, 0x0f, 0x75, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x0e, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x2d, 0x0a, 0x08, 0x62, 0x65, 0x6e, 0x65,
	0x66, 0x69, 0x74, 0x73, 0x18, 0x16, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x52, 0x08, 0x62,
	0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x73, 0x12, 0x33, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x5f, 0x72,
	0x75, 0x6c, 0x65, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x50, 0x61, 0x79, 0x52, 0x75,
	0x6c, 0x65, 0x52, 0x08, 0x70, 0x61, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x67, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x62, 0x65, 0x6e, 0x65, 0x66, 0x69, 0x74, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x22, 0x0a, 0x0d, 0x70, 0x61, 0x79, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x1b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x54, 0x65, 0x78, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x5f,
	0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x61, 0x6c,
	0x6c, 0x6f, 0x77, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x22, 0x59, 0x0a, 0x0c, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x50, 0x61, 0x79, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x6f, 0x6e, 0x74, 0x68,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0xa4, 0x04, 0x0a, 0x0c, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x69, 0x73, 0x53, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12,
	0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x65, 0x6e, 0x64, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0d, 0x69, 0x73, 0x5f, 0x73, 0x65, 0x6e, 0x64,
	0x5f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x73,
	0x53, 0x65, 0x6e, 0x64, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x73, 0x65, 0x6e,
	0x64, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x47,
	0x0a, 0x10, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65,
	0x2e, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x75,
	0x70, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x44, 0x0a, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x5f,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x2e, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x0d,
	0x73, 0x65, 0x6e, 0x64, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x61, 0x74, 0x61, 0x1a, 0x53, 0x0a,
	0x06, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x1a, 0x96, 0x01, 0x0a, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x15, 0x0a, 0x06,
	0x73, 0x70, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x70,
	0x75, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x64, 0x35, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x64, 0x35, 0x4b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f,
	0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xae, 0x01, 0x0a, 0x0c,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x22, 0x98, 0x01, 0x0a,
	0x0d, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27,
	0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52,
	0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x32, 0xa3, 0x03, 0x0a, 0x0c, 0x4c, 0x65, 0x76, 0x65,
	0x6c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x34, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x34,
	0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x1a,
	0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x31, 0x0a, 0x03, 0x47, 0x65,
	0x74, 0x12, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a,
	0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x04, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x11, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x73, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a,
	0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_levelService_proto_rawDescOnce sync.Once
	file_levelService_proto_rawDescData = file_levelService_proto_rawDesc
)

func file_levelService_proto_rawDescGZIP() []byte {
	file_levelService_proto_rawDescOnce.Do(func() {
		file_levelService_proto_rawDescData = protoimpl.X.CompressGZIP(file_levelService_proto_rawDescData)
	})
	return file_levelService_proto_rawDescData
}

var file_levelService_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_levelService_proto_goTypes = []interface{}{
	(*Level)(nil),              // 0: services.Level
	(*LevelPayRule)(nil),       // 1: services.LevelPayRule
	(*LevelPackage)(nil),       // 2: services.LevelPackage
	(*LevelRequest)(nil),       // 3: services.LevelRequest
	(*LevelResponse)(nil),      // 4: services.LevelResponse
	(*LevelPackageCoupon)(nil), // 5: services.LevelPackage.coupon
	(*LevelPackageGoods)(nil),  // 6: services.LevelPackage.goods
	(*Benefit)(nil),            // 7: services.Benefit
	(*common.Pager)(nil),       // 8: common.Pager
}
var file_levelService_proto_depIdxs = []int32{
	2,  // 0: services.Level.upgrade_package:type_name -> services.LevelPackage
	7,  // 1: services.Level.benefits:type_name -> services.Benefit
	1,  // 2: services.Level.pay_rules:type_name -> services.LevelPayRule
	5,  // 3: services.LevelPackage.send_coupon_data:type_name -> services.LevelPackage.coupon
	6,  // 4: services.LevelPackage.send_goods_data:type_name -> services.LevelPackage.goods
	0,  // 5: services.LevelResponse.entity:type_name -> services.Level
	8,  // 6: services.LevelResponse.pager:type_name -> common.Pager
	0,  // 7: services.LevelResponse.items:type_name -> services.Level
	0,  // 8: services.LevelService.Create:input_type -> services.Level
	0,  // 9: services.LevelService.Update:input_type -> services.Level
	0,  // 10: services.LevelService.Delete:input_type -> services.Level
	0,  // 11: services.LevelService.Get:input_type -> services.Level
	3,  // 12: services.LevelService.Search:input_type -> services.LevelRequest
	3,  // 13: services.LevelService.List:input_type -> services.LevelRequest
	3,  // 14: services.LevelService.MemberValidLevels:input_type -> services.LevelRequest
	4,  // 15: services.LevelService.Create:output_type -> services.LevelResponse
	4,  // 16: services.LevelService.Update:output_type -> services.LevelResponse
	4,  // 17: services.LevelService.Delete:output_type -> services.LevelResponse
	4,  // 18: services.LevelService.Get:output_type -> services.LevelResponse
	4,  // 19: services.LevelService.Search:output_type -> services.LevelResponse
	4,  // 20: services.LevelService.List:output_type -> services.LevelResponse
	4,  // 21: services.LevelService.MemberValidLevels:output_type -> services.LevelResponse
	15, // [15:22] is the sub-list for method output_type
	8,  // [8:15] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_levelService_proto_init() }
func file_levelService_proto_init() {
	if File_levelService_proto != nil {
		return
	}
	file_benefitService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_levelService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Level); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_levelService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelPayRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_levelService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelPackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_levelService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_levelService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_levelService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelPackageCoupon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_levelService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LevelPackageGoods); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_levelService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_levelService_proto_goTypes,
		DependencyIndexes: file_levelService_proto_depIdxs,
		MessageInfos:      file_levelService_proto_msgTypes,
	}.Build()
	File_levelService_proto = out.File
	file_levelService_proto_rawDesc = nil
	file_levelService_proto_goTypes = nil
	file_levelService_proto_depIdxs = nil
}
