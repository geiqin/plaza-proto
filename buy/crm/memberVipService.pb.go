// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: memberVipService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MemberVip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                                          //ID
	MemberId          int64  `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id"`                              //用户ID
	VipId             int32  `protobuf:"varint,3,opt,name=vip_id,json=vipId,proto3" json:"vip_id"`                                       //MemberVipID
	BeginTime         string `protobuf:"bytes,4,opt,name=begin_time,json=beginTime,proto3" json:"begin_time"`                            //开始时间
	EndTime           string `protobuf:"bytes,5,opt,name=end_time,json=endTime,proto3" json:"end_time"`                                  //结束时间
	OrderTradeNum     int32  `protobuf:"varint,6,opt,name=order_trade_num,json=orderTradeNum,proto3" json:"order_trade_num"`             //成交订单笔数
	OrderTradeMoney   int64  `protobuf:"varint,7,opt,name=order_trade_money,json=orderTradeMoney,proto3" json:"order_trade_money"`       //成交订单总额
	RenewNum          int32  `protobuf:"varint,8,opt,name=renew_num,json=renewNum,proto3" json:"renew_num"`                              //续展次数
	SurplusTimeNumber int32  `protobuf:"varint,9,opt,name=surplus_time_number,json=surplusTimeNumber,proto3" json:"surplus_time_number"` //剩余时间值
	SurplusTimeUnit   string `protobuf:"bytes,10,opt,name=surplus_time_unit,json=surplusTimeUnit,proto3" json:"surplus_time_unit"`       //剩余时间单位
	IsPermanent       string `protobuf:"bytes,11,opt,name=is_permanent,json=isPermanent,proto3" json:"is_permanent"`                     //是否永久会员
	Status            string `protobuf:"bytes,12,opt,name=status,proto3" json:"status"`                                                  //状态：0失效，1正常
	CreatedAt         string `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt         string `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	Vip               *Vip   `protobuf:"bytes,15,opt,name=vip,proto3" json:"vip"`
}

func (x *MemberVip) Reset() {
	*x = MemberVip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_memberVipService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberVip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberVip) ProtoMessage() {}

func (x *MemberVip) ProtoReflect() protoreflect.Message {
	mi := &file_memberVipService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberVip.ProtoReflect.Descriptor instead.
func (*MemberVip) Descriptor() ([]byte, []int) {
	return file_memberVipService_proto_rawDescGZIP(), []int{0}
}

func (x *MemberVip) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberVip) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *MemberVip) GetVipId() int32 {
	if x != nil {
		return x.VipId
	}
	return 0
}

func (x *MemberVip) GetBeginTime() string {
	if x != nil {
		return x.BeginTime
	}
	return ""
}

func (x *MemberVip) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *MemberVip) GetOrderTradeNum() int32 {
	if x != nil {
		return x.OrderTradeNum
	}
	return 0
}

func (x *MemberVip) GetOrderTradeMoney() int64 {
	if x != nil {
		return x.OrderTradeMoney
	}
	return 0
}

func (x *MemberVip) GetRenewNum() int32 {
	if x != nil {
		return x.RenewNum
	}
	return 0
}

func (x *MemberVip) GetSurplusTimeNumber() int32 {
	if x != nil {
		return x.SurplusTimeNumber
	}
	return 0
}

func (x *MemberVip) GetSurplusTimeUnit() string {
	if x != nil {
		return x.SurplusTimeUnit
	}
	return ""
}

func (x *MemberVip) GetIsPermanent() string {
	if x != nil {
		return x.IsPermanent
	}
	return ""
}

func (x *MemberVip) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *MemberVip) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *MemberVip) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *MemberVip) GetVip() *Vip {
	if x != nil {
		return x.Vip
	}
	return nil
}

type MemberVipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged    int64 `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	//以下为自定义参数
	Id       int32  `protobuf:"varint,3,opt,name=id,proto3" json:"id"`
	VipId    int64  `protobuf:"varint,4,opt,name=vip_id,json=vipId,proto3" json:"vip_id"`
	MemberId int64  `protobuf:"varint,5,opt,name=member_id,json=memberId,proto3" json:"member_id"`
	Status   string `protobuf:"bytes,6,opt,name=status,proto3" json:"status"`
}

func (x *MemberVipRequest) Reset() {
	*x = MemberVipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_memberVipService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberVipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberVipRequest) ProtoMessage() {}

func (x *MemberVipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_memberVipService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberVipRequest.ProtoReflect.Descriptor instead.
func (*MemberVipRequest) Descriptor() ([]byte, []int) {
	return file_memberVipService_proto_rawDescGZIP(), []int{1}
}

func (x *MemberVipRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *MemberVipRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *MemberVipRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MemberVipRequest) GetVipId() int64 {
	if x != nil {
		return x.VipId
	}
	return 0
}

func (x *MemberVipRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *MemberVipRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type MemberVipData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *MemberVip    `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*MemberVip  `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Info   *common.Info  `protobuf:"bytes,4,opt,name=info,proto3" json:"info"`
}

func (x *MemberVipData) Reset() {
	*x = MemberVipData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_memberVipService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberVipData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberVipData) ProtoMessage() {}

func (x *MemberVipData) ProtoReflect() protoreflect.Message {
	mi := &file_memberVipService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberVipData.ProtoReflect.Descriptor instead.
func (*MemberVipData) Descriptor() ([]byte, []int) {
	return file_memberVipService_proto_rawDescGZIP(), []int{2}
}

func (x *MemberVipData) GetEntity() *MemberVip {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *MemberVipData) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *MemberVipData) GetItems() []*MemberVip {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *MemberVipData) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

type MemberVipResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *MemberVipData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error  `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *MemberVipResponse) Reset() {
	*x = MemberVipResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_memberVipService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberVipResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberVipResponse) ProtoMessage() {}

func (x *MemberVipResponse) ProtoReflect() protoreflect.Message {
	mi := &file_memberVipService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberVipResponse.ProtoReflect.Descriptor instead.
func (*MemberVipResponse) Descriptor() ([]byte, []int) {
	return file_memberVipService_proto_rawDescGZIP(), []int{3}
}

func (x *MemberVipResponse) GetData() *MemberVipData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *MemberVipResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type MemberVipIndexData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base      *VipConfig `protobuf:"bytes,1,opt,name=base,proto3" json:"base"`
	MemberVip *MemberVip `protobuf:"bytes,2,opt,name=member_vip,json=memberVip,proto3" json:"member_vip"`
	NavList   []*NavInfo `protobuf:"bytes,3,rep,name=nav_list,json=navList,proto3" json:"nav_list"`
}

func (x *MemberVipIndexData) Reset() {
	*x = MemberVipIndexData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_memberVipService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberVipIndexData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberVipIndexData) ProtoMessage() {}

func (x *MemberVipIndexData) ProtoReflect() protoreflect.Message {
	mi := &file_memberVipService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberVipIndexData.ProtoReflect.Descriptor instead.
func (*MemberVipIndexData) Descriptor() ([]byte, []int) {
	return file_memberVipService_proto_rawDescGZIP(), []int{4}
}

func (x *MemberVipIndexData) GetBase() *VipConfig {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *MemberVipIndexData) GetMemberVip() *MemberVip {
	if x != nil {
		return x.MemberVip
	}
	return nil
}

func (x *MemberVipIndexData) GetNavList() []*NavInfo {
	if x != nil {
		return x.NavList
	}
	return nil
}

type MemberVipIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *MemberVipIndexData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error       `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *MemberVipIndexResponse) Reset() {
	*x = MemberVipIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_memberVipService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberVipIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberVipIndexResponse) ProtoMessage() {}

func (x *MemberVipIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_memberVipService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberVipIndexResponse.ProtoReflect.Descriptor instead.
func (*MemberVipIndexResponse) Descriptor() ([]byte, []int) {
	return file_memberVipService_proto_rawDescGZIP(), []int{5}
}

func (x *MemberVipIndexResponse) GetData() *MemberVipIndexData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *MemberVipIndexResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type MemberVipPosterData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserShareQrode string `protobuf:"bytes,1,opt,name=user_share_qrode,json=userShareQrode,proto3" json:"user_share_qrode"`
	UserShareUrl   string `protobuf:"bytes,2,opt,name=user_share_url,json=userShareUrl,proto3" json:"user_share_url"`
}

func (x *MemberVipPosterData) Reset() {
	*x = MemberVipPosterData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_memberVipService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberVipPosterData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberVipPosterData) ProtoMessage() {}

func (x *MemberVipPosterData) ProtoReflect() protoreflect.Message {
	mi := &file_memberVipService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberVipPosterData.ProtoReflect.Descriptor instead.
func (*MemberVipPosterData) Descriptor() ([]byte, []int) {
	return file_memberVipService_proto_rawDescGZIP(), []int{6}
}

func (x *MemberVipPosterData) GetUserShareQrode() string {
	if x != nil {
		return x.UserShareQrode
	}
	return ""
}

func (x *MemberVipPosterData) GetUserShareUrl() string {
	if x != nil {
		return x.UserShareUrl
	}
	return ""
}

type MemberVipPosterResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *MemberVipPosterData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error        `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *MemberVipPosterResponse) Reset() {
	*x = MemberVipPosterResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_memberVipService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MemberVipPosterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MemberVipPosterResponse) ProtoMessage() {}

func (x *MemberVipPosterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_memberVipService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MemberVipPosterResponse.ProtoReflect.Descriptor instead.
func (*MemberVipPosterResponse) Descriptor() ([]byte, []int) {
	return file_memberVipService_proto_rawDescGZIP(), []int{7}
}

func (x *MemberVipPosterResponse) GetData() *MemberVipPosterData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *MemberVipPosterResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_memberVipService_proto protoreflect.FileDescriptor

var file_memberVipService_proto_rawDesc = []byte{
	0x0a, 0x16, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x69, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x10, 0x76, 0x69, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x15, 0x62, 0x61,
	0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xf0, 0x03, 0x0a, 0x09, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x69,
	0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x76, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x76, 0x69, 0x70, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x5f, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x65, 0x67, 0x69, 0x6e,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12,
	0x26, 0x0a, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54,
	0x72, 0x61, 0x64, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x2a, 0x0a, 0x11, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x5f, 0x6e, 0x75, 0x6d,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x6e, 0x65, 0x77, 0x4e, 0x75, 0x6d,
	0x12, 0x2e, 0x0a, 0x13, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x73,
	0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x2a, 0x0a, 0x11, 0x73, 0x75, 0x72, 0x70, 0x6c, 0x75, 0x73, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x75, 0x72,
	0x70, 0x6c, 0x75, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x69, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x69, 0x73, 0x50, 0x65, 0x72, 0x6d, 0x61, 0x6e, 0x65, 0x6e, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x03, 0x76, 0x69, 0x70, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x69,
	0x70, 0x52, 0x03, 0x76, 0x69, 0x70, 0x22, 0xa1, 0x01, 0x0a, 0x10, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x56, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x76, 0x69, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x76, 0x69, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xae, 0x01, 0x0a, 0x0d, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x69, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x0a, 0x06,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x69,
	0x70, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x29,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x56,
	0x69, 0x70, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x65, 0x0a, 0x11, 0x4d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x56, 0x69, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x9f, 0x01, 0x0a, 0x12, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x69, 0x70,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x44, 0x61, 0x74, 0x61, 0x12, 0x27, 0x0a, 0x04, 0x62, 0x61, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x56, 0x69, 0x70, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x12, 0x32, 0x0a, 0x0a, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x76, 0x69, 0x70,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x69, 0x70, 0x52, 0x09, 0x6d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x56, 0x69, 0x70, 0x12, 0x2c, 0x0a, 0x08, 0x6e, 0x61, 0x76, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x4e, 0x61, 0x76, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x6e, 0x61, 0x76,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x6f, 0x0a, 0x16, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x69,
	0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x69,
	0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x65, 0x0a, 0x13, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x56,
	0x69, 0x70, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x10,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x5f, 0x71, 0x72, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x51, 0x72, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x75, 0x73, 0x65, 0x72, 0x53, 0x68, 0x61, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x71, 0x0a, 0x17,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x69, 0x70, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x69, 0x70, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32,
	0xdb, 0x02, 0x0a, 0x10, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x69, 0x70, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x13, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x56,
	0x69, 0x70, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x56, 0x69, 0x70, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x06, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72,
	0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x56, 0x69, 0x70, 0x1a, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x69, 0x70, 0x50, 0x6f, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x03, 0x47, 0x65,
	0x74, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d,
	0x62, 0x65, 0x72, 0x56, 0x69, 0x70, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12,
	0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x56, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x56, 0x69, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x04, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x56, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72,
	0x56, 0x69, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a,
	0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_memberVipService_proto_rawDescOnce sync.Once
	file_memberVipService_proto_rawDescData = file_memberVipService_proto_rawDesc
)

func file_memberVipService_proto_rawDescGZIP() []byte {
	file_memberVipService_proto_rawDescOnce.Do(func() {
		file_memberVipService_proto_rawDescData = protoimpl.X.CompressGZIP(file_memberVipService_proto_rawDescData)
	})
	return file_memberVipService_proto_rawDescData
}

var file_memberVipService_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_memberVipService_proto_goTypes = []interface{}{
	(*MemberVip)(nil),               // 0: services.MemberVip
	(*MemberVipRequest)(nil),        // 1: services.MemberVipRequest
	(*MemberVipData)(nil),           // 2: services.MemberVipData
	(*MemberVipResponse)(nil),       // 3: services.MemberVipResponse
	(*MemberVipIndexData)(nil),      // 4: services.MemberVipIndexData
	(*MemberVipIndexResponse)(nil),  // 5: services.MemberVipIndexResponse
	(*MemberVipPosterData)(nil),     // 6: services.MemberVipPosterData
	(*MemberVipPosterResponse)(nil), // 7: services.MemberVipPosterResponse
	(*Vip)(nil),                     // 8: services.Vip
	(*common.Pager)(nil),            // 9: common.Pager
	(*common.Info)(nil),             // 10: common.Info
	(*common.Error)(nil),            // 11: common.Error
	(*VipConfig)(nil),               // 12: services.VipConfig
	(*NavInfo)(nil),                 // 13: services.NavInfo
}
var file_memberVipService_proto_depIdxs = []int32{
	8,  // 0: services.MemberVip.vip:type_name -> services.Vip
	0,  // 1: services.MemberVipData.entity:type_name -> services.MemberVip
	9,  // 2: services.MemberVipData.pager:type_name -> common.Pager
	0,  // 3: services.MemberVipData.items:type_name -> services.MemberVip
	10, // 4: services.MemberVipData.info:type_name -> common.Info
	2,  // 5: services.MemberVipResponse.data:type_name -> services.MemberVipData
	11, // 6: services.MemberVipResponse.error:type_name -> common.Error
	12, // 7: services.MemberVipIndexData.base:type_name -> services.VipConfig
	0,  // 8: services.MemberVipIndexData.member_vip:type_name -> services.MemberVip
	13, // 9: services.MemberVipIndexData.nav_list:type_name -> services.NavInfo
	4,  // 10: services.MemberVipIndexResponse.data:type_name -> services.MemberVipIndexData
	11, // 11: services.MemberVipIndexResponse.error:type_name -> common.Error
	6,  // 12: services.MemberVipPosterResponse.data:type_name -> services.MemberVipPosterData
	11, // 13: services.MemberVipPosterResponse.error:type_name -> common.Error
	0,  // 14: services.MemberVipService.Index:input_type -> services.MemberVip
	0,  // 15: services.MemberVipService.Poster:input_type -> services.MemberVip
	0,  // 16: services.MemberVipService.Get:input_type -> services.MemberVip
	1,  // 17: services.MemberVipService.Search:input_type -> services.MemberVipRequest
	1,  // 18: services.MemberVipService.List:input_type -> services.MemberVipRequest
	5,  // 19: services.MemberVipService.Index:output_type -> services.MemberVipIndexResponse
	7,  // 20: services.MemberVipService.Poster:output_type -> services.MemberVipPosterResponse
	3,  // 21: services.MemberVipService.Get:output_type -> services.MemberVipResponse
	3,  // 22: services.MemberVipService.Search:output_type -> services.MemberVipResponse
	3,  // 23: services.MemberVipService.List:output_type -> services.MemberVipResponse
	19, // [19:24] is the sub-list for method output_type
	14, // [14:19] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_memberVipService_proto_init() }
func file_memberVipService_proto_init() {
	if File_memberVipService_proto != nil {
		return
	}
	file_vipService_proto_init()
	file_configService_proto_init()
	file_baseInfoService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_memberVipService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberVip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_memberVipService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberVipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_memberVipService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberVipData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_memberVipService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberVipResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_memberVipService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberVipIndexData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_memberVipService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberVipIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_memberVipService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberVipPosterData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_memberVipService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MemberVipPosterResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_memberVipService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_memberVipService_proto_goTypes,
		DependencyIndexes: file_memberVipService_proto_depIdxs,
		MessageInfos:      file_memberVipService_proto_msgTypes,
	}.Build()
	File_memberVipService_proto = out.File
	file_memberVipService_proto_rawDesc = nil
	file_memberVipService_proto_goTypes = nil
	file_memberVipService_proto_depIdxs = nil
}
