// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: spuSaleService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 商品销量日志
type SpuSaleLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                              //ID
	SpuId         int64  `protobuf:"varint,2,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`                           //商品ID
	Unique        string `protobuf:"bytes,3,opt,name=unique,proto3" json:"unique"`                                       //唯一标识
	OrderId       int64  `protobuf:"varint,4,opt,name=order_id,json=orderId,proto3" json:"order_id"`                     //订单ID
	OrderDetailId int64  `protobuf:"varint,5,opt,name=order_detail_id,json=orderDetailId,proto3" json:"order_detail_id"` //订单明细ID
	Num           int64  `protobuf:"varint,6,opt,name=num,proto3" json:"num"`                                            //数量
	CancelTime    int64  `protobuf:"varint,11,opt,name=cancel_time,json=cancelTime,proto3" json:"cancel_time"`           //取消时间
	Status        string `protobuf:"bytes,12,opt,name=status,proto3" json:"status"`                                      //状态：1-已生效,2-已取消
	UpdatedAt     int64  `protobuf:"varint,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`              //创建时间
	CreatedAt     int64  `protobuf:"varint,14,opt,name=created_at,json=createdAt,proto3" json:"created_at"`              //修改时间
}

func (x *SpuSaleLog) Reset() {
	*x = SpuSaleLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spuSaleService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpuSaleLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpuSaleLog) ProtoMessage() {}

func (x *SpuSaleLog) ProtoReflect() protoreflect.Message {
	mi := &file_spuSaleService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpuSaleLog.ProtoReflect.Descriptor instead.
func (*SpuSaleLog) Descriptor() ([]byte, []int) {
	return file_spuSaleService_proto_rawDescGZIP(), []int{0}
}

func (x *SpuSaleLog) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpuSaleLog) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *SpuSaleLog) GetUnique() string {
	if x != nil {
		return x.Unique
	}
	return ""
}

func (x *SpuSaleLog) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *SpuSaleLog) GetOrderDetailId() int64 {
	if x != nil {
		return x.OrderDetailId
	}
	return 0
}

func (x *SpuSaleLog) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *SpuSaleLog) GetCancelTime() int64 {
	if x != nil {
		return x.CancelTime
	}
	return 0
}

func (x *SpuSaleLog) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SpuSaleLog) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SpuSaleLog) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

// 库存请求参数
type SpuSale struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId int64         `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id"` //订单ID
	Items   []*SpuSaleLog `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
}

func (x *SpuSale) Reset() {
	*x = SpuSale{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spuSaleService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpuSale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpuSale) ProtoMessage() {}

func (x *SpuSale) ProtoReflect() protoreflect.Message {
	mi := &file_spuSaleService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpuSale.ProtoReflect.Descriptor instead.
func (*SpuSale) Descriptor() ([]byte, []int) {
	return file_spuSaleService_proto_rawDescGZIP(), []int{1}
}

func (x *SpuSale) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *SpuSale) GetItems() []*SpuSaleLog {
	if x != nil {
		return x.Items
	}
	return nil
}

// 库存扣减日志请求参数
type SpuSaleRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Top       int32    `protobuf:"varint,1,opt,name=top,proto3" json:"top"`
	Paged     int64    `protobuf:"varint,2,opt,name=paged,proto3" json:"paged"`
	PageSize  int64    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords  string   `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords"`
	Sorts     []string `protobuf:"bytes,5,rep,name=sorts,proto3" json:"sorts"`
	DateRange []string `protobuf:"bytes,6,rep,name=date_range,json=dateRange,proto3" json:"date_range"`
	Ids       []int64  `protobuf:"varint,7,rep,packed,name=ids,proto3" json:"ids"`
	Id        int64    `protobuf:"varint,8,opt,name=id,proto3" json:"id"`
	//以下为自定义参数
	SpuId         int64  `protobuf:"varint,11,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`                           //商品ID
	OrderId       int64  `protobuf:"varint,12,opt,name=order_id,json=orderId,proto3" json:"order_id"`                     //订单ID
	OrderDetailId int64  `protobuf:"varint,13,opt,name=order_detail_id,json=orderDetailId,proto3" json:"order_detail_id"` //订单明细ID
	Status        string `protobuf:"bytes,14,opt,name=status,proto3" json:"status"`                                       //状态
}

func (x *SpuSaleRequest) Reset() {
	*x = SpuSaleRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spuSaleService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpuSaleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpuSaleRequest) ProtoMessage() {}

func (x *SpuSaleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spuSaleService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpuSaleRequest.ProtoReflect.Descriptor instead.
func (*SpuSaleRequest) Descriptor() ([]byte, []int) {
	return file_spuSaleService_proto_rawDescGZIP(), []int{2}
}

func (x *SpuSaleRequest) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *SpuSaleRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *SpuSaleRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SpuSaleRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *SpuSaleRequest) GetSorts() []string {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *SpuSaleRequest) GetDateRange() []string {
	if x != nil {
		return x.DateRange
	}
	return nil
}

func (x *SpuSaleRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *SpuSaleRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpuSaleRequest) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *SpuSaleRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *SpuSaleRequest) GetOrderDetailId() int64 {
	if x != nil {
		return x.OrderDetailId
	}
	return 0
}

func (x *SpuSaleRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// 库存日志数据
type SpuSaleLogsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pager *common.Pager `protobuf:"bytes,1,opt,name=pager,proto3" json:"pager"`
	Items []*SpuSaleLog `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
}

func (x *SpuSaleLogsData) Reset() {
	*x = SpuSaleLogsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spuSaleService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpuSaleLogsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpuSaleLogsData) ProtoMessage() {}

func (x *SpuSaleLogsData) ProtoReflect() protoreflect.Message {
	mi := &file_spuSaleService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpuSaleLogsData.ProtoReflect.Descriptor instead.
func (*SpuSaleLogsData) Descriptor() ([]byte, []int) {
	return file_spuSaleService_proto_rawDescGZIP(), []int{3}
}

func (x *SpuSaleLogsData) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *SpuSaleLogsData) GetItems() []*SpuSaleLog {
	if x != nil {
		return x.Items
	}
	return nil
}

// 库存变动响应数据
type SpuSaleResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg  string             `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg"`
	Logs []*SpuSaleLogsData `protobuf:"bytes,2,rep,name=Logs,proto3" json:"Logs"`
}

func (x *SpuSaleResponse) Reset() {
	*x = SpuSaleResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spuSaleService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpuSaleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpuSaleResponse) ProtoMessage() {}

func (x *SpuSaleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spuSaleService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpuSaleResponse.ProtoReflect.Descriptor instead.
func (*SpuSaleResponse) Descriptor() ([]byte, []int) {
	return file_spuSaleService_proto_rawDescGZIP(), []int{4}
}

func (x *SpuSaleResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SpuSaleResponse) GetLogs() []*SpuSaleLogsData {
	if x != nil {
		return x.Logs
	}
	return nil
}

var File_spuSaleService_proto protoreflect.FileDescriptor

var file_spuSaleService_proto_rawDesc = []byte{
	0x0a, 0x14, 0x73, 0x70, 0x75, 0x53, 0x61, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x97, 0x02, 0x0a, 0x0a, 0x53, 0x70, 0x75, 0x53, 0x61, 0x6c, 0x65, 0x4c,
	0x6f, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x70, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x73, 0x70, 0x75, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x50, 0x0a,
	0x07, 0x53, 0x70, 0x75, 0x53, 0x61, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x70,
	0x75, 0x53, 0x61, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0xba, 0x02, 0x0a, 0x0e, 0x53, 0x70, 0x75, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x74, 0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f,
	0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x70,
	0x75, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x70, 0x75, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x62, 0x0a, 0x0f,
	0x53, 0x70, 0x75, 0x53, 0x61, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53,
	0x70, 0x75, 0x53, 0x61, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x22, 0x52, 0x0a, 0x0f, 0x53, 0x70, 0x75, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2d, 0x0a, 0x04, 0x4c, 0x6f, 0x67, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53,
	0x70, 0x75, 0x53, 0x61, 0x6c, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x4c, 0x6f, 0x67, 0x73, 0x32, 0xc0, 0x01, 0x0a, 0x0e, 0x53, 0x70, 0x75, 0x53, 0x61, 0x6c, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x03, 0x41, 0x64, 0x64, 0x12, 0x11,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x70, 0x75, 0x53, 0x61, 0x6c,
	0x65, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x70, 0x75,
	0x53, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x38,
	0x0a, 0x06, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x53, 0x70, 0x75, 0x53, 0x61, 0x6c, 0x65, 0x1a, 0x19, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x70, 0x75, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x04, 0x4c, 0x6f, 0x67, 0x73,
	0x12, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x70, 0x75, 0x53,
	0x61, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x70, 0x75, 0x53, 0x61, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_spuSaleService_proto_rawDescOnce sync.Once
	file_spuSaleService_proto_rawDescData = file_spuSaleService_proto_rawDesc
)

func file_spuSaleService_proto_rawDescGZIP() []byte {
	file_spuSaleService_proto_rawDescOnce.Do(func() {
		file_spuSaleService_proto_rawDescData = protoimpl.X.CompressGZIP(file_spuSaleService_proto_rawDescData)
	})
	return file_spuSaleService_proto_rawDescData
}

var file_spuSaleService_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_spuSaleService_proto_goTypes = []interface{}{
	(*SpuSaleLog)(nil),      // 0: services.SpuSaleLog
	(*SpuSale)(nil),         // 1: services.SpuSale
	(*SpuSaleRequest)(nil),  // 2: services.SpuSaleRequest
	(*SpuSaleLogsData)(nil), // 3: services.SpuSaleLogsData
	(*SpuSaleResponse)(nil), // 4: services.SpuSaleResponse
	(*common.Pager)(nil),    // 5: common.Pager
}
var file_spuSaleService_proto_depIdxs = []int32{
	0, // 0: services.SpuSale.items:type_name -> services.SpuSaleLog
	5, // 1: services.SpuSaleLogsData.pager:type_name -> common.Pager
	0, // 2: services.SpuSaleLogsData.items:type_name -> services.SpuSaleLog
	3, // 3: services.SpuSaleResponse.Logs:type_name -> services.SpuSaleLogsData
	1, // 4: services.SpuSaleService.Add:input_type -> services.SpuSale
	1, // 5: services.SpuSaleService.Cancel:input_type -> services.SpuSale
	2, // 6: services.SpuSaleService.Logs:input_type -> services.SpuSaleRequest
	4, // 7: services.SpuSaleService.Add:output_type -> services.SpuSaleResponse
	4, // 8: services.SpuSaleService.Cancel:output_type -> services.SpuSaleResponse
	4, // 9: services.SpuSaleService.Logs:output_type -> services.SpuSaleResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_spuSaleService_proto_init() }
func file_spuSaleService_proto_init() {
	if File_spuSaleService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_spuSaleService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpuSaleLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spuSaleService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpuSale); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spuSaleService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpuSaleRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spuSaleService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpuSaleLogsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spuSaleService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpuSaleResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spuSaleService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spuSaleService_proto_goTypes,
		DependencyIndexes: file_spuSaleService_proto_depIdxs,
		MessageInfos:      file_spuSaleService_proto_msgTypes,
	}.Build()
	File_spuSaleService_proto = out.File
	file_spuSaleService_proto_rawDesc = nil
	file_spuSaleService_proto_goTypes = nil
	file_spuSaleService_proto_depIdxs = nil
}
