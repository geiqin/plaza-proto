// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: spuSaleService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 商品销量日志
type SpuSaleLog struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                              //ID
	SpuId         int64                  `protobuf:"varint,2,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`                           //商品ID
	Unique        string                 `protobuf:"bytes,3,opt,name=unique,proto3" json:"unique"`                                       //唯一标识
	OrderId       int64                  `protobuf:"varint,4,opt,name=order_id,json=orderId,proto3" json:"order_id"`                     //订单ID
	OrderDetailId int64                  `protobuf:"varint,5,opt,name=order_detail_id,json=orderDetailId,proto3" json:"order_detail_id"` //订单明细ID
	Num           int64                  `protobuf:"varint,6,opt,name=num,proto3" json:"num"`                                            //数量
	CancelTime    int64                  `protobuf:"varint,11,opt,name=cancel_time,json=cancelTime,proto3" json:"cancel_time"`           //取消时间
	Status        string                 `protobuf:"bytes,12,opt,name=status,proto3" json:"status"`                                      //状态：1-已生效,2-已取消
	UpdatedAt     int64                  `protobuf:"varint,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`              //创建时间
	CreatedAt     int64                  `protobuf:"varint,14,opt,name=created_at,json=createdAt,proto3" json:"created_at"`              //修改时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpuSaleLog) Reset() {
	*x = SpuSaleLog{}
	mi := &file_spuSaleService_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpuSaleLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpuSaleLog) ProtoMessage() {}

func (x *SpuSaleLog) ProtoReflect() protoreflect.Message {
	mi := &file_spuSaleService_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpuSaleLog.ProtoReflect.Descriptor instead.
func (*SpuSaleLog) Descriptor() ([]byte, []int) {
	return file_spuSaleService_proto_rawDescGZIP(), []int{0}
}

func (x *SpuSaleLog) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpuSaleLog) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *SpuSaleLog) GetUnique() string {
	if x != nil {
		return x.Unique
	}
	return ""
}

func (x *SpuSaleLog) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *SpuSaleLog) GetOrderDetailId() int64 {
	if x != nil {
		return x.OrderDetailId
	}
	return 0
}

func (x *SpuSaleLog) GetNum() int64 {
	if x != nil {
		return x.Num
	}
	return 0
}

func (x *SpuSaleLog) GetCancelTime() int64 {
	if x != nil {
		return x.CancelTime
	}
	return 0
}

func (x *SpuSaleLog) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SpuSaleLog) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SpuSaleLog) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

// 库存请求参数
type SpuSale struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OrderId       int64                  `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id"` //订单ID
	Items         []*SpuSaleLog          `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpuSale) Reset() {
	*x = SpuSale{}
	mi := &file_spuSaleService_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpuSale) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpuSale) ProtoMessage() {}

func (x *SpuSale) ProtoReflect() protoreflect.Message {
	mi := &file_spuSaleService_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpuSale.ProtoReflect.Descriptor instead.
func (*SpuSale) Descriptor() ([]byte, []int) {
	return file_spuSaleService_proto_rawDescGZIP(), []int{1}
}

func (x *SpuSale) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *SpuSale) GetItems() []*SpuSaleLog {
	if x != nil {
		return x.Items
	}
	return nil
}

// 库存扣减日志请求参数
type SpuSaleRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Top       int32                  `protobuf:"varint,1,opt,name=top,proto3" json:"top"`
	Paged     int64                  `protobuf:"varint,2,opt,name=paged,proto3" json:"paged"`
	PageSize  int64                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords  string                 `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords"`
	Sorts     []string               `protobuf:"bytes,5,rep,name=sorts,proto3" json:"sorts"`
	DateRange []string               `protobuf:"bytes,6,rep,name=date_range,json=dateRange,proto3" json:"date_range"`
	Ids       []int64                `protobuf:"varint,7,rep,packed,name=ids,proto3" json:"ids"`
	Id        int64                  `protobuf:"varint,8,opt,name=id,proto3" json:"id"`
	// 以下为自定义参数
	SpuId         int64  `protobuf:"varint,11,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`                           //商品ID
	OrderId       int64  `protobuf:"varint,12,opt,name=order_id,json=orderId,proto3" json:"order_id"`                     //订单ID
	OrderDetailId int64  `protobuf:"varint,13,opt,name=order_detail_id,json=orderDetailId,proto3" json:"order_detail_id"` //订单明细ID
	Status        string `protobuf:"bytes,14,opt,name=status,proto3" json:"status"`                                       //状态
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpuSaleRequest) Reset() {
	*x = SpuSaleRequest{}
	mi := &file_spuSaleService_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpuSaleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpuSaleRequest) ProtoMessage() {}

func (x *SpuSaleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spuSaleService_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpuSaleRequest.ProtoReflect.Descriptor instead.
func (*SpuSaleRequest) Descriptor() ([]byte, []int) {
	return file_spuSaleService_proto_rawDescGZIP(), []int{2}
}

func (x *SpuSaleRequest) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *SpuSaleRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *SpuSaleRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SpuSaleRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *SpuSaleRequest) GetSorts() []string {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *SpuSaleRequest) GetDateRange() []string {
	if x != nil {
		return x.DateRange
	}
	return nil
}

func (x *SpuSaleRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *SpuSaleRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpuSaleRequest) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *SpuSaleRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *SpuSaleRequest) GetOrderDetailId() int64 {
	if x != nil {
		return x.OrderDetailId
	}
	return 0
}

func (x *SpuSaleRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// 库存日志数据
type SpuSaleLogsData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pager         *common.Pager          `protobuf:"bytes,1,opt,name=pager,proto3" json:"pager"`
	Items         []*SpuSaleLog          `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpuSaleLogsData) Reset() {
	*x = SpuSaleLogsData{}
	mi := &file_spuSaleService_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpuSaleLogsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpuSaleLogsData) ProtoMessage() {}

func (x *SpuSaleLogsData) ProtoReflect() protoreflect.Message {
	mi := &file_spuSaleService_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpuSaleLogsData.ProtoReflect.Descriptor instead.
func (*SpuSaleLogsData) Descriptor() ([]byte, []int) {
	return file_spuSaleService_proto_rawDescGZIP(), []int{3}
}

func (x *SpuSaleLogsData) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *SpuSaleLogsData) GetItems() []*SpuSaleLog {
	if x != nil {
		return x.Items
	}
	return nil
}

// 库存变动响应数据
type SpuSaleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           string                 `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg"`
	Logs          []*SpuSaleLogsData     `protobuf:"bytes,2,rep,name=Logs,proto3" json:"Logs"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpuSaleResponse) Reset() {
	*x = SpuSaleResponse{}
	mi := &file_spuSaleService_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpuSaleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpuSaleResponse) ProtoMessage() {}

func (x *SpuSaleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spuSaleService_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpuSaleResponse.ProtoReflect.Descriptor instead.
func (*SpuSaleResponse) Descriptor() ([]byte, []int) {
	return file_spuSaleService_proto_rawDescGZIP(), []int{4}
}

func (x *SpuSaleResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SpuSaleResponse) GetLogs() []*SpuSaleLogsData {
	if x != nil {
		return x.Logs
	}
	return nil
}

var File_spuSaleService_proto protoreflect.FileDescriptor

const file_spuSaleService_proto_rawDesc = "" +
	"\n" +
	"\x14spuSaleService.proto\x12\bservices\x1a\x11common/base.proto\"\x97\x02\n" +
	"\n" +
	"SpuSaleLog\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x15\n" +
	"\x06spu_id\x18\x02 \x01(\x03R\x05spuId\x12\x16\n" +
	"\x06unique\x18\x03 \x01(\tR\x06unique\x12\x19\n" +
	"\border_id\x18\x04 \x01(\x03R\aorderId\x12&\n" +
	"\x0forder_detail_id\x18\x05 \x01(\x03R\rorderDetailId\x12\x10\n" +
	"\x03num\x18\x06 \x01(\x03R\x03num\x12\x1f\n" +
	"\vcancel_time\x18\v \x01(\x03R\n" +
	"cancelTime\x12\x16\n" +
	"\x06status\x18\f \x01(\tR\x06status\x12\x1d\n" +
	"\n" +
	"updated_at\x18\r \x01(\x03R\tupdatedAt\x12\x1d\n" +
	"\n" +
	"created_at\x18\x0e \x01(\x03R\tcreatedAt\"P\n" +
	"\aSpuSale\x12\x19\n" +
	"\border_id\x18\x01 \x01(\x03R\aorderId\x12*\n" +
	"\x05items\x18\x02 \x03(\v2\x14.services.SpuSaleLogR\x05items\"\xba\x02\n" +
	"\x0eSpuSaleRequest\x12\x10\n" +
	"\x03top\x18\x01 \x01(\x05R\x03top\x12\x14\n" +
	"\x05paged\x18\x02 \x01(\x03R\x05paged\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x03R\bpageSize\x12\x1a\n" +
	"\bkeywords\x18\x04 \x01(\tR\bkeywords\x12\x14\n" +
	"\x05sorts\x18\x05 \x03(\tR\x05sorts\x12\x1d\n" +
	"\n" +
	"date_range\x18\x06 \x03(\tR\tdateRange\x12\x10\n" +
	"\x03ids\x18\a \x03(\x03R\x03ids\x12\x0e\n" +
	"\x02id\x18\b \x01(\x03R\x02id\x12\x15\n" +
	"\x06spu_id\x18\v \x01(\x03R\x05spuId\x12\x19\n" +
	"\border_id\x18\f \x01(\x03R\aorderId\x12&\n" +
	"\x0forder_detail_id\x18\r \x01(\x03R\rorderDetailId\x12\x16\n" +
	"\x06status\x18\x0e \x01(\tR\x06status\"b\n" +
	"\x0fSpuSaleLogsData\x12#\n" +
	"\x05pager\x18\x01 \x01(\v2\r.common.PagerR\x05pager\x12*\n" +
	"\x05items\x18\x02 \x03(\v2\x14.services.SpuSaleLogR\x05items\"R\n" +
	"\x0fSpuSaleResponse\x12\x10\n" +
	"\x03msg\x18\x01 \x01(\tR\x03msg\x12-\n" +
	"\x04Logs\x18\x02 \x03(\v2\x19.services.SpuSaleLogsDataR\x04Logs2\xc0\x01\n" +
	"\x0eSpuSaleService\x125\n" +
	"\x03Add\x12\x11.services.SpuSale\x1a\x19.services.SpuSaleResponse\"\x00\x128\n" +
	"\x06Cancel\x12\x11.services.SpuSale\x1a\x19.services.SpuSaleResponse\"\x00\x12=\n" +
	"\x04Logs\x12\x18.services.SpuSaleRequest\x1a\x19.services.SpuSaleResponse\"\x00B\rZ\v/.;servicesb\x06proto3"

var (
	file_spuSaleService_proto_rawDescOnce sync.Once
	file_spuSaleService_proto_rawDescData []byte
)

func file_spuSaleService_proto_rawDescGZIP() []byte {
	file_spuSaleService_proto_rawDescOnce.Do(func() {
		file_spuSaleService_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_spuSaleService_proto_rawDesc), len(file_spuSaleService_proto_rawDesc)))
	})
	return file_spuSaleService_proto_rawDescData
}

var file_spuSaleService_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_spuSaleService_proto_goTypes = []any{
	(*SpuSaleLog)(nil),      // 0: services.SpuSaleLog
	(*SpuSale)(nil),         // 1: services.SpuSale
	(*SpuSaleRequest)(nil),  // 2: services.SpuSaleRequest
	(*SpuSaleLogsData)(nil), // 3: services.SpuSaleLogsData
	(*SpuSaleResponse)(nil), // 4: services.SpuSaleResponse
	(*common.Pager)(nil),    // 5: common.Pager
}
var file_spuSaleService_proto_depIdxs = []int32{
	0, // 0: services.SpuSale.items:type_name -> services.SpuSaleLog
	5, // 1: services.SpuSaleLogsData.pager:type_name -> common.Pager
	0, // 2: services.SpuSaleLogsData.items:type_name -> services.SpuSaleLog
	3, // 3: services.SpuSaleResponse.Logs:type_name -> services.SpuSaleLogsData
	1, // 4: services.SpuSaleService.Add:input_type -> services.SpuSale
	1, // 5: services.SpuSaleService.Cancel:input_type -> services.SpuSale
	2, // 6: services.SpuSaleService.Logs:input_type -> services.SpuSaleRequest
	4, // 7: services.SpuSaleService.Add:output_type -> services.SpuSaleResponse
	4, // 8: services.SpuSaleService.Cancel:output_type -> services.SpuSaleResponse
	4, // 9: services.SpuSaleService.Logs:output_type -> services.SpuSaleResponse
	7, // [7:10] is the sub-list for method output_type
	4, // [4:7] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_spuSaleService_proto_init() }
func file_spuSaleService_proto_init() {
	if File_spuSaleService_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_spuSaleService_proto_rawDesc), len(file_spuSaleService_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spuSaleService_proto_goTypes,
		DependencyIndexes: file_spuSaleService_proto_depIdxs,
		MessageInfos:      file_spuSaleService_proto_msgTypes,
	}.Build()
	File_spuSaleService_proto = out.File
	file_spuSaleService_proto_goTypes = nil
	file_spuSaleService_proto_depIdxs = nil
}
