// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: searchService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SpecDetailData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpecBase       *SpecDetailDataBase      `protobuf:"bytes,1,opt,name=spec_base,json=specBase,proto3" json:"spec_base"`
	ExtendElements []*SpecDetailDataExtends `protobuf:"bytes,2,rep,name=extend_elements,json=extendElements,proto3" json:"extend_elements"`
}

func (x *SpecDetailData) Reset() {
	*x = SpecDetailData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecDetailData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecDetailData) ProtoMessage() {}

func (x *SpecDetailData) ProtoReflect() protoreflect.Message {
	mi := &file_searchService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecDetailData.ProtoReflect.Descriptor instead.
func (*SpecDetailData) Descriptor() ([]byte, []int) {
	return file_searchService_proto_rawDescGZIP(), []int{0}
}

func (x *SpecDetailData) GetSpecBase() *SpecDetailDataBase {
	if x != nil {
		return x.SpecBase
	}
	return nil
}

func (x *SpecDetailData) GetExtendElements() []*SpecDetailDataExtends {
	if x != nil {
		return x.ExtendElements
	}
	return nil
}

type SpecDetailDataBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	SpuId         int64      `protobuf:"varint,2,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`
	Md5Key        string     `protobuf:"bytes,3,opt,name=md5_key,json=md5Key,proto3" json:"md5_key"`
	Price         int64      `protobuf:"varint,4,opt,name=price,proto3" json:"price"`
	Inventory     int32      `protobuf:"varint,5,opt,name=inventory,proto3" json:"inventory"`
	Weight        int64      `protobuf:"varint,6,opt,name=weight,proto3" json:"weight"`
	Volume        int64      `protobuf:"varint,7,opt,name=volume,proto3" json:"volume"`
	Coding        string     `protobuf:"bytes,8,opt,name=coding,proto3" json:"coding"`
	Barcode       string     `protobuf:"bytes,9,opt,name=barcode,proto3" json:"barcode"`
	OriginalPrice int64      `protobuf:"varint,10,opt,name=original_price,json=originalPrice,proto3" json:"original_price"`
	ImageUrl      string     `protobuf:"bytes,11,opt,name=image_url,json=imageUrl,proto3" json:"image_url"`
	Spec          []*SkuSpec `protobuf:"bytes,12,rep,name=spec,proto3" json:"spec"`
}

func (x *SpecDetailDataBase) Reset() {
	*x = SpecDetailDataBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecDetailDataBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecDetailDataBase) ProtoMessage() {}

func (x *SpecDetailDataBase) ProtoReflect() protoreflect.Message {
	mi := &file_searchService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecDetailDataBase.ProtoReflect.Descriptor instead.
func (*SpecDetailDataBase) Descriptor() ([]byte, []int) {
	return file_searchService_proto_rawDescGZIP(), []int{1}
}

func (x *SpecDetailDataBase) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpecDetailDataBase) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *SpecDetailDataBase) GetMd5Key() string {
	if x != nil {
		return x.Md5Key
	}
	return ""
}

func (x *SpecDetailDataBase) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SpecDetailDataBase) GetInventory() int32 {
	if x != nil {
		return x.Inventory
	}
	return 0
}

func (x *SpecDetailDataBase) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *SpecDetailDataBase) GetVolume() int64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *SpecDetailDataBase) GetCoding() string {
	if x != nil {
		return x.Coding
	}
	return ""
}

func (x *SpecDetailDataBase) GetBarcode() string {
	if x != nil {
		return x.Barcode
	}
	return ""
}

func (x *SpecDetailDataBase) GetOriginalPrice() int64 {
	if x != nil {
		return x.OriginalPrice
	}
	return 0
}

func (x *SpecDetailDataBase) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *SpecDetailDataBase) GetSpec() []*SkuSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type SpecDetailDataExtends struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
}

func (x *SpecDetailDataExtends) Reset() {
	*x = SpecDetailDataExtends{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecDetailDataExtends) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecDetailDataExtends) ProtoMessage() {}

func (x *SpecDetailDataExtends) ProtoReflect() protoreflect.Message {
	mi := &file_searchService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecDetailDataExtends.ProtoReflect.Descriptor instead.
func (*SpecDetailDataExtends) Descriptor() ([]byte, []int) {
	return file_searchService_proto_rawDescGZIP(), []int{2}
}

func (x *SpecDetailDataExtends) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

//参与的活动
type PluginsPromotionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                                       //活动ID
	Code              string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code"`                                                    //活动编码:如：coupon_20210101212
	Title             string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title"`                                                  //活动标题
	Type              string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type"`                                                    //活动类型:Coupon优惠劵/满减送/限时折扣/秒杀/拼团/通用
	Subtype           string   `protobuf:"bytes,5,opt,name=subtype,proto3" json:"subtype"`                                              //活动子类型
	Tag               string   `protobuf:"bytes,6,opt,name=tag,proto3" json:"tag"`                                                      //标签
	PreferentialItems []string `protobuf:"bytes,7,rep,name=preferential_items,json=preferentialItems,proto3" json:"preferential_items"` //优惠项目描述
}

func (x *PluginsPromotionData) Reset() {
	*x = PluginsPromotionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginsPromotionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginsPromotionData) ProtoMessage() {}

func (x *PluginsPromotionData) ProtoReflect() protoreflect.Message {
	mi := &file_searchService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginsPromotionData.ProtoReflect.Descriptor instead.
func (*PluginsPromotionData) Descriptor() ([]byte, []int) {
	return file_searchService_proto_rawDescGZIP(), []int{3}
}

func (x *PluginsPromotionData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PluginsPromotionData) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PluginsPromotionData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PluginsPromotionData) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PluginsPromotionData) GetSubtype() string {
	if x != nil {
		return x.Subtype
	}
	return ""
}

func (x *PluginsPromotionData) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *PluginsPromotionData) GetPreferentialItems() []string {
	if x != nil {
		return x.PreferentialItems
	}
	return nil
}

type CartTotalInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuyNumber  int32 `protobuf:"varint,1,opt,name=buy_number,json=buyNumber,proto3" json:"buy_number"`
	TotalPrice int64 `protobuf:"varint,2,opt,name=total_price,json=totalPrice,proto3" json:"total_price"`
}

func (x *CartTotalInfo) Reset() {
	*x = CartTotalInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CartTotalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartTotalInfo) ProtoMessage() {}

func (x *CartTotalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_searchService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartTotalInfo.ProtoReflect.Descriptor instead.
func (*CartTotalInfo) Descriptor() ([]byte, []int) {
	return file_searchService_proto_rawDescGZIP(), []int{4}
}

func (x *CartTotalInfo) GetBuyNumber() int32 {
	if x != nil {
		return x.BuyNumber
	}
	return 0
}

func (x *CartTotalInfo) GetTotalPrice() int64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

type BuyButton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count  int32                `protobuf:"varint,1,opt,name=count,proto3" json:"count"`
	Error  string               `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
	IsBuy  bool                 `protobuf:"varint,3,opt,name=is_buy,json=isBuy,proto3" json:"is_buy"`
	IsShow bool                 `protobuf:"varint,4,opt,name=is_show,json=isShow,proto3" json:"is_show"`
	IsCart bool                 `protobuf:"varint,5,opt,name=is_cart,json=isCart,proto3" json:"is_cart"`
	Data   []*BuyButtonDataList `protobuf:"bytes,6,rep,name=data,proto3" json:"data"`
}

func (x *BuyButton) Reset() {
	*x = BuyButton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyButton) ProtoMessage() {}

func (x *BuyButton) ProtoReflect() protoreflect.Message {
	mi := &file_searchService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyButton.ProtoReflect.Descriptor instead.
func (*BuyButton) Descriptor() ([]byte, []int) {
	return file_searchService_proto_rawDescGZIP(), []int{5}
}

func (x *BuyButton) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *BuyButton) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *BuyButton) GetIsBuy() bool {
	if x != nil {
		return x.IsBuy
	}
	return false
}

func (x *BuyButton) GetIsShow() bool {
	if x != nil {
		return x.IsShow
	}
	return false
}

func (x *BuyButton) GetIsCart() bool {
	if x != nil {
		return x.IsCart
	}
	return false
}

func (x *BuyButton) GetData() []*BuyButtonDataList {
	if x != nil {
		return x.Data
	}
	return nil
}

//中间切换导航
type MiddleTabsNav struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	Event string `protobuf:"bytes,2,opt,name=event,proto3" json:"event"`
}

func (x *MiddleTabsNav) Reset() {
	*x = MiddleTabsNav{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiddleTabsNav) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiddleTabsNav) ProtoMessage() {}

func (x *MiddleTabsNav) ProtoReflect() protoreflect.Message {
	mi := &file_searchService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiddleTabsNav.ProtoReflect.Descriptor instead.
func (*MiddleTabsNav) Descriptor() ([]byte, []int) {
	return file_searchService_proto_rawDescGZIP(), []int{6}
}

func (x *MiddleTabsNav) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MiddleTabsNav) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

//导航更多列表
type NavMoreList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	Url  string `protobuf:"bytes,2,opt,name=url,proto3" json:"url"`
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon"`
}

func (x *NavMoreList) Reset() {
	*x = NavMoreList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NavMoreList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NavMoreList) ProtoMessage() {}

func (x *NavMoreList) ProtoReflect() protoreflect.Message {
	mi := &file_searchService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NavMoreList.ProtoReflect.Descriptor instead.
func (*NavMoreList) Descriptor() ([]byte, []int) {
	return file_searchService_proto_rawDescGZIP(), []int{7}
}

func (x *NavMoreList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NavMoreList) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *NavMoreList) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type PluginCouponData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *PluginCouponDataBaseInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base"`
	Data *PluginCouponDataDataInfo `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *PluginCouponData) Reset() {
	*x = PluginCouponData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginCouponData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginCouponData) ProtoMessage() {}

func (x *PluginCouponData) ProtoReflect() protoreflect.Message {
	mi := &file_searchService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginCouponData.ProtoReflect.Descriptor instead.
func (*PluginCouponData) Descriptor() ([]byte, []int) {
	return file_searchService_proto_rawDescGZIP(), []int{8}
}

func (x *PluginCouponData) GetBase() *PluginCouponDataBaseInfo {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *PluginCouponData) GetData() *PluginCouponDataDataInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type PluginIntellectToolsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseBottom *IntellectBaseBottom `protobuf:"bytes,1,opt,name=base_bottom,json=baseBottom,proto3" json:"base_bottom"`
	ContentTop *IntellectContentTop `protobuf:"bytes,2,opt,name=content_top,json=contentTop,proto3" json:"content_top"`
}

func (x *PluginIntellectToolsData) Reset() {
	*x = PluginIntellectToolsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginIntellectToolsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginIntellectToolsData) ProtoMessage() {}

func (x *PluginIntellectToolsData) ProtoReflect() protoreflect.Message {
	mi := &file_searchService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginIntellectToolsData.ProtoReflect.Descriptor instead.
func (*PluginIntellectToolsData) Descriptor() ([]byte, []int) {
	return file_searchService_proto_rawDescGZIP(), []int{9}
}

func (x *PluginIntellectToolsData) GetBaseBottom() *IntellectBaseBottom {
	if x != nil {
		return x.BaseBottom
	}
	return nil
}

func (x *PluginIntellectToolsData) GetContentTop() *IntellectContentTop {
	if x != nil {
		return x.ContentTop
	}
	return nil
}

type IntellectBaseBottom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title"`
	Msg   string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
}

func (x *IntellectBaseBottom) Reset() {
	*x = IntellectBaseBottom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntellectBaseBottom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntellectBaseBottom) ProtoMessage() {}

func (x *IntellectBaseBottom) ProtoReflect() protoreflect.Message {
	mi := &file_searchService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntellectBaseBottom.ProtoReflect.Descriptor instead.
func (*IntellectBaseBottom) Descriptor() ([]byte, []int) {
	return file_searchService_proto_rawDescGZIP(), []int{10}
}

func (x *IntellectBaseBottom) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *IntellectBaseBottom) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type IntellectContentTop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title   string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title"`
	MsgList []string `protobuf:"bytes,2,rep,name=msg_list,json=msgList,proto3" json:"msg_list"`
}

func (x *IntellectContentTop) Reset() {
	*x = IntellectContentTop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntellectContentTop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntellectContentTop) ProtoMessage() {}

func (x *IntellectContentTop) ProtoReflect() protoreflect.Message {
	mi := &file_searchService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntellectContentTop.ProtoReflect.Descriptor instead.
func (*IntellectContentTop) Descriptor() ([]byte, []int) {
	return file_searchService_proto_rawDescGZIP(), []int{11}
}

func (x *IntellectContentTop) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *IntellectContentTop) GetMsgList() []string {
	if x != nil {
		return x.MsgList
	}
	return nil
}

type PluginSeckillData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Icon       string                     `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon"`
	Title      string                     `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
	IsValid    bool                       `protobuf:"varint,3,opt,name=is_valid,json=isValid,proto3" json:"is_valid"`
	BgImageUrl string                     `protobuf:"bytes,4,opt,name=bg_image_url,json=bgImageUrl,proto3" json:"bg_image_url"`
	Time       *PluginSeckillDataTimeInfo `protobuf:"bytes,5,opt,name=time,proto3" json:"time"`
}

func (x *PluginSeckillData) Reset() {
	*x = PluginSeckillData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginSeckillData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginSeckillData) ProtoMessage() {}

func (x *PluginSeckillData) ProtoReflect() protoreflect.Message {
	mi := &file_searchService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginSeckillData.ProtoReflect.Descriptor instead.
func (*PluginSeckillData) Descriptor() ([]byte, []int) {
	return file_searchService_proto_rawDescGZIP(), []int{12}
}

func (x *PluginSeckillData) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *PluginSeckillData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PluginSeckillData) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *PluginSeckillData) GetBgImageUrl() string {
	if x != nil {
		return x.BgImageUrl
	}
	return ""
}

func (x *PluginSeckillData) GetTime() *PluginSeckillDataTimeInfo {
	if x != nil {
		return x.Time
	}
	return nil
}

type SearchDetailData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Goods                     *Spu                      `protobuf:"bytes,1,opt,name=goods,proto3" json:"goods"`
	CartTotal                 *CartTotalInfo            `protobuf:"bytes,2,opt,name=cart_total,json=cartTotal,proto3" json:"cart_total"`
	BuyButton                 *BuyButton                `protobuf:"bytes,3,opt,name=buy_button,json=buyButton,proto3" json:"buy_button"`
	MiddleTabsNav             []*MiddleTabsNav          `protobuf:"bytes,4,rep,name=middle_tabs_nav,json=middleTabsNav,proto3" json:"middle_tabs_nav"`
	NavMoreList               []*NavMoreList            `protobuf:"bytes,5,rep,name=nav_more_list,json=navMoreList,proto3" json:"nav_more_list"`
	PluginsCouponData         *PluginCouponData         `protobuf:"bytes,6,opt,name=plugins_coupon_data,json=pluginsCouponData,proto3" json:"plugins_coupon_data"`
	PluginsSeckillData        *PluginSeckillData        `protobuf:"bytes,7,opt,name=Plugins_seckill_data,json=PluginsSeckillData,proto3" json:"Plugins_seckill_data"`
	PluginsPromotionData      *PluginsPromotionData     `protobuf:"bytes,8,opt,name=Plugins_promotion_data,json=PluginsPromotionData,proto3" json:"Plugins_promotion_data"`
	PluginsIntellectToolsData *PluginIntellectToolsData `protobuf:"bytes,9,opt,name=plugins_intellect_tools_data,json=pluginsIntellectToolsData,proto3" json:"plugins_intellect_tools_data"`
}

func (x *SearchDetailData) Reset() {
	*x = SearchDetailData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchDetailData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchDetailData) ProtoMessage() {}

func (x *SearchDetailData) ProtoReflect() protoreflect.Message {
	mi := &file_searchService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchDetailData.ProtoReflect.Descriptor instead.
func (*SearchDetailData) Descriptor() ([]byte, []int) {
	return file_searchService_proto_rawDescGZIP(), []int{13}
}

func (x *SearchDetailData) GetGoods() *Spu {
	if x != nil {
		return x.Goods
	}
	return nil
}

func (x *SearchDetailData) GetCartTotal() *CartTotalInfo {
	if x != nil {
		return x.CartTotal
	}
	return nil
}

func (x *SearchDetailData) GetBuyButton() *BuyButton {
	if x != nil {
		return x.BuyButton
	}
	return nil
}

func (x *SearchDetailData) GetMiddleTabsNav() []*MiddleTabsNav {
	if x != nil {
		return x.MiddleTabsNav
	}
	return nil
}

func (x *SearchDetailData) GetNavMoreList() []*NavMoreList {
	if x != nil {
		return x.NavMoreList
	}
	return nil
}

func (x *SearchDetailData) GetPluginsCouponData() *PluginCouponData {
	if x != nil {
		return x.PluginsCouponData
	}
	return nil
}

func (x *SearchDetailData) GetPluginsSeckillData() *PluginSeckillData {
	if x != nil {
		return x.PluginsSeckillData
	}
	return nil
}

func (x *SearchDetailData) GetPluginsPromotionData() *PluginsPromotionData {
	if x != nil {
		return x.PluginsPromotionData
	}
	return nil
}

func (x *SearchDetailData) GetPluginsIntellectToolsData() *PluginIntellectToolsData {
	if x != nil {
		return x.PluginsIntellectToolsData
	}
	return nil
}

type SearchDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *SearchDetailData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error     `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *SearchDetailResponse) Reset() {
	*x = SearchDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchService_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchDetailResponse) ProtoMessage() {}

func (x *SearchDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_searchService_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchDetailResponse.ProtoReflect.Descriptor instead.
func (*SearchDetailResponse) Descriptor() ([]byte, []int) {
	return file_searchService_proto_rawDescGZIP(), []int{14}
}

func (x *SearchDetailResponse) GetData() *SearchDetailData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SearchDetailResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type SearchMapInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category map[string]string `protobuf:"bytes,1,rep,name=category,proto3" json:"category" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Brand    map[string]string `protobuf:"bytes,5,rep,name=brand,proto3" json:"brand" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SearchMapInfo) Reset() {
	*x = SearchMapInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchService_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchMapInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchMapInfo) ProtoMessage() {}

func (x *SearchMapInfo) ProtoReflect() protoreflect.Message {
	mi := &file_searchService_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchMapInfo.ProtoReflect.Descriptor instead.
func (*SearchMapInfo) Descriptor() ([]byte, []int) {
	return file_searchService_proto_rawDescGZIP(), []int{15}
}

func (x *SearchMapInfo) GetCategory() map[string]string {
	if x != nil {
		return x.Category
	}
	return nil
}

func (x *SearchMapInfo) GetBrand() map[string]string {
	if x != nil {
		return x.Brand
	}
	return nil
}

type SearchIndexData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SearchMapInfo      *SearchMapInfo    `protobuf:"bytes,1,opt,name=search_map_info,json=searchMapInfo,proto3" json:"search_map_info"`
	BrandList          []*Brand          `protobuf:"bytes,2,rep,name=brand_list,json=brandList,proto3" json:"brand_list"`
	CategoryList       []*Term           `protobuf:"bytes,3,rep,name=category_list,json=categoryList,proto3" json:"category_list"`
	ScreeningPriceList []*ScreeningPrice `protobuf:"bytes,4,rep,name=screening_price_list,json=screeningPriceList,proto3" json:"screening_price_list"`
	GoodsParamsList    []string          `protobuf:"bytes,5,rep,name=goods_params_list,json=goodsParamsList,proto3" json:"goods_params_list"`
	GoodsSpecList      map[string]string `protobuf:"bytes,6,rep,name=goods_spec_list,json=goodsSpecList,proto3" json:"goods_spec_list" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SearchIndexData) Reset() {
	*x = SearchIndexData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchService_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchIndexData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchIndexData) ProtoMessage() {}

func (x *SearchIndexData) ProtoReflect() protoreflect.Message {
	mi := &file_searchService_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchIndexData.ProtoReflect.Descriptor instead.
func (*SearchIndexData) Descriptor() ([]byte, []int) {
	return file_searchService_proto_rawDescGZIP(), []int{16}
}

func (x *SearchIndexData) GetSearchMapInfo() *SearchMapInfo {
	if x != nil {
		return x.SearchMapInfo
	}
	return nil
}

func (x *SearchIndexData) GetBrandList() []*Brand {
	if x != nil {
		return x.BrandList
	}
	return nil
}

func (x *SearchIndexData) GetCategoryList() []*Term {
	if x != nil {
		return x.CategoryList
	}
	return nil
}

func (x *SearchIndexData) GetScreeningPriceList() []*ScreeningPrice {
	if x != nil {
		return x.ScreeningPriceList
	}
	return nil
}

func (x *SearchIndexData) GetGoodsParamsList() []string {
	if x != nil {
		return x.GoodsParamsList
	}
	return nil
}

func (x *SearchIndexData) GetGoodsSpecList() map[string]string {
	if x != nil {
		return x.GoodsSpecList
	}
	return nil
}

type SearchIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *SearchIndexData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error    `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *SearchIndexResponse) Reset() {
	*x = SearchIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchService_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchIndexResponse) ProtoMessage() {}

func (x *SearchIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_searchService_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchIndexResponse.ProtoReflect.Descriptor instead.
func (*SearchIndexResponse) Descriptor() ([]byte, []int) {
	return file_searchService_proto_rawDescGZIP(), []int{17}
}

func (x *SearchIndexResponse) GetData() *SearchIndexData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SearchIndexResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type SearchListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pager *common.Pager `protobuf:"bytes,1,opt,name=pager,proto3" json:"pager"`
	Items []*Spu        `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
}

func (x *SearchListData) Reset() {
	*x = SearchListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchService_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchListData) ProtoMessage() {}

func (x *SearchListData) ProtoReflect() protoreflect.Message {
	mi := &file_searchService_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchListData.ProtoReflect.Descriptor instead.
func (*SearchListData) Descriptor() ([]byte, []int) {
	return file_searchService_proto_rawDescGZIP(), []int{18}
}

func (x *SearchListData) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *SearchListData) GetItems() []*Spu {
	if x != nil {
		return x.Items
	}
	return nil
}

type SearchListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *SearchListData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error   `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *SearchListResponse) Reset() {
	*x = SearchListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchService_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchListResponse) ProtoMessage() {}

func (x *SearchListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_searchService_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchListResponse.ProtoReflect.Descriptor instead.
func (*SearchListResponse) Descriptor() ([]byte, []int) {
	return file_searchService_proto_rawDescGZIP(), []int{19}
}

func (x *SearchListResponse) GetData() *SearchListData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SearchListResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type SearchCategoryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category []*Term `protobuf:"bytes,1,rep,name=category,proto3" json:"category"`
}

func (x *SearchCategoryData) Reset() {
	*x = SearchCategoryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchService_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCategoryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCategoryData) ProtoMessage() {}

func (x *SearchCategoryData) ProtoReflect() protoreflect.Message {
	mi := &file_searchService_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCategoryData.ProtoReflect.Descriptor instead.
func (*SearchCategoryData) Descriptor() ([]byte, []int) {
	return file_searchService_proto_rawDescGZIP(), []int{20}
}

func (x *SearchCategoryData) GetCategory() []*Term {
	if x != nil {
		return x.Category
	}
	return nil
}

type SearchCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *SearchCategoryData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error       `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *SearchCategoryResponse) Reset() {
	*x = SearchCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchService_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchCategoryResponse) ProtoMessage() {}

func (x *SearchCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_searchService_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchCategoryResponse.ProtoReflect.Descriptor instead.
func (*SearchCategoryResponse) Descriptor() ([]byte, []int) {
	return file_searchService_proto_rawDescGZIP(), []int{21}
}

func (x *SearchCategoryResponse) GetData() *SearchCategoryData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SearchCategoryResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type SearchSpecDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *SpecDetailData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error   `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *SearchSpecDetailResponse) Reset() {
	*x = SearchSpecDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchService_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSpecDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSpecDetailResponse) ProtoMessage() {}

func (x *SearchSpecDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_searchService_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSpecDetailResponse.ProtoReflect.Descriptor instead.
func (*SearchSpecDetailResponse) Descriptor() ([]byte, []int) {
	return file_searchService_proto_rawDescGZIP(), []int{22}
}

func (x *SearchSpecDetailResponse) GetData() *SpecDetailData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SearchSpecDetailResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type SearchSpecTypeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpecType             []string              `protobuf:"bytes,1,rep,name=spec_type,json=specType,proto3" json:"spec_type"`
	PluginsWholesaleData *PluginsWholesaleData `protobuf:"bytes,2,opt,name=plugins_wholesale_data,json=pluginsWholesaleData,proto3" json:"plugins_wholesale_data"`
}

func (x *SearchSpecTypeData) Reset() {
	*x = SearchSpecTypeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchService_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSpecTypeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSpecTypeData) ProtoMessage() {}

func (x *SearchSpecTypeData) ProtoReflect() protoreflect.Message {
	mi := &file_searchService_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSpecTypeData.ProtoReflect.Descriptor instead.
func (*SearchSpecTypeData) Descriptor() ([]byte, []int) {
	return file_searchService_proto_rawDescGZIP(), []int{23}
}

func (x *SearchSpecTypeData) GetSpecType() []string {
	if x != nil {
		return x.SpecType
	}
	return nil
}

func (x *SearchSpecTypeData) GetPluginsWholesaleData() *PluginsWholesaleData {
	if x != nil {
		return x.PluginsWholesaleData
	}
	return nil
}

type PluginsWholesaleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
}

func (x *PluginsWholesaleData) Reset() {
	*x = PluginsWholesaleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchService_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginsWholesaleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginsWholesaleData) ProtoMessage() {}

func (x *PluginsWholesaleData) ProtoReflect() protoreflect.Message {
	mi := &file_searchService_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginsWholesaleData.ProtoReflect.Descriptor instead.
func (*PluginsWholesaleData) Descriptor() ([]byte, []int) {
	return file_searchService_proto_rawDescGZIP(), []int{24}
}

func (x *PluginsWholesaleData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SearchSpecTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *SearchSpecTypeData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error       `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *SearchSpecTypeResponse) Reset() {
	*x = SearchSpecTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchService_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchSpecTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchSpecTypeResponse) ProtoMessage() {}

func (x *SearchSpecTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_searchService_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchSpecTypeResponse.ProtoReflect.Descriptor instead.
func (*SearchSpecTypeResponse) Descriptor() ([]byte, []int) {
	return file_searchService_proto_rawDescGZIP(), []int{25}
}

func (x *SearchSpecTypeResponse) GetData() *SearchSpecTypeData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SearchSpecTypeResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type SearchRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged                int64          `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize             int64          `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords             string         `protobuf:"bytes,3,opt,name=keywords,proto3" json:"keywords"`
	SkuId                int64          `protobuf:"varint,4,opt,name=sku_id,json=skuId,proto3" json:"sku_id"`
	SkuSn                string         `protobuf:"bytes,5,opt,name=sku_sn,json=skuSn,proto3" json:"sku_sn"`
	SpuId                int64          `protobuf:"varint,6,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`
	Code                 string         `protobuf:"bytes,7,opt,name=code,proto3" json:"code"`
	Title                string         `protobuf:"bytes,8,opt,name=title,proto3" json:"title"`
	Type                 string         `protobuf:"bytes,9,opt,name=type,proto3" json:"type"`
	ParentId             int64          `protobuf:"varint,10,opt,name=parent_id,json=parentId,proto3" json:"parent_id"`
	CategoryId           int64          `protobuf:"varint,11,opt,name=category_id,json=categoryId,proto3" json:"category_id"`
	TermId               int64          `protobuf:"varint,12,opt,name=term_id,json=termId,proto3" json:"term_id"`
	TermName             string         `protobuf:"bytes,13,opt,name=term_name,json=termName,proto3" json:"term_name"`
	BrandId              int32          `protobuf:"varint,14,opt,name=brand_id,json=brandId,proto3" json:"brand_id"`
	ShopId               int64          `protobuf:"varint,15,opt,name=shop_id,json=shopId,proto3" json:"shop_id"`
	Status               string         `protobuf:"bytes,16,opt,name=status,proto3" json:"status"`
	StartDate            string         `protobuf:"bytes,17,opt,name=start_date,json=startDate,proto3" json:"start_date"`
	EndDate              string         `protobuf:"bytes,18,opt,name=end_date,json=endDate,proto3" json:"end_date"`
	ParamId              int32          `protobuf:"varint,19,opt,name=param_id,json=paramId,proto3" json:"param_id"`
	ParamValue           string         `protobuf:"bytes,20,opt,name=param_value,json=paramValue,proto3" json:"param_value"`
	TagId                int32          `protobuf:"varint,21,opt,name=tag_id,json=tagId,proto3" json:"tag_id"`
	TagName              string         `protobuf:"bytes,22,opt,name=tag_name,json=tagName,proto3" json:"tag_name"`
	Subtype              string         `protobuf:"bytes,23,opt,name=subtype,proto3" json:"subtype"`
	Spec                 []*SpecReqInfo `protobuf:"bytes,24,rep,name=spec,proto3" json:"spec"`
	BrandIds             []int32        `protobuf:"varint,25,rep,packed,name=brand_ids,json=brandIds,proto3" json:"brand_ids"`
	CategoryIds          []int64        `protobuf:"varint,26,rep,packed,name=category_ids,json=categoryIds,proto3" json:"category_ids"`
	OrderByField         string         `protobuf:"bytes,27,opt,name=order_by_field,json=orderByField,proto3" json:"order_by_field"`
	OrderByType          string         `protobuf:"bytes,28,opt,name=order_by_type,json=orderByType,proto3" json:"order_by_type"`
	ScreeningPriceValues []string       `protobuf:"bytes,29,rep,name=screening_price_values,json=screeningPriceValues,proto3" json:"screening_price_values"`
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchService_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_searchService_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_searchService_proto_rawDescGZIP(), []int{26}
}

func (x *SearchRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *SearchRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SearchRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *SearchRequest) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *SearchRequest) GetSkuSn() string {
	if x != nil {
		return x.SkuSn
	}
	return ""
}

func (x *SearchRequest) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *SearchRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *SearchRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SearchRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SearchRequest) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *SearchRequest) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *SearchRequest) GetTermId() int64 {
	if x != nil {
		return x.TermId
	}
	return 0
}

func (x *SearchRequest) GetTermName() string {
	if x != nil {
		return x.TermName
	}
	return ""
}

func (x *SearchRequest) GetBrandId() int32 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *SearchRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *SearchRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SearchRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *SearchRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *SearchRequest) GetParamId() int32 {
	if x != nil {
		return x.ParamId
	}
	return 0
}

func (x *SearchRequest) GetParamValue() string {
	if x != nil {
		return x.ParamValue
	}
	return ""
}

func (x *SearchRequest) GetTagId() int32 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *SearchRequest) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

func (x *SearchRequest) GetSubtype() string {
	if x != nil {
		return x.Subtype
	}
	return ""
}

func (x *SearchRequest) GetSpec() []*SpecReqInfo {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *SearchRequest) GetBrandIds() []int32 {
	if x != nil {
		return x.BrandIds
	}
	return nil
}

func (x *SearchRequest) GetCategoryIds() []int64 {
	if x != nil {
		return x.CategoryIds
	}
	return nil
}

func (x *SearchRequest) GetOrderByField() string {
	if x != nil {
		return x.OrderByField
	}
	return ""
}

func (x *SearchRequest) GetOrderByType() string {
	if x != nil {
		return x.OrderByType
	}
	return ""
}

func (x *SearchRequest) GetScreeningPriceValues() []string {
	if x != nil {
		return x.ScreeningPriceValues
	}
	return nil
}

type SpecReqInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  string `protobuf:"bytes,1,opt,name=type,proto3" json:"type"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value"`
}

func (x *SpecReqInfo) Reset() {
	*x = SpecReqInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchService_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecReqInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecReqInfo) ProtoMessage() {}

func (x *SpecReqInfo) ProtoReflect() protoreflect.Message {
	mi := &file_searchService_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecReqInfo.ProtoReflect.Descriptor instead.
func (*SpecReqInfo) Descriptor() ([]byte, []int) {
	return file_searchService_proto_rawDescGZIP(), []int{27}
}

func (x *SpecReqInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SpecReqInfo) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type BuyButtonDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color string `protobuf:"bytes,1,opt,name=color,proto3" json:"color"`
	Type  string `protobuf:"bytes,2,opt,name=type,proto3" json:"type"`
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title"`
	Name  string `protobuf:"bytes,4,opt,name=name,proto3" json:"name"`
	Class string `protobuf:"bytes,5,opt,name=class,proto3" json:"class"`
	Icon  string `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon"`
}

func (x *BuyButtonDataList) Reset() {
	*x = BuyButtonDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchService_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyButtonDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyButtonDataList) ProtoMessage() {}

func (x *BuyButtonDataList) ProtoReflect() protoreflect.Message {
	mi := &file_searchService_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyButtonDataList.ProtoReflect.Descriptor instead.
func (*BuyButtonDataList) Descriptor() ([]byte, []int) {
	return file_searchService_proto_rawDescGZIP(), []int{5, 0}
}

func (x *BuyButtonDataList) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *BuyButtonDataList) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *BuyButtonDataList) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *BuyButtonDataList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BuyButtonDataList) GetClass() string {
	if x != nil {
		return x.Class
	}
	return ""
}

func (x *BuyButtonDataList) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type PluginCouponDataBaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationName     string `protobuf:"bytes,1,opt,name=application_name,json=applicationName,proto3" json:"application_name"`
	BannerImageUrl      string `protobuf:"bytes,2,opt,name=banner_image_url,json=bannerImageUrl,proto3" json:"banner_image_url"`
	BannerBgColor       string `protobuf:"bytes,3,opt,name=banner_bg_color,json=bannerBgColor,proto3" json:"banner_bg_color"`
	ShopApplicationName string `protobuf:"bytes,4,opt,name=shop_application_name,json=shopApplicationName,proto3" json:"shop_application_name"`
	IsRepeatReceive     bool   `protobuf:"varint,5,opt,name=is_repeat_receive,json=isRepeatReceive,proto3" json:"is_repeat_receive"`
	IsShopCoupon        bool   `protobuf:"varint,6,opt,name=is_shop_coupon,json=isShopCoupon,proto3" json:"is_shop_coupon"`
	IsShopNavCoupon     bool   `protobuf:"varint,7,opt,name=is_shop_nav_coupon,json=isShopNavCoupon,proto3" json:"is_shop_nav_coupon"`
	Url                 string `protobuf:"bytes,8,opt,name=url,proto3" json:"url"`
}

func (x *PluginCouponDataBaseInfo) Reset() {
	*x = PluginCouponDataBaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchService_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginCouponDataBaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginCouponDataBaseInfo) ProtoMessage() {}

func (x *PluginCouponDataBaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_searchService_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginCouponDataBaseInfo.ProtoReflect.Descriptor instead.
func (*PluginCouponDataBaseInfo) Descriptor() ([]byte, []int) {
	return file_searchService_proto_rawDescGZIP(), []int{8, 0}
}

func (x *PluginCouponDataBaseInfo) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *PluginCouponDataBaseInfo) GetBannerImageUrl() string {
	if x != nil {
		return x.BannerImageUrl
	}
	return ""
}

func (x *PluginCouponDataBaseInfo) GetBannerBgColor() string {
	if x != nil {
		return x.BannerBgColor
	}
	return ""
}

func (x *PluginCouponDataBaseInfo) GetShopApplicationName() string {
	if x != nil {
		return x.ShopApplicationName
	}
	return ""
}

func (x *PluginCouponDataBaseInfo) GetIsRepeatReceive() bool {
	if x != nil {
		return x.IsRepeatReceive
	}
	return false
}

func (x *PluginCouponDataBaseInfo) GetIsShopCoupon() bool {
	if x != nil {
		return x.IsShopCoupon
	}
	return false
}

func (x *PluginCouponDataBaseInfo) GetIsShopNavCoupon() bool {
	if x != nil {
		return x.IsShopNavCoupon
	}
	return false
}

func (x *PluginCouponDataBaseInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type PluginCouponDataDataInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	ShopId           int64  `protobuf:"varint,2,opt,name=shop_id,json=shopId,proto3" json:"shop_id"`
	Name             string `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	Desc             string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc"`
	BgColor          string `protobuf:"bytes,5,opt,name=bg_color,json=bgColor,proto3" json:"bg_color"`
	Type             string `protobuf:"bytes,6,opt,name=type,proto3" json:"type"`
	DiscountValue    string `protobuf:"bytes,7,opt,name=discount_value,json=discountValue,proto3" json:"discount_value"`
	IsUserReceive    bool   `protobuf:"varint,8,opt,name=is_user_receive,json=isUserReceive,proto3" json:"is_user_receive"`
	IsRegisterSend   bool   `protobuf:"varint,9,opt,name=is_register_send,json=isRegisterSend,proto3" json:"is_register_send"`
	IsOperable       bool   `protobuf:"varint,10,opt,name=is_operable,json=isOperable,proto3" json:"is_operable"`
	IsOperableName   bool   `protobuf:"varint,11,opt,name=is_operable_name,json=isOperableName,proto3" json:"is_operable_name"`
	TypeName         string `protobuf:"bytes,12,opt,name=type_name,json=typeName,proto3" json:"type_name"`
	TypeUnit         string `protobuf:"bytes,13,opt,name=type_unit,json=typeUnit,proto3" json:"type_unit"`
	BgColorName      string `protobuf:"bytes,14,opt,name=bg_color_name,json=bgColorName,proto3" json:"bg_color_name"`
	BgColorValue     string `protobuf:"bytes,15,opt,name=bg_color_value,json=bgColorValue,proto3" json:"bg_color_value"`
	ExpireTypeName   string `protobuf:"bytes,16,opt,name=expire_type_name,json=expireTypeName,proto3" json:"expire_type_name"`
	UseLimitTypeName string `protobuf:"bytes,17,opt,name=use_limit_type_name,json=useLimitTypeName,proto3" json:"use_limit_type_name"`
}

func (x *PluginCouponDataDataInfo) Reset() {
	*x = PluginCouponDataDataInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchService_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginCouponDataDataInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginCouponDataDataInfo) ProtoMessage() {}

func (x *PluginCouponDataDataInfo) ProtoReflect() protoreflect.Message {
	mi := &file_searchService_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginCouponDataDataInfo.ProtoReflect.Descriptor instead.
func (*PluginCouponDataDataInfo) Descriptor() ([]byte, []int) {
	return file_searchService_proto_rawDescGZIP(), []int{8, 1}
}

func (x *PluginCouponDataDataInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PluginCouponDataDataInfo) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *PluginCouponDataDataInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PluginCouponDataDataInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *PluginCouponDataDataInfo) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *PluginCouponDataDataInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PluginCouponDataDataInfo) GetDiscountValue() string {
	if x != nil {
		return x.DiscountValue
	}
	return ""
}

func (x *PluginCouponDataDataInfo) GetIsUserReceive() bool {
	if x != nil {
		return x.IsUserReceive
	}
	return false
}

func (x *PluginCouponDataDataInfo) GetIsRegisterSend() bool {
	if x != nil {
		return x.IsRegisterSend
	}
	return false
}

func (x *PluginCouponDataDataInfo) GetIsOperable() bool {
	if x != nil {
		return x.IsOperable
	}
	return false
}

func (x *PluginCouponDataDataInfo) GetIsOperableName() bool {
	if x != nil {
		return x.IsOperableName
	}
	return false
}

func (x *PluginCouponDataDataInfo) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *PluginCouponDataDataInfo) GetTypeUnit() string {
	if x != nil {
		return x.TypeUnit
	}
	return ""
}

func (x *PluginCouponDataDataInfo) GetBgColorName() string {
	if x != nil {
		return x.BgColorName
	}
	return ""
}

func (x *PluginCouponDataDataInfo) GetBgColorValue() string {
	if x != nil {
		return x.BgColorValue
	}
	return ""
}

func (x *PluginCouponDataDataInfo) GetExpireTypeName() string {
	if x != nil {
		return x.ExpireTypeName
	}
	return ""
}

func (x *PluginCouponDataDataInfo) GetUseLimitTypeName() string {
	if x != nil {
		return x.UseLimitTypeName
	}
	return ""
}

type PluginSeckillDataTimeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hours   int64  `protobuf:"varint,1,opt,name=hours,proto3" json:"hours"`
	Minutes int64  `protobuf:"varint,2,opt,name=minutes,proto3" json:"minutes"`
	Seconds int64  `protobuf:"varint,3,opt,name=seconds,proto3" json:"seconds"`
	Status  string `protobuf:"bytes,4,opt,name=status,proto3" json:"status"`
	Msg     string `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg"`
}

func (x *PluginSeckillDataTimeInfo) Reset() {
	*x = PluginSeckillDataTimeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_searchService_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginSeckillDataTimeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginSeckillDataTimeInfo) ProtoMessage() {}

func (x *PluginSeckillDataTimeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_searchService_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginSeckillDataTimeInfo.ProtoReflect.Descriptor instead.
func (*PluginSeckillDataTimeInfo) Descriptor() ([]byte, []int) {
	return file_searchService_proto_rawDescGZIP(), []int{12, 0}
}

func (x *PluginSeckillDataTimeInfo) GetHours() int64 {
	if x != nil {
		return x.Hours
	}
	return 0
}

func (x *PluginSeckillDataTimeInfo) GetMinutes() int64 {
	if x != nil {
		return x.Minutes
	}
	return 0
}

func (x *PluginSeckillDataTimeInfo) GetSeconds() int64 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

func (x *PluginSeckillDataTimeInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PluginSeckillDataTimeInfo) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_searchService_proto protoreflect.FileDescriptor

var file_searchService_proto_rawDesc = []byte{
	0x0a, 0x13, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a,
	0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x15, 0x62, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x74, 0x65, 0x72, 0x6d, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x10, 0x73, 0x70, 0x75, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x95, 0x01, 0x0a, 0x0e, 0x53, 0x70, 0x65, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x39, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x53, 0x70, 0x65, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x42,
	0x61, 0x73, 0x65, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x42, 0x61, 0x73, 0x65, 0x12, 0x48, 0x0a,
	0x0f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x45,
	0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xd5, 0x02, 0x0a, 0x12, 0x53, 0x70, 0x65, 0x63,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x42, 0x61, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x73, 0x70, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x73, 0x70, 0x75, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x64, 0x35, 0x5f, 0x6b, 0x65, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x64, 0x35, 0x4b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f,
	0x6c, 0x75, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61,
	0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x72,
	0x63, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x25, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63,
	0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x53, 0x6b, 0x75, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22,
	0x2b, 0x0a, 0x15, 0x53, 0x70, 0x65, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74,
	0x61, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xbf, 0x01, 0x0a,
	0x14, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12,
	0x2d, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x4f,
	0x0a, 0x0d, 0x43, 0x61, 0x72, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x79, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x75, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22,
	0xbf, 0x02, 0x0a, 0x09, 0x42, 0x75, 0x79, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f,
	0x62, 0x75, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x42, 0x75, 0x79,
	0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f,
	0x63, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x43, 0x61,
	0x72, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x42,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x89, 0x01, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x22, 0x39, 0x0a, 0x0d, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x73, 0x4e,
	0x61, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x47, 0x0a, 0x0b,
	0x4e, 0x61, 0x76, 0x4d, 0x6f, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x85, 0x08, 0x0a, 0x10, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x38, 0x0a, 0x04, 0x62, 0x61,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x62, 0x61, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xcd,
	0x02, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a, 0x10,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72,
	0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x62, 0x67, 0x5f, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x42, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x68, 0x6f,
	0x70, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x68, 0x6f, 0x70, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a,
	0x11, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x52, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f,
	0x73, 0x68, 0x6f, 0x70, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12,
	0x2b, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x76, 0x5f, 0x63,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x53,
	0x68, 0x6f, 0x70, 0x4e, 0x61, 0x76, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03,
	0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a, 0xac,
	0x04, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73,
	0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73,
	0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x19, 0x0a,
	0x08, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69,
	0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x62, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0e, 0x69, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x67,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24,
	0x0a, 0x0e, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d,
	0x0a, 0x13, 0x75, 0x73, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x75, 0x73, 0x65,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x9a, 0x01,
	0x0a, 0x18, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x54, 0x6f, 0x6f, 0x6c, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3e, 0x0a, 0x0b, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x42, 0x61, 0x73, 0x65, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x52, 0x0a,
	0x62, 0x61, 0x73, 0x65, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x12, 0x3e, 0x0a, 0x0b, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x70, 0x52, 0x0a,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x70, 0x22, 0x3d, 0x0a, 0x13, 0x49, 0x6e,
	0x74, 0x65, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x61, 0x73, 0x65, 0x42, 0x6f, 0x74, 0x74, 0x6f,
	0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x46, 0x0a, 0x13, 0x49, 0x6e, 0x74,
	0x65, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0xb6, 0x02, 0x0a, 0x11, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x63, 0x6b,
	0x69, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0c,
	0x62, 0x67, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x62, 0x67, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x39,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53, 0x65,
	0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x1a, 0x7f, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d,
	0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xf5, 0x04, 0x0a, 0x10, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x23, 0x0a, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x70, 0x75, 0x52, 0x05, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x12, 0x36, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x09, 0x63, 0x61, 0x72, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x0a,
	0x62, 0x75, 0x79, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x42,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x09, 0x62, 0x75, 0x79, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x12, 0x3f, 0x0a, 0x0f, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x73, 0x5f,
	0x6e, 0x61, 0x76, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x73, 0x4e,
	0x61, 0x76, 0x52, 0x0d, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x73, 0x4e, 0x61,
	0x76, 0x12, 0x39, 0x0a, 0x0d, 0x6e, 0x61, 0x76, 0x5f, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x4e, 0x61, 0x76, 0x4d, 0x6f, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x0b, 0x6e, 0x61, 0x76, 0x4d, 0x6f, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x13,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x11, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4d, 0x0a, 0x14, 0x50, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x12, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x53, 0x65, 0x63, 0x6b,
	0x69, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x54, 0x0a, 0x16, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74,
	0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x14, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x63, 0x0a,
	0x1c, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x6f,
	0x6f, 0x6c, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x19, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73,
	0x49, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x6f, 0x6c, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x6b, 0x0a, 0x14, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x83, 0x02, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x41, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x12, 0x38, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x42, 0x72, 0x61,
	0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x1a, 0x3b,
	0x0a, 0x0d, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x38, 0x0a, 0x0a, 0x42,
	0x72, 0x61, 0x6e, 0x64, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xc7, 0x03, 0x0a, 0x0f, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3f, 0x0a, 0x0f, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0d, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4d, 0x61, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2e, 0x0a, 0x0a, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x64, 0x52,
	0x09, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x33, 0x0a, 0x0d, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x65, 0x72,
	0x6d, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x4a, 0x0a, 0x14, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x52, 0x12, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x54, 0x0a, 0x0f, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x5f, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x53, 0x70, 0x65, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d,
	0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x65, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x40, 0x0a,
	0x12, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x65, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x69, 0x0a, 0x13, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x5a, 0x0a, 0x0e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x72, 0x12, 0x23, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x70, 0x75, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x67, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22,
	0x40, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x22, 0x6f, 0x0a, 0x16, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x6d, 0x0a, 0x18, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x70, 0x65, 0x63,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x87, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x70, 0x65, 0x63,
	0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x73, 0x70, 0x65,
	0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x54, 0x0a, 0x16, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73,
	0x5f, 0x77, 0x68, 0x6f, 0x6c, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x57, 0x68, 0x6f, 0x6c, 0x65, 0x73, 0x61, 0x6c,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x14, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x57, 0x68,
	0x6f, 0x6c, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x2a, 0x0a, 0x14, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x57, 0x68, 0x6f, 0x6c, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x6f, 0x0a, 0x16, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x53, 0x70, 0x65, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x53, 0x70, 0x65, 0x63, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0xce, 0x06, 0x0a, 0x0d, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61,
	0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x6b, 0x75, 0x53, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x70, 0x75, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x70, 0x75, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65,
	0x72, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x72,
	0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x72, 0x6d, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68,
	0x6f, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x67,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x12, 0x29,
	0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x19, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x49, 0x64, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12,
	0x22, 0x0a, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x62, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x79, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x69, 0x6e, 0x67,
	0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x1d, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x14, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x37, 0x0a, 0x0b, 0x53, 0x70, 0x65,
	0x63, 0x52, 0x65, 0x71, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x32, 0xab, 0x03, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x17, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x17,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49,
	0x0a, 0x0a, 0x53, 0x70, 0x65, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x17, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x53, 0x70, 0x65, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x08, 0x53, 0x70, 0x65,
	0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x53, 0x70, 0x65, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_searchService_proto_rawDescOnce sync.Once
	file_searchService_proto_rawDescData = file_searchService_proto_rawDesc
)

func file_searchService_proto_rawDescGZIP() []byte {
	file_searchService_proto_rawDescOnce.Do(func() {
		file_searchService_proto_rawDescData = protoimpl.X.CompressGZIP(file_searchService_proto_rawDescData)
	})
	return file_searchService_proto_rawDescData
}

var file_searchService_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_searchService_proto_goTypes = []interface{}{
	(*SpecDetailData)(nil),            // 0: services.SpecDetailData
	(*SpecDetailDataBase)(nil),        // 1: services.SpecDetailDataBase
	(*SpecDetailDataExtends)(nil),     // 2: services.SpecDetailDataExtends
	(*PluginsPromotionData)(nil),      // 3: services.PluginsPromotionData
	(*CartTotalInfo)(nil),             // 4: services.CartTotalInfo
	(*BuyButton)(nil),                 // 5: services.BuyButton
	(*MiddleTabsNav)(nil),             // 6: services.MiddleTabsNav
	(*NavMoreList)(nil),               // 7: services.NavMoreList
	(*PluginCouponData)(nil),          // 8: services.PluginCouponData
	(*PluginIntellectToolsData)(nil),  // 9: services.PluginIntellectToolsData
	(*IntellectBaseBottom)(nil),       // 10: services.IntellectBaseBottom
	(*IntellectContentTop)(nil),       // 11: services.IntellectContentTop
	(*PluginSeckillData)(nil),         // 12: services.PluginSeckillData
	(*SearchDetailData)(nil),          // 13: services.SearchDetailData
	(*SearchDetailResponse)(nil),      // 14: services.SearchDetailResponse
	(*SearchMapInfo)(nil),             // 15: services.SearchMapInfo
	(*SearchIndexData)(nil),           // 16: services.SearchIndexData
	(*SearchIndexResponse)(nil),       // 17: services.SearchIndexResponse
	(*SearchListData)(nil),            // 18: services.SearchListData
	(*SearchListResponse)(nil),        // 19: services.SearchListResponse
	(*SearchCategoryData)(nil),        // 20: services.SearchCategoryData
	(*SearchCategoryResponse)(nil),    // 21: services.SearchCategoryResponse
	(*SearchSpecDetailResponse)(nil),  // 22: services.SearchSpecDetailResponse
	(*SearchSpecTypeData)(nil),        // 23: services.SearchSpecTypeData
	(*PluginsWholesaleData)(nil),      // 24: services.PluginsWholesaleData
	(*SearchSpecTypeResponse)(nil),    // 25: services.SearchSpecTypeResponse
	(*SearchRequest)(nil),             // 26: services.SearchRequest
	(*SpecReqInfo)(nil),               // 27: services.SpecReqInfo
	(*BuyButtonDataList)(nil),         // 28: services.BuyButton.data_list
	(*PluginCouponDataBaseInfo)(nil),  // 29: services.PluginCouponData.base_info
	(*PluginCouponDataDataInfo)(nil),  // 30: services.PluginCouponData.data_info
	(*PluginSeckillDataTimeInfo)(nil), // 31: services.PluginSeckillData.time_info
	nil,                               // 32: services.SearchMapInfo.CategoryEntry
	nil,                               // 33: services.SearchMapInfo.BrandEntry
	nil,                               // 34: services.SearchIndexData.GoodsSpecListEntry
	(*SkuSpec)(nil),                   // 35: services.SkuSpec
	(*Spu)(nil),                       // 36: services.Spu
	(*common.Error)(nil),              // 37: common.Error
	(*Brand)(nil),                     // 38: services.Brand
	(*Term)(nil),                      // 39: services.Term
	(*ScreeningPrice)(nil),            // 40: services.ScreeningPrice
	(*common.Pager)(nil),              // 41: common.Pager
}
var file_searchService_proto_depIdxs = []int32{
	1,  // 0: services.SpecDetailData.spec_base:type_name -> services.SpecDetailDataBase
	2,  // 1: services.SpecDetailData.extend_elements:type_name -> services.SpecDetailDataExtends
	35, // 2: services.SpecDetailDataBase.spec:type_name -> services.SkuSpec
	28, // 3: services.BuyButton.data:type_name -> services.BuyButton.data_list
	29, // 4: services.PluginCouponData.base:type_name -> services.PluginCouponData.base_info
	30, // 5: services.PluginCouponData.data:type_name -> services.PluginCouponData.data_info
	10, // 6: services.PluginIntellectToolsData.base_bottom:type_name -> services.IntellectBaseBottom
	11, // 7: services.PluginIntellectToolsData.content_top:type_name -> services.IntellectContentTop
	31, // 8: services.PluginSeckillData.time:type_name -> services.PluginSeckillData.time_info
	36, // 9: services.SearchDetailData.goods:type_name -> services.Spu
	4,  // 10: services.SearchDetailData.cart_total:type_name -> services.CartTotalInfo
	5,  // 11: services.SearchDetailData.buy_button:type_name -> services.BuyButton
	6,  // 12: services.SearchDetailData.middle_tabs_nav:type_name -> services.MiddleTabsNav
	7,  // 13: services.SearchDetailData.nav_more_list:type_name -> services.NavMoreList
	8,  // 14: services.SearchDetailData.plugins_coupon_data:type_name -> services.PluginCouponData
	12, // 15: services.SearchDetailData.Plugins_seckill_data:type_name -> services.PluginSeckillData
	3,  // 16: services.SearchDetailData.Plugins_promotion_data:type_name -> services.PluginsPromotionData
	9,  // 17: services.SearchDetailData.plugins_intellect_tools_data:type_name -> services.PluginIntellectToolsData
	13, // 18: services.SearchDetailResponse.data:type_name -> services.SearchDetailData
	37, // 19: services.SearchDetailResponse.error:type_name -> common.Error
	32, // 20: services.SearchMapInfo.category:type_name -> services.SearchMapInfo.CategoryEntry
	33, // 21: services.SearchMapInfo.brand:type_name -> services.SearchMapInfo.BrandEntry
	15, // 22: services.SearchIndexData.search_map_info:type_name -> services.SearchMapInfo
	38, // 23: services.SearchIndexData.brand_list:type_name -> services.Brand
	39, // 24: services.SearchIndexData.category_list:type_name -> services.Term
	40, // 25: services.SearchIndexData.screening_price_list:type_name -> services.ScreeningPrice
	34, // 26: services.SearchIndexData.goods_spec_list:type_name -> services.SearchIndexData.GoodsSpecListEntry
	16, // 27: services.SearchIndexResponse.data:type_name -> services.SearchIndexData
	37, // 28: services.SearchIndexResponse.error:type_name -> common.Error
	41, // 29: services.SearchListData.pager:type_name -> common.Pager
	36, // 30: services.SearchListData.items:type_name -> services.Spu
	18, // 31: services.SearchListResponse.data:type_name -> services.SearchListData
	37, // 32: services.SearchListResponse.error:type_name -> common.Error
	39, // 33: services.SearchCategoryData.category:type_name -> services.Term
	20, // 34: services.SearchCategoryResponse.data:type_name -> services.SearchCategoryData
	37, // 35: services.SearchCategoryResponse.error:type_name -> common.Error
	0,  // 36: services.SearchSpecDetailResponse.data:type_name -> services.SpecDetailData
	37, // 37: services.SearchSpecDetailResponse.error:type_name -> common.Error
	24, // 38: services.SearchSpecTypeData.plugins_wholesale_data:type_name -> services.PluginsWholesaleData
	23, // 39: services.SearchSpecTypeResponse.data:type_name -> services.SearchSpecTypeData
	37, // 40: services.SearchSpecTypeResponse.error:type_name -> common.Error
	27, // 41: services.SearchRequest.spec:type_name -> services.SpecReqInfo
	26, // 42: services.SearchService.Index:input_type -> services.SearchRequest
	26, // 43: services.SearchService.List:input_type -> services.SearchRequest
	26, // 44: services.SearchService.Detail:input_type -> services.SearchRequest
	26, // 45: services.SearchService.Category:input_type -> services.SearchRequest
	26, // 46: services.SearchService.SpecDetail:input_type -> services.SearchRequest
	26, // 47: services.SearchService.SpecType:input_type -> services.SearchRequest
	17, // 48: services.SearchService.Index:output_type -> services.SearchIndexResponse
	19, // 49: services.SearchService.List:output_type -> services.SearchListResponse
	14, // 50: services.SearchService.Detail:output_type -> services.SearchDetailResponse
	21, // 51: services.SearchService.Category:output_type -> services.SearchCategoryResponse
	22, // 52: services.SearchService.SpecDetail:output_type -> services.SearchSpecDetailResponse
	25, // 53: services.SearchService.SpecType:output_type -> services.SearchSpecTypeResponse
	48, // [48:54] is the sub-list for method output_type
	42, // [42:48] is the sub-list for method input_type
	42, // [42:42] is the sub-list for extension type_name
	42, // [42:42] is the sub-list for extension extendee
	0,  // [0:42] is the sub-list for field type_name
}

func init() { file_searchService_proto_init() }
func file_searchService_proto_init() {
	if File_searchService_proto != nil {
		return
	}
	file_baseInfoService_proto_init()
	file_termService_proto_init()
	file_brandService_proto_init()
	file_spuService_proto_init()
	file_screeningPriceService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_searchService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecDetailData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecDetailDataBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecDetailDataExtends); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginsPromotionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CartTotalInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyButton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiddleTabsNav); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NavMoreList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginCouponData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginIntellectToolsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntellectBaseBottom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntellectContentTop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchService_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginSeckillData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchService_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchDetailData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchService_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchService_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchMapInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchService_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchIndexData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchService_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchService_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchService_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchService_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCategoryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchService_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchService_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSpecDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchService_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSpecTypeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchService_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginsWholesaleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchService_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchSpecTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchService_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchService_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecReqInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchService_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyButtonDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchService_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginCouponDataBaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchService_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginCouponDataDataInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_searchService_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginSeckillDataTimeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_searchService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_searchService_proto_goTypes,
		DependencyIndexes: file_searchService_proto_depIdxs,
		MessageInfos:      file_searchService_proto_msgTypes,
	}.Build()
	File_searchService_proto = out.File
	file_searchService_proto_rawDesc = nil
	file_searchService_proto_goTypes = nil
	file_searchService_proto_depIdxs = nil
}
