// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: labelGroupService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 标签分组
type LabelGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                //ID
	Name      string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`                             //组名
	Type      string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type"`                             //类型
	IsSystem  string   `protobuf:"bytes,4,opt,name=is_system,json=isSystem,proto3" json:"is_system"`     //系统预设
	CreatedAt int64    `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at"` //创建时间
	UpdatedAt int64    `protobuf:"varint,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"` //修改时间
	Labels    []*Label `protobuf:"bytes,7,rep,name=labels,proto3" json:"labels"`
	SpuCount  int32    `protobuf:"varint,8,opt,name=spu_count,json=spuCount,proto3" json:"spu_count"` //商品数量
}

func (x *LabelGroup) Reset() {
	*x = LabelGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_labelGroupService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelGroup) ProtoMessage() {}

func (x *LabelGroup) ProtoReflect() protoreflect.Message {
	mi := &file_labelGroupService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelGroup.ProtoReflect.Descriptor instead.
func (*LabelGroup) Descriptor() ([]byte, []int) {
	return file_labelGroupService_proto_rawDescGZIP(), []int{0}
}

func (x *LabelGroup) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LabelGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LabelGroup) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LabelGroup) GetIsSystem() string {
	if x != nil {
		return x.IsSystem
	}
	return ""
}

func (x *LabelGroup) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *LabelGroup) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *LabelGroup) GetLabels() []*Label {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *LabelGroup) GetSpuCount() int32 {
	if x != nil {
		return x.SpuCount
	}
	return 0
}

// 标签分组(分页管理)
type LabelGroupView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                //ID
	Name      string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`                             //组名
	Type      string   `protobuf:"bytes,3,opt,name=type,proto3" json:"type"`                             //类型
	IsSystem  string   `protobuf:"bytes,4,opt,name=is_system,json=isSystem,proto3" json:"is_system"`     //系统预设
	CreatedAt int64    `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at"` //创建时间
	UpdatedAt int64    `protobuf:"varint,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"` //修改时间
	Children  []*Label `protobuf:"bytes,7,rep,name=children,proto3" json:"children"`
	IsGroup   bool     `protobuf:"varint,8,opt,name=is_group,json=isGroup,proto3" json:"is_group"`
	SpuCount  int32    `protobuf:"varint,9,opt,name=spu_count,json=spuCount,proto3" json:"spu_count"` //商品数量
}

func (x *LabelGroupView) Reset() {
	*x = LabelGroupView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_labelGroupService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelGroupView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelGroupView) ProtoMessage() {}

func (x *LabelGroupView) ProtoReflect() protoreflect.Message {
	mi := &file_labelGroupService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelGroupView.ProtoReflect.Descriptor instead.
func (*LabelGroupView) Descriptor() ([]byte, []int) {
	return file_labelGroupService_proto_rawDescGZIP(), []int{1}
}

func (x *LabelGroupView) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LabelGroupView) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LabelGroupView) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LabelGroupView) GetIsSystem() string {
	if x != nil {
		return x.IsSystem
	}
	return ""
}

func (x *LabelGroupView) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *LabelGroupView) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *LabelGroupView) GetChildren() []*Label {
	if x != nil {
		return x.Children
	}
	return nil
}

func (x *LabelGroupView) GetIsGroup() bool {
	if x != nil {
		return x.IsGroup
	}
	return false
}

func (x *LabelGroupView) GetSpuCount() int32 {
	if x != nil {
		return x.SpuCount
	}
	return 0
}

// 标签分组请求参数
type LabelGroupRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Top       int32    `protobuf:"varint,1,opt,name=top,proto3" json:"top"`
	Paged     int64    `protobuf:"varint,2,opt,name=paged,proto3" json:"paged"`
	PageSize  int64    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords  string   `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords"`
	Sorts     []string `protobuf:"bytes,5,rep,name=sorts,proto3" json:"sorts"`
	DateRange []string `protobuf:"bytes,6,rep,name=date_range,json=dateRange,proto3" json:"date_range"`
	Ids       []int32  `protobuf:"varint,7,rep,packed,name=ids,proto3" json:"ids"`
	Id        int32    `protobuf:"varint,8,opt,name=id,proto3" json:"id"`
	//以下为自定义参数
	Name     string `protobuf:"bytes,11,opt,name=name,proto3" json:"name"`                          //组名
	Type     string `protobuf:"bytes,12,opt,name=type,proto3" json:"type"`                          //类型
	IsSystem string `protobuf:"bytes,13,opt,name=is_system,json=isSystem,proto3" json:"is_system"`  //系统预设
	SpuCount int32  `protobuf:"varint,10,opt,name=spu_count,json=spuCount,proto3" json:"spu_count"` //商品数量
}

func (x *LabelGroupRequest) Reset() {
	*x = LabelGroupRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_labelGroupService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelGroupRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelGroupRequest) ProtoMessage() {}

func (x *LabelGroupRequest) ProtoReflect() protoreflect.Message {
	mi := &file_labelGroupService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelGroupRequest.ProtoReflect.Descriptor instead.
func (*LabelGroupRequest) Descriptor() ([]byte, []int) {
	return file_labelGroupService_proto_rawDescGZIP(), []int{2}
}

func (x *LabelGroupRequest) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *LabelGroupRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *LabelGroupRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *LabelGroupRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *LabelGroupRequest) GetSorts() []string {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *LabelGroupRequest) GetDateRange() []string {
	if x != nil {
		return x.DateRange
	}
	return nil
}

func (x *LabelGroupRequest) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *LabelGroupRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *LabelGroupRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LabelGroupRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LabelGroupRequest) GetIsSystem() string {
	if x != nil {
		return x.IsSystem
	}
	return ""
}

func (x *LabelGroupRequest) GetSpuCount() int32 {
	if x != nil {
		return x.SpuCount
	}
	return 0
}

// 标签分组响应数据
type LabelGroupResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg    string            `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg"`
	Pager  *common.Pager     `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Entity *LabelGroup       `protobuf:"bytes,3,opt,name=entity,proto3" json:"entity"`
	Items  []*LabelGroupView `protobuf:"bytes,4,rep,name=items,proto3" json:"items"`
	List   []*LabelGroup     `protobuf:"bytes,5,rep,name=list,proto3" json:"list"`
}

func (x *LabelGroupResponse) Reset() {
	*x = LabelGroupResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_labelGroupService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LabelGroupResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelGroupResponse) ProtoMessage() {}

func (x *LabelGroupResponse) ProtoReflect() protoreflect.Message {
	mi := &file_labelGroupService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelGroupResponse.ProtoReflect.Descriptor instead.
func (*LabelGroupResponse) Descriptor() ([]byte, []int) {
	return file_labelGroupService_proto_rawDescGZIP(), []int{3}
}

func (x *LabelGroupResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *LabelGroupResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *LabelGroupResponse) GetEntity() *LabelGroup {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *LabelGroupResponse) GetItems() []*LabelGroupView {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *LabelGroupResponse) GetList() []*LabelGroup {
	if x != nil {
		return x.List
	}
	return nil
}

var File_labelGroupService_proto protoreflect.FileDescriptor

var file_labelGroupService_proto_rawDesc = []byte{
	0x0a, 0x17, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe5, 0x01, 0x0a, 0x0a, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x27, 0x0a, 0x06,
	0x6c, 0x61, 0x62, 0x65, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x06, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x70, 0x75, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x70, 0x75, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x88, 0x02, 0x0a, 0x0e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x56, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x73, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2b, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x72, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x52, 0x08, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x67, 0x72, 0x6f, 0x75,
	0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x70, 0x75, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x70, 0x75, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xad, 0x02,
	0x0a, 0x11, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x74, 0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x73, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x12, 0x1b, 0x0a, 0x09, 0x73, 0x70, 0x75, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x70, 0x75, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xd3, 0x01,
	0x0a, 0x12, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x06, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x56, 0x69,
	0x65, 0x77, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x28, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x32, 0x9c, 0x03, 0x0a, 0x11, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3e, 0x0a, 0x06, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x06, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x06, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x12, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c,
	0x61, 0x62, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x03, 0x47, 0x65, 0x74,
	0x12, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68,
	0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x47, 0x72,
	0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a,
	0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4c, 0x61,
	0x62, 0x65, 0x6c, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_labelGroupService_proto_rawDescOnce sync.Once
	file_labelGroupService_proto_rawDescData = file_labelGroupService_proto_rawDesc
)

func file_labelGroupService_proto_rawDescGZIP() []byte {
	file_labelGroupService_proto_rawDescOnce.Do(func() {
		file_labelGroupService_proto_rawDescData = protoimpl.X.CompressGZIP(file_labelGroupService_proto_rawDescData)
	})
	return file_labelGroupService_proto_rawDescData
}

var file_labelGroupService_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_labelGroupService_proto_goTypes = []interface{}{
	(*LabelGroup)(nil),         // 0: services.LabelGroup
	(*LabelGroupView)(nil),     // 1: services.LabelGroupView
	(*LabelGroupRequest)(nil),  // 2: services.LabelGroupRequest
	(*LabelGroupResponse)(nil), // 3: services.LabelGroupResponse
	(*Label)(nil),              // 4: services.Label
	(*common.Pager)(nil),       // 5: common.Pager
}
var file_labelGroupService_proto_depIdxs = []int32{
	4,  // 0: services.LabelGroup.labels:type_name -> services.Label
	4,  // 1: services.LabelGroupView.children:type_name -> services.Label
	5,  // 2: services.LabelGroupResponse.pager:type_name -> common.Pager
	0,  // 3: services.LabelGroupResponse.entity:type_name -> services.LabelGroup
	1,  // 4: services.LabelGroupResponse.items:type_name -> services.LabelGroupView
	0,  // 5: services.LabelGroupResponse.list:type_name -> services.LabelGroup
	0,  // 6: services.LabelGroupService.Create:input_type -> services.LabelGroup
	0,  // 7: services.LabelGroupService.Update:input_type -> services.LabelGroup
	0,  // 8: services.LabelGroupService.Delete:input_type -> services.LabelGroup
	0,  // 9: services.LabelGroupService.Get:input_type -> services.LabelGroup
	2,  // 10: services.LabelGroupService.Search:input_type -> services.LabelGroupRequest
	2,  // 11: services.LabelGroupService.List:input_type -> services.LabelGroupRequest
	3,  // 12: services.LabelGroupService.Create:output_type -> services.LabelGroupResponse
	3,  // 13: services.LabelGroupService.Update:output_type -> services.LabelGroupResponse
	3,  // 14: services.LabelGroupService.Delete:output_type -> services.LabelGroupResponse
	3,  // 15: services.LabelGroupService.Get:output_type -> services.LabelGroupResponse
	3,  // 16: services.LabelGroupService.Search:output_type -> services.LabelGroupResponse
	3,  // 17: services.LabelGroupService.List:output_type -> services.LabelGroupResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_labelGroupService_proto_init() }
func file_labelGroupService_proto_init() {
	if File_labelGroupService_proto != nil {
		return
	}
	file_labelService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_labelGroupService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_labelGroupService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelGroupView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_labelGroupService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelGroupRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_labelGroupService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LabelGroupResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_labelGroupService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_labelGroupService_proto_goTypes,
		DependencyIndexes: file_labelGroupService_proto_depIdxs,
		MessageInfos:      file_labelGroupService_proto_msgTypes,
	}.Build()
	File_labelGroupService_proto = out.File
	file_labelGroupService_proto_rawDesc = nil
	file_labelGroupService_proto_goTypes = nil
	file_labelGroupService_proto_depIdxs = nil
}
