// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: spuInventoryService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 商品库存日志
type SpuInventoryLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                                    //ID
	SpuId           int64  `protobuf:"varint,2,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`                                 //商品ID
	Unique          string `protobuf:"bytes,3,opt,name=unique,proto3" json:"unique"`                                             //唯一标识
	OrderId         int64  `protobuf:"varint,4,opt,name=order_id,json=orderId,proto3" json:"order_id"`                           //订单ID
	OrderDetailId   int64  `protobuf:"varint,5,opt,name=order_detail_id,json=orderDetailId,proto3" json:"order_detail_id"`       //订单明细ID
	FrozenNum       int64  `protobuf:"varint,6,opt,name=frozen_num,json=frozenNum,proto3" json:"frozen_num"`                     //冻结数量
	DeductNum       int64  `protobuf:"varint,7,opt,name=deduct_num,json=deductNum,proto3" json:"deduct_num"`                     //扣减数量
	WarehouseId     int64  `protobuf:"varint,8,opt,name=warehouse_id,json=warehouseId,proto3" json:"warehouse_id"`               //仓库id
	DeliveryOrderId int64  `protobuf:"varint,9,opt,name=delivery_order_id,json=deliveryOrderId,proto3" json:"delivery_order_id"` //发货订单id
	LastDeductTime  int64  `protobuf:"varint,10,opt,name=last_deduct_time,json=lastDeductTime,proto3" json:"last_deduct_time"`   //最近扣减时间
	CancelTime      int64  `protobuf:"varint,11,opt,name=cancel_time,json=cancelTime,proto3" json:"cancel_time"`                 //取消时间
	Status          string `protobuf:"bytes,12,opt,name=status,proto3" json:"status"`                                            //状态：1-已冻结,2-已扣减,3-已取消
	UpdatedAt       int64  `protobuf:"varint,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`                    //创建时间
	CreatedAt       int64  `protobuf:"varint,14,opt,name=created_at,json=createdAt,proto3" json:"created_at"`                    //修改时间
}

func (x *SpuInventoryLog) Reset() {
	*x = SpuInventoryLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spuInventoryService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpuInventoryLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpuInventoryLog) ProtoMessage() {}

func (x *SpuInventoryLog) ProtoReflect() protoreflect.Message {
	mi := &file_spuInventoryService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpuInventoryLog.ProtoReflect.Descriptor instead.
func (*SpuInventoryLog) Descriptor() ([]byte, []int) {
	return file_spuInventoryService_proto_rawDescGZIP(), []int{0}
}

func (x *SpuInventoryLog) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpuInventoryLog) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *SpuInventoryLog) GetUnique() string {
	if x != nil {
		return x.Unique
	}
	return ""
}

func (x *SpuInventoryLog) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *SpuInventoryLog) GetOrderDetailId() int64 {
	if x != nil {
		return x.OrderDetailId
	}
	return 0
}

func (x *SpuInventoryLog) GetFrozenNum() int64 {
	if x != nil {
		return x.FrozenNum
	}
	return 0
}

func (x *SpuInventoryLog) GetDeductNum() int64 {
	if x != nil {
		return x.DeductNum
	}
	return 0
}

func (x *SpuInventoryLog) GetWarehouseId() int64 {
	if x != nil {
		return x.WarehouseId
	}
	return 0
}

func (x *SpuInventoryLog) GetDeliveryOrderId() int64 {
	if x != nil {
		return x.DeliveryOrderId
	}
	return 0
}

func (x *SpuInventoryLog) GetLastDeductTime() int64 {
	if x != nil {
		return x.LastDeductTime
	}
	return 0
}

func (x *SpuInventoryLog) GetCancelTime() int64 {
	if x != nil {
		return x.CancelTime
	}
	return 0
}

func (x *SpuInventoryLog) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SpuInventoryLog) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SpuInventoryLog) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

// 库存请求参数
type SpuInventory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId int64              `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id"` //订单ID
	Items   []*SpuInventoryLog `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
}

func (x *SpuInventory) Reset() {
	*x = SpuInventory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spuInventoryService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpuInventory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpuInventory) ProtoMessage() {}

func (x *SpuInventory) ProtoReflect() protoreflect.Message {
	mi := &file_spuInventoryService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpuInventory.ProtoReflect.Descriptor instead.
func (*SpuInventory) Descriptor() ([]byte, []int) {
	return file_spuInventoryService_proto_rawDescGZIP(), []int{1}
}

func (x *SpuInventory) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *SpuInventory) GetItems() []*SpuInventoryLog {
	if x != nil {
		return x.Items
	}
	return nil
}

// 库存扣减日志请求参数
type SpuInventoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Top       int32    `protobuf:"varint,1,opt,name=top,proto3" json:"top"`
	Paged     int64    `protobuf:"varint,2,opt,name=paged,proto3" json:"paged"`
	PageSize  int64    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords  string   `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords"`
	Sorts     []string `protobuf:"bytes,5,rep,name=sorts,proto3" json:"sorts"`
	DateRange []string `protobuf:"bytes,6,rep,name=date_range,json=dateRange,proto3" json:"date_range"`
	Ids       []int64  `protobuf:"varint,7,rep,packed,name=ids,proto3" json:"ids"`
	Id        int64    `protobuf:"varint,8,opt,name=id,proto3" json:"id"`
	//以下为自定义参数
	SpuId           int64 `protobuf:"varint,11,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`                                 //商品ID
	OrderId         int64 `protobuf:"varint,12,opt,name=order_id,json=orderId,proto3" json:"order_id"`                           //订单ID
	OrderDetailId   int64 `protobuf:"varint,13,opt,name=order_detail_id,json=orderDetailId,proto3" json:"order_detail_id"`       //订单明细ID
	WarehouseId     int64 `protobuf:"varint,14,opt,name=warehouse_id,json=warehouseId,proto3" json:"warehouse_id"`               //仓库id
	DeliveryOrderId int64 `protobuf:"varint,15,opt,name=delivery_order_id,json=deliveryOrderId,proto3" json:"delivery_order_id"` //发货订单id
}

func (x *SpuInventoryRequest) Reset() {
	*x = SpuInventoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spuInventoryService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpuInventoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpuInventoryRequest) ProtoMessage() {}

func (x *SpuInventoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spuInventoryService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpuInventoryRequest.ProtoReflect.Descriptor instead.
func (*SpuInventoryRequest) Descriptor() ([]byte, []int) {
	return file_spuInventoryService_proto_rawDescGZIP(), []int{2}
}

func (x *SpuInventoryRequest) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *SpuInventoryRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *SpuInventoryRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SpuInventoryRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *SpuInventoryRequest) GetSorts() []string {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *SpuInventoryRequest) GetDateRange() []string {
	if x != nil {
		return x.DateRange
	}
	return nil
}

func (x *SpuInventoryRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *SpuInventoryRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpuInventoryRequest) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *SpuInventoryRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *SpuInventoryRequest) GetOrderDetailId() int64 {
	if x != nil {
		return x.OrderDetailId
	}
	return 0
}

func (x *SpuInventoryRequest) GetWarehouseId() int64 {
	if x != nil {
		return x.WarehouseId
	}
	return 0
}

func (x *SpuInventoryRequest) GetDeliveryOrderId() int64 {
	if x != nil {
		return x.DeliveryOrderId
	}
	return 0
}

// 库存日志数据
type SpuInventoryLogsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pager *common.Pager      `protobuf:"bytes,1,opt,name=pager,proto3" json:"pager"`
	Items []*SpuInventoryLog `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
}

func (x *SpuInventoryLogsData) Reset() {
	*x = SpuInventoryLogsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spuInventoryService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpuInventoryLogsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpuInventoryLogsData) ProtoMessage() {}

func (x *SpuInventoryLogsData) ProtoReflect() protoreflect.Message {
	mi := &file_spuInventoryService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpuInventoryLogsData.ProtoReflect.Descriptor instead.
func (*SpuInventoryLogsData) Descriptor() ([]byte, []int) {
	return file_spuInventoryService_proto_rawDescGZIP(), []int{3}
}

func (x *SpuInventoryLogsData) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *SpuInventoryLogsData) GetItems() []*SpuInventoryLog {
	if x != nil {
		return x.Items
	}
	return nil
}

// 库存变动响应数据
type SpuInventoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg  string                  `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg"`
	Logs []*SpuInventoryLogsData `protobuf:"bytes,2,rep,name=Logs,proto3" json:"Logs"`
}

func (x *SpuInventoryResponse) Reset() {
	*x = SpuInventoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_spuInventoryService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpuInventoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpuInventoryResponse) ProtoMessage() {}

func (x *SpuInventoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spuInventoryService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpuInventoryResponse.ProtoReflect.Descriptor instead.
func (*SpuInventoryResponse) Descriptor() ([]byte, []int) {
	return file_spuInventoryService_proto_rawDescGZIP(), []int{4}
}

func (x *SpuInventoryResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SpuInventoryResponse) GetLogs() []*SpuInventoryLogsData {
	if x != nil {
		return x.Logs
	}
	return nil
}

var File_spuInventoryService_proto protoreflect.FileDescriptor

var file_spuInventoryService_proto_rawDesc = []byte{
	0x0a, 0x19, 0x73, 0x70, 0x75, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc1, 0x03, 0x0a, 0x0f, 0x53, 0x70, 0x75,
	0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x6f, 0x67, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x73, 0x70, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x70,
	0x75, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f,
	0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x66, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x4e, 0x75, 0x6d, 0x12, 0x1d, 0x0a,
	0x0a, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x21, 0x0a, 0x0c,
	0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x49, 0x64, 0x12,
	0x2a, 0x0a, 0x11, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x64, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x6c,
	0x61, 0x73, 0x74, 0x5f, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x44, 0x65, 0x64, 0x75, 0x63,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x5a, 0x0a, 0x0c,
	0x53, 0x70, 0x75, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x19, 0x0a, 0x08,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x53, 0x70, 0x75, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x6f,
	0x67, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xf6, 0x02, 0x0a, 0x13, 0x53, 0x70, 0x75,
	0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74,
	0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67,
	0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x70, 0x75, 0x5f,
	0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x70, 0x75, 0x49, 0x64, 0x12,
	0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x75, 0x73, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x77, 0x61, 0x72, 0x65, 0x68, 0x6f,
	0x75, 0x73, 0x65, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x5f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49,
	0x64, 0x22, 0x6c, 0x0a, 0x14, 0x53, 0x70, 0x75, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x4c, 0x6f, 0x67, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x2f,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x70, 0x75, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x4c, 0x6f, 0x67, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x5c, 0x0a, 0x14, 0x53, 0x70, 0x75, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x32, 0x0a, 0x04, 0x4c, 0x6f, 0x67,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x70, 0x75, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x4c,
	0x6f, 0x67, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x4c, 0x6f, 0x67, 0x73, 0x32, 0xaa, 0x02,
	0x0a, 0x13, 0x53, 0x70, 0x75, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x46, 0x72, 0x6f, 0x7a, 0x65, 0x6e, 0x12,
	0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x70, 0x75, 0x49, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x70, 0x75, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a, 0x06, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53,
	0x70, 0x75, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x1a, 0x1e, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x70, 0x75, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x42, 0x0a,
	0x06, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x70, 0x75, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x1a,
	0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x70, 0x75, 0x49, 0x6e,
	0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x47, 0x0a, 0x04, 0x4c, 0x6f, 0x67, 0x73, 0x12, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x70, 0x75, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x53, 0x70, 0x75, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e,
	0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_spuInventoryService_proto_rawDescOnce sync.Once
	file_spuInventoryService_proto_rawDescData = file_spuInventoryService_proto_rawDesc
)

func file_spuInventoryService_proto_rawDescGZIP() []byte {
	file_spuInventoryService_proto_rawDescOnce.Do(func() {
		file_spuInventoryService_proto_rawDescData = protoimpl.X.CompressGZIP(file_spuInventoryService_proto_rawDescData)
	})
	return file_spuInventoryService_proto_rawDescData
}

var file_spuInventoryService_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_spuInventoryService_proto_goTypes = []interface{}{
	(*SpuInventoryLog)(nil),      // 0: services.SpuInventoryLog
	(*SpuInventory)(nil),         // 1: services.SpuInventory
	(*SpuInventoryRequest)(nil),  // 2: services.SpuInventoryRequest
	(*SpuInventoryLogsData)(nil), // 3: services.SpuInventoryLogsData
	(*SpuInventoryResponse)(nil), // 4: services.SpuInventoryResponse
	(*common.Pager)(nil),         // 5: common.Pager
}
var file_spuInventoryService_proto_depIdxs = []int32{
	0, // 0: services.SpuInventory.items:type_name -> services.SpuInventoryLog
	5, // 1: services.SpuInventoryLogsData.pager:type_name -> common.Pager
	0, // 2: services.SpuInventoryLogsData.items:type_name -> services.SpuInventoryLog
	3, // 3: services.SpuInventoryResponse.Logs:type_name -> services.SpuInventoryLogsData
	1, // 4: services.SpuInventoryService.Frozen:input_type -> services.SpuInventory
	1, // 5: services.SpuInventoryService.Cancel:input_type -> services.SpuInventory
	1, // 6: services.SpuInventoryService.Deduct:input_type -> services.SpuInventory
	2, // 7: services.SpuInventoryService.Logs:input_type -> services.SpuInventoryRequest
	4, // 8: services.SpuInventoryService.Frozen:output_type -> services.SpuInventoryResponse
	4, // 9: services.SpuInventoryService.Cancel:output_type -> services.SpuInventoryResponse
	4, // 10: services.SpuInventoryService.Deduct:output_type -> services.SpuInventoryResponse
	4, // 11: services.SpuInventoryService.Logs:output_type -> services.SpuInventoryResponse
	8, // [8:12] is the sub-list for method output_type
	4, // [4:8] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_spuInventoryService_proto_init() }
func file_spuInventoryService_proto_init() {
	if File_spuInventoryService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_spuInventoryService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpuInventoryLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spuInventoryService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpuInventory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spuInventoryService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpuInventoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spuInventoryService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpuInventoryLogsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_spuInventoryService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpuInventoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_spuInventoryService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spuInventoryService_proto_goTypes,
		DependencyIndexes: file_spuInventoryService_proto_depIdxs,
		MessageInfos:      file_spuInventoryService_proto_msgTypes,
	}.Build()
	File_spuInventoryService_proto = out.File
	file_spuInventoryService_proto_rawDesc = nil
	file_spuInventoryService_proto_goTypes = nil
	file_spuInventoryService_proto_depIdxs = nil
}
