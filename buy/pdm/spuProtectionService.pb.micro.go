// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: spuProtectionService.proto

package services

import (
	fmt "fmt"
	_ "github.com/geiqin/micro-kit/protobuf/common"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "context"
	api "github.com/micro/go-micro/v2/api"
	client "github.com/micro/go-micro/v2/client"
	server "github.com/micro/go-micro/v2/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for SpuProtectionService service

func NewSpuProtectionServiceEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for SpuProtectionService service

type SpuProtectionService interface {
	// 服务保障新增
	Create(ctx context.Context, in *SpuProtection, opts ...client.CallOption) (*SpuProtectionResponse, error)
	// 服务保障修改
	Update(ctx context.Context, in *SpuProtection, opts ...client.CallOption) (*SpuProtectionResponse, error)
	// 服务保障删除
	Delete(ctx context.Context, in *SpuProtection, opts ...client.CallOption) (*SpuProtectionResponse, error)
	// 服务保障获取
	Get(ctx context.Context, in *SpuProtection, opts ...client.CallOption) (*SpuProtectionResponse, error)
	// 服务保障查询
	Search(ctx context.Context, in *SpuProtectionRequest, opts ...client.CallOption) (*SpuProtectionResponse, error)
	// 服务保障列表
	List(ctx context.Context, in *SpuProtectionRequest, opts ...client.CallOption) (*SpuProtectionResponse, error)
}

type spuProtectionService struct {
	c    client.Client
	name string
}

func NewSpuProtectionService(name string, c client.Client) SpuProtectionService {
	return &spuProtectionService{
		c:    c,
		name: name,
	}
}

func (c *spuProtectionService) Create(ctx context.Context, in *SpuProtection, opts ...client.CallOption) (*SpuProtectionResponse, error) {
	req := c.c.NewRequest(c.name, "SpuProtectionService.Create", in)
	out := new(SpuProtectionResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spuProtectionService) Update(ctx context.Context, in *SpuProtection, opts ...client.CallOption) (*SpuProtectionResponse, error) {
	req := c.c.NewRequest(c.name, "SpuProtectionService.Update", in)
	out := new(SpuProtectionResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spuProtectionService) Delete(ctx context.Context, in *SpuProtection, opts ...client.CallOption) (*SpuProtectionResponse, error) {
	req := c.c.NewRequest(c.name, "SpuProtectionService.Delete", in)
	out := new(SpuProtectionResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spuProtectionService) Get(ctx context.Context, in *SpuProtection, opts ...client.CallOption) (*SpuProtectionResponse, error) {
	req := c.c.NewRequest(c.name, "SpuProtectionService.Get", in)
	out := new(SpuProtectionResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spuProtectionService) Search(ctx context.Context, in *SpuProtectionRequest, opts ...client.CallOption) (*SpuProtectionResponse, error) {
	req := c.c.NewRequest(c.name, "SpuProtectionService.Search", in)
	out := new(SpuProtectionResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *spuProtectionService) List(ctx context.Context, in *SpuProtectionRequest, opts ...client.CallOption) (*SpuProtectionResponse, error) {
	req := c.c.NewRequest(c.name, "SpuProtectionService.List", in)
	out := new(SpuProtectionResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SpuProtectionService service

type SpuProtectionServiceHandler interface {
	// 服务保障新增
	Create(context.Context, *SpuProtection, *SpuProtectionResponse) error
	// 服务保障修改
	Update(context.Context, *SpuProtection, *SpuProtectionResponse) error
	// 服务保障删除
	Delete(context.Context, *SpuProtection, *SpuProtectionResponse) error
	// 服务保障获取
	Get(context.Context, *SpuProtection, *SpuProtectionResponse) error
	// 服务保障查询
	Search(context.Context, *SpuProtectionRequest, *SpuProtectionResponse) error
	// 服务保障列表
	List(context.Context, *SpuProtectionRequest, *SpuProtectionResponse) error
}

func RegisterSpuProtectionServiceHandler(s server.Server, hdlr SpuProtectionServiceHandler, opts ...server.HandlerOption) error {
	type spuProtectionService interface {
		Create(ctx context.Context, in *SpuProtection, out *SpuProtectionResponse) error
		Update(ctx context.Context, in *SpuProtection, out *SpuProtectionResponse) error
		Delete(ctx context.Context, in *SpuProtection, out *SpuProtectionResponse) error
		Get(ctx context.Context, in *SpuProtection, out *SpuProtectionResponse) error
		Search(ctx context.Context, in *SpuProtectionRequest, out *SpuProtectionResponse) error
		List(ctx context.Context, in *SpuProtectionRequest, out *SpuProtectionResponse) error
	}
	type SpuProtectionService struct {
		spuProtectionService
	}
	h := &spuProtectionServiceHandler{hdlr}
	return s.Handle(s.NewHandler(&SpuProtectionService{h}, opts...))
}

type spuProtectionServiceHandler struct {
	SpuProtectionServiceHandler
}

func (h *spuProtectionServiceHandler) Create(ctx context.Context, in *SpuProtection, out *SpuProtectionResponse) error {
	return h.SpuProtectionServiceHandler.Create(ctx, in, out)
}

func (h *spuProtectionServiceHandler) Update(ctx context.Context, in *SpuProtection, out *SpuProtectionResponse) error {
	return h.SpuProtectionServiceHandler.Update(ctx, in, out)
}

func (h *spuProtectionServiceHandler) Delete(ctx context.Context, in *SpuProtection, out *SpuProtectionResponse) error {
	return h.SpuProtectionServiceHandler.Delete(ctx, in, out)
}

func (h *spuProtectionServiceHandler) Get(ctx context.Context, in *SpuProtection, out *SpuProtectionResponse) error {
	return h.SpuProtectionServiceHandler.Get(ctx, in, out)
}

func (h *spuProtectionServiceHandler) Search(ctx context.Context, in *SpuProtectionRequest, out *SpuProtectionResponse) error {
	return h.SpuProtectionServiceHandler.Search(ctx, in, out)
}

func (h *spuProtectionServiceHandler) List(ctx context.Context, in *SpuProtectionRequest, out *SpuProtectionResponse) error {
	return h.SpuProtectionServiceHandler.List(ctx, in, out)
}
