// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: baseInfoService.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type VipLevelInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VipLevelInfo) Reset() {
	*x = VipLevelInfo{}
	mi := &file_baseInfoService_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VipLevelInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VipLevelInfo) ProtoMessage() {}

func (x *VipLevelInfo) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VipLevelInfo.ProtoReflect.Descriptor instead.
func (*VipLevelInfo) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{0}
}

func (x *VipLevelInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VipLevelInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// SKU规格信息
type SkuSpecInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type"`
	Value         string                 `protobuf:"bytes,2,opt,name=value,proto3" json:"value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SkuSpecInfo) Reset() {
	*x = SkuSpecInfo{}
	mi := &file_baseInfoService_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SkuSpecInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkuSpecInfo) ProtoMessage() {}

func (x *SkuSpecInfo) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkuSpecInfo.ProtoReflect.Descriptor instead.
func (*SkuSpecInfo) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{1}
}

func (x *SkuSpecInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SkuSpecInfo) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// SPU规格数据
type SpuSpecType struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	SpecId        int64                  `protobuf:"varint,2,opt,name=spec_id,json=specId,proto3" json:"spec_id"`
	SpecName      string                 `protobuf:"bytes,3,opt,name=spec_name,json=specName,proto3" json:"spec_name"`
	IsImage       bool                   `protobuf:"varint,4,opt,name=is_image,json=isImage,proto3" json:"is_image"`
	Values        []*SpuSpecTypeValue    `protobuf:"bytes,5,rep,name=values,proto3" json:"values"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpuSpecType) Reset() {
	*x = SpuSpecType{}
	mi := &file_baseInfoService_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpuSpecType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpuSpecType) ProtoMessage() {}

func (x *SpuSpecType) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpuSpecType.ProtoReflect.Descriptor instead.
func (*SpuSpecType) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{2}
}

func (x *SpuSpecType) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpuSpecType) GetSpecId() int64 {
	if x != nil {
		return x.SpecId
	}
	return 0
}

func (x *SpuSpecType) GetSpecName() string {
	if x != nil {
		return x.SpecName
	}
	return ""
}

func (x *SpuSpecType) GetIsImage() bool {
	if x != nil {
		return x.IsImage
	}
	return false
}

func (x *SpuSpecType) GetValues() []*SpuSpecTypeValue {
	if x != nil {
		return x.Values
	}
	return nil
}

type TreeNodeData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           int64                  `protobuf:"varint,1,opt,name=key,proto3" json:"key"`           //ID
	ParentId      int64                  `protobuf:"varint,2,opt,name=parentId,proto3" json:"parentId"` //父ID
	Title         string                 `protobuf:"bytes,3,opt,name=title,proto3" json:"title"`        //标题
	Sort          int32                  `protobuf:"varint,4,opt,name=sort,proto3" json:"sort"`         //排序
	Children      []*TreeNodeData        `protobuf:"bytes,5,rep,name=children,proto3" json:"children"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TreeNodeData) Reset() {
	*x = TreeNodeData{}
	mi := &file_baseInfoService_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TreeNodeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TreeNodeData) ProtoMessage() {}

func (x *TreeNodeData) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TreeNodeData.ProtoReflect.Descriptor instead.
func (*TreeNodeData) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{3}
}

func (x *TreeNodeData) GetKey() int64 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *TreeNodeData) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *TreeNodeData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TreeNodeData) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *TreeNodeData) GetChildren() []*TreeNodeData {
	if x != nil {
		return x.Children
	}
	return nil
}

// message GoodsSpecChoose{
// int64 id =1;
// string name =2;
// int64 goods_id =3;
// repeated GoodsSpecChooseValue value =4;
// }
//
// message GoodsSpecChooseValue{
// string name =1;
// string image_url =2;
// int64 inventory =3;
// string is_only_level_one =4;
// }
//
// message CommentScore{
// float avg =1;
// int64 rate =2;
// repeated rate_info rating =3;
// message rate_info{
// string name =1;
// int32 count =2;
// int32 portion =3;
// }
// }
type CommentInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	OrderId       int64                  `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
	UserId        int64                  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id"`
	BusinessType  string                 `protobuf:"bytes,4,opt,name=business_type,json=businessType,proto3" json:"business_type"`
	Content       string                 `protobuf:"bytes,5,opt,name=content,proto3" json:"content"`
	Reply         string                 `protobuf:"bytes,6,opt,name=reply,proto3" json:"reply"`
	IsReply       string                 `protobuf:"bytes,7,opt,name=is_reply,json=isReply,proto3" json:"is_reply"`
	Rating        int32                  `protobuf:"varint,8,opt,name=rating,proto3" json:"rating"`
	ImageUrl      string                 `protobuf:"bytes,9,opt,name=image_url,json=imageUrl,proto3" json:"image_url"`
	IsAnonymous   string                 `protobuf:"bytes,10,opt,name=is_anonymous,json=isAnonymous,proto3" json:"is_anonymous"`
	ReplyTime     string                 `protobuf:"bytes,11,opt,name=reply_time,json=replyTime,proto3" json:"reply_time"`
	CreatedAt     int64                  `protobuf:"varint,12,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt     int64                  `protobuf:"varint,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentInfo) Reset() {
	*x = CommentInfo{}
	mi := &file_baseInfoService_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentInfo) ProtoMessage() {}

func (x *CommentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentInfo.ProtoReflect.Descriptor instead.
func (*CommentInfo) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{4}
}

func (x *CommentInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CommentInfo) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *CommentInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CommentInfo) GetBusinessType() string {
	if x != nil {
		return x.BusinessType
	}
	return ""
}

func (x *CommentInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CommentInfo) GetReply() string {
	if x != nil {
		return x.Reply
	}
	return ""
}

func (x *CommentInfo) GetIsReply() string {
	if x != nil {
		return x.IsReply
	}
	return ""
}

func (x *CommentInfo) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *CommentInfo) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *CommentInfo) GetIsAnonymous() string {
	if x != nil {
		return x.IsAnonymous
	}
	return ""
}

func (x *CommentInfo) GetReplyTime() string {
	if x != nil {
		return x.ReplyTime
	}
	return ""
}

func (x *CommentInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *CommentInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type SpuSpecTypeValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SpecValue     string                 `protobuf:"bytes,1,opt,name=spec_value,json=specValue,proto3" json:"spec_value"`
	ImageId       int64                  `protobuf:"varint,2,opt,name=image_id,json=imageId,proto3" json:"image_id"`
	ImageUrl      string                 `protobuf:"bytes,3,opt,name=image_url,json=imageUrl,proto3" json:"image_url"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpuSpecTypeValue) Reset() {
	*x = SpuSpecTypeValue{}
	mi := &file_baseInfoService_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpuSpecTypeValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpuSpecTypeValue) ProtoMessage() {}

func (x *SpuSpecTypeValue) ProtoReflect() protoreflect.Message {
	mi := &file_baseInfoService_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpuSpecTypeValue.ProtoReflect.Descriptor instead.
func (*SpuSpecTypeValue) Descriptor() ([]byte, []int) {
	return file_baseInfoService_proto_rawDescGZIP(), []int{2, 0}
}

func (x *SpuSpecTypeValue) GetSpecValue() string {
	if x != nil {
		return x.SpecValue
	}
	return ""
}

func (x *SpuSpecTypeValue) GetImageId() int64 {
	if x != nil {
		return x.ImageId
	}
	return 0
}

func (x *SpuSpecTypeValue) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

var File_baseInfoService_proto protoreflect.FileDescriptor

const file_baseInfoService_proto_rawDesc = "" +
	"\n" +
	"\x15baseInfoService.proto\x12\bservices\"2\n" +
	"\fVipLevelInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x05R\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\"7\n" +
	"\vSkuSpecInfo\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value\"\x83\x02\n" +
	"\vSpuSpecType\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x17\n" +
	"\aspec_id\x18\x02 \x01(\x03R\x06specId\x12\x1b\n" +
	"\tspec_name\x18\x03 \x01(\tR\bspecName\x12\x19\n" +
	"\bis_image\x18\x04 \x01(\bR\aisImage\x123\n" +
	"\x06values\x18\x05 \x03(\v2\x1b.services.SpuSpecType.valueR\x06values\x1a^\n" +
	"\x05value\x12\x1d\n" +
	"\n" +
	"spec_value\x18\x01 \x01(\tR\tspecValue\x12\x19\n" +
	"\bimage_id\x18\x02 \x01(\x03R\aimageId\x12\x1b\n" +
	"\timage_url\x18\x03 \x01(\tR\bimageUrl\"\x9a\x01\n" +
	"\fTreeNodeData\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x12\x1a\n" +
	"\bparentId\x18\x02 \x01(\x03R\bparentId\x12\x14\n" +
	"\x05title\x18\x03 \x01(\tR\x05title\x12\x12\n" +
	"\x04sort\x18\x04 \x01(\x05R\x04sort\x122\n" +
	"\bchildren\x18\x05 \x03(\v2\x16.services.TreeNodeDataR\bchildren\"\xf6\x02\n" +
	"\vCommentInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x19\n" +
	"\border_id\x18\x02 \x01(\x03R\aorderId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\x03R\x06userId\x12#\n" +
	"\rbusiness_type\x18\x04 \x01(\tR\fbusinessType\x12\x18\n" +
	"\acontent\x18\x05 \x01(\tR\acontent\x12\x14\n" +
	"\x05reply\x18\x06 \x01(\tR\x05reply\x12\x19\n" +
	"\bis_reply\x18\a \x01(\tR\aisReply\x12\x16\n" +
	"\x06rating\x18\b \x01(\x05R\x06rating\x12\x1b\n" +
	"\timage_url\x18\t \x01(\tR\bimageUrl\x12!\n" +
	"\fis_anonymous\x18\n" +
	" \x01(\tR\visAnonymous\x12\x1d\n" +
	"\n" +
	"reply_time\x18\v \x01(\tR\treplyTime\x12\x1d\n" +
	"\n" +
	"created_at\x18\f \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\r \x01(\x03R\tupdatedAtB\rZ\v/.;servicesb\x06proto3"

var (
	file_baseInfoService_proto_rawDescOnce sync.Once
	file_baseInfoService_proto_rawDescData []byte
)

func file_baseInfoService_proto_rawDescGZIP() []byte {
	file_baseInfoService_proto_rawDescOnce.Do(func() {
		file_baseInfoService_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_baseInfoService_proto_rawDesc), len(file_baseInfoService_proto_rawDesc)))
	})
	return file_baseInfoService_proto_rawDescData
}

var file_baseInfoService_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_baseInfoService_proto_goTypes = []any{
	(*VipLevelInfo)(nil),     // 0: services.VipLevelInfo
	(*SkuSpecInfo)(nil),      // 1: services.SkuSpecInfo
	(*SpuSpecType)(nil),      // 2: services.SpuSpecType
	(*TreeNodeData)(nil),     // 3: services.TreeNodeData
	(*CommentInfo)(nil),      // 4: services.CommentInfo
	(*SpuSpecTypeValue)(nil), // 5: services.SpuSpecType.value
}
var file_baseInfoService_proto_depIdxs = []int32{
	5, // 0: services.SpuSpecType.values:type_name -> services.SpuSpecType.value
	3, // 1: services.TreeNodeData.children:type_name -> services.TreeNodeData
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_baseInfoService_proto_init() }
func file_baseInfoService_proto_init() {
	if File_baseInfoService_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_baseInfoService_proto_rawDesc), len(file_baseInfoService_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_baseInfoService_proto_goTypes,
		DependencyIndexes: file_baseInfoService_proto_depIdxs,
		MessageInfos:      file_baseInfoService_proto_msgTypes,
	}.Build()
	File_baseInfoService_proto = out.File
	file_baseInfoService_proto_goTypes = nil
	file_baseInfoService_proto_depIdxs = nil
}
