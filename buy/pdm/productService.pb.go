// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: productService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Product struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Id                int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                                           //ID
	Type              string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type"`                                                        //产品类型：physical实物产品,virtual虚拟产品,grouped分组产品，bundle捆绑产品
	ShopId            int64                  `protobuf:"varint,3,opt,name=shop_id,json=shopId,proto3" json:"shop_id"`                                     //分店ID
	CategoryId        int64                  `protobuf:"varint,4,opt,name=category_id,json=categoryId,proto3" json:"category_id"`                         //商品分类
	TaxonomyId        int64                  `protobuf:"varint,5,opt,name=taxonomy_id,json=taxonomyId,proto3" json:"taxonomy_id"`                         //商品类目
	BrandId           int32                  `protobuf:"varint,6,opt,name=brand_id,json=brandId,proto3" json:"brand_id"`                                  //品牌
	SpuName           string                 `protobuf:"bytes,7,opt,name=spu_name,json=spuName,proto3" json:"spu_name"`                                   //商品名称
	SpuCode           string                 `protobuf:"bytes,8,opt,name=spu_code,json=spuCode,proto3" json:"spu_code"`                                   //SPU编码
	SellMode          string                 `protobuf:"bytes,9,opt,name=sell_mode,json=sellMode,proto3" json:"sell_mode"`                                //销售模式
	Image             string                 `protobuf:"bytes,10,opt,name=image,proto3" json:"image"`                                                     //商品主图
	Video             string                 `protobuf:"bytes,11,opt,name=video,proto3" json:"video"`                                                     //主图视频
	ExplainVideo      string                 `protobuf:"bytes,12,opt,name=explain_video,json=explainVideo,proto3" json:"explain_video"`                   //讲解视频
	IsVirtual         bool                   `protobuf:"varint,13,opt,name=is_virtual,json=isVirtual,proto3" json:"is_virtual"`                           //虚拟商品
	VirtualType       string                 `protobuf:"bytes,14,opt,name=virtual_type,json=virtualType,proto3" json:"virtual_type"`                      //虚拟商品类型
	IsManySpec        bool                   `protobuf:"varint,15,opt,name=is_many_spec,json=isManySpec,proto3" json:"is_many_spec"`                      //多规格商品
	IsOpenWeigh       bool                   `protobuf:"varint,16,opt,name=is_open_weigh,json=isOpenWeigh,proto3" json:"is_open_weigh"`                   //开启称重
	IsMoreBarcode     bool                   `protobuf:"varint,17,opt,name=is_more_barcode,json=isMoreBarcode,proto3" json:"is_more_barcode"`             //一品多码
	UnitId            int32                  `protobuf:"varint,18,opt,name=unit_id,json=unitId,proto3" json:"unit_id"`                                    //计量单位ID
	UnitName          string                 `protobuf:"bytes,19,opt,name=unit_name,json=unitName,proto3" json:"unit_name"`                               //计量单位名称
	UnitType          string                 `protobuf:"bytes,20,opt,name=unit_type,json=unitType,proto3" json:"unit_type"`                               //计量单位类型
	DeductionType     string                 `protobuf:"bytes,21,opt,name=deduction_type,json=deductionType,proto3" json:"deduction_type"`                //库存扣减类型
	IsShelve          bool                   `protobuf:"varint,22,opt,name=is_shelve,json=isShelve,proto3" json:"is_shelve"`                              //是否上架
	IsBuyRight        bool                   `protobuf:"varint,23,opt,name=is_buy_right,json=isBuyRight,proto3" json:"is_buy_right"`                      //是否开启购买权限
	IsVipPrice        bool                   `protobuf:"varint,24,opt,name=is_vip_price,json=isVipPrice,proto3" json:"is_vip_price"`                      //是否开启会员价格
	VipProduct        bool                   `protobuf:"varint,25,opt,name=vip_product,json=vipProduct,proto3" json:"vip_product"`                        //VIP专属产品
	MinOriginalPrice  int64                  `protobuf:"varint,26,opt,name=min_original_price,json=minOriginalPrice,proto3" json:"min_original_price"`    //最低原价
	MaxOriginalPrice  int64                  `protobuf:"varint,27,opt,name=max_original_price,json=maxOriginalPrice,proto3" json:"max_original_price"`    //最大原价
	MinPrice          int64                  `protobuf:"varint,28,opt,name=min_price,json=minPrice,proto3" json:"min_price"`                              //最低价格
	MaxPrice          int64                  `protobuf:"varint,29,opt,name=max_price,json=maxPrice,proto3" json:"max_price"`                              //最高价格
	SliderImage       []string               `protobuf:"bytes,30,rep,name=slider_image,json=sliderImage,proto3" json:"slider_image"`                      //轮播图片
	Comments          int64                  `protobuf:"varint,31,opt,name=comments,proto3" json:"comments"`                                              //评论数量
	Browses           int64                  `protobuf:"varint,32,opt,name=browses,proto3" json:"browses"`                                                //访问次数
	Sales             int64                  `protobuf:"varint,33,opt,name=sales,proto3" json:"sales"`                                                    //实际销量
	Fictions          int64                  `protobuf:"varint,34,opt,name=fictions,proto3" json:"fictions"`                                              //虚拟销量
	MinQty            int64                  `protobuf:"varint,35,opt,name=min_qty,json=minQty,proto3" json:"min_qty"`                                    //起购数量
	IsLimit           bool                   `protobuf:"varint,36,opt,name=is_limit,json=isLimit,proto3" json:"is_limit"`                                 // 是否开启限购（0否, 1是）
	LimitType         string                 `protobuf:"bytes,37,opt,name=limit_type,json=limitType,proto3" json:"limit_type"`                            //限购类型: 1单次限购2永久限购
	LimitNum          int64                  `protobuf:"varint,38,opt,name=limit_num,json=limitNum,proto3" json:"limit_num"`                              //限购数量
	IsGift            bool                   `protobuf:"varint,39,opt,name=is_gift,json=isGift,proto3" json:"is_gift"`                                    //是否礼品
	GiftPrice         int64                  `protobuf:"varint,40,opt,name=gift_price,json=giftPrice,proto3" json:"gift_price"`                           //礼品附件费
	Logistics         []string               `protobuf:"bytes,41,rep,name=logistics,proto3" json:"logistics"`                                             //支持物流类型
	FreightType       string                 `protobuf:"bytes,42,opt,name=freight_type,json=freightType,proto3" json:"freight_type"`                      //快递运费类型
	FreightPrice      int64                  `protobuf:"varint,43,opt,name=freight_price,json=freightPrice,proto3" json:"freight_price"`                  //快递统一运费
	FreightTemplateId int64                  `protobuf:"varint,44,opt,name=freight_template_id,json=freightTemplateId,proto3" json:"freight_template_id"` //快递运费模板
	IsOversea         bool                   `protobuf:"varint,45,opt,name=is_oversea,json=isOversea,proto3" json:"is_oversea"`                           //是否海淘商品
	Sort              int32                  `protobuf:"varint,49,opt,name=sort,proto3" json:"sort"`                                                      //排序
	VirtualObjId      int64                  `protobuf:"varint,50,opt,name=virtual_obj_id,json=virtualObjId,proto3" json:"virtual_obj_id"`                //虚拟对象ID
	Status            string                 `protobuf:"bytes,52,opt,name=status,proto3" json:"status"`                                                   //商品状态
	AttrInfo          *ProductAttrInfo       `protobuf:"bytes,53,opt,name=attrInfo,proto3" json:"attrInfo"`
	IsPresale         bool                   `protobuf:"varint,54,opt,name=is_presale,json=isPresale,proto3" json:"is_presale"`
	// 额外扩展
	GoodsUrl      string `protobuf:"bytes,80,opt,name=goods_url,json=goodsUrl,proto3" json:"goods_url"`  //商品URL
	IsDelete      bool   `protobuf:"varint,81,opt,name=is_delete,json=isDelete,proto3" json:"is_delete"` //商品是否已删除（0否，1是）
	IsError       bool   `protobuf:"varint,82,opt,name=is_error,json=isError,proto3" json:"is_error"`    //是否错误（0否，1是）
	ErrorMsg      string `protobuf:"bytes,83,opt,name=error_msg,json=errorMsg,proto3" json:"error_msg"`  //错误信息
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Product) Reset() {
	*x = Product{}
	mi := &file_productService_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Product) ProtoMessage() {}

func (x *Product) ProtoReflect() protoreflect.Message {
	mi := &file_productService_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Product.ProtoReflect.Descriptor instead.
func (*Product) Descriptor() ([]byte, []int) {
	return file_productService_proto_rawDescGZIP(), []int{0}
}

func (x *Product) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Product) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Product) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *Product) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *Product) GetTaxonomyId() int64 {
	if x != nil {
		return x.TaxonomyId
	}
	return 0
}

func (x *Product) GetBrandId() int32 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *Product) GetSpuName() string {
	if x != nil {
		return x.SpuName
	}
	return ""
}

func (x *Product) GetSpuCode() string {
	if x != nil {
		return x.SpuCode
	}
	return ""
}

func (x *Product) GetSellMode() string {
	if x != nil {
		return x.SellMode
	}
	return ""
}

func (x *Product) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Product) GetVideo() string {
	if x != nil {
		return x.Video
	}
	return ""
}

func (x *Product) GetExplainVideo() string {
	if x != nil {
		return x.ExplainVideo
	}
	return ""
}

func (x *Product) GetIsVirtual() bool {
	if x != nil {
		return x.IsVirtual
	}
	return false
}

func (x *Product) GetVirtualType() string {
	if x != nil {
		return x.VirtualType
	}
	return ""
}

func (x *Product) GetIsManySpec() bool {
	if x != nil {
		return x.IsManySpec
	}
	return false
}

func (x *Product) GetIsOpenWeigh() bool {
	if x != nil {
		return x.IsOpenWeigh
	}
	return false
}

func (x *Product) GetIsMoreBarcode() bool {
	if x != nil {
		return x.IsMoreBarcode
	}
	return false
}

func (x *Product) GetUnitId() int32 {
	if x != nil {
		return x.UnitId
	}
	return 0
}

func (x *Product) GetUnitName() string {
	if x != nil {
		return x.UnitName
	}
	return ""
}

func (x *Product) GetUnitType() string {
	if x != nil {
		return x.UnitType
	}
	return ""
}

func (x *Product) GetDeductionType() string {
	if x != nil {
		return x.DeductionType
	}
	return ""
}

func (x *Product) GetIsShelve() bool {
	if x != nil {
		return x.IsShelve
	}
	return false
}

func (x *Product) GetIsBuyRight() bool {
	if x != nil {
		return x.IsBuyRight
	}
	return false
}

func (x *Product) GetIsVipPrice() bool {
	if x != nil {
		return x.IsVipPrice
	}
	return false
}

func (x *Product) GetVipProduct() bool {
	if x != nil {
		return x.VipProduct
	}
	return false
}

func (x *Product) GetMinOriginalPrice() int64 {
	if x != nil {
		return x.MinOriginalPrice
	}
	return 0
}

func (x *Product) GetMaxOriginalPrice() int64 {
	if x != nil {
		return x.MaxOriginalPrice
	}
	return 0
}

func (x *Product) GetMinPrice() int64 {
	if x != nil {
		return x.MinPrice
	}
	return 0
}

func (x *Product) GetMaxPrice() int64 {
	if x != nil {
		return x.MaxPrice
	}
	return 0
}

func (x *Product) GetSliderImage() []string {
	if x != nil {
		return x.SliderImage
	}
	return nil
}

func (x *Product) GetComments() int64 {
	if x != nil {
		return x.Comments
	}
	return 0
}

func (x *Product) GetBrowses() int64 {
	if x != nil {
		return x.Browses
	}
	return 0
}

func (x *Product) GetSales() int64 {
	if x != nil {
		return x.Sales
	}
	return 0
}

func (x *Product) GetFictions() int64 {
	if x != nil {
		return x.Fictions
	}
	return 0
}

func (x *Product) GetMinQty() int64 {
	if x != nil {
		return x.MinQty
	}
	return 0
}

func (x *Product) GetIsLimit() bool {
	if x != nil {
		return x.IsLimit
	}
	return false
}

func (x *Product) GetLimitType() string {
	if x != nil {
		return x.LimitType
	}
	return ""
}

func (x *Product) GetLimitNum() int64 {
	if x != nil {
		return x.LimitNum
	}
	return 0
}

func (x *Product) GetIsGift() bool {
	if x != nil {
		return x.IsGift
	}
	return false
}

func (x *Product) GetGiftPrice() int64 {
	if x != nil {
		return x.GiftPrice
	}
	return 0
}

func (x *Product) GetLogistics() []string {
	if x != nil {
		return x.Logistics
	}
	return nil
}

func (x *Product) GetFreightType() string {
	if x != nil {
		return x.FreightType
	}
	return ""
}

func (x *Product) GetFreightPrice() int64 {
	if x != nil {
		return x.FreightPrice
	}
	return 0
}

func (x *Product) GetFreightTemplateId() int64 {
	if x != nil {
		return x.FreightTemplateId
	}
	return 0
}

func (x *Product) GetIsOversea() bool {
	if x != nil {
		return x.IsOversea
	}
	return false
}

func (x *Product) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *Product) GetVirtualObjId() int64 {
	if x != nil {
		return x.VirtualObjId
	}
	return 0
}

func (x *Product) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Product) GetAttrInfo() *ProductAttrInfo {
	if x != nil {
		return x.AttrInfo
	}
	return nil
}

func (x *Product) GetIsPresale() bool {
	if x != nil {
		return x.IsPresale
	}
	return false
}

func (x *Product) GetGoodsUrl() string {
	if x != nil {
		return x.GoodsUrl
	}
	return ""
}

func (x *Product) GetIsDelete() bool {
	if x != nil {
		return x.IsDelete
	}
	return false
}

func (x *Product) GetIsError() bool {
	if x != nil {
		return x.IsError
	}
	return false
}

func (x *Product) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

type ProductAttrInfo struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                                          //SkuID
	SpuId            int64                  `protobuf:"varint,2,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`                                       //商品ID
	Unique           string                 `protobuf:"bytes,3,opt,name=unique,proto3" json:"unique"`                                                   //SKUKey
	Coding           string                 `protobuf:"bytes,4,opt,name=coding,proto3" json:"coding"`                                                   //编号
	Barcode          string                 `protobuf:"bytes,5,opt,name=barcode,proto3" json:"barcode"`                                                 //条码
	Image            string                 `protobuf:"bytes,6,opt,name=image,proto3" json:"image"`                                                     //商品规格图
	MoreBarcodes     []string               `protobuf:"bytes,7,rep,name=more_barcodes,json=moreBarcodes,proto3" json:"more_barcodes"`                   //更多条码
	OriginalPrice    int64                  `protobuf:"varint,8,opt,name=original_price,json=originalPrice,proto3" json:"original_price"`               //划线价
	CostPrice        int64                  `protobuf:"varint,9,opt,name=cost_price,json=costPrice,proto3" json:"cost_price"`                           //成本价
	Price            int64                  `protobuf:"varint,10,opt,name=price,proto3" json:"price"`                                                   //销售价
	VipPrice         int64                  `protobuf:"varint,11,opt,name=vip_price,json=vipPrice,proto3" json:"vip_price"`                             //VIP优惠金额
	PriceType        string                 `protobuf:"bytes,12,opt,name=price_type,json=priceType,proto3" json:"price_type"`                           //价格类型
	Inventory        int64                  `protobuf:"varint,13,opt,name=inventory,proto3" json:"inventory"`                                           //库存
	FrozenNum        int64                  `protobuf:"varint,14,opt,name=frozen_num,json=frozenNum,proto3" json:"frozen_num"`                          //冻结数量
	Weight           int64                  `protobuf:"varint,15,opt,name=weight,proto3" json:"weight"`                                                 //重量
	Volume           int64                  `protobuf:"varint,16,opt,name=volume,proto3" json:"volume"`                                                 //体积
	Spec             []*SkuSpecInfo         `protobuf:"bytes,17,rep,name=spec,proto3" json:"spec"`                                                      //规格信息
	SpecDesc         string                 `protobuf:"bytes,18,opt,name=spec_desc,json=specDesc,proto3" json:"spec_desc"`                              //规格描述
	VirtualObjSpecId int64                  `protobuf:"varint,19,opt,name=virtual_obj_spec_id,json=virtualObjSpecId,proto3" json:"virtual_obj_spec_id"` //虚拟对象规格ID
	OutSystemChildId string                 `protobuf:"bytes,20,opt,name=out_system_child_id,json=outSystemChildId,proto3" json:"out_system_child_id"`  //外部系统子ID
	CreatedAt        int64                  `protobuf:"varint,21,opt,name=created_at,json=createdAt,proto3" json:"created_at"`                          //创建时间
	UpdatedAt        int64                  `protobuf:"varint,22,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`                          //修改时间
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ProductAttrInfo) Reset() {
	*x = ProductAttrInfo{}
	mi := &file_productService_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductAttrInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductAttrInfo) ProtoMessage() {}

func (x *ProductAttrInfo) ProtoReflect() protoreflect.Message {
	mi := &file_productService_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductAttrInfo.ProtoReflect.Descriptor instead.
func (*ProductAttrInfo) Descriptor() ([]byte, []int) {
	return file_productService_proto_rawDescGZIP(), []int{1}
}

func (x *ProductAttrInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductAttrInfo) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *ProductAttrInfo) GetUnique() string {
	if x != nil {
		return x.Unique
	}
	return ""
}

func (x *ProductAttrInfo) GetCoding() string {
	if x != nil {
		return x.Coding
	}
	return ""
}

func (x *ProductAttrInfo) GetBarcode() string {
	if x != nil {
		return x.Barcode
	}
	return ""
}

func (x *ProductAttrInfo) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ProductAttrInfo) GetMoreBarcodes() []string {
	if x != nil {
		return x.MoreBarcodes
	}
	return nil
}

func (x *ProductAttrInfo) GetOriginalPrice() int64 {
	if x != nil {
		return x.OriginalPrice
	}
	return 0
}

func (x *ProductAttrInfo) GetCostPrice() int64 {
	if x != nil {
		return x.CostPrice
	}
	return 0
}

func (x *ProductAttrInfo) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ProductAttrInfo) GetVipPrice() int64 {
	if x != nil {
		return x.VipPrice
	}
	return 0
}

func (x *ProductAttrInfo) GetPriceType() string {
	if x != nil {
		return x.PriceType
	}
	return ""
}

func (x *ProductAttrInfo) GetInventory() int64 {
	if x != nil {
		return x.Inventory
	}
	return 0
}

func (x *ProductAttrInfo) GetFrozenNum() int64 {
	if x != nil {
		return x.FrozenNum
	}
	return 0
}

func (x *ProductAttrInfo) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *ProductAttrInfo) GetVolume() int64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *ProductAttrInfo) GetSpec() []*SkuSpecInfo {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *ProductAttrInfo) GetSpecDesc() string {
	if x != nil {
		return x.SpecDesc
	}
	return ""
}

func (x *ProductAttrInfo) GetVirtualObjSpecId() int64 {
	if x != nil {
		return x.VirtualObjSpecId
	}
	return 0
}

func (x *ProductAttrInfo) GetOutSystemChildId() string {
	if x != nil {
		return x.OutSystemChildId
	}
	return ""
}

func (x *ProductAttrInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ProductAttrInfo) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type ProductRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Top           int32                  `protobuf:"varint,1,opt,name=top,proto3" json:"top"`
	Paged         int64                  `protobuf:"varint,2,opt,name=paged,proto3" json:"paged"`
	PageSize      int64                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords      string                 `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords"`
	Sorts         []string               `protobuf:"bytes,5,rep,name=sorts,proto3" json:"sorts"`
	DateRange     []string               `protobuf:"bytes,6,rep,name=date_range,json=dateRange,proto3" json:"date_range"`
	Ids           []int64                `protobuf:"varint,7,rep,packed,name=ids,proto3" json:"ids"`
	Id            int64                  `protobuf:"varint,8,opt,name=id,proto3" json:"id"`
	Command       string                 `protobuf:"bytes,9,opt,name=command,proto3" json:"command"`
	SkuId         int64                  `protobuf:"varint,10,opt,name=sku_id,json=skuId,proto3" json:"sku_id"`
	Unique        string                 `protobuf:"bytes,11,opt,name=unique,proto3" json:"unique"`
	SpuId         int64                  `protobuf:"varint,12,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`
	Coding        string                 `protobuf:"bytes,13,opt,name=coding,proto3" json:"coding"`
	SpuName       string                 `protobuf:"bytes,14,opt,name=spu_name,json=spuName,proto3" json:"spu_name"`
	Type          string                 `protobuf:"bytes,15,opt,name=type,proto3" json:"type"`
	TaxonomyId    int64                  `protobuf:"varint,16,opt,name=taxonomy_id,json=taxonomyId,proto3" json:"taxonomy_id"`
	CategoryId    int64                  `protobuf:"varint,17,opt,name=category_id,json=categoryId,proto3" json:"category_id"`
	GroupId       int64                  `protobuf:"varint,18,opt,name=group_id,json=groupId,proto3" json:"group_id"`
	GroupName     string                 `protobuf:"bytes,19,opt,name=group_name,json=groupName,proto3" json:"group_name"`
	BrandId       int32                  `protobuf:"varint,20,opt,name=brand_id,json=brandId,proto3" json:"brand_id"`
	ShopId        int64                  `protobuf:"varint,21,opt,name=shop_id,json=shopId,proto3" json:"shop_id"`
	Status        string                 `protobuf:"bytes,22,opt,name=status,proto3" json:"status"`
	ParamId       int32                  `protobuf:"varint,23,opt,name=param_id,json=paramId,proto3" json:"param_id"`
	ParamValue    string                 `protobuf:"bytes,24,opt,name=param_value,json=paramValue,proto3" json:"param_value"`
	LabelId       int32                  `protobuf:"varint,25,opt,name=label_id,json=labelId,proto3" json:"label_id"`
	LabelName     string                 `protobuf:"bytes,26,opt,name=label_name,json=labelName,proto3" json:"label_name"`
	SiteType      string                 `protobuf:"bytes,27,opt,name=site_type,json=siteType,proto3" json:"site_type"`
	SpuIds        []int64                `protobuf:"varint,28,rep,packed,name=spu_ids,json=spuIds,proto3" json:"spu_ids"`
	SkuIds        []int64                `protobuf:"varint,29,rep,packed,name=sku_ids,json=skuIds,proto3" json:"sku_ids"`
	BrandIds      []int64                `protobuf:"varint,30,rep,packed,name=brand_ids,json=brandIds,proto3" json:"brand_ids"`
	LabelIds      []int64                `protobuf:"varint,31,rep,packed,name=label_ids,json=labelIds,proto3" json:"label_ids"`
	GroupIds      []int64                `protobuf:"varint,32,rep,packed,name=group_ids,json=groupIds,proto3" json:"group_ids"`
	IsManySpec    string                 `protobuf:"bytes,33,opt,name=is_many_spec,json=isManySpec,proto3" json:"is_many_spec"`       //是否多规格商品,否则为单品(0否，1是)
	IsOpenWeight  string                 `protobuf:"bytes,34,opt,name=is_open_weight,json=isOpenWeight,proto3" json:"is_open_weight"` //
	IsShelve      string                 `protobuf:"bytes,35,opt,name=is_shelve,json=isShelve,proto3" json:"is_shelve"`
	UniqueList    []string               `protobuf:"bytes,36,rep,name=unique_list,json=uniqueList,proto3" json:"unique_list"`
	IsQueryDelete string                 `protobuf:"bytes,37,opt,name=is_query_delete,json=isQueryDelete,proto3" json:"is_query_delete"` //是否查询已删除（0否，1是）
	VipLevelId    int32                  `protobuf:"varint,38,opt,name=vip_level_id,json=vipLevelId,proto3" json:"vip_level_id"`         //等级会员ID
	VipDiscount   float32                `protobuf:"fixed32,39,opt,name=vip_discount,json=vipDiscount,proto3" json:"vip_discount"`       //等级会员折扣
	SvipLevelId   int32                  `protobuf:"varint,40,opt,name=svip_level_id,json=svipLevelId,proto3" json:"svip_level_id"`      //付费会员ID
	SvipDiscount  float32                `protobuf:"fixed32,41,opt,name=svip_discount,json=svipDiscount,proto3" json:"svip_discount"`    //付费折扣率
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProductRequest) Reset() {
	*x = ProductRequest{}
	mi := &file_productService_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductRequest) ProtoMessage() {}

func (x *ProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_productService_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductRequest.ProtoReflect.Descriptor instead.
func (*ProductRequest) Descriptor() ([]byte, []int) {
	return file_productService_proto_rawDescGZIP(), []int{2}
}

func (x *ProductRequest) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *ProductRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *ProductRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ProductRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *ProductRequest) GetSorts() []string {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *ProductRequest) GetDateRange() []string {
	if x != nil {
		return x.DateRange
	}
	return nil
}

func (x *ProductRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ProductRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ProductRequest) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *ProductRequest) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *ProductRequest) GetUnique() string {
	if x != nil {
		return x.Unique
	}
	return ""
}

func (x *ProductRequest) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *ProductRequest) GetCoding() string {
	if x != nil {
		return x.Coding
	}
	return ""
}

func (x *ProductRequest) GetSpuName() string {
	if x != nil {
		return x.SpuName
	}
	return ""
}

func (x *ProductRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ProductRequest) GetTaxonomyId() int64 {
	if x != nil {
		return x.TaxonomyId
	}
	return 0
}

func (x *ProductRequest) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *ProductRequest) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *ProductRequest) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *ProductRequest) GetBrandId() int32 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *ProductRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *ProductRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ProductRequest) GetParamId() int32 {
	if x != nil {
		return x.ParamId
	}
	return 0
}

func (x *ProductRequest) GetParamValue() string {
	if x != nil {
		return x.ParamValue
	}
	return ""
}

func (x *ProductRequest) GetLabelId() int32 {
	if x != nil {
		return x.LabelId
	}
	return 0
}

func (x *ProductRequest) GetLabelName() string {
	if x != nil {
		return x.LabelName
	}
	return ""
}

func (x *ProductRequest) GetSiteType() string {
	if x != nil {
		return x.SiteType
	}
	return ""
}

func (x *ProductRequest) GetSpuIds() []int64 {
	if x != nil {
		return x.SpuIds
	}
	return nil
}

func (x *ProductRequest) GetSkuIds() []int64 {
	if x != nil {
		return x.SkuIds
	}
	return nil
}

func (x *ProductRequest) GetBrandIds() []int64 {
	if x != nil {
		return x.BrandIds
	}
	return nil
}

func (x *ProductRequest) GetLabelIds() []int64 {
	if x != nil {
		return x.LabelIds
	}
	return nil
}

func (x *ProductRequest) GetGroupIds() []int64 {
	if x != nil {
		return x.GroupIds
	}
	return nil
}

func (x *ProductRequest) GetIsManySpec() string {
	if x != nil {
		return x.IsManySpec
	}
	return ""
}

func (x *ProductRequest) GetIsOpenWeight() string {
	if x != nil {
		return x.IsOpenWeight
	}
	return ""
}

func (x *ProductRequest) GetIsShelve() string {
	if x != nil {
		return x.IsShelve
	}
	return ""
}

func (x *ProductRequest) GetUniqueList() []string {
	if x != nil {
		return x.UniqueList
	}
	return nil
}

func (x *ProductRequest) GetIsQueryDelete() string {
	if x != nil {
		return x.IsQueryDelete
	}
	return ""
}

func (x *ProductRequest) GetVipLevelId() int32 {
	if x != nil {
		return x.VipLevelId
	}
	return 0
}

func (x *ProductRequest) GetVipDiscount() float32 {
	if x != nil {
		return x.VipDiscount
	}
	return 0
}

func (x *ProductRequest) GetSvipLevelId() int32 {
	if x != nil {
		return x.SvipLevelId
	}
	return 0
}

func (x *ProductRequest) GetSvipDiscount() float32 {
	if x != nil {
		return x.SvipDiscount
	}
	return 0
}

type ProductResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entity        *Product               `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager         *common.Pager          `protobuf:"bytes,3,opt,name=pager,proto3" json:"pager"`
	Items         []*Product             `protobuf:"bytes,4,rep,name=items,proto3" json:"items"`
	Msg           string                 `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProductResponse) Reset() {
	*x = ProductResponse{}
	mi := &file_productService_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductResponse) ProtoMessage() {}

func (x *ProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_productService_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductResponse.ProtoReflect.Descriptor instead.
func (*ProductResponse) Descriptor() ([]byte, []int) {
	return file_productService_proto_rawDescGZIP(), []int{3}
}

func (x *ProductResponse) GetEntity() *Product {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *ProductResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *ProductResponse) GetItems() []*Product {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ProductResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_productService_proto protoreflect.FileDescriptor

const file_productService_proto_rawDesc = "" +
	"\n" +
	"\x14productService.proto\x12\bservices\x1a\x11common/base.proto\x1a\x15baseInfoService.proto\"\x8b\r\n" +
	"\aProduct\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x17\n" +
	"\ashop_id\x18\x03 \x01(\x03R\x06shopId\x12\x1f\n" +
	"\vcategory_id\x18\x04 \x01(\x03R\n" +
	"categoryId\x12\x1f\n" +
	"\vtaxonomy_id\x18\x05 \x01(\x03R\n" +
	"taxonomyId\x12\x19\n" +
	"\bbrand_id\x18\x06 \x01(\x05R\abrandId\x12\x19\n" +
	"\bspu_name\x18\a \x01(\tR\aspuName\x12\x19\n" +
	"\bspu_code\x18\b \x01(\tR\aspuCode\x12\x1b\n" +
	"\tsell_mode\x18\t \x01(\tR\bsellMode\x12\x14\n" +
	"\x05image\x18\n" +
	" \x01(\tR\x05image\x12\x14\n" +
	"\x05video\x18\v \x01(\tR\x05video\x12#\n" +
	"\rexplain_video\x18\f \x01(\tR\fexplainVideo\x12\x1d\n" +
	"\n" +
	"is_virtual\x18\r \x01(\bR\tisVirtual\x12!\n" +
	"\fvirtual_type\x18\x0e \x01(\tR\vvirtualType\x12 \n" +
	"\fis_many_spec\x18\x0f \x01(\bR\n" +
	"isManySpec\x12\"\n" +
	"\ris_open_weigh\x18\x10 \x01(\bR\visOpenWeigh\x12&\n" +
	"\x0fis_more_barcode\x18\x11 \x01(\bR\risMoreBarcode\x12\x17\n" +
	"\aunit_id\x18\x12 \x01(\x05R\x06unitId\x12\x1b\n" +
	"\tunit_name\x18\x13 \x01(\tR\bunitName\x12\x1b\n" +
	"\tunit_type\x18\x14 \x01(\tR\bunitType\x12%\n" +
	"\x0ededuction_type\x18\x15 \x01(\tR\rdeductionType\x12\x1b\n" +
	"\tis_shelve\x18\x16 \x01(\bR\bisShelve\x12 \n" +
	"\fis_buy_right\x18\x17 \x01(\bR\n" +
	"isBuyRight\x12 \n" +
	"\fis_vip_price\x18\x18 \x01(\bR\n" +
	"isVipPrice\x12\x1f\n" +
	"\vvip_product\x18\x19 \x01(\bR\n" +
	"vipProduct\x12,\n" +
	"\x12min_original_price\x18\x1a \x01(\x03R\x10minOriginalPrice\x12,\n" +
	"\x12max_original_price\x18\x1b \x01(\x03R\x10maxOriginalPrice\x12\x1b\n" +
	"\tmin_price\x18\x1c \x01(\x03R\bminPrice\x12\x1b\n" +
	"\tmax_price\x18\x1d \x01(\x03R\bmaxPrice\x12!\n" +
	"\fslider_image\x18\x1e \x03(\tR\vsliderImage\x12\x1a\n" +
	"\bcomments\x18\x1f \x01(\x03R\bcomments\x12\x18\n" +
	"\abrowses\x18  \x01(\x03R\abrowses\x12\x14\n" +
	"\x05sales\x18! \x01(\x03R\x05sales\x12\x1a\n" +
	"\bfictions\x18\" \x01(\x03R\bfictions\x12\x17\n" +
	"\amin_qty\x18# \x01(\x03R\x06minQty\x12\x19\n" +
	"\bis_limit\x18$ \x01(\bR\aisLimit\x12\x1d\n" +
	"\n" +
	"limit_type\x18% \x01(\tR\tlimitType\x12\x1b\n" +
	"\tlimit_num\x18& \x01(\x03R\blimitNum\x12\x17\n" +
	"\ais_gift\x18' \x01(\bR\x06isGift\x12\x1d\n" +
	"\n" +
	"gift_price\x18( \x01(\x03R\tgiftPrice\x12\x1c\n" +
	"\tlogistics\x18) \x03(\tR\tlogistics\x12!\n" +
	"\ffreight_type\x18* \x01(\tR\vfreightType\x12#\n" +
	"\rfreight_price\x18+ \x01(\x03R\ffreightPrice\x12.\n" +
	"\x13freight_template_id\x18, \x01(\x03R\x11freightTemplateId\x12\x1d\n" +
	"\n" +
	"is_oversea\x18- \x01(\bR\tisOversea\x12\x12\n" +
	"\x04sort\x181 \x01(\x05R\x04sort\x12$\n" +
	"\x0evirtual_obj_id\x182 \x01(\x03R\fvirtualObjId\x12\x16\n" +
	"\x06status\x184 \x01(\tR\x06status\x125\n" +
	"\battrInfo\x185 \x01(\v2\x19.services.ProductAttrInfoR\battrInfo\x12\x1d\n" +
	"\n" +
	"is_presale\x186 \x01(\bR\tisPresale\x12\x1b\n" +
	"\tgoods_url\x18P \x01(\tR\bgoodsUrl\x12\x1b\n" +
	"\tis_delete\x18Q \x01(\bR\bisDelete\x12\x19\n" +
	"\bis_error\x18R \x01(\bR\aisError\x12\x1b\n" +
	"\terror_msg\x18S \x01(\tR\berrorMsg\"\xa6\x05\n" +
	"\x0fProductAttrInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x15\n" +
	"\x06spu_id\x18\x02 \x01(\x03R\x05spuId\x12\x16\n" +
	"\x06unique\x18\x03 \x01(\tR\x06unique\x12\x16\n" +
	"\x06coding\x18\x04 \x01(\tR\x06coding\x12\x18\n" +
	"\abarcode\x18\x05 \x01(\tR\abarcode\x12\x14\n" +
	"\x05image\x18\x06 \x01(\tR\x05image\x12#\n" +
	"\rmore_barcodes\x18\a \x03(\tR\fmoreBarcodes\x12%\n" +
	"\x0eoriginal_price\x18\b \x01(\x03R\roriginalPrice\x12\x1d\n" +
	"\n" +
	"cost_price\x18\t \x01(\x03R\tcostPrice\x12\x14\n" +
	"\x05price\x18\n" +
	" \x01(\x03R\x05price\x12\x1b\n" +
	"\tvip_price\x18\v \x01(\x03R\bvipPrice\x12\x1d\n" +
	"\n" +
	"price_type\x18\f \x01(\tR\tpriceType\x12\x1c\n" +
	"\tinventory\x18\r \x01(\x03R\tinventory\x12\x1d\n" +
	"\n" +
	"frozen_num\x18\x0e \x01(\x03R\tfrozenNum\x12\x16\n" +
	"\x06weight\x18\x0f \x01(\x03R\x06weight\x12\x16\n" +
	"\x06volume\x18\x10 \x01(\x03R\x06volume\x12)\n" +
	"\x04spec\x18\x11 \x03(\v2\x15.services.SkuSpecInfoR\x04spec\x12\x1b\n" +
	"\tspec_desc\x18\x12 \x01(\tR\bspecDesc\x12-\n" +
	"\x13virtual_obj_spec_id\x18\x13 \x01(\x03R\x10virtualObjSpecId\x12-\n" +
	"\x13out_system_child_id\x18\x14 \x01(\tR\x10outSystemChildId\x12\x1d\n" +
	"\n" +
	"created_at\x18\x15 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x16 \x01(\x03R\tupdatedAt\"\x8f\t\n" +
	"\x0eProductRequest\x12\x10\n" +
	"\x03top\x18\x01 \x01(\x05R\x03top\x12\x14\n" +
	"\x05paged\x18\x02 \x01(\x03R\x05paged\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x03R\bpageSize\x12\x1a\n" +
	"\bkeywords\x18\x04 \x01(\tR\bkeywords\x12\x14\n" +
	"\x05sorts\x18\x05 \x03(\tR\x05sorts\x12\x1d\n" +
	"\n" +
	"date_range\x18\x06 \x03(\tR\tdateRange\x12\x10\n" +
	"\x03ids\x18\a \x03(\x03R\x03ids\x12\x0e\n" +
	"\x02id\x18\b \x01(\x03R\x02id\x12\x18\n" +
	"\acommand\x18\t \x01(\tR\acommand\x12\x15\n" +
	"\x06sku_id\x18\n" +
	" \x01(\x03R\x05skuId\x12\x16\n" +
	"\x06unique\x18\v \x01(\tR\x06unique\x12\x15\n" +
	"\x06spu_id\x18\f \x01(\x03R\x05spuId\x12\x16\n" +
	"\x06coding\x18\r \x01(\tR\x06coding\x12\x19\n" +
	"\bspu_name\x18\x0e \x01(\tR\aspuName\x12\x12\n" +
	"\x04type\x18\x0f \x01(\tR\x04type\x12\x1f\n" +
	"\vtaxonomy_id\x18\x10 \x01(\x03R\n" +
	"taxonomyId\x12\x1f\n" +
	"\vcategory_id\x18\x11 \x01(\x03R\n" +
	"categoryId\x12\x19\n" +
	"\bgroup_id\x18\x12 \x01(\x03R\agroupId\x12\x1d\n" +
	"\n" +
	"group_name\x18\x13 \x01(\tR\tgroupName\x12\x19\n" +
	"\bbrand_id\x18\x14 \x01(\x05R\abrandId\x12\x17\n" +
	"\ashop_id\x18\x15 \x01(\x03R\x06shopId\x12\x16\n" +
	"\x06status\x18\x16 \x01(\tR\x06status\x12\x19\n" +
	"\bparam_id\x18\x17 \x01(\x05R\aparamId\x12\x1f\n" +
	"\vparam_value\x18\x18 \x01(\tR\n" +
	"paramValue\x12\x19\n" +
	"\blabel_id\x18\x19 \x01(\x05R\alabelId\x12\x1d\n" +
	"\n" +
	"label_name\x18\x1a \x01(\tR\tlabelName\x12\x1b\n" +
	"\tsite_type\x18\x1b \x01(\tR\bsiteType\x12\x17\n" +
	"\aspu_ids\x18\x1c \x03(\x03R\x06spuIds\x12\x17\n" +
	"\asku_ids\x18\x1d \x03(\x03R\x06skuIds\x12\x1b\n" +
	"\tbrand_ids\x18\x1e \x03(\x03R\bbrandIds\x12\x1b\n" +
	"\tlabel_ids\x18\x1f \x03(\x03R\blabelIds\x12\x1b\n" +
	"\tgroup_ids\x18  \x03(\x03R\bgroupIds\x12 \n" +
	"\fis_many_spec\x18! \x01(\tR\n" +
	"isManySpec\x12$\n" +
	"\x0eis_open_weight\x18\" \x01(\tR\fisOpenWeight\x12\x1b\n" +
	"\tis_shelve\x18# \x01(\tR\bisShelve\x12\x1f\n" +
	"\vunique_list\x18$ \x03(\tR\n" +
	"uniqueList\x12&\n" +
	"\x0fis_query_delete\x18% \x01(\tR\risQueryDelete\x12 \n" +
	"\fvip_level_id\x18& \x01(\x05R\n" +
	"vipLevelId\x12!\n" +
	"\fvip_discount\x18' \x01(\x02R\vvipDiscount\x12\"\n" +
	"\rsvip_level_id\x18( \x01(\x05R\vsvipLevelId\x12#\n" +
	"\rsvip_discount\x18) \x01(\x02R\fsvipDiscount\"\x9c\x01\n" +
	"\x0fProductResponse\x12)\n" +
	"\x06entity\x18\x01 \x01(\v2\x11.services.ProductR\x06entity\x12#\n" +
	"\x05pager\x18\x03 \x01(\v2\r.common.PagerR\x05pager\x12'\n" +
	"\x05items\x18\x04 \x03(\v2\x11.services.ProductR\x05items\x12\x10\n" +
	"\x03msg\x18\x05 \x01(\tR\x03msg2\xcb\x01\n" +
	"\x0eProductService\x12=\n" +
	"\x06Detail\x12\x18.services.ProductRequest\x1a\x19.services.ProductResponse\x12;\n" +
	"\x04List\x12\x18.services.ProductRequest\x1a\x19.services.ProductResponse\x12=\n" +
	"\x06Search\x12\x18.services.ProductRequest\x1a\x19.services.ProductResponseB\rZ\v/.;servicesb\x06proto3"

var (
	file_productService_proto_rawDescOnce sync.Once
	file_productService_proto_rawDescData []byte
)

func file_productService_proto_rawDescGZIP() []byte {
	file_productService_proto_rawDescOnce.Do(func() {
		file_productService_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_productService_proto_rawDesc), len(file_productService_proto_rawDesc)))
	})
	return file_productService_proto_rawDescData
}

var file_productService_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_productService_proto_goTypes = []any{
	(*Product)(nil),         // 0: services.Product
	(*ProductAttrInfo)(nil), // 1: services.ProductAttrInfo
	(*ProductRequest)(nil),  // 2: services.ProductRequest
	(*ProductResponse)(nil), // 3: services.ProductResponse
	(*SkuSpecInfo)(nil),     // 4: services.SkuSpecInfo
	(*common.Pager)(nil),    // 5: common.Pager
}
var file_productService_proto_depIdxs = []int32{
	1, // 0: services.Product.attrInfo:type_name -> services.ProductAttrInfo
	4, // 1: services.ProductAttrInfo.spec:type_name -> services.SkuSpecInfo
	0, // 2: services.ProductResponse.entity:type_name -> services.Product
	5, // 3: services.ProductResponse.pager:type_name -> common.Pager
	0, // 4: services.ProductResponse.items:type_name -> services.Product
	2, // 5: services.ProductService.Detail:input_type -> services.ProductRequest
	2, // 6: services.ProductService.List:input_type -> services.ProductRequest
	2, // 7: services.ProductService.Search:input_type -> services.ProductRequest
	3, // 8: services.ProductService.Detail:output_type -> services.ProductResponse
	3, // 9: services.ProductService.List:output_type -> services.ProductResponse
	3, // 10: services.ProductService.Search:output_type -> services.ProductResponse
	8, // [8:11] is the sub-list for method output_type
	5, // [5:8] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_productService_proto_init() }
func file_productService_proto_init() {
	if File_productService_proto != nil {
		return
	}
	file_baseInfoService_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_productService_proto_rawDesc), len(file_productService_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_productService_proto_goTypes,
		DependencyIndexes: file_productService_proto_depIdxs,
		MessageInfos:      file_productService_proto_msgTypes,
	}.Build()
	File_productService_proto = out.File
	file_productService_proto_goTypes = nil
	file_productService_proto_depIdxs = nil
}
