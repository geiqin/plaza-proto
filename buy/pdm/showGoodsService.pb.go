// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: showGoodsService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ShowRealPriceData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsVip         bool                   `protobuf:"varint,1,opt,name=is_vip,json=isVip,proto3" json:"is_vip"`
	LevelPrice    int64                  `protobuf:"varint,2,opt,name=level_price,json=levelPrice,proto3" json:"level_price"`
	MemberPrice   int64                  `protobuf:"varint,3,opt,name=member_price,json=memberPrice,proto3" json:"member_price"`
	Price         int64                  `protobuf:"varint,4,opt,name=price,proto3" json:"price"`
	ProductIsVip  bool                   `protobuf:"varint,5,opt,name=product_is_vip,json=productIsVip,proto3" json:"product_is_vip"`
	RealPrice     int64                  `protobuf:"varint,6,opt,name=real_price,json=realPrice,proto3" json:"real_price"`
	UserIsMember  bool                   `protobuf:"varint,7,opt,name=user_is_member,json=userIsMember,proto3" json:"user_is_member"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShowRealPriceData) Reset() {
	*x = ShowRealPriceData{}
	mi := &file_showGoodsService_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShowRealPriceData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowRealPriceData) ProtoMessage() {}

func (x *ShowRealPriceData) ProtoReflect() protoreflect.Message {
	mi := &file_showGoodsService_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowRealPriceData.ProtoReflect.Descriptor instead.
func (*ShowRealPriceData) Descriptor() ([]byte, []int) {
	return file_showGoodsService_proto_rawDescGZIP(), []int{0}
}

func (x *ShowRealPriceData) GetIsVip() bool {
	if x != nil {
		return x.IsVip
	}
	return false
}

func (x *ShowRealPriceData) GetLevelPrice() int64 {
	if x != nil {
		return x.LevelPrice
	}
	return 0
}

func (x *ShowRealPriceData) GetMemberPrice() int64 {
	if x != nil {
		return x.MemberPrice
	}
	return 0
}

func (x *ShowRealPriceData) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ShowRealPriceData) GetProductIsVip() bool {
	if x != nil {
		return x.ProductIsVip
	}
	return false
}

func (x *ShowRealPriceData) GetRealPrice() int64 {
	if x != nil {
		return x.RealPrice
	}
	return 0
}

func (x *ShowRealPriceData) GetUserIsMember() bool {
	if x != nil {
		return x.UserIsMember
	}
	return false
}

type ShowQrcodeData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url"`
	Code          []byte                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShowQrcodeData) Reset() {
	*x = ShowQrcodeData{}
	mi := &file_showGoodsService_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShowQrcodeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowQrcodeData) ProtoMessage() {}

func (x *ShowQrcodeData) ProtoReflect() protoreflect.Message {
	mi := &file_showGoodsService_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowQrcodeData.ProtoReflect.Descriptor instead.
func (*ShowQrcodeData) Descriptor() ([]byte, []int) {
	return file_showGoodsService_proto_rawDescGZIP(), []int{1}
}

func (x *ShowQrcodeData) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ShowQrcodeData) GetCode() []byte {
	if x != nil {
		return x.Code
	}
	return nil
}

type ShowPosterData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url"`
	Code          []byte                 `protobuf:"bytes,2,opt,name=code,proto3" json:"code"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShowPosterData) Reset() {
	*x = ShowPosterData{}
	mi := &file_showGoodsService_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShowPosterData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowPosterData) ProtoMessage() {}

func (x *ShowPosterData) ProtoReflect() protoreflect.Message {
	mi := &file_showGoodsService_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowPosterData.ProtoReflect.Descriptor instead.
func (*ShowPosterData) Descriptor() ([]byte, []int) {
	return file_showGoodsService_proto_rawDescGZIP(), []int{2}
}

func (x *ShowPosterData) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ShowPosterData) GetCode() []byte {
	if x != nil {
		return x.Code
	}
	return nil
}

// 商品属性数据
type ShowGetAttrData struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	GoodsInfo     *ShowGoodsSpu            `protobuf:"bytes,1,opt,name=goodsInfo,proto3" json:"goodsInfo"`
	ProductAttr   []*ShowGoodsAttr         `protobuf:"bytes,2,rep,name=productAttr,proto3" json:"productAttr"`
	ProductValue  map[string]*ShowGoodsSku `protobuf:"bytes,3,rep,name=productValue,proto3" json:"productValue" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShowGetAttrData) Reset() {
	*x = ShowGetAttrData{}
	mi := &file_showGoodsService_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShowGetAttrData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowGetAttrData) ProtoMessage() {}

func (x *ShowGetAttrData) ProtoReflect() protoreflect.Message {
	mi := &file_showGoodsService_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowGetAttrData.ProtoReflect.Descriptor instead.
func (*ShowGetAttrData) Descriptor() ([]byte, []int) {
	return file_showGoodsService_proto_rawDescGZIP(), []int{3}
}

func (x *ShowGetAttrData) GetGoodsInfo() *ShowGoodsSpu {
	if x != nil {
		return x.GoodsInfo
	}
	return nil
}

func (x *ShowGetAttrData) GetProductAttr() []*ShowGoodsAttr {
	if x != nil {
		return x.ProductAttr
	}
	return nil
}

func (x *ShowGetAttrData) GetProductValue() map[string]*ShowGoodsSku {
	if x != nil {
		return x.ProductValue
	}
	return nil
}

// 显示商品数据
type ShowDetailData struct {
	state              protoimpl.MessageState   `protogen:"open.v1"`
	Uid                int64                    `protobuf:"varint,1,opt,name=uid,proto3" json:"uid"`
	SvipOpen           bool                     `protobuf:"varint,2,opt,name=svip_open,json=svipOpen,proto3" json:"svip_open"`
	SvipPriceOpen      bool                     `protobuf:"varint,3,opt,name=svip_price_open,json=svipPriceOpen,proto3" json:"svip_price_open"`
	StoreSelfMention   bool                     `protobuf:"varint,4,opt,name=store_self_mention,json=storeSelfMention,proto3" json:"store_self_mention"`
	PriceName          string                   `protobuf:"bytes,5,opt,name=priceName,proto3" json:"priceName"`
	Reply              []byte                   `protobuf:"bytes,6,opt,name=reply,proto3" json:"reply"`
	ReplyChance        int64                    `protobuf:"varint,7,opt,name=replyChance,proto3" json:"replyChance"`
	ReplyCount         int64                    `protobuf:"varint,8,opt,name=replyCount,proto3" json:"replyCount"`
	MerId              int64                    `protobuf:"varint,9,opt,name=mer_id,json=merId,proto3" json:"mer_id"`
	GoodsInfo          *ShowGoodsSpu            `protobuf:"bytes,12,opt,name=goodsInfo,proto3" json:"goodsInfo"`
	ProductAttr        []*ShowGoodsAttr         `protobuf:"bytes,13,rep,name=productAttr,proto3" json:"productAttr"`
	ProductValue       map[string]*ShowGoodsSku `protobuf:"bytes,14,rep,name=productValue,proto3" json:"productValue" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	GoodList           []*ShowGoodsInfo         `protobuf:"bytes,15,rep,name=good_list,json=goodList,proto3" json:"good_list"` //优品推荐
	RealstoreInfo      []byte                   `protobuf:"bytes,19,opt,name=realstoreInfo,proto3" json:"realstoreInfo"`       //门店信息
	Coupons            []byte                   `protobuf:"bytes,20,opt,name=coupons,proto3" json:"coupons"`
	Activity           []byte                   `protobuf:"bytes,21,opt,name=activity,proto3" json:"activity"`
	MapKey             string                   `protobuf:"bytes,22,opt,name=mapKey,proto3" json:"mapKey"`
	RoutineContactType string                   `protobuf:"bytes,23,opt,name=routine_contact_type,json=routineContactType,proto3" json:"routine_contact_type"`
	SpecUnique         string                   `protobuf:"bytes,24,opt,name=spec_unique,json=specUnique,proto3" json:"spec_unique"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ShowDetailData) Reset() {
	*x = ShowDetailData{}
	mi := &file_showGoodsService_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShowDetailData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowDetailData) ProtoMessage() {}

func (x *ShowDetailData) ProtoReflect() protoreflect.Message {
	mi := &file_showGoodsService_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowDetailData.ProtoReflect.Descriptor instead.
func (*ShowDetailData) Descriptor() ([]byte, []int) {
	return file_showGoodsService_proto_rawDescGZIP(), []int{4}
}

func (x *ShowDetailData) GetUid() int64 {
	if x != nil {
		return x.Uid
	}
	return 0
}

func (x *ShowDetailData) GetSvipOpen() bool {
	if x != nil {
		return x.SvipOpen
	}
	return false
}

func (x *ShowDetailData) GetSvipPriceOpen() bool {
	if x != nil {
		return x.SvipPriceOpen
	}
	return false
}

func (x *ShowDetailData) GetStoreSelfMention() bool {
	if x != nil {
		return x.StoreSelfMention
	}
	return false
}

func (x *ShowDetailData) GetPriceName() string {
	if x != nil {
		return x.PriceName
	}
	return ""
}

func (x *ShowDetailData) GetReply() []byte {
	if x != nil {
		return x.Reply
	}
	return nil
}

func (x *ShowDetailData) GetReplyChance() int64 {
	if x != nil {
		return x.ReplyChance
	}
	return 0
}

func (x *ShowDetailData) GetReplyCount() int64 {
	if x != nil {
		return x.ReplyCount
	}
	return 0
}

func (x *ShowDetailData) GetMerId() int64 {
	if x != nil {
		return x.MerId
	}
	return 0
}

func (x *ShowDetailData) GetGoodsInfo() *ShowGoodsSpu {
	if x != nil {
		return x.GoodsInfo
	}
	return nil
}

func (x *ShowDetailData) GetProductAttr() []*ShowGoodsAttr {
	if x != nil {
		return x.ProductAttr
	}
	return nil
}

func (x *ShowDetailData) GetProductValue() map[string]*ShowGoodsSku {
	if x != nil {
		return x.ProductValue
	}
	return nil
}

func (x *ShowDetailData) GetGoodList() []*ShowGoodsInfo {
	if x != nil {
		return x.GoodList
	}
	return nil
}

func (x *ShowDetailData) GetRealstoreInfo() []byte {
	if x != nil {
		return x.RealstoreInfo
	}
	return nil
}

func (x *ShowDetailData) GetCoupons() []byte {
	if x != nil {
		return x.Coupons
	}
	return nil
}

func (x *ShowDetailData) GetActivity() []byte {
	if x != nil {
		return x.Activity
	}
	return nil
}

func (x *ShowDetailData) GetMapKey() string {
	if x != nil {
		return x.MapKey
	}
	return ""
}

func (x *ShowDetailData) GetRoutineContactType() string {
	if x != nil {
		return x.RoutineContactType
	}
	return ""
}

func (x *ShowDetailData) GetSpecUnique() string {
	if x != nil {
		return x.SpecUnique
	}
	return ""
}

// 显示商品信息（主要在列表）
type ShowGoodsInfo struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                                              //ID
	Type               string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type"`                                                           //商品类型
	SpuName            string                 `protobuf:"bytes,7,opt,name=spu_name,json=spuName,proto3" json:"spu_name"`                                      //商品名称
	SpuCode            string                 `protobuf:"bytes,8,opt,name=spu_code,json=spuCode,proto3" json:"spu_code"`                                      //SPU编码
	Image              string                 `protobuf:"bytes,9,opt,name=image,proto3" json:"image"`                                                         //商品主图
	UnitName           string                 `protobuf:"bytes,10,opt,name=unit_name,json=unitName,proto3" json:"unit_name"`                                  //计量单位名称
	Price              int64                  `protobuf:"varint,11,opt,name=price,proto3" json:"price"`                                                       //销售价
	OtPrice            int64                  `protobuf:"varint,12,opt,name=ot_price,json=otPrice,proto3" json:"ot_price"`                                    //划线价
	IsVip              bool                   `protobuf:"varint,13,opt,name=is_vip,json=isVip,proto3" json:"is_vip"`                                          //是否会员商品
	VipPrice           int64                  `protobuf:"varint,14,opt,name=vip_price,json=vipPrice,proto3" json:"vip_price"`                                 //会员价
	SvipPriceOpen      bool                   `protobuf:"varint,15,opt,name=svip_price_open,json=svipPriceOpen,proto3" json:"svip_price_open"`                //开启SVIP价格
	SvipEconomizePrice int64                  `protobuf:"varint,16,opt,name=svip_economize_price,json=svipEconomizePrice,proto3" json:"svip_economize_price"` //SVIP节省金额
	Sales              int64                  `protobuf:"varint,17,opt,name=sales,proto3" json:"sales"`                                                       //销量
	Stock              int64                  `protobuf:"varint,18,opt,name=stock,proto3" json:"stock"`                                                       //库存量
	MinQty             int64                  `protobuf:"varint,19,opt,name=min_qty,json=minQty,proto3" json:"min_qty"`
	IsManySpec         bool                   `protobuf:"varint,20,opt,name=is_many_spec,json=isManySpec,proto3" json:"is_many_spec"`    //多规格商品
	IsOpenWeigh        bool                   `protobuf:"varint,21,opt,name=is_open_weigh,json=isOpenWeigh,proto3" json:"is_open_weigh"` //开启称重
	Presale            bool                   `protobuf:"varint,22,opt,name=presale,proto3" json:"presale"`                              //是否预售
	IsVirtual          bool                   `protobuf:"varint,23,opt,name=is_virtual,json=isVirtual,proto3" json:"is_virtual"`
	CartButton         bool                   `protobuf:"varint,24,opt,name=cart_button,json=cartButton,proto3" json:"cart_button"`
	AttrPics           []string               `protobuf:"bytes,25,rep,name=attrPics,proto3" json:"attrPics"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ShowGoodsInfo) Reset() {
	*x = ShowGoodsInfo{}
	mi := &file_showGoodsService_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShowGoodsInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowGoodsInfo) ProtoMessage() {}

func (x *ShowGoodsInfo) ProtoReflect() protoreflect.Message {
	mi := &file_showGoodsService_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowGoodsInfo.ProtoReflect.Descriptor instead.
func (*ShowGoodsInfo) Descriptor() ([]byte, []int) {
	return file_showGoodsService_proto_rawDescGZIP(), []int{5}
}

func (x *ShowGoodsInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ShowGoodsInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ShowGoodsInfo) GetSpuName() string {
	if x != nil {
		return x.SpuName
	}
	return ""
}

func (x *ShowGoodsInfo) GetSpuCode() string {
	if x != nil {
		return x.SpuCode
	}
	return ""
}

func (x *ShowGoodsInfo) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ShowGoodsInfo) GetUnitName() string {
	if x != nil {
		return x.UnitName
	}
	return ""
}

func (x *ShowGoodsInfo) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ShowGoodsInfo) GetOtPrice() int64 {
	if x != nil {
		return x.OtPrice
	}
	return 0
}

func (x *ShowGoodsInfo) GetIsVip() bool {
	if x != nil {
		return x.IsVip
	}
	return false
}

func (x *ShowGoodsInfo) GetVipPrice() int64 {
	if x != nil {
		return x.VipPrice
	}
	return 0
}

func (x *ShowGoodsInfo) GetSvipPriceOpen() bool {
	if x != nil {
		return x.SvipPriceOpen
	}
	return false
}

func (x *ShowGoodsInfo) GetSvipEconomizePrice() int64 {
	if x != nil {
		return x.SvipEconomizePrice
	}
	return 0
}

func (x *ShowGoodsInfo) GetSales() int64 {
	if x != nil {
		return x.Sales
	}
	return 0
}

func (x *ShowGoodsInfo) GetStock() int64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *ShowGoodsInfo) GetMinQty() int64 {
	if x != nil {
		return x.MinQty
	}
	return 0
}

func (x *ShowGoodsInfo) GetIsManySpec() bool {
	if x != nil {
		return x.IsManySpec
	}
	return false
}

func (x *ShowGoodsInfo) GetIsOpenWeigh() bool {
	if x != nil {
		return x.IsOpenWeigh
	}
	return false
}

func (x *ShowGoodsInfo) GetPresale() bool {
	if x != nil {
		return x.Presale
	}
	return false
}

func (x *ShowGoodsInfo) GetIsVirtual() bool {
	if x != nil {
		return x.IsVirtual
	}
	return false
}

func (x *ShowGoodsInfo) GetCartButton() bool {
	if x != nil {
		return x.CartButton
	}
	return false
}

func (x *ShowGoodsInfo) GetAttrPics() []string {
	if x != nil {
		return x.AttrPics
	}
	return nil
}

type ShowGoodsAttr struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	ProductId     int64                  `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id"`
	AttrName      string                 `protobuf:"bytes,3,opt,name=attr_name,json=attrName,proto3" json:"attr_name"`
	Type          string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type"`
	AttrValues    []string               `protobuf:"bytes,5,rep,name=attr_values,json=attrValues,proto3" json:"attr_values"`
	AttrValue     []*ShowGoodsAttrValue  `protobuf:"bytes,6,rep,name=attr_value,json=attrValue,proto3" json:"attr_value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShowGoodsAttr) Reset() {
	*x = ShowGoodsAttr{}
	mi := &file_showGoodsService_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShowGoodsAttr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowGoodsAttr) ProtoMessage() {}

func (x *ShowGoodsAttr) ProtoReflect() protoreflect.Message {
	mi := &file_showGoodsService_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowGoodsAttr.ProtoReflect.Descriptor instead.
func (*ShowGoodsAttr) Descriptor() ([]byte, []int) {
	return file_showGoodsService_proto_rawDescGZIP(), []int{6}
}

func (x *ShowGoodsAttr) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ShowGoodsAttr) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *ShowGoodsAttr) GetAttrName() string {
	if x != nil {
		return x.AttrName
	}
	return ""
}

func (x *ShowGoodsAttr) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ShowGoodsAttr) GetAttrValues() []string {
	if x != nil {
		return x.AttrValues
	}
	return nil
}

func (x *ShowGoodsAttr) GetAttrValue() []*ShowGoodsAttrValue {
	if x != nil {
		return x.AttrValue
	}
	return nil
}

type ShowGoodsSpu struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                                              //ID
	Type               string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type"`                                                           //商品类型
	ShopId             int64                  `protobuf:"varint,3,opt,name=shop_id,json=shopId,proto3" json:"shop_id"`                                        //分店ID
	CategoryId         int64                  `protobuf:"varint,4,opt,name=category_id,json=categoryId,proto3" json:"category_id"`                            //商品分类
	TaxonomyId         int64                  `protobuf:"varint,5,opt,name=taxonomy_id,json=taxonomyId,proto3" json:"taxonomy_id"`                            //商品类目
	BrandId            int32                  `protobuf:"varint,6,opt,name=brand_id,json=brandId,proto3" json:"brand_id"`                                     //品牌
	SpuName            string                 `protobuf:"bytes,7,opt,name=spu_name,json=spuName,proto3" json:"spu_name"`                                      //商品名称
	SpuCode            string                 `protobuf:"bytes,8,opt,name=spu_code,json=spuCode,proto3" json:"spu_code"`                                      //SPU编码
	SellMode           string                 `protobuf:"bytes,9,opt,name=sell_mode,json=sellMode,proto3" json:"sell_mode"`                                   //销售模式
	Image              string                 `protobuf:"bytes,10,opt,name=image,proto3" json:"image"`                                                        //商品主图
	Video              string                 `protobuf:"bytes,11,opt,name=video,proto3" json:"video"`                                                        //主图视频
	ExplainVideo       string                 `protobuf:"bytes,12,opt,name=explain_video,json=explainVideo,proto3" json:"explain_video"`                      //讲解视频
	SliderImage        []string               `protobuf:"bytes,13,rep,name=slider_image,json=sliderImage,proto3" json:"slider_image"`                         //商品幻灯片
	IsManySpec         bool                   `protobuf:"varint,14,opt,name=is_many_spec,json=isManySpec,proto3" json:"is_many_spec"`                         //多规格商品
	IsOpenWeigh        bool                   `protobuf:"varint,15,opt,name=is_open_weigh,json=isOpenWeigh,proto3" json:"is_open_weigh"`                      //开启称重
	IsMoreBarcode      bool                   `protobuf:"varint,16,opt,name=is_more_barcode,json=isMoreBarcode,proto3" json:"is_more_barcode"`                //一品多码
	UnitId             int32                  `protobuf:"varint,17,opt,name=unit_id,json=unitId,proto3" json:"unit_id"`                                       //计量单位ID
	UnitName           string                 `protobuf:"bytes,18,opt,name=unit_name,json=unitName,proto3" json:"unit_name"`                                  //计量单位名称
	UnitType           string                 `protobuf:"bytes,19,opt,name=unit_type,json=unitType,proto3" json:"unit_type"`                                  //计量单位类型
	IsShelve           bool                   `protobuf:"varint,22,opt,name=is_shelve,json=isShelve,proto3" json:"is_shelve"`                                 //是否上架
	MinPrice           int64                  `protobuf:"varint,27,opt,name=min_price,json=minPrice,proto3" json:"min_price"`                                 //最低价格
	MaxPrice           int64                  `protobuf:"varint,28,opt,name=max_price,json=maxPrice,proto3" json:"max_price"`                                 //最高价格
	Price              int64                  `protobuf:"varint,29,opt,name=price,proto3" json:"price"`                                                       //销售价
	OtPrice            int64                  `protobuf:"varint,30,opt,name=ot_price,json=otPrice,proto3" json:"ot_price"`                                    //划线价
	Cost               int64                  `protobuf:"varint,31,opt,name=cost,proto3" json:"cost"`                                                         //成本价
	Postage            int64                  `protobuf:"varint,32,opt,name=postage,proto3" json:"postage"`                                                   //运费
	IsVip              bool                   `protobuf:"varint,33,opt,name=is_vip,json=isVip,proto3" json:"is_vip"`                                          //是否会员商品
	VipPrice           int64                  `protobuf:"varint,34,opt,name=vip_price,json=vipPrice,proto3" json:"vip_price"`                                 //会员优惠金额
	SvipPriceOpen      bool                   `protobuf:"varint,35,opt,name=svip_price_open,json=svipPriceOpen,proto3" json:"svip_price_open"`                //开启SVIP价格
	SvipEconomizePrice int64                  `protobuf:"varint,36,opt,name=svip_economize_price,json=svipEconomizePrice,proto3" json:"svip_economize_price"` //SVIP节省金额
	Sales              int64                  `protobuf:"varint,39,opt,name=sales,proto3" json:"sales"`                                                       //销量
	Stock              int64                  `protobuf:"varint,40,opt,name=stock,proto3" json:"stock"`                                                       //库存量
	Browse             int64                  `protobuf:"varint,41,opt,name=browse,proto3" json:"browse"`                                                     //浏览量
	Presale            bool                   `protobuf:"varint,42,opt,name=presale,proto3" json:"presale"`                                                   //是否预售
	PresaleStartTime   string                 `protobuf:"bytes,43,opt,name=presale_start_time,json=presaleStartTime,proto3" json:"presale_start_time"`        //预售开始时间
	PresaleEndTime     string                 `protobuf:"bytes,44,opt,name=presale_end_time,json=presaleEndTime,proto3" json:"presale_end_time"`              //预售结束时间
	PresaleDay         int32                  `protobuf:"varint,45,opt,name=presale_day,json=presaleDay,proto3" json:"presale_day"`                           //预售天数
	PresalePayStatus   bool                   `protobuf:"varint,46,opt,name=presale_pay_status,json=presalePayStatus,proto3" json:"presale_pay_status"`       //预售支付状态
	IsGift             bool                   `protobuf:"varint,56,opt,name=is_gift,json=isGift,proto3" json:"is_gift"`                                       //是否礼品
	GiftPrice          int64                  `protobuf:"varint,57,opt,name=gift_price,json=giftPrice,proto3" json:"gift_price"`                              //礼品附件费
	IsLimit            bool                   `protobuf:"varint,50,opt,name=is_limit,json=isLimit,proto3" json:"is_limit"`
	LimitType          string                 `protobuf:"bytes,51,opt,name=limit_type,json=limitType,proto3" json:"limit_type"`
	LimitNum           int64                  `protobuf:"varint,52,opt,name=limit_num,json=limitNum,proto3" json:"limit_num"`
	MinQty             int64                  `protobuf:"varint,53,opt,name=min_qty,json=minQty,proto3" json:"min_qty"`
	IsVirtual          bool                   `protobuf:"varint,60,opt,name=is_virtual,json=isVirtual,proto3" json:"is_virtual"`
	VirtualType        string                 `protobuf:"bytes,61,opt,name=virtual_type,json=virtualType,proto3" json:"virtual_type"`
	UserCollect        bool                   `protobuf:"varint,66,opt,name=user_collect,json=userCollect,proto3" json:"user_collect"` //是否收藏
	UserLike           bool                   `protobuf:"varint,67,opt,name=user_like,json=userLike,proto3" json:"user_like"`          //是否喜欢
	CartButton         bool                   `protobuf:"varint,68,opt,name=cart_button,json=cartButton,proto3" json:"cart_button"`
	WechatCode         string                 `protobuf:"bytes,70,opt,name=wechat_code,json=wechatCode,proto3" json:"wechat_code"`
	GiveIntegral       int64                  `protobuf:"varint,71,opt,name=give_integral,json=giveIntegral,proto3" json:"give_integral"` //赠送积分
	Description        string                 `protobuf:"bytes,72,opt,name=description,proto3" json:"description"`                        //商品内容
	SellingDesc        string                 `protobuf:"bytes,73,opt,name=selling_desc,json=sellingDesc,proto3" json:"selling_desc"`     //卖点描述
	ShareDesc          string                 `protobuf:"bytes,74,opt,name=share_desc,json=shareDesc,proto3" json:"share_desc"`           //分享描述
	SeoTitle           string                 `protobuf:"bytes,75,opt,name=seo_title,json=seoTitle,proto3" json:"seo_title"`              //SEO标题
	SeoKeywords        string                 `protobuf:"bytes,76,opt,name=seo_keywords,json=seoKeywords,proto3" json:"seo_keywords"`     //SEO关键字
	SeoDesc            string                 `protobuf:"bytes,77,opt,name=seo_desc,json=seoDesc,proto3" json:"seo_desc"`                 //SEO描述
	Status             string                 `protobuf:"bytes,78,opt,name=status,proto3" json:"status"`                                  //商品状态
	DefaultSku         string                 `protobuf:"bytes,79,opt,name=default_sku,json=defaultSku,proto3" json:"default_sku"`        //默认选中SKU
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ShowGoodsSpu) Reset() {
	*x = ShowGoodsSpu{}
	mi := &file_showGoodsService_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShowGoodsSpu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowGoodsSpu) ProtoMessage() {}

func (x *ShowGoodsSpu) ProtoReflect() protoreflect.Message {
	mi := &file_showGoodsService_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowGoodsSpu.ProtoReflect.Descriptor instead.
func (*ShowGoodsSpu) Descriptor() ([]byte, []int) {
	return file_showGoodsService_proto_rawDescGZIP(), []int{7}
}

func (x *ShowGoodsSpu) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ShowGoodsSpu) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ShowGoodsSpu) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *ShowGoodsSpu) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *ShowGoodsSpu) GetTaxonomyId() int64 {
	if x != nil {
		return x.TaxonomyId
	}
	return 0
}

func (x *ShowGoodsSpu) GetBrandId() int32 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *ShowGoodsSpu) GetSpuName() string {
	if x != nil {
		return x.SpuName
	}
	return ""
}

func (x *ShowGoodsSpu) GetSpuCode() string {
	if x != nil {
		return x.SpuCode
	}
	return ""
}

func (x *ShowGoodsSpu) GetSellMode() string {
	if x != nil {
		return x.SellMode
	}
	return ""
}

func (x *ShowGoodsSpu) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ShowGoodsSpu) GetVideo() string {
	if x != nil {
		return x.Video
	}
	return ""
}

func (x *ShowGoodsSpu) GetExplainVideo() string {
	if x != nil {
		return x.ExplainVideo
	}
	return ""
}

func (x *ShowGoodsSpu) GetSliderImage() []string {
	if x != nil {
		return x.SliderImage
	}
	return nil
}

func (x *ShowGoodsSpu) GetIsManySpec() bool {
	if x != nil {
		return x.IsManySpec
	}
	return false
}

func (x *ShowGoodsSpu) GetIsOpenWeigh() bool {
	if x != nil {
		return x.IsOpenWeigh
	}
	return false
}

func (x *ShowGoodsSpu) GetIsMoreBarcode() bool {
	if x != nil {
		return x.IsMoreBarcode
	}
	return false
}

func (x *ShowGoodsSpu) GetUnitId() int32 {
	if x != nil {
		return x.UnitId
	}
	return 0
}

func (x *ShowGoodsSpu) GetUnitName() string {
	if x != nil {
		return x.UnitName
	}
	return ""
}

func (x *ShowGoodsSpu) GetUnitType() string {
	if x != nil {
		return x.UnitType
	}
	return ""
}

func (x *ShowGoodsSpu) GetIsShelve() bool {
	if x != nil {
		return x.IsShelve
	}
	return false
}

func (x *ShowGoodsSpu) GetMinPrice() int64 {
	if x != nil {
		return x.MinPrice
	}
	return 0
}

func (x *ShowGoodsSpu) GetMaxPrice() int64 {
	if x != nil {
		return x.MaxPrice
	}
	return 0
}

func (x *ShowGoodsSpu) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ShowGoodsSpu) GetOtPrice() int64 {
	if x != nil {
		return x.OtPrice
	}
	return 0
}

func (x *ShowGoodsSpu) GetCost() int64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *ShowGoodsSpu) GetPostage() int64 {
	if x != nil {
		return x.Postage
	}
	return 0
}

func (x *ShowGoodsSpu) GetIsVip() bool {
	if x != nil {
		return x.IsVip
	}
	return false
}

func (x *ShowGoodsSpu) GetVipPrice() int64 {
	if x != nil {
		return x.VipPrice
	}
	return 0
}

func (x *ShowGoodsSpu) GetSvipPriceOpen() bool {
	if x != nil {
		return x.SvipPriceOpen
	}
	return false
}

func (x *ShowGoodsSpu) GetSvipEconomizePrice() int64 {
	if x != nil {
		return x.SvipEconomizePrice
	}
	return 0
}

func (x *ShowGoodsSpu) GetSales() int64 {
	if x != nil {
		return x.Sales
	}
	return 0
}

func (x *ShowGoodsSpu) GetStock() int64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *ShowGoodsSpu) GetBrowse() int64 {
	if x != nil {
		return x.Browse
	}
	return 0
}

func (x *ShowGoodsSpu) GetPresale() bool {
	if x != nil {
		return x.Presale
	}
	return false
}

func (x *ShowGoodsSpu) GetPresaleStartTime() string {
	if x != nil {
		return x.PresaleStartTime
	}
	return ""
}

func (x *ShowGoodsSpu) GetPresaleEndTime() string {
	if x != nil {
		return x.PresaleEndTime
	}
	return ""
}

func (x *ShowGoodsSpu) GetPresaleDay() int32 {
	if x != nil {
		return x.PresaleDay
	}
	return 0
}

func (x *ShowGoodsSpu) GetPresalePayStatus() bool {
	if x != nil {
		return x.PresalePayStatus
	}
	return false
}

func (x *ShowGoodsSpu) GetIsGift() bool {
	if x != nil {
		return x.IsGift
	}
	return false
}

func (x *ShowGoodsSpu) GetGiftPrice() int64 {
	if x != nil {
		return x.GiftPrice
	}
	return 0
}

func (x *ShowGoodsSpu) GetIsLimit() bool {
	if x != nil {
		return x.IsLimit
	}
	return false
}

func (x *ShowGoodsSpu) GetLimitType() string {
	if x != nil {
		return x.LimitType
	}
	return ""
}

func (x *ShowGoodsSpu) GetLimitNum() int64 {
	if x != nil {
		return x.LimitNum
	}
	return 0
}

func (x *ShowGoodsSpu) GetMinQty() int64 {
	if x != nil {
		return x.MinQty
	}
	return 0
}

func (x *ShowGoodsSpu) GetIsVirtual() bool {
	if x != nil {
		return x.IsVirtual
	}
	return false
}

func (x *ShowGoodsSpu) GetVirtualType() string {
	if x != nil {
		return x.VirtualType
	}
	return ""
}

func (x *ShowGoodsSpu) GetUserCollect() bool {
	if x != nil {
		return x.UserCollect
	}
	return false
}

func (x *ShowGoodsSpu) GetUserLike() bool {
	if x != nil {
		return x.UserLike
	}
	return false
}

func (x *ShowGoodsSpu) GetCartButton() bool {
	if x != nil {
		return x.CartButton
	}
	return false
}

func (x *ShowGoodsSpu) GetWechatCode() string {
	if x != nil {
		return x.WechatCode
	}
	return ""
}

func (x *ShowGoodsSpu) GetGiveIntegral() int64 {
	if x != nil {
		return x.GiveIntegral
	}
	return 0
}

func (x *ShowGoodsSpu) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ShowGoodsSpu) GetSellingDesc() string {
	if x != nil {
		return x.SellingDesc
	}
	return ""
}

func (x *ShowGoodsSpu) GetShareDesc() string {
	if x != nil {
		return x.ShareDesc
	}
	return ""
}

func (x *ShowGoodsSpu) GetSeoTitle() string {
	if x != nil {
		return x.SeoTitle
	}
	return ""
}

func (x *ShowGoodsSpu) GetSeoKeywords() string {
	if x != nil {
		return x.SeoKeywords
	}
	return ""
}

func (x *ShowGoodsSpu) GetSeoDesc() string {
	if x != nil {
		return x.SeoDesc
	}
	return ""
}

func (x *ShowGoodsSpu) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ShowGoodsSpu) GetDefaultSku() string {
	if x != nil {
		return x.DefaultSku
	}
	return ""
}

type ShowGoodsSku struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	ProductId     int64                  `protobuf:"varint,2,opt,name=product_id,json=productId,proto3" json:"product_id"`
	Suk           string                 `protobuf:"bytes,3,opt,name=suk,proto3" json:"suk"` //"黑色,46mm",
	Stock         int64                  `protobuf:"varint,4,opt,name=stock,proto3" json:"stock"`
	Sales         int64                  `protobuf:"varint,5,opt,name=sales,proto3" json:"sales"`                                    //销量
	Price         int64                  `protobuf:"varint,6,opt,name=price,proto3" json:"price"`                                    //销售价(元)
	Image         string                 `protobuf:"bytes,7,opt,name=image,proto3" json:"image"`                                     //图片
	Unique        string                 `protobuf:"bytes,8,opt,name=unique,proto3" json:"unique"`                                   //唯一标识
	Cost          int64                  `protobuf:"varint,9,opt,name=cost,proto3" json:"cost"`                                      //成本价
	BarCode       string                 `protobuf:"bytes,10,opt,name=bar_code,json=barCode,proto3" json:"bar_code"`                 //商品条码
	OtPrice       int64                  `protobuf:"varint,11,opt,name=ot_price,json=otPrice,proto3" json:"ot_price"`                //原始价(元)
	VipPrice      int64                  `protobuf:"varint,12,opt,name=vip_price,json=vipPrice,proto3" json:"vip_price"`             //会员价(元)
	Weight        float32                `protobuf:"fixed32,13,opt,name=weight,proto3" json:"weight"`                                //重量千克
	Volume        float32                `protobuf:"fixed32,15,opt,name=volume,proto3" json:"volume"`                                //体积
	Brokerage     int64                  `protobuf:"varint,16,opt,name=brokerage,proto3" json:"brokerage"`                           //推广佣金
	BrokerageTwo  int64                  `protobuf:"varint,17,opt,name=brokerage_two,json=brokerageTwo,proto3" json:"brokerage_two"` //二级推广佣金
	Type          string                 `protobuf:"bytes,18,opt,name=type,proto3" json:"type"`
	Quota         int64                  `protobuf:"varint,19,opt,name=quota,proto3" json:"quota"`                          ///配额数量
	QuotaShow     bool                   `protobuf:"varint,20,opt,name=quota_show,json=quotaShow,proto3" json:"quota_show"` //是否显示配额
	IsVirtual     bool                   `protobuf:"varint,21,opt,name=is_virtual,json=isVirtual,proto3" json:"is_virtual"` //是否虚拟商品
	CouponId      int64                  `protobuf:"varint,22,opt,name=coupon_id,json=couponId,proto3" json:"coupon_id"`    //优惠劵ID
	DiskInfo      string                 `protobuf:"bytes,23,opt,name=disk_info,json=diskInfo,proto3" json:"disk_info"`
	ProductStock  int64                  `protobuf:"varint,24,opt,name=product_stock,json=productStock,proto3" json:"product_stock"` //库存量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShowGoodsSku) Reset() {
	*x = ShowGoodsSku{}
	mi := &file_showGoodsService_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShowGoodsSku) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowGoodsSku) ProtoMessage() {}

func (x *ShowGoodsSku) ProtoReflect() protoreflect.Message {
	mi := &file_showGoodsService_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowGoodsSku.ProtoReflect.Descriptor instead.
func (*ShowGoodsSku) Descriptor() ([]byte, []int) {
	return file_showGoodsService_proto_rawDescGZIP(), []int{8}
}

func (x *ShowGoodsSku) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ShowGoodsSku) GetProductId() int64 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *ShowGoodsSku) GetSuk() string {
	if x != nil {
		return x.Suk
	}
	return ""
}

func (x *ShowGoodsSku) GetStock() int64 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *ShowGoodsSku) GetSales() int64 {
	if x != nil {
		return x.Sales
	}
	return 0
}

func (x *ShowGoodsSku) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *ShowGoodsSku) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ShowGoodsSku) GetUnique() string {
	if x != nil {
		return x.Unique
	}
	return ""
}

func (x *ShowGoodsSku) GetCost() int64 {
	if x != nil {
		return x.Cost
	}
	return 0
}

func (x *ShowGoodsSku) GetBarCode() string {
	if x != nil {
		return x.BarCode
	}
	return ""
}

func (x *ShowGoodsSku) GetOtPrice() int64 {
	if x != nil {
		return x.OtPrice
	}
	return 0
}

func (x *ShowGoodsSku) GetVipPrice() int64 {
	if x != nil {
		return x.VipPrice
	}
	return 0
}

func (x *ShowGoodsSku) GetWeight() float32 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *ShowGoodsSku) GetVolume() float32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *ShowGoodsSku) GetBrokerage() int64 {
	if x != nil {
		return x.Brokerage
	}
	return 0
}

func (x *ShowGoodsSku) GetBrokerageTwo() int64 {
	if x != nil {
		return x.BrokerageTwo
	}
	return 0
}

func (x *ShowGoodsSku) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ShowGoodsSku) GetQuota() int64 {
	if x != nil {
		return x.Quota
	}
	return 0
}

func (x *ShowGoodsSku) GetQuotaShow() bool {
	if x != nil {
		return x.QuotaShow
	}
	return false
}

func (x *ShowGoodsSku) GetIsVirtual() bool {
	if x != nil {
		return x.IsVirtual
	}
	return false
}

func (x *ShowGoodsSku) GetCouponId() int64 {
	if x != nil {
		return x.CouponId
	}
	return 0
}

func (x *ShowGoodsSku) GetDiskInfo() string {
	if x != nil {
		return x.DiskInfo
	}
	return ""
}

func (x *ShowGoodsSku) GetProductStock() int64 {
	if x != nil {
		return x.ProductStock
	}
	return 0
}

// 商品库请求参数
type ShowGoodsRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Top       int32                  `protobuf:"varint,1,opt,name=top,proto3" json:"top"`
	Paged     int64                  `protobuf:"varint,2,opt,name=paged,proto3" json:"paged"`
	PageSize  int64                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords  string                 `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords"`
	Sorts     []string               `protobuf:"bytes,5,rep,name=sorts,proto3" json:"sorts"`
	DateRange []string               `protobuf:"bytes,6,rep,name=date_range,json=dateRange,proto3" json:"date_range"`
	Ids       []int64                `protobuf:"varint,7,rep,packed,name=ids,proto3" json:"ids"`
	Id        int64                  `protobuf:"varint,8,opt,name=id,proto3" json:"id"`
	// 以下为自定义参数
	SpuId          int64   `protobuf:"varint,9,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`
	Unique         string  `protobuf:"bytes,10,opt,name=unique,proto3" json:"unique"`
	Type           string  `protobuf:"bytes,11,opt,name=type,proto3" json:"type"`                                             //商品类型
	ShopId         int64   `protobuf:"varint,12,opt,name=shop_id,json=shopId,proto3" json:"shop_id"`                          //分店ID
	CategoryId     int64   `protobuf:"varint,13,opt,name=category_id,json=categoryId,proto3" json:"category_id"`              //商品分类
	TaxonomyId     int64   `protobuf:"varint,14,opt,name=taxonomy_id,json=taxonomyId,proto3" json:"taxonomy_id"`              //商品类目
	BrandId        int32   `protobuf:"varint,15,opt,name=brand_id,json=brandId,proto3" json:"brand_id"`                       //品牌
	Name           string  `protobuf:"bytes,16,opt,name=name,proto3" json:"name"`                                             //商品名称
	IsVirtual      string  `protobuf:"bytes,17,opt,name=is_virtual,json=isVirtual,proto3" json:"is_virtual"`                  //虚拟商品
	IsManySpec     string  `protobuf:"bytes,18,opt,name=is_many_spec,json=isManySpec,proto3" json:"is_many_spec"`             //多规格商品
	IsOpenWeigh    string  `protobuf:"bytes,19,opt,name=is_open_weigh,json=isOpenWeigh,proto3" json:"is_open_weigh"`          //开启称重
	Code           string  `protobuf:"bytes,20,opt,name=code,proto3" json:"code"`                                             //SPU编码
	IsMultiBarcode string  `protobuf:"bytes,21,opt,name=is_multi_barcode,json=isMultiBarcode,proto3" json:"is_multi_barcode"` //一品多码
	UnitId         int32   `protobuf:"varint,22,opt,name=unit_id,json=unitId,proto3" json:"unit_id"`                          //计量单位ID
	UnitType       string  `protobuf:"bytes,23,opt,name=unit_type,json=unitType,proto3" json:"unit_type"`                     //计量单位类型
	Inventory      int64   `protobuf:"varint,24,opt,name=inventory,proto3" json:"inventory"`                                  //库存
	IsShelve       string  `protobuf:"bytes,25,opt,name=is_shelve,json=isShelve,proto3" json:"is_shelve"`                     //是否上架
	SellMode       string  `protobuf:"bytes,26,opt,name=sell_mode,json=sellMode,proto3" json:"sell_mode"`                     //销售模式
	Command        string  `protobuf:"bytes,27,opt,name=command,proto3" json:"command"`
	VipLevelId     int32   `protobuf:"varint,28,opt,name=vip_level_id,json=vipLevelId,proto3" json:"vip_level_id"`      //等级会员ID
	VipDiscount    float32 `protobuf:"fixed32,29,opt,name=vip_discount,json=vipDiscount,proto3" json:"vip_discount"`    //等级会员折扣
	SvipLevelId    int32   `protobuf:"varint,30,opt,name=svip_level_id,json=svipLevelId,proto3" json:"svip_level_id"`   //付费会员ID
	SvipDiscount   float32 `protobuf:"fixed32,31,opt,name=svip_discount,json=svipDiscount,proto3" json:"svip_discount"` //付费折扣率
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ShowGoodsRequest) Reset() {
	*x = ShowGoodsRequest{}
	mi := &file_showGoodsService_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShowGoodsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowGoodsRequest) ProtoMessage() {}

func (x *ShowGoodsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_showGoodsService_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowGoodsRequest.ProtoReflect.Descriptor instead.
func (*ShowGoodsRequest) Descriptor() ([]byte, []int) {
	return file_showGoodsService_proto_rawDescGZIP(), []int{9}
}

func (x *ShowGoodsRequest) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *ShowGoodsRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *ShowGoodsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ShowGoodsRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *ShowGoodsRequest) GetSorts() []string {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *ShowGoodsRequest) GetDateRange() []string {
	if x != nil {
		return x.DateRange
	}
	return nil
}

func (x *ShowGoodsRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ShowGoodsRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ShowGoodsRequest) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *ShowGoodsRequest) GetUnique() string {
	if x != nil {
		return x.Unique
	}
	return ""
}

func (x *ShowGoodsRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ShowGoodsRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *ShowGoodsRequest) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *ShowGoodsRequest) GetTaxonomyId() int64 {
	if x != nil {
		return x.TaxonomyId
	}
	return 0
}

func (x *ShowGoodsRequest) GetBrandId() int32 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *ShowGoodsRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ShowGoodsRequest) GetIsVirtual() string {
	if x != nil {
		return x.IsVirtual
	}
	return ""
}

func (x *ShowGoodsRequest) GetIsManySpec() string {
	if x != nil {
		return x.IsManySpec
	}
	return ""
}

func (x *ShowGoodsRequest) GetIsOpenWeigh() string {
	if x != nil {
		return x.IsOpenWeigh
	}
	return ""
}

func (x *ShowGoodsRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ShowGoodsRequest) GetIsMultiBarcode() string {
	if x != nil {
		return x.IsMultiBarcode
	}
	return ""
}

func (x *ShowGoodsRequest) GetUnitId() int32 {
	if x != nil {
		return x.UnitId
	}
	return 0
}

func (x *ShowGoodsRequest) GetUnitType() string {
	if x != nil {
		return x.UnitType
	}
	return ""
}

func (x *ShowGoodsRequest) GetInventory() int64 {
	if x != nil {
		return x.Inventory
	}
	return 0
}

func (x *ShowGoodsRequest) GetIsShelve() string {
	if x != nil {
		return x.IsShelve
	}
	return ""
}

func (x *ShowGoodsRequest) GetSellMode() string {
	if x != nil {
		return x.SellMode
	}
	return ""
}

func (x *ShowGoodsRequest) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *ShowGoodsRequest) GetVipLevelId() int32 {
	if x != nil {
		return x.VipLevelId
	}
	return 0
}

func (x *ShowGoodsRequest) GetVipDiscount() float32 {
	if x != nil {
		return x.VipDiscount
	}
	return 0
}

func (x *ShowGoodsRequest) GetSvipLevelId() int32 {
	if x != nil {
		return x.SvipLevelId
	}
	return 0
}

func (x *ShowGoodsRequest) GetSvipDiscount() float32 {
	if x != nil {
		return x.SvipDiscount
	}
	return 0
}

// 商品库响应数据
type ShowListData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pager         *common.Pager          `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	List          []*ShowGoodsInfo       `protobuf:"bytes,3,rep,name=list,proto3" json:"list"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShowListData) Reset() {
	*x = ShowListData{}
	mi := &file_showGoodsService_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShowListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowListData) ProtoMessage() {}

func (x *ShowListData) ProtoReflect() protoreflect.Message {
	mi := &file_showGoodsService_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowListData.ProtoReflect.Descriptor instead.
func (*ShowListData) Descriptor() ([]byte, []int) {
	return file_showGoodsService_proto_rawDescGZIP(), []int{10}
}

func (x *ShowListData) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *ShowListData) GetList() []*ShowGoodsInfo {
	if x != nil {
		return x.List
	}
	return nil
}

// 商品库响应数据
type ShowGoodsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           string                 `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg"`
	List          *ShowListData          `protobuf:"bytes,3,opt,name=list,proto3" json:"list"`
	Detail        *ShowDetailData        `protobuf:"bytes,4,opt,name=detail,proto3" json:"detail"`
	RealPrice     *ShowRealPriceData     `protobuf:"bytes,5,opt,name=realPrice,proto3" json:"realPrice"`
	Qrcode        *ShowQrcodeData        `protobuf:"bytes,6,opt,name=qrcode,proto3" json:"qrcode"`
	Poster        *ShowPosterData        `protobuf:"bytes,7,opt,name=poster,proto3" json:"poster"`
	GetAttr       *ShowGetAttrData       `protobuf:"bytes,8,opt,name=getAttr,proto3" json:"getAttr"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShowGoodsResponse) Reset() {
	*x = ShowGoodsResponse{}
	mi := &file_showGoodsService_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShowGoodsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowGoodsResponse) ProtoMessage() {}

func (x *ShowGoodsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_showGoodsService_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowGoodsResponse.ProtoReflect.Descriptor instead.
func (*ShowGoodsResponse) Descriptor() ([]byte, []int) {
	return file_showGoodsService_proto_rawDescGZIP(), []int{11}
}

func (x *ShowGoodsResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ShowGoodsResponse) GetList() *ShowListData {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *ShowGoodsResponse) GetDetail() *ShowDetailData {
	if x != nil {
		return x.Detail
	}
	return nil
}

func (x *ShowGoodsResponse) GetRealPrice() *ShowRealPriceData {
	if x != nil {
		return x.RealPrice
	}
	return nil
}

func (x *ShowGoodsResponse) GetQrcode() *ShowQrcodeData {
	if x != nil {
		return x.Qrcode
	}
	return nil
}

func (x *ShowGoodsResponse) GetPoster() *ShowPosterData {
	if x != nil {
		return x.Poster
	}
	return nil
}

func (x *ShowGoodsResponse) GetGetAttr() *ShowGetAttrData {
	if x != nil {
		return x.GetAttr
	}
	return nil
}

type ShowGoodsAttrValue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Attr          string                 `protobuf:"bytes,1,opt,name=attr,proto3" json:"attr"`
	Check         bool                   `protobuf:"varint,2,opt,name=check,proto3" json:"check"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShowGoodsAttrValue) Reset() {
	*x = ShowGoodsAttrValue{}
	mi := &file_showGoodsService_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShowGoodsAttrValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowGoodsAttrValue) ProtoMessage() {}

func (x *ShowGoodsAttrValue) ProtoReflect() protoreflect.Message {
	mi := &file_showGoodsService_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowGoodsAttrValue.ProtoReflect.Descriptor instead.
func (*ShowGoodsAttrValue) Descriptor() ([]byte, []int) {
	return file_showGoodsService_proto_rawDescGZIP(), []int{6, 0}
}

func (x *ShowGoodsAttrValue) GetAttr() string {
	if x != nil {
		return x.Attr
	}
	return ""
}

func (x *ShowGoodsAttrValue) GetCheck() bool {
	if x != nil {
		return x.Check
	}
	return false
}

var File_showGoodsService_proto protoreflect.FileDescriptor

const file_showGoodsService_proto_rawDesc = "" +
	"\n" +
	"\x16showGoodsService.proto\x12\bservices\x1a\x11common/base.proto\"\xef\x01\n" +
	"\x11ShowRealPriceData\x12\x15\n" +
	"\x06is_vip\x18\x01 \x01(\bR\x05isVip\x12\x1f\n" +
	"\vlevel_price\x18\x02 \x01(\x03R\n" +
	"levelPrice\x12!\n" +
	"\fmember_price\x18\x03 \x01(\x03R\vmemberPrice\x12\x14\n" +
	"\x05price\x18\x04 \x01(\x03R\x05price\x12$\n" +
	"\x0eproduct_is_vip\x18\x05 \x01(\bR\fproductIsVip\x12\x1d\n" +
	"\n" +
	"real_price\x18\x06 \x01(\x03R\trealPrice\x12$\n" +
	"\x0euser_is_member\x18\a \x01(\bR\fuserIsMember\"6\n" +
	"\x0eShowQrcodeData\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x12\n" +
	"\x04code\x18\x02 \x01(\fR\x04code\"6\n" +
	"\x0eShowPosterData\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x12\n" +
	"\x04code\x18\x02 \x01(\fR\x04code\"\xac\x02\n" +
	"\x0fShowGetAttrData\x124\n" +
	"\tgoodsInfo\x18\x01 \x01(\v2\x16.services.ShowGoodsSpuR\tgoodsInfo\x129\n" +
	"\vproductAttr\x18\x02 \x03(\v2\x17.services.ShowGoodsAttrR\vproductAttr\x12O\n" +
	"\fproductValue\x18\x03 \x03(\v2+.services.ShowGetAttrData.ProductValueEntryR\fproductValue\x1aW\n" +
	"\x11ProductValueEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.services.ShowGoodsSkuR\x05value:\x028\x01\"\xb9\x06\n" +
	"\x0eShowDetailData\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\x03R\x03uid\x12\x1b\n" +
	"\tsvip_open\x18\x02 \x01(\bR\bsvipOpen\x12&\n" +
	"\x0fsvip_price_open\x18\x03 \x01(\bR\rsvipPriceOpen\x12,\n" +
	"\x12store_self_mention\x18\x04 \x01(\bR\x10storeSelfMention\x12\x1c\n" +
	"\tpriceName\x18\x05 \x01(\tR\tpriceName\x12\x14\n" +
	"\x05reply\x18\x06 \x01(\fR\x05reply\x12 \n" +
	"\vreplyChance\x18\a \x01(\x03R\vreplyChance\x12\x1e\n" +
	"\n" +
	"replyCount\x18\b \x01(\x03R\n" +
	"replyCount\x12\x15\n" +
	"\x06mer_id\x18\t \x01(\x03R\x05merId\x124\n" +
	"\tgoodsInfo\x18\f \x01(\v2\x16.services.ShowGoodsSpuR\tgoodsInfo\x129\n" +
	"\vproductAttr\x18\r \x03(\v2\x17.services.ShowGoodsAttrR\vproductAttr\x12N\n" +
	"\fproductValue\x18\x0e \x03(\v2*.services.ShowDetailData.ProductValueEntryR\fproductValue\x124\n" +
	"\tgood_list\x18\x0f \x03(\v2\x17.services.ShowGoodsInfoR\bgoodList\x12$\n" +
	"\rrealstoreInfo\x18\x13 \x01(\fR\rrealstoreInfo\x12\x18\n" +
	"\acoupons\x18\x14 \x01(\fR\acoupons\x12\x1a\n" +
	"\bactivity\x18\x15 \x01(\fR\bactivity\x12\x16\n" +
	"\x06mapKey\x18\x16 \x01(\tR\x06mapKey\x120\n" +
	"\x14routine_contact_type\x18\x17 \x01(\tR\x12routineContactType\x12\x1f\n" +
	"\vspec_unique\x18\x18 \x01(\tR\n" +
	"specUnique\x1aW\n" +
	"\x11ProductValueEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12,\n" +
	"\x05value\x18\x02 \x01(\v2\x16.services.ShowGoodsSkuR\x05value:\x028\x01\"\xdc\x04\n" +
	"\rShowGoodsInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x19\n" +
	"\bspu_name\x18\a \x01(\tR\aspuName\x12\x19\n" +
	"\bspu_code\x18\b \x01(\tR\aspuCode\x12\x14\n" +
	"\x05image\x18\t \x01(\tR\x05image\x12\x1b\n" +
	"\tunit_name\x18\n" +
	" \x01(\tR\bunitName\x12\x14\n" +
	"\x05price\x18\v \x01(\x03R\x05price\x12\x19\n" +
	"\bot_price\x18\f \x01(\x03R\aotPrice\x12\x15\n" +
	"\x06is_vip\x18\r \x01(\bR\x05isVip\x12\x1b\n" +
	"\tvip_price\x18\x0e \x01(\x03R\bvipPrice\x12&\n" +
	"\x0fsvip_price_open\x18\x0f \x01(\bR\rsvipPriceOpen\x120\n" +
	"\x14svip_economize_price\x18\x10 \x01(\x03R\x12svipEconomizePrice\x12\x14\n" +
	"\x05sales\x18\x11 \x01(\x03R\x05sales\x12\x14\n" +
	"\x05stock\x18\x12 \x01(\x03R\x05stock\x12\x17\n" +
	"\amin_qty\x18\x13 \x01(\x03R\x06minQty\x12 \n" +
	"\fis_many_spec\x18\x14 \x01(\bR\n" +
	"isManySpec\x12\"\n" +
	"\ris_open_weigh\x18\x15 \x01(\bR\visOpenWeigh\x12\x18\n" +
	"\apresale\x18\x16 \x01(\bR\apresale\x12\x1d\n" +
	"\n" +
	"is_virtual\x18\x17 \x01(\bR\tisVirtual\x12\x1f\n" +
	"\vcart_button\x18\x18 \x01(\bR\n" +
	"cartButton\x12\x1a\n" +
	"\battrPics\x18\x19 \x03(\tR\battrPics\"\x81\x02\n" +
	"\rShowGoodsAttr\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1d\n" +
	"\n" +
	"product_id\x18\x02 \x01(\x03R\tproductId\x12\x1b\n" +
	"\tattr_name\x18\x03 \x01(\tR\battrName\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\x12\x1f\n" +
	"\vattr_values\x18\x05 \x03(\tR\n" +
	"attrValues\x12<\n" +
	"\n" +
	"attr_value\x18\x06 \x03(\v2\x1d.services.ShowGoodsAttr.valueR\tattrValue\x1a1\n" +
	"\x05value\x12\x12\n" +
	"\x04attr\x18\x01 \x01(\tR\x04attr\x12\x14\n" +
	"\x05check\x18\x02 \x01(\bR\x05check\"\x82\x0e\n" +
	"\fShowGoodsSpu\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x12\n" +
	"\x04type\x18\x02 \x01(\tR\x04type\x12\x17\n" +
	"\ashop_id\x18\x03 \x01(\x03R\x06shopId\x12\x1f\n" +
	"\vcategory_id\x18\x04 \x01(\x03R\n" +
	"categoryId\x12\x1f\n" +
	"\vtaxonomy_id\x18\x05 \x01(\x03R\n" +
	"taxonomyId\x12\x19\n" +
	"\bbrand_id\x18\x06 \x01(\x05R\abrandId\x12\x19\n" +
	"\bspu_name\x18\a \x01(\tR\aspuName\x12\x19\n" +
	"\bspu_code\x18\b \x01(\tR\aspuCode\x12\x1b\n" +
	"\tsell_mode\x18\t \x01(\tR\bsellMode\x12\x14\n" +
	"\x05image\x18\n" +
	" \x01(\tR\x05image\x12\x14\n" +
	"\x05video\x18\v \x01(\tR\x05video\x12#\n" +
	"\rexplain_video\x18\f \x01(\tR\fexplainVideo\x12!\n" +
	"\fslider_image\x18\r \x03(\tR\vsliderImage\x12 \n" +
	"\fis_many_spec\x18\x0e \x01(\bR\n" +
	"isManySpec\x12\"\n" +
	"\ris_open_weigh\x18\x0f \x01(\bR\visOpenWeigh\x12&\n" +
	"\x0fis_more_barcode\x18\x10 \x01(\bR\risMoreBarcode\x12\x17\n" +
	"\aunit_id\x18\x11 \x01(\x05R\x06unitId\x12\x1b\n" +
	"\tunit_name\x18\x12 \x01(\tR\bunitName\x12\x1b\n" +
	"\tunit_type\x18\x13 \x01(\tR\bunitType\x12\x1b\n" +
	"\tis_shelve\x18\x16 \x01(\bR\bisShelve\x12\x1b\n" +
	"\tmin_price\x18\x1b \x01(\x03R\bminPrice\x12\x1b\n" +
	"\tmax_price\x18\x1c \x01(\x03R\bmaxPrice\x12\x14\n" +
	"\x05price\x18\x1d \x01(\x03R\x05price\x12\x19\n" +
	"\bot_price\x18\x1e \x01(\x03R\aotPrice\x12\x12\n" +
	"\x04cost\x18\x1f \x01(\x03R\x04cost\x12\x18\n" +
	"\apostage\x18  \x01(\x03R\apostage\x12\x15\n" +
	"\x06is_vip\x18! \x01(\bR\x05isVip\x12\x1b\n" +
	"\tvip_price\x18\" \x01(\x03R\bvipPrice\x12&\n" +
	"\x0fsvip_price_open\x18# \x01(\bR\rsvipPriceOpen\x120\n" +
	"\x14svip_economize_price\x18$ \x01(\x03R\x12svipEconomizePrice\x12\x14\n" +
	"\x05sales\x18' \x01(\x03R\x05sales\x12\x14\n" +
	"\x05stock\x18( \x01(\x03R\x05stock\x12\x16\n" +
	"\x06browse\x18) \x01(\x03R\x06browse\x12\x18\n" +
	"\apresale\x18* \x01(\bR\apresale\x12,\n" +
	"\x12presale_start_time\x18+ \x01(\tR\x10presaleStartTime\x12(\n" +
	"\x10presale_end_time\x18, \x01(\tR\x0epresaleEndTime\x12\x1f\n" +
	"\vpresale_day\x18- \x01(\x05R\n" +
	"presaleDay\x12,\n" +
	"\x12presale_pay_status\x18. \x01(\bR\x10presalePayStatus\x12\x17\n" +
	"\ais_gift\x188 \x01(\bR\x06isGift\x12\x1d\n" +
	"\n" +
	"gift_price\x189 \x01(\x03R\tgiftPrice\x12\x19\n" +
	"\bis_limit\x182 \x01(\bR\aisLimit\x12\x1d\n" +
	"\n" +
	"limit_type\x183 \x01(\tR\tlimitType\x12\x1b\n" +
	"\tlimit_num\x184 \x01(\x03R\blimitNum\x12\x17\n" +
	"\amin_qty\x185 \x01(\x03R\x06minQty\x12\x1d\n" +
	"\n" +
	"is_virtual\x18< \x01(\bR\tisVirtual\x12!\n" +
	"\fvirtual_type\x18= \x01(\tR\vvirtualType\x12!\n" +
	"\fuser_collect\x18B \x01(\bR\vuserCollect\x12\x1b\n" +
	"\tuser_like\x18C \x01(\bR\buserLike\x12\x1f\n" +
	"\vcart_button\x18D \x01(\bR\n" +
	"cartButton\x12\x1f\n" +
	"\vwechat_code\x18F \x01(\tR\n" +
	"wechatCode\x12#\n" +
	"\rgive_integral\x18G \x01(\x03R\fgiveIntegral\x12 \n" +
	"\vdescription\x18H \x01(\tR\vdescription\x12!\n" +
	"\fselling_desc\x18I \x01(\tR\vsellingDesc\x12\x1d\n" +
	"\n" +
	"share_desc\x18J \x01(\tR\tshareDesc\x12\x1b\n" +
	"\tseo_title\x18K \x01(\tR\bseoTitle\x12!\n" +
	"\fseo_keywords\x18L \x01(\tR\vseoKeywords\x12\x19\n" +
	"\bseo_desc\x18M \x01(\tR\aseoDesc\x12\x16\n" +
	"\x06status\x18N \x01(\tR\x06status\x12\x1f\n" +
	"\vdefault_sku\x18O \x01(\tR\n" +
	"defaultSku\"\xe0\x04\n" +
	"\fShowGoodsSku\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x1d\n" +
	"\n" +
	"product_id\x18\x02 \x01(\x03R\tproductId\x12\x10\n" +
	"\x03suk\x18\x03 \x01(\tR\x03suk\x12\x14\n" +
	"\x05stock\x18\x04 \x01(\x03R\x05stock\x12\x14\n" +
	"\x05sales\x18\x05 \x01(\x03R\x05sales\x12\x14\n" +
	"\x05price\x18\x06 \x01(\x03R\x05price\x12\x14\n" +
	"\x05image\x18\a \x01(\tR\x05image\x12\x16\n" +
	"\x06unique\x18\b \x01(\tR\x06unique\x12\x12\n" +
	"\x04cost\x18\t \x01(\x03R\x04cost\x12\x19\n" +
	"\bbar_code\x18\n" +
	" \x01(\tR\abarCode\x12\x19\n" +
	"\bot_price\x18\v \x01(\x03R\aotPrice\x12\x1b\n" +
	"\tvip_price\x18\f \x01(\x03R\bvipPrice\x12\x16\n" +
	"\x06weight\x18\r \x01(\x02R\x06weight\x12\x16\n" +
	"\x06volume\x18\x0f \x01(\x02R\x06volume\x12\x1c\n" +
	"\tbrokerage\x18\x10 \x01(\x03R\tbrokerage\x12#\n" +
	"\rbrokerage_two\x18\x11 \x01(\x03R\fbrokerageTwo\x12\x12\n" +
	"\x04type\x18\x12 \x01(\tR\x04type\x12\x14\n" +
	"\x05quota\x18\x13 \x01(\x03R\x05quota\x12\x1d\n" +
	"\n" +
	"quota_show\x18\x14 \x01(\bR\tquotaShow\x12\x1d\n" +
	"\n" +
	"is_virtual\x18\x15 \x01(\bR\tisVirtual\x12\x1b\n" +
	"\tcoupon_id\x18\x16 \x01(\x03R\bcouponId\x12\x1b\n" +
	"\tdisk_info\x18\x17 \x01(\tR\bdiskInfo\x12#\n" +
	"\rproduct_stock\x18\x18 \x01(\x03R\fproductStock\"\xf0\x06\n" +
	"\x10ShowGoodsRequest\x12\x10\n" +
	"\x03top\x18\x01 \x01(\x05R\x03top\x12\x14\n" +
	"\x05paged\x18\x02 \x01(\x03R\x05paged\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x03R\bpageSize\x12\x1a\n" +
	"\bkeywords\x18\x04 \x01(\tR\bkeywords\x12\x14\n" +
	"\x05sorts\x18\x05 \x03(\tR\x05sorts\x12\x1d\n" +
	"\n" +
	"date_range\x18\x06 \x03(\tR\tdateRange\x12\x10\n" +
	"\x03ids\x18\a \x03(\x03R\x03ids\x12\x0e\n" +
	"\x02id\x18\b \x01(\x03R\x02id\x12\x15\n" +
	"\x06spu_id\x18\t \x01(\x03R\x05spuId\x12\x16\n" +
	"\x06unique\x18\n" +
	" \x01(\tR\x06unique\x12\x12\n" +
	"\x04type\x18\v \x01(\tR\x04type\x12\x17\n" +
	"\ashop_id\x18\f \x01(\x03R\x06shopId\x12\x1f\n" +
	"\vcategory_id\x18\r \x01(\x03R\n" +
	"categoryId\x12\x1f\n" +
	"\vtaxonomy_id\x18\x0e \x01(\x03R\n" +
	"taxonomyId\x12\x19\n" +
	"\bbrand_id\x18\x0f \x01(\x05R\abrandId\x12\x12\n" +
	"\x04name\x18\x10 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"is_virtual\x18\x11 \x01(\tR\tisVirtual\x12 \n" +
	"\fis_many_spec\x18\x12 \x01(\tR\n" +
	"isManySpec\x12\"\n" +
	"\ris_open_weigh\x18\x13 \x01(\tR\visOpenWeigh\x12\x12\n" +
	"\x04code\x18\x14 \x01(\tR\x04code\x12(\n" +
	"\x10is_multi_barcode\x18\x15 \x01(\tR\x0eisMultiBarcode\x12\x17\n" +
	"\aunit_id\x18\x16 \x01(\x05R\x06unitId\x12\x1b\n" +
	"\tunit_type\x18\x17 \x01(\tR\bunitType\x12\x1c\n" +
	"\tinventory\x18\x18 \x01(\x03R\tinventory\x12\x1b\n" +
	"\tis_shelve\x18\x19 \x01(\tR\bisShelve\x12\x1b\n" +
	"\tsell_mode\x18\x1a \x01(\tR\bsellMode\x12\x18\n" +
	"\acommand\x18\x1b \x01(\tR\acommand\x12 \n" +
	"\fvip_level_id\x18\x1c \x01(\x05R\n" +
	"vipLevelId\x12!\n" +
	"\fvip_discount\x18\x1d \x01(\x02R\vvipDiscount\x12\"\n" +
	"\rsvip_level_id\x18\x1e \x01(\x05R\vsvipLevelId\x12#\n" +
	"\rsvip_discount\x18\x1f \x01(\x02R\fsvipDiscount\"`\n" +
	"\fShowListData\x12#\n" +
	"\x05pager\x18\x02 \x01(\v2\r.common.PagerR\x05pager\x12+\n" +
	"\x04list\x18\x03 \x03(\v2\x17.services.ShowGoodsInfoR\x04list\"\xd7\x02\n" +
	"\x11ShowGoodsResponse\x12\x10\n" +
	"\x03msg\x18\x01 \x01(\tR\x03msg\x12*\n" +
	"\x04list\x18\x03 \x01(\v2\x16.services.ShowListDataR\x04list\x120\n" +
	"\x06detail\x18\x04 \x01(\v2\x18.services.ShowDetailDataR\x06detail\x129\n" +
	"\trealPrice\x18\x05 \x01(\v2\x1b.services.ShowRealPriceDataR\trealPrice\x120\n" +
	"\x06qrcode\x18\x06 \x01(\v2\x18.services.ShowQrcodeDataR\x06qrcode\x120\n" +
	"\x06poster\x18\a \x01(\v2\x18.services.ShowPosterDataR\x06poster\x123\n" +
	"\agetAttr\x18\b \x01(\v2\x19.services.ShowGetAttrDataR\agetAttr2\xb2\x03\n" +
	"\x10ShowGoodsService\x12A\n" +
	"\x04List\x12\x1a.services.ShowGoodsRequest\x1a\x1b.services.ShowGoodsResponse\"\x00\x12C\n" +
	"\x06Detail\x12\x1a.services.ShowGoodsRequest\x1a\x1b.services.ShowGoodsResponse\"\x00\x12F\n" +
	"\tRealPrice\x12\x1a.services.ShowGoodsRequest\x1a\x1b.services.ShowGoodsResponse\"\x00\x12D\n" +
	"\aGetAttr\x12\x1a.services.ShowGoodsRequest\x1a\x1b.services.ShowGoodsResponse\"\x00\x12C\n" +
	"\x06Qrcode\x12\x1a.services.ShowGoodsRequest\x1a\x1b.services.ShowGoodsResponse\"\x00\x12C\n" +
	"\x06Poster\x12\x1a.services.ShowGoodsRequest\x1a\x1b.services.ShowGoodsResponse\"\x00B\rZ\v/.;servicesb\x06proto3"

var (
	file_showGoodsService_proto_rawDescOnce sync.Once
	file_showGoodsService_proto_rawDescData []byte
)

func file_showGoodsService_proto_rawDescGZIP() []byte {
	file_showGoodsService_proto_rawDescOnce.Do(func() {
		file_showGoodsService_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_showGoodsService_proto_rawDesc), len(file_showGoodsService_proto_rawDesc)))
	})
	return file_showGoodsService_proto_rawDescData
}

var file_showGoodsService_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_showGoodsService_proto_goTypes = []any{
	(*ShowRealPriceData)(nil),  // 0: services.ShowRealPriceData
	(*ShowQrcodeData)(nil),     // 1: services.ShowQrcodeData
	(*ShowPosterData)(nil),     // 2: services.ShowPosterData
	(*ShowGetAttrData)(nil),    // 3: services.ShowGetAttrData
	(*ShowDetailData)(nil),     // 4: services.ShowDetailData
	(*ShowGoodsInfo)(nil),      // 5: services.ShowGoodsInfo
	(*ShowGoodsAttr)(nil),      // 6: services.ShowGoodsAttr
	(*ShowGoodsSpu)(nil),       // 7: services.ShowGoodsSpu
	(*ShowGoodsSku)(nil),       // 8: services.ShowGoodsSku
	(*ShowGoodsRequest)(nil),   // 9: services.ShowGoodsRequest
	(*ShowListData)(nil),       // 10: services.ShowListData
	(*ShowGoodsResponse)(nil),  // 11: services.ShowGoodsResponse
	nil,                        // 12: services.ShowGetAttrData.ProductValueEntry
	nil,                        // 13: services.ShowDetailData.ProductValueEntry
	(*ShowGoodsAttrValue)(nil), // 14: services.ShowGoodsAttr.value
	(*common.Pager)(nil),       // 15: common.Pager
}
var file_showGoodsService_proto_depIdxs = []int32{
	7,  // 0: services.ShowGetAttrData.goodsInfo:type_name -> services.ShowGoodsSpu
	6,  // 1: services.ShowGetAttrData.productAttr:type_name -> services.ShowGoodsAttr
	12, // 2: services.ShowGetAttrData.productValue:type_name -> services.ShowGetAttrData.ProductValueEntry
	7,  // 3: services.ShowDetailData.goodsInfo:type_name -> services.ShowGoodsSpu
	6,  // 4: services.ShowDetailData.productAttr:type_name -> services.ShowGoodsAttr
	13, // 5: services.ShowDetailData.productValue:type_name -> services.ShowDetailData.ProductValueEntry
	5,  // 6: services.ShowDetailData.good_list:type_name -> services.ShowGoodsInfo
	14, // 7: services.ShowGoodsAttr.attr_value:type_name -> services.ShowGoodsAttr.value
	15, // 8: services.ShowListData.pager:type_name -> common.Pager
	5,  // 9: services.ShowListData.list:type_name -> services.ShowGoodsInfo
	10, // 10: services.ShowGoodsResponse.list:type_name -> services.ShowListData
	4,  // 11: services.ShowGoodsResponse.detail:type_name -> services.ShowDetailData
	0,  // 12: services.ShowGoodsResponse.realPrice:type_name -> services.ShowRealPriceData
	1,  // 13: services.ShowGoodsResponse.qrcode:type_name -> services.ShowQrcodeData
	2,  // 14: services.ShowGoodsResponse.poster:type_name -> services.ShowPosterData
	3,  // 15: services.ShowGoodsResponse.getAttr:type_name -> services.ShowGetAttrData
	8,  // 16: services.ShowGetAttrData.ProductValueEntry.value:type_name -> services.ShowGoodsSku
	8,  // 17: services.ShowDetailData.ProductValueEntry.value:type_name -> services.ShowGoodsSku
	9,  // 18: services.ShowGoodsService.List:input_type -> services.ShowGoodsRequest
	9,  // 19: services.ShowGoodsService.Detail:input_type -> services.ShowGoodsRequest
	9,  // 20: services.ShowGoodsService.RealPrice:input_type -> services.ShowGoodsRequest
	9,  // 21: services.ShowGoodsService.GetAttr:input_type -> services.ShowGoodsRequest
	9,  // 22: services.ShowGoodsService.Qrcode:input_type -> services.ShowGoodsRequest
	9,  // 23: services.ShowGoodsService.Poster:input_type -> services.ShowGoodsRequest
	11, // 24: services.ShowGoodsService.List:output_type -> services.ShowGoodsResponse
	11, // 25: services.ShowGoodsService.Detail:output_type -> services.ShowGoodsResponse
	11, // 26: services.ShowGoodsService.RealPrice:output_type -> services.ShowGoodsResponse
	11, // 27: services.ShowGoodsService.GetAttr:output_type -> services.ShowGoodsResponse
	11, // 28: services.ShowGoodsService.Qrcode:output_type -> services.ShowGoodsResponse
	11, // 29: services.ShowGoodsService.Poster:output_type -> services.ShowGoodsResponse
	24, // [24:30] is the sub-list for method output_type
	18, // [18:24] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_showGoodsService_proto_init() }
func file_showGoodsService_proto_init() {
	if File_showGoodsService_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_showGoodsService_proto_rawDesc), len(file_showGoodsService_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_showGoodsService_proto_goTypes,
		DependencyIndexes: file_showGoodsService_proto_depIdxs,
		MessageInfos:      file_showGoodsService_proto_msgTypes,
	}.Build()
	File_showGoodsService_proto = out.File
	file_showGoodsService_proto_goTypes = nil
	file_showGoodsService_proto_depIdxs = nil
}
