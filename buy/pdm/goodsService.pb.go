// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: goodsService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//前端商品信息
type Goods struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                         int64               `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	SpuId                      int64               `protobuf:"varint,2,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`
	MasterSkuId                int64               `protobuf:"varint,3,opt,name=master_sku_id,json=masterSkuId,proto3" json:"master_sku_id"`
	Type                       string              `protobuf:"bytes,5,opt,name=type,proto3" json:"type"`                                         //类型
	Title                      string              `protobuf:"bytes,6,opt,name=title,proto3" json:"title"`                                       //标题
	TitleColor                 string              `protobuf:"bytes,7,opt,name=title_color,json=titleColor,proto3" json:"title_color"`           //标题颜色
	SimpleDesc                 string              `protobuf:"bytes,8,opt,name=simple_desc,json=simpleDesc,proto3" json:"simple_desc"`           //简单描述
	Inventory                  int32               `protobuf:"varint,9,opt,name=inventory,proto3" json:"inventory"`                              //库存数量
	InventoryUnit              string              `protobuf:"bytes,10,opt,name=inventory_unit,json=inventoryUnit,proto3" json:"inventory_unit"` //库存单位
	ThumbUrl                   string              `protobuf:"bytes,11,opt,name=thumb_url,json=thumbUrl,proto3" json:"thumb_url"`
	ImageUrl                   string              `protobuf:"bytes,12,opt,name=image_url,json=imageUrl,proto3" json:"image_url"`                                        //封面URL
	VideoUrl                   string              `protobuf:"bytes,13,opt,name=video_url,json=videoUrl,proto3" json:"video_url"`                                        //视频URL
	IsManySpec                 bool                `protobuf:"varint,14,opt,name=is_many_spec,json=isManySpec,proto3" json:"is_many_spec"`                               //是否多规格商品
	IsDeductionInventory       bool                `protobuf:"varint,15,opt,name=is_deduction_inventory,json=isDeductionInventory,proto3" json:"is_deduction_inventory"` //是否扣减库存
	IsListed                   bool                `protobuf:"varint,16,opt,name=is_listed,json=isListed,proto3" json:"is_listed"`                                       //是否上架
	IsFavor                    bool                `protobuf:"varint,17,opt,name=is_favor,json=isFavor,proto3" json:"is_favor"`                                          //是否已收藏
	ShopId                     int64               `protobuf:"varint,18,opt,name=shop_id,json=shopId,proto3" json:"shop_id"`                                             //分店ID
	BrandId                    int32               `protobuf:"varint,19,opt,name=brand_id,json=brandId,proto3" json:"brand_id"`                                          //品牌ID
	BrandName                  string              `protobuf:"bytes,20,opt,name=brand_name,json=brandName,proto3" json:"brand_name"`                                     //品牌名称
	Barcode                    string              `protobuf:"bytes,21,opt,name=barcode,proto3" json:"barcode"`                                                          //条码
	TaxonomyId                 int64               `protobuf:"varint,22,opt,name=taxonomy_id,json=taxonomyId,proto3" json:"taxonomy_id"`                                 //
	CategoryId                 int64               `protobuf:"varint,23,opt,name=category_id,json=categoryId,proto3" json:"category_id"`
	ContentWeb                 string              `protobuf:"bytes,24,opt,name=content_web,json=contentWeb,proto3" json:"content_web"` //web内容
	ContentApp                 string              `protobuf:"bytes,25,opt,name=content_app,json=contentApp,proto3" json:"content_app"` //app内容
	OriginalPrice              string              `protobuf:"bytes,30,opt,name=original_price,json=originalPrice,proto3" json:"original_price"`
	MinOriginalPrice           int64               `protobuf:"varint,31,opt,name=min_original_price,json=minOriginalPrice,proto3" json:"min_original_price"`
	MaxOriginalPrice           int64               `protobuf:"varint,32,opt,name=max_original_price,json=maxOriginalPrice,proto3" json:"max_original_price"`
	Price                      string              `protobuf:"bytes,33,opt,name=price,proto3" json:"price"`
	MinPrice                   int64               `protobuf:"varint,34,opt,name=min_price,json=minPrice,proto3" json:"min_price"`
	MaxPrice                   int64               `protobuf:"varint,35,opt,name=max_price,json=maxPrice,proto3" json:"max_price"`
	GiveIntegral               int64               `protobuf:"varint,36,opt,name=give_integral,json=giveIntegral,proto3" json:"give_integral"`
	BuyMinNumber               int32               `protobuf:"varint,37,opt,name=buy_min_number,json=buyMinNumber,proto3" json:"buy_min_number"`
	BuyMaxNumber               int32               `protobuf:"varint,38,opt,name=buy_max_number,json=buyMaxNumber,proto3" json:"buy_max_number"`
	PhotoCount                 int32               `protobuf:"varint,39,opt,name=photo_count,json=photoCount,proto3" json:"photo_count"`    //相册数量
	SalesCount                 int32               `protobuf:"varint,40,opt,name=sales_count,json=salesCount,proto3" json:"sales_count"`    //销售量
	AccessCount                int32               `protobuf:"varint,41,opt,name=access_count,json=accessCount,proto3" json:"access_count"` //访问量
	ShowFieldOriginalPriceText string              `protobuf:"bytes,42,opt,name=show_field_original_price_text,json=showFieldOriginalPriceText,proto3" json:"show_field_original_price_text"`
	ShowFieldPriceText         string              `protobuf:"bytes,43,opt,name=show_field_price_text,json=showFieldPriceText,proto3" json:"show_field_price_text"`
	GoodsUrl                   string              `protobuf:"bytes,44,opt,name=goods_url,json=goodsUrl,proto3" json:"goods_url"`
	CategoryNames              []string            `protobuf:"bytes,45,rep,name=category_names,json=categoryNames,proto3" json:"category_names"`
	SpecBase                   []*GoodsSpecBase    `protobuf:"bytes,46,rep,name=spec_base,json=specBase,proto3" json:"spec_base"`
	Specifications             *GoodsSpecification `protobuf:"bytes,47,opt,name=specifications,proto3" json:"specifications"`
	Photos                     []*GoodsPhoto       `protobuf:"bytes,48,rep,name=photos,proto3" json:"photos"`
	CommentsCount              int32               `protobuf:"varint,50,opt,name=comments_count,json=commentsCount,proto3" json:"comments_count"`
	CommentsScore              *CommentScore       `protobuf:"bytes,51,opt,name=comments_score,json=commentsScore,proto3" json:"comments_score"`
	CommentsData               []*CommentInfo      `protobuf:"bytes,52,rep,name=comments_data,json=commentsData,proto3" json:"comments_data"`
}

func (x *Goods) Reset() {
	*x = Goods{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Goods) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Goods) ProtoMessage() {}

func (x *Goods) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Goods.ProtoReflect.Descriptor instead.
func (*Goods) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{0}
}

func (x *Goods) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Goods) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *Goods) GetMasterSkuId() int64 {
	if x != nil {
		return x.MasterSkuId
	}
	return 0
}

func (x *Goods) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Goods) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Goods) GetTitleColor() string {
	if x != nil {
		return x.TitleColor
	}
	return ""
}

func (x *Goods) GetSimpleDesc() string {
	if x != nil {
		return x.SimpleDesc
	}
	return ""
}

func (x *Goods) GetInventory() int32 {
	if x != nil {
		return x.Inventory
	}
	return 0
}

func (x *Goods) GetInventoryUnit() string {
	if x != nil {
		return x.InventoryUnit
	}
	return ""
}

func (x *Goods) GetThumbUrl() string {
	if x != nil {
		return x.ThumbUrl
	}
	return ""
}

func (x *Goods) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *Goods) GetVideoUrl() string {
	if x != nil {
		return x.VideoUrl
	}
	return ""
}

func (x *Goods) GetIsManySpec() bool {
	if x != nil {
		return x.IsManySpec
	}
	return false
}

func (x *Goods) GetIsDeductionInventory() bool {
	if x != nil {
		return x.IsDeductionInventory
	}
	return false
}

func (x *Goods) GetIsListed() bool {
	if x != nil {
		return x.IsListed
	}
	return false
}

func (x *Goods) GetIsFavor() bool {
	if x != nil {
		return x.IsFavor
	}
	return false
}

func (x *Goods) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *Goods) GetBrandId() int32 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *Goods) GetBrandName() string {
	if x != nil {
		return x.BrandName
	}
	return ""
}

func (x *Goods) GetBarcode() string {
	if x != nil {
		return x.Barcode
	}
	return ""
}

func (x *Goods) GetTaxonomyId() int64 {
	if x != nil {
		return x.TaxonomyId
	}
	return 0
}

func (x *Goods) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *Goods) GetContentWeb() string {
	if x != nil {
		return x.ContentWeb
	}
	return ""
}

func (x *Goods) GetContentApp() string {
	if x != nil {
		return x.ContentApp
	}
	return ""
}

func (x *Goods) GetOriginalPrice() string {
	if x != nil {
		return x.OriginalPrice
	}
	return ""
}

func (x *Goods) GetMinOriginalPrice() int64 {
	if x != nil {
		return x.MinOriginalPrice
	}
	return 0
}

func (x *Goods) GetMaxOriginalPrice() int64 {
	if x != nil {
		return x.MaxOriginalPrice
	}
	return 0
}

func (x *Goods) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *Goods) GetMinPrice() int64 {
	if x != nil {
		return x.MinPrice
	}
	return 0
}

func (x *Goods) GetMaxPrice() int64 {
	if x != nil {
		return x.MaxPrice
	}
	return 0
}

func (x *Goods) GetGiveIntegral() int64 {
	if x != nil {
		return x.GiveIntegral
	}
	return 0
}

func (x *Goods) GetBuyMinNumber() int32 {
	if x != nil {
		return x.BuyMinNumber
	}
	return 0
}

func (x *Goods) GetBuyMaxNumber() int32 {
	if x != nil {
		return x.BuyMaxNumber
	}
	return 0
}

func (x *Goods) GetPhotoCount() int32 {
	if x != nil {
		return x.PhotoCount
	}
	return 0
}

func (x *Goods) GetSalesCount() int32 {
	if x != nil {
		return x.SalesCount
	}
	return 0
}

func (x *Goods) GetAccessCount() int32 {
	if x != nil {
		return x.AccessCount
	}
	return 0
}

func (x *Goods) GetShowFieldOriginalPriceText() string {
	if x != nil {
		return x.ShowFieldOriginalPriceText
	}
	return ""
}

func (x *Goods) GetShowFieldPriceText() string {
	if x != nil {
		return x.ShowFieldPriceText
	}
	return ""
}

func (x *Goods) GetGoodsUrl() string {
	if x != nil {
		return x.GoodsUrl
	}
	return ""
}

func (x *Goods) GetCategoryNames() []string {
	if x != nil {
		return x.CategoryNames
	}
	return nil
}

func (x *Goods) GetSpecBase() []*GoodsSpecBase {
	if x != nil {
		return x.SpecBase
	}
	return nil
}

func (x *Goods) GetSpecifications() *GoodsSpecification {
	if x != nil {
		return x.Specifications
	}
	return nil
}

func (x *Goods) GetPhotos() []*GoodsPhoto {
	if x != nil {
		return x.Photos
	}
	return nil
}

func (x *Goods) GetCommentsCount() int32 {
	if x != nil {
		return x.CommentsCount
	}
	return 0
}

func (x *Goods) GetCommentsScore() *CommentScore {
	if x != nil {
		return x.CommentsScore
	}
	return nil
}

func (x *Goods) GetCommentsData() []*CommentInfo {
	if x != nil {
		return x.CommentsData
	}
	return nil
}

type GoodsSpecBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title  string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title"`
	Values []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values"`
}

func (x *GoodsSpecBase) Reset() {
	*x = GoodsSpecBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsSpecBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsSpecBase) ProtoMessage() {}

func (x *GoodsSpecBase) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsSpecBase.ProtoReflect.Descriptor instead.
func (*GoodsSpecBase) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{1}
}

func (x *GoodsSpecBase) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GoodsSpecBase) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type GoodsSpecification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Choose []*GoodsSpecChoose `protobuf:"bytes,1,rep,name=choose,proto3" json:"choose"`
}

func (x *GoodsSpecification) Reset() {
	*x = GoodsSpecification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsSpecification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsSpecification) ProtoMessage() {}

func (x *GoodsSpecification) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsSpecification.ProtoReflect.Descriptor instead.
func (*GoodsSpecification) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{2}
}

func (x *GoodsSpecification) GetChoose() []*GoodsSpecChoose {
	if x != nil {
		return x.Choose
	}
	return nil
}

type GoodsSpecChoose struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64                   `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Name    string                  `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	GoodsId int64                   `protobuf:"varint,3,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	Value   []*GoodsSpecChooseValue `protobuf:"bytes,4,rep,name=value,proto3" json:"value"`
}

func (x *GoodsSpecChoose) Reset() {
	*x = GoodsSpecChoose{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsSpecChoose) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsSpecChoose) ProtoMessage() {}

func (x *GoodsSpecChoose) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsSpecChoose.ProtoReflect.Descriptor instead.
func (*GoodsSpecChoose) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{3}
}

func (x *GoodsSpecChoose) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GoodsSpecChoose) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GoodsSpecChoose) GetGoodsId() int64 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *GoodsSpecChoose) GetValue() []*GoodsSpecChooseValue {
	if x != nil {
		return x.Value
	}
	return nil
}

type GoodsSpecChooseValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	ImageUrl string `protobuf:"bytes,2,opt,name=image_url,json=imageUrl,proto3" json:"image_url"`
}

func (x *GoodsSpecChooseValue) Reset() {
	*x = GoodsSpecChooseValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsSpecChooseValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsSpecChooseValue) ProtoMessage() {}

func (x *GoodsSpecChooseValue) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsSpecChooseValue.ProtoReflect.Descriptor instead.
func (*GoodsSpecChooseValue) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{4}
}

func (x *GoodsSpecChooseValue) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GoodsSpecChooseValue) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

type GoodsParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title  string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title"`
	Values []string `protobuf:"bytes,2,rep,name=values,proto3" json:"values"`
}

func (x *GoodsParameter) Reset() {
	*x = GoodsParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsParameter) ProtoMessage() {}

func (x *GoodsParameter) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsParameter.ProtoReflect.Descriptor instead.
func (*GoodsParameter) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{5}
}

func (x *GoodsParameter) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GoodsParameter) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type SpecDetailData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpecBase       *SpecDetailDataBase      `protobuf:"bytes,1,opt,name=spec_base,json=specBase,proto3" json:"spec_base"`
	ExtendElements []*SpecDetailDataExtends `protobuf:"bytes,2,rep,name=extend_elements,json=extendElements,proto3" json:"extend_elements"`
}

func (x *SpecDetailData) Reset() {
	*x = SpecDetailData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecDetailData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecDetailData) ProtoMessage() {}

func (x *SpecDetailData) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecDetailData.ProtoReflect.Descriptor instead.
func (*SpecDetailData) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{6}
}

func (x *SpecDetailData) GetSpecBase() *SpecDetailDataBase {
	if x != nil {
		return x.SpecBase
	}
	return nil
}

func (x *SpecDetailData) GetExtendElements() []*SpecDetailDataExtends {
	if x != nil {
		return x.ExtendElements
	}
	return nil
}

type SpecDetailDataBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	GoodsId       int64  `protobuf:"varint,2,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	Price         int64  `protobuf:"varint,3,opt,name=price,proto3" json:"price"`
	Inventory     int32  `protobuf:"varint,4,opt,name=inventory,proto3" json:"inventory"`
	Weight        int64  `protobuf:"varint,5,opt,name=weight,proto3" json:"weight"`
	Volume        int64  `protobuf:"varint,6,opt,name=volume,proto3" json:"volume"`
	Coding        string `protobuf:"bytes,7,opt,name=coding,proto3" json:"coding"`
	Barcode       string `protobuf:"bytes,8,opt,name=barcode,proto3" json:"barcode"`
	OriginalPrice int64  `protobuf:"varint,9,opt,name=original_price,json=originalPrice,proto3" json:"original_price"`
}

func (x *SpecDetailDataBase) Reset() {
	*x = SpecDetailDataBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecDetailDataBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecDetailDataBase) ProtoMessage() {}

func (x *SpecDetailDataBase) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecDetailDataBase.ProtoReflect.Descriptor instead.
func (*SpecDetailDataBase) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{7}
}

func (x *SpecDetailDataBase) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpecDetailDataBase) GetGoodsId() int64 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *SpecDetailDataBase) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SpecDetailDataBase) GetInventory() int32 {
	if x != nil {
		return x.Inventory
	}
	return 0
}

func (x *SpecDetailDataBase) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *SpecDetailDataBase) GetVolume() int64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *SpecDetailDataBase) GetCoding() string {
	if x != nil {
		return x.Coding
	}
	return ""
}

func (x *SpecDetailDataBase) GetBarcode() string {
	if x != nil {
		return x.Barcode
	}
	return ""
}

func (x *SpecDetailDataBase) GetOriginalPrice() int64 {
	if x != nil {
		return x.OriginalPrice
	}
	return 0
}

type SpecDetailDataExtends struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
}

func (x *SpecDetailDataExtends) Reset() {
	*x = SpecDetailDataExtends{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecDetailDataExtends) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecDetailDataExtends) ProtoMessage() {}

func (x *SpecDetailDataExtends) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecDetailDataExtends.ProtoReflect.Descriptor instead.
func (*SpecDetailDataExtends) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{8}
}

func (x *SpecDetailDataExtends) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GoodsPhoto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	ImageUrl    string `protobuf:"bytes,2,opt,name=image_url,json=imageUrl,proto3" json:"image_url"`
	ImageOldUrl string `protobuf:"bytes,3,opt,name=image_old_url,json=imageOldUrl,proto3" json:"image_old_url"`
}

func (x *GoodsPhoto) Reset() {
	*x = GoodsPhoto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsPhoto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsPhoto) ProtoMessage() {}

func (x *GoodsPhoto) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsPhoto.ProtoReflect.Descriptor instead.
func (*GoodsPhoto) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{9}
}

func (x *GoodsPhoto) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GoodsPhoto) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *GoodsPhoto) GetImageOldUrl() string {
	if x != nil {
		return x.ImageOldUrl
	}
	return ""
}

type CommentScore struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Avg    float32                 `protobuf:"fixed32,1,opt,name=avg,proto3" json:"avg"`
	Rate   int64                   `protobuf:"varint,2,opt,name=rate,proto3" json:"rate"`
	Rating []*CommentScoreRateInfo `protobuf:"bytes,3,rep,name=rating,proto3" json:"rating"`
}

func (x *CommentScore) Reset() {
	*x = CommentScore{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentScore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentScore) ProtoMessage() {}

func (x *CommentScore) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentScore.ProtoReflect.Descriptor instead.
func (*CommentScore) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{10}
}

func (x *CommentScore) GetAvg() float32 {
	if x != nil {
		return x.Avg
	}
	return 0
}

func (x *CommentScore) GetRate() int64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

func (x *CommentScore) GetRating() []*CommentScoreRateInfo {
	if x != nil {
		return x.Rating
	}
	return nil
}

type CommentInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id           int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	OrderId      int64  `protobuf:"varint,2,opt,name=order_id,json=orderId,proto3" json:"order_id"`
	UserId       int64  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id"`
	BusinessType string `protobuf:"bytes,4,opt,name=business_type,json=businessType,proto3" json:"business_type"`
	Content      string `protobuf:"bytes,5,opt,name=content,proto3" json:"content"`
	Reply        string `protobuf:"bytes,6,opt,name=reply,proto3" json:"reply"`
	IsReply      string `protobuf:"bytes,7,opt,name=is_reply,json=isReply,proto3" json:"is_reply"`
	Rating       int32  `protobuf:"varint,8,opt,name=rating,proto3" json:"rating"`
	ImageUrl     string `protobuf:"bytes,9,opt,name=image_url,json=imageUrl,proto3" json:"image_url"`
	IsAnonymous  string `protobuf:"bytes,10,opt,name=is_anonymous,json=isAnonymous,proto3" json:"is_anonymous"`
	ReplyTime    string `protobuf:"bytes,11,opt,name=reply_time,json=replyTime,proto3" json:"reply_time"`
	CreatedAt    string `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt    string `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
}

func (x *CommentInfo) Reset() {
	*x = CommentInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentInfo) ProtoMessage() {}

func (x *CommentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentInfo.ProtoReflect.Descriptor instead.
func (*CommentInfo) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{11}
}

func (x *CommentInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CommentInfo) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *CommentInfo) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CommentInfo) GetBusinessType() string {
	if x != nil {
		return x.BusinessType
	}
	return ""
}

func (x *CommentInfo) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CommentInfo) GetReply() string {
	if x != nil {
		return x.Reply
	}
	return ""
}

func (x *CommentInfo) GetIsReply() string {
	if x != nil {
		return x.IsReply
	}
	return ""
}

func (x *CommentInfo) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *CommentInfo) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *CommentInfo) GetIsAnonymous() string {
	if x != nil {
		return x.IsAnonymous
	}
	return ""
}

func (x *CommentInfo) GetReplyTime() string {
	if x != nil {
		return x.ReplyTime
	}
	return ""
}

func (x *CommentInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CommentInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

//参与的活动
type PluginsPromotion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                                       //活动ID
	Code              string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code"`                                                    //活动编码:如：coupon_20210101212
	Title             string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title"`                                                  //活动标题
	Type              string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type"`                                                    //活动类型:Coupon优惠劵/满减送/限时折扣/秒杀/拼团/通用
	Subtype           string   `protobuf:"bytes,5,opt,name=subtype,proto3" json:"subtype"`                                              //活动子类型
	Tag               string   `protobuf:"bytes,6,opt,name=tag,proto3" json:"tag"`                                                      //标签
	PreferentialItems []string `protobuf:"bytes,7,rep,name=preferential_items,json=preferentialItems,proto3" json:"preferential_items"` //优惠项目描述
}

func (x *PluginsPromotion) Reset() {
	*x = PluginsPromotion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginsPromotion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginsPromotion) ProtoMessage() {}

func (x *PluginsPromotion) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginsPromotion.ProtoReflect.Descriptor instead.
func (*PluginsPromotion) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{12}
}

func (x *PluginsPromotion) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PluginsPromotion) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PluginsPromotion) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PluginsPromotion) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PluginsPromotion) GetSubtype() string {
	if x != nil {
		return x.Subtype
	}
	return ""
}

func (x *PluginsPromotion) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *PluginsPromotion) GetPreferentialItems() []string {
	if x != nil {
		return x.PreferentialItems
	}
	return nil
}

type CartTotalInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuyNumber  int32 `protobuf:"varint,1,opt,name=buy_number,json=buyNumber,proto3" json:"buy_number"`
	TotalPrice int64 `protobuf:"varint,2,opt,name=total_price,json=totalPrice,proto3" json:"total_price"`
}

func (x *CartTotalInfo) Reset() {
	*x = CartTotalInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CartTotalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartTotalInfo) ProtoMessage() {}

func (x *CartTotalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartTotalInfo.ProtoReflect.Descriptor instead.
func (*CartTotalInfo) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{13}
}

func (x *CartTotalInfo) GetBuyNumber() int32 {
	if x != nil {
		return x.BuyNumber
	}
	return 0
}

func (x *CartTotalInfo) GetTotalPrice() int64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

type BuyButton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count  int32                `protobuf:"varint,1,opt,name=count,proto3" json:"count"`
	Error  string               `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
	IsBuy  bool                 `protobuf:"varint,3,opt,name=is_buy,json=isBuy,proto3" json:"is_buy"`
	IsShow bool                 `protobuf:"varint,4,opt,name=is_show,json=isShow,proto3" json:"is_show"`
	IsCart bool                 `protobuf:"varint,5,opt,name=is_cart,json=isCart,proto3" json:"is_cart"`
	Data   []*BuyButtonDataList `protobuf:"bytes,6,rep,name=data,proto3" json:"data"`
}

func (x *BuyButton) Reset() {
	*x = BuyButton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyButton) ProtoMessage() {}

func (x *BuyButton) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyButton.ProtoReflect.Descriptor instead.
func (*BuyButton) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{14}
}

func (x *BuyButton) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *BuyButton) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *BuyButton) GetIsBuy() bool {
	if x != nil {
		return x.IsBuy
	}
	return false
}

func (x *BuyButton) GetIsShow() bool {
	if x != nil {
		return x.IsShow
	}
	return false
}

func (x *BuyButton) GetIsCart() bool {
	if x != nil {
		return x.IsCart
	}
	return false
}

func (x *BuyButton) GetData() []*BuyButtonDataList {
	if x != nil {
		return x.Data
	}
	return nil
}

//中间切换导航
type MiddleTabNav struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	Event string `protobuf:"bytes,2,opt,name=event,proto3" json:"event"`
}

func (x *MiddleTabNav) Reset() {
	*x = MiddleTabNav{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiddleTabNav) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiddleTabNav) ProtoMessage() {}

func (x *MiddleTabNav) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiddleTabNav.ProtoReflect.Descriptor instead.
func (*MiddleTabNav) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{15}
}

func (x *MiddleTabNav) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MiddleTabNav) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

//更多列表导航
type MoreListNav struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	Url  string `protobuf:"bytes,2,opt,name=url,proto3" json:"url"`
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon"`
}

func (x *MoreListNav) Reset() {
	*x = MoreListNav{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoreListNav) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoreListNav) ProtoMessage() {}

func (x *MoreListNav) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoreListNav.ProtoReflect.Descriptor instead.
func (*MoreListNav) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{16}
}

func (x *MoreListNav) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MoreListNav) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MoreListNav) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type PluginCoupon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *PluginCouponBaseInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base"`
	Data *PluginCouponDataInfo `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *PluginCoupon) Reset() {
	*x = PluginCoupon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginCoupon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginCoupon) ProtoMessage() {}

func (x *PluginCoupon) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginCoupon.ProtoReflect.Descriptor instead.
func (*PluginCoupon) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{17}
}

func (x *PluginCoupon) GetBase() *PluginCouponBaseInfo {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *PluginCoupon) GetData() *PluginCouponDataInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type PluginIntellectTools struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseBottom *IntellectBaseBottom `protobuf:"bytes,1,opt,name=base_bottom,json=baseBottom,proto3" json:"base_bottom"`
	ContentTop *IntellectContentTop `protobuf:"bytes,2,opt,name=content_top,json=contentTop,proto3" json:"content_top"`
}

func (x *PluginIntellectTools) Reset() {
	*x = PluginIntellectTools{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginIntellectTools) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginIntellectTools) ProtoMessage() {}

func (x *PluginIntellectTools) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginIntellectTools.ProtoReflect.Descriptor instead.
func (*PluginIntellectTools) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{18}
}

func (x *PluginIntellectTools) GetBaseBottom() *IntellectBaseBottom {
	if x != nil {
		return x.BaseBottom
	}
	return nil
}

func (x *PluginIntellectTools) GetContentTop() *IntellectContentTop {
	if x != nil {
		return x.ContentTop
	}
	return nil
}

type IntellectBaseBottom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title"`
	Msg   string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
}

func (x *IntellectBaseBottom) Reset() {
	*x = IntellectBaseBottom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntellectBaseBottom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntellectBaseBottom) ProtoMessage() {}

func (x *IntellectBaseBottom) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntellectBaseBottom.ProtoReflect.Descriptor instead.
func (*IntellectBaseBottom) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{19}
}

func (x *IntellectBaseBottom) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *IntellectBaseBottom) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type IntellectContentTop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title   string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title"`
	MsgList []string `protobuf:"bytes,2,rep,name=msg_list,json=msgList,proto3" json:"msg_list"`
}

func (x *IntellectContentTop) Reset() {
	*x = IntellectContentTop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntellectContentTop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntellectContentTop) ProtoMessage() {}

func (x *IntellectContentTop) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntellectContentTop.ProtoReflect.Descriptor instead.
func (*IntellectContentTop) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{20}
}

func (x *IntellectContentTop) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *IntellectContentTop) GetMsgList() []string {
	if x != nil {
		return x.MsgList
	}
	return nil
}

type PluginSeckill struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Icon       string                 `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon"`
	Title      string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
	IsValid    bool                   `protobuf:"varint,3,opt,name=is_valid,json=isValid,proto3" json:"is_valid"`
	BgImageUrl string                 `protobuf:"bytes,4,opt,name=bg_image_url,json=bgImageUrl,proto3" json:"bg_image_url"`
	Time       *PluginSeckillTimeInfo `protobuf:"bytes,5,opt,name=time,proto3" json:"time"`
}

func (x *PluginSeckill) Reset() {
	*x = PluginSeckill{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginSeckill) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginSeckill) ProtoMessage() {}

func (x *PluginSeckill) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginSeckill.ProtoReflect.Descriptor instead.
func (*PluginSeckill) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{21}
}

func (x *PluginSeckill) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *PluginSeckill) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PluginSeckill) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *PluginSeckill) GetBgImageUrl() string {
	if x != nil {
		return x.BgImageUrl
	}
	return ""
}

func (x *PluginSeckill) GetTime() *PluginSeckillTimeInfo {
	if x != nil {
		return x.Time
	}
	return nil
}

type GoodsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Goods                     *Goods                `protobuf:"bytes,1,opt,name=goods,proto3" json:"goods"`
	CartTotal                 *CartTotalInfo        `protobuf:"bytes,2,opt,name=cart_total,json=cartTotal,proto3" json:"cart_total"`
	BuyButton                 *BuyButton            `protobuf:"bytes,3,opt,name=buy_button,json=buyButton,proto3" json:"buy_button"`
	MiddleTabNavs             []*MiddleTabNav       `protobuf:"bytes,4,rep,name=middle_tab_navs,json=middleTabNavs,proto3" json:"middle_tab_navs"`
	MoreListNavs              []*MoreListNav        `protobuf:"bytes,5,rep,name=more_list_navs,json=moreListNavs,proto3" json:"more_list_navs"`
	PluginsCouponData         *PluginCoupon         `protobuf:"bytes,6,opt,name=plugins_coupon_data,json=pluginsCouponData,proto3" json:"plugins_coupon_data"`
	PluginsSeckillData        *PluginSeckill        `protobuf:"bytes,7,opt,name=Plugins_seckill_data,json=PluginsSeckillData,proto3" json:"Plugins_seckill_data"`
	PluginsPromotionData      *PluginsPromotion     `protobuf:"bytes,8,opt,name=Plugins_promotion_data,json=PluginsPromotionData,proto3" json:"Plugins_promotion_data"`
	PluginsIntellectToolsData *PluginIntellectTools `protobuf:"bytes,9,opt,name=plugins_intellect_tools_data,json=pluginsIntellectToolsData,proto3" json:"plugins_intellect_tools_data"`
}

func (x *GoodsData) Reset() {
	*x = GoodsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsData) ProtoMessage() {}

func (x *GoodsData) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsData.ProtoReflect.Descriptor instead.
func (*GoodsData) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{22}
}

func (x *GoodsData) GetGoods() *Goods {
	if x != nil {
		return x.Goods
	}
	return nil
}

func (x *GoodsData) GetCartTotal() *CartTotalInfo {
	if x != nil {
		return x.CartTotal
	}
	return nil
}

func (x *GoodsData) GetBuyButton() *BuyButton {
	if x != nil {
		return x.BuyButton
	}
	return nil
}

func (x *GoodsData) GetMiddleTabNavs() []*MiddleTabNav {
	if x != nil {
		return x.MiddleTabNavs
	}
	return nil
}

func (x *GoodsData) GetMoreListNavs() []*MoreListNav {
	if x != nil {
		return x.MoreListNavs
	}
	return nil
}

func (x *GoodsData) GetPluginsCouponData() *PluginCoupon {
	if x != nil {
		return x.PluginsCouponData
	}
	return nil
}

func (x *GoodsData) GetPluginsSeckillData() *PluginSeckill {
	if x != nil {
		return x.PluginsSeckillData
	}
	return nil
}

func (x *GoodsData) GetPluginsPromotionData() *PluginsPromotion {
	if x != nil {
		return x.PluginsPromotionData
	}
	return nil
}

func (x *GoodsData) GetPluginsIntellectToolsData() *PluginIntellectTools {
	if x != nil {
		return x.PluginsIntellectToolsData
	}
	return nil
}

type GoodsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *GoodsData    `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *GoodsResponse) Reset() {
	*x = GoodsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsResponse) ProtoMessage() {}

func (x *GoodsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsResponse.ProtoReflect.Descriptor instead.
func (*GoodsResponse) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{23}
}

func (x *GoodsResponse) GetData() *GoodsData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GoodsResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type GoodsListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Goods `protobuf:"bytes,1,rep,name=items,proto3" json:"items"`
}

func (x *GoodsListData) Reset() {
	*x = GoodsListData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsListData) ProtoMessage() {}

func (x *GoodsListData) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsListData.ProtoReflect.Descriptor instead.
func (*GoodsListData) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{24}
}

func (x *GoodsListData) GetItems() []*Goods {
	if x != nil {
		return x.Items
	}
	return nil
}

type GoodsListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *GoodsListData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error  `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *GoodsListResponse) Reset() {
	*x = GoodsListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsListResponse) ProtoMessage() {}

func (x *GoodsListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsListResponse.ProtoReflect.Descriptor instead.
func (*GoodsListResponse) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{25}
}

func (x *GoodsListResponse) GetData() *GoodsListData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GoodsListResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type GoodsSearchData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pager *common.Pager `protobuf:"bytes,1,opt,name=pager,proto3" json:"pager"`
	Items []*Goods      `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
}

func (x *GoodsSearchData) Reset() {
	*x = GoodsSearchData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsSearchData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsSearchData) ProtoMessage() {}

func (x *GoodsSearchData) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsSearchData.ProtoReflect.Descriptor instead.
func (*GoodsSearchData) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{26}
}

func (x *GoodsSearchData) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *GoodsSearchData) GetItems() []*Goods {
	if x != nil {
		return x.Items
	}
	return nil
}

type GoodsSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *GoodsSearchData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error    `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *GoodsSearchResponse) Reset() {
	*x = GoodsSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsSearchResponse) ProtoMessage() {}

func (x *GoodsSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsSearchResponse.ProtoReflect.Descriptor instead.
func (*GoodsSearchResponse) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{27}
}

func (x *GoodsSearchResponse) GetData() *GoodsSearchData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GoodsSearchResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type GoodsCategoryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category []*Term `protobuf:"bytes,1,rep,name=category,proto3" json:"category"`
}

func (x *GoodsCategoryData) Reset() {
	*x = GoodsCategoryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsCategoryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsCategoryData) ProtoMessage() {}

func (x *GoodsCategoryData) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsCategoryData.ProtoReflect.Descriptor instead.
func (*GoodsCategoryData) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{28}
}

func (x *GoodsCategoryData) GetCategory() []*Term {
	if x != nil {
		return x.Category
	}
	return nil
}

type GoodsCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *GoodsCategoryData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error      `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *GoodsCategoryResponse) Reset() {
	*x = GoodsCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsCategoryResponse) ProtoMessage() {}

func (x *GoodsCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsCategoryResponse.ProtoReflect.Descriptor instead.
func (*GoodsCategoryResponse) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{29}
}

func (x *GoodsCategoryResponse) GetData() *GoodsCategoryData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GoodsCategoryResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type GoodsSpecDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *SpecDetailData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error   `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *GoodsSpecDetailResponse) Reset() {
	*x = GoodsSpecDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsSpecDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsSpecDetailResponse) ProtoMessage() {}

func (x *GoodsSpecDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsSpecDetailResponse.ProtoReflect.Descriptor instead.
func (*GoodsSpecDetailResponse) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{30}
}

func (x *GoodsSpecDetailResponse) GetData() *SpecDetailData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GoodsSpecDetailResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type GoodsSpecTypeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpecType             []string              `protobuf:"bytes,1,rep,name=spec_type,json=specType,proto3" json:"spec_type"`
	PluginsWholesaleData *PluginsWholesaleData `protobuf:"bytes,2,opt,name=plugins_wholesale_data,json=pluginsWholesaleData,proto3" json:"plugins_wholesale_data"`
}

func (x *GoodsSpecTypeData) Reset() {
	*x = GoodsSpecTypeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsSpecTypeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsSpecTypeData) ProtoMessage() {}

func (x *GoodsSpecTypeData) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsSpecTypeData.ProtoReflect.Descriptor instead.
func (*GoodsSpecTypeData) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{31}
}

func (x *GoodsSpecTypeData) GetSpecType() []string {
	if x != nil {
		return x.SpecType
	}
	return nil
}

func (x *GoodsSpecTypeData) GetPluginsWholesaleData() *PluginsWholesaleData {
	if x != nil {
		return x.PluginsWholesaleData
	}
	return nil
}

type PluginsWholesaleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
}

func (x *PluginsWholesaleData) Reset() {
	*x = PluginsWholesaleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginsWholesaleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginsWholesaleData) ProtoMessage() {}

func (x *PluginsWholesaleData) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginsWholesaleData.ProtoReflect.Descriptor instead.
func (*PluginsWholesaleData) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{32}
}

func (x *PluginsWholesaleData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type GoodsSpecTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *GoodsSpecTypeData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error      `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *GoodsSpecTypeResponse) Reset() {
	*x = GoodsSpecTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsSpecTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsSpecTypeResponse) ProtoMessage() {}

func (x *GoodsSpecTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsSpecTypeResponse.ProtoReflect.Descriptor instead.
func (*GoodsSpecTypeResponse) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{33}
}

func (x *GoodsSpecTypeResponse) GetData() *GoodsSpecTypeData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GoodsSpecTypeResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type GoodsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged      int32          `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize   int32          `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords   string         `protobuf:"bytes,3,opt,name=keywords,proto3" json:"keywords"`
	SkuId      int64          `protobuf:"varint,4,opt,name=sku_id,json=skuId,proto3" json:"sku_id"`
	SkuSn      string         `protobuf:"bytes,5,opt,name=sku_sn,json=skuSn,proto3" json:"sku_sn"`
	SpuId      int64          `protobuf:"varint,6,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`
	Code       string         `protobuf:"bytes,7,opt,name=code,proto3" json:"code"`
	Title      string         `protobuf:"bytes,8,opt,name=title,proto3" json:"title"`
	Type       string         `protobuf:"bytes,9,opt,name=type,proto3" json:"type"`
	ParentId   int64          `protobuf:"varint,10,opt,name=parent_id,json=parentId,proto3" json:"parent_id"`
	CategoryId int64          `protobuf:"varint,11,opt,name=category_id,json=categoryId,proto3" json:"category_id"`
	TermId     int32          `protobuf:"varint,12,opt,name=term_id,json=termId,proto3" json:"term_id"`
	TermName   string         `protobuf:"bytes,13,opt,name=term_name,json=termName,proto3" json:"term_name"`
	BrandId    int32          `protobuf:"varint,14,opt,name=brand_id,json=brandId,proto3" json:"brand_id"`
	ShopId     int64          `protobuf:"varint,15,opt,name=shop_id,json=shopId,proto3" json:"shop_id"`
	Status     string         `protobuf:"bytes,16,opt,name=status,proto3" json:"status"`
	StartDate  string         `protobuf:"bytes,17,opt,name=start_date,json=startDate,proto3" json:"start_date"`
	EndDate    string         `protobuf:"bytes,18,opt,name=end_date,json=endDate,proto3" json:"end_date"`
	ParamId    int32          `protobuf:"varint,19,opt,name=param_id,json=paramId,proto3" json:"param_id"`
	ParamValue string         `protobuf:"bytes,20,opt,name=param_value,json=paramValue,proto3" json:"param_value"`
	TagId      int32          `protobuf:"varint,21,opt,name=tag_id,json=tagId,proto3" json:"tag_id"`
	TagName    string         `protobuf:"bytes,22,opt,name=tag_name,json=tagName,proto3" json:"tag_name"`
	Subtype    string         `protobuf:"bytes,23,opt,name=subtype,proto3" json:"subtype"`
	Specs      []*SpecReqInfo `protobuf:"bytes,24,rep,name=specs,proto3" json:"specs"`
}

func (x *GoodsRequest) Reset() {
	*x = GoodsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoodsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoodsRequest) ProtoMessage() {}

func (x *GoodsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoodsRequest.ProtoReflect.Descriptor instead.
func (*GoodsRequest) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{34}
}

func (x *GoodsRequest) GetPaged() int32 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *GoodsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GoodsRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *GoodsRequest) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *GoodsRequest) GetSkuSn() string {
	if x != nil {
		return x.SkuSn
	}
	return ""
}

func (x *GoodsRequest) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *GoodsRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GoodsRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *GoodsRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *GoodsRequest) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *GoodsRequest) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *GoodsRequest) GetTermId() int32 {
	if x != nil {
		return x.TermId
	}
	return 0
}

func (x *GoodsRequest) GetTermName() string {
	if x != nil {
		return x.TermName
	}
	return ""
}

func (x *GoodsRequest) GetBrandId() int32 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *GoodsRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *GoodsRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *GoodsRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *GoodsRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *GoodsRequest) GetParamId() int32 {
	if x != nil {
		return x.ParamId
	}
	return 0
}

func (x *GoodsRequest) GetParamValue() string {
	if x != nil {
		return x.ParamValue
	}
	return ""
}

func (x *GoodsRequest) GetTagId() int32 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *GoodsRequest) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

func (x *GoodsRequest) GetSubtype() string {
	if x != nil {
		return x.Subtype
	}
	return ""
}

func (x *GoodsRequest) GetSpecs() []*SpecReqInfo {
	if x != nil {
		return x.Specs
	}
	return nil
}

type SpecReqInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  string `protobuf:"bytes,1,opt,name=type,proto3" json:"type"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value"`
}

func (x *SpecReqInfo) Reset() {
	*x = SpecReqInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecReqInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecReqInfo) ProtoMessage() {}

func (x *SpecReqInfo) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecReqInfo.ProtoReflect.Descriptor instead.
func (*SpecReqInfo) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{35}
}

func (x *SpecReqInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SpecReqInfo) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type CommentScoreRateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	Count   int32  `protobuf:"varint,2,opt,name=count,proto3" json:"count"`
	Portion int32  `protobuf:"varint,3,opt,name=portion,proto3" json:"portion"`
}

func (x *CommentScoreRateInfo) Reset() {
	*x = CommentScoreRateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentScoreRateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentScoreRateInfo) ProtoMessage() {}

func (x *CommentScoreRateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentScoreRateInfo.ProtoReflect.Descriptor instead.
func (*CommentScoreRateInfo) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{10, 0}
}

func (x *CommentScoreRateInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CommentScoreRateInfo) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *CommentScoreRateInfo) GetPortion() int32 {
	if x != nil {
		return x.Portion
	}
	return 0
}

type BuyButtonDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color string `protobuf:"bytes,1,opt,name=color,proto3" json:"color"`
	Type  string `protobuf:"bytes,2,opt,name=type,proto3" json:"type"`
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title"`
	Name  string `protobuf:"bytes,4,opt,name=name,proto3" json:"name"`
	Class string `protobuf:"bytes,5,opt,name=class,proto3" json:"class"`
	Icon  string `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon"`
}

func (x *BuyButtonDataList) Reset() {
	*x = BuyButtonDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyButtonDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyButtonDataList) ProtoMessage() {}

func (x *BuyButtonDataList) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyButtonDataList.ProtoReflect.Descriptor instead.
func (*BuyButtonDataList) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{14, 0}
}

func (x *BuyButtonDataList) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *BuyButtonDataList) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *BuyButtonDataList) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *BuyButtonDataList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BuyButtonDataList) GetClass() string {
	if x != nil {
		return x.Class
	}
	return ""
}

func (x *BuyButtonDataList) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type PluginCouponBaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationName     string `protobuf:"bytes,1,opt,name=application_name,json=applicationName,proto3" json:"application_name"`
	BannerImageUrl      string `protobuf:"bytes,2,opt,name=banner_image_url,json=bannerImageUrl,proto3" json:"banner_image_url"`
	BannerBgColor       string `protobuf:"bytes,3,opt,name=banner_bg_color,json=bannerBgColor,proto3" json:"banner_bg_color"`
	ShopApplicationName string `protobuf:"bytes,4,opt,name=shop_application_name,json=shopApplicationName,proto3" json:"shop_application_name"`
	IsRepeatReceive     bool   `protobuf:"varint,5,opt,name=is_repeat_receive,json=isRepeatReceive,proto3" json:"is_repeat_receive"`
	IsShopCoupon        bool   `protobuf:"varint,6,opt,name=is_shop_coupon,json=isShopCoupon,proto3" json:"is_shop_coupon"`
	IsShopNavCoupon     bool   `protobuf:"varint,7,opt,name=is_shop_nav_coupon,json=isShopNavCoupon,proto3" json:"is_shop_nav_coupon"`
	Url                 string `protobuf:"bytes,8,opt,name=url,proto3" json:"url"`
}

func (x *PluginCouponBaseInfo) Reset() {
	*x = PluginCouponBaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginCouponBaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginCouponBaseInfo) ProtoMessage() {}

func (x *PluginCouponBaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginCouponBaseInfo.ProtoReflect.Descriptor instead.
func (*PluginCouponBaseInfo) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{17, 0}
}

func (x *PluginCouponBaseInfo) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *PluginCouponBaseInfo) GetBannerImageUrl() string {
	if x != nil {
		return x.BannerImageUrl
	}
	return ""
}

func (x *PluginCouponBaseInfo) GetBannerBgColor() string {
	if x != nil {
		return x.BannerBgColor
	}
	return ""
}

func (x *PluginCouponBaseInfo) GetShopApplicationName() string {
	if x != nil {
		return x.ShopApplicationName
	}
	return ""
}

func (x *PluginCouponBaseInfo) GetIsRepeatReceive() bool {
	if x != nil {
		return x.IsRepeatReceive
	}
	return false
}

func (x *PluginCouponBaseInfo) GetIsShopCoupon() bool {
	if x != nil {
		return x.IsShopCoupon
	}
	return false
}

func (x *PluginCouponBaseInfo) GetIsShopNavCoupon() bool {
	if x != nil {
		return x.IsShopNavCoupon
	}
	return false
}

func (x *PluginCouponBaseInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type PluginCouponDataInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	ShopId           int64  `protobuf:"varint,2,opt,name=shop_id,json=shopId,proto3" json:"shop_id"`
	Name             string `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	Desc             string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc"`
	BgColor          string `protobuf:"bytes,5,opt,name=bg_color,json=bgColor,proto3" json:"bg_color"`
	Type             string `protobuf:"bytes,6,opt,name=type,proto3" json:"type"`
	DiscountValue    string `protobuf:"bytes,7,opt,name=discount_value,json=discountValue,proto3" json:"discount_value"`
	IsUserReceive    bool   `protobuf:"varint,8,opt,name=is_user_receive,json=isUserReceive,proto3" json:"is_user_receive"`
	IsRegisterSend   bool   `protobuf:"varint,9,opt,name=is_register_send,json=isRegisterSend,proto3" json:"is_register_send"`
	IsOperable       bool   `protobuf:"varint,10,opt,name=is_operable,json=isOperable,proto3" json:"is_operable"`
	IsOperableName   bool   `protobuf:"varint,11,opt,name=is_operable_name,json=isOperableName,proto3" json:"is_operable_name"`
	TypeName         string `protobuf:"bytes,12,opt,name=type_name,json=typeName,proto3" json:"type_name"`
	TypeUnit         string `protobuf:"bytes,13,opt,name=type_unit,json=typeUnit,proto3" json:"type_unit"`
	BgColorName      string `protobuf:"bytes,14,opt,name=bg_color_name,json=bgColorName,proto3" json:"bg_color_name"`
	BgColorValue     string `protobuf:"bytes,15,opt,name=bg_color_value,json=bgColorValue,proto3" json:"bg_color_value"`
	ExpireTypeName   string `protobuf:"bytes,16,opt,name=expire_type_name,json=expireTypeName,proto3" json:"expire_type_name"`
	UseLimitTypeName string `protobuf:"bytes,17,opt,name=use_limit_type_name,json=useLimitTypeName,proto3" json:"use_limit_type_name"`
}

func (x *PluginCouponDataInfo) Reset() {
	*x = PluginCouponDataInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginCouponDataInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginCouponDataInfo) ProtoMessage() {}

func (x *PluginCouponDataInfo) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginCouponDataInfo.ProtoReflect.Descriptor instead.
func (*PluginCouponDataInfo) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{17, 1}
}

func (x *PluginCouponDataInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PluginCouponDataInfo) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *PluginCouponDataInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PluginCouponDataInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *PluginCouponDataInfo) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *PluginCouponDataInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PluginCouponDataInfo) GetDiscountValue() string {
	if x != nil {
		return x.DiscountValue
	}
	return ""
}

func (x *PluginCouponDataInfo) GetIsUserReceive() bool {
	if x != nil {
		return x.IsUserReceive
	}
	return false
}

func (x *PluginCouponDataInfo) GetIsRegisterSend() bool {
	if x != nil {
		return x.IsRegisterSend
	}
	return false
}

func (x *PluginCouponDataInfo) GetIsOperable() bool {
	if x != nil {
		return x.IsOperable
	}
	return false
}

func (x *PluginCouponDataInfo) GetIsOperableName() bool {
	if x != nil {
		return x.IsOperableName
	}
	return false
}

func (x *PluginCouponDataInfo) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *PluginCouponDataInfo) GetTypeUnit() string {
	if x != nil {
		return x.TypeUnit
	}
	return ""
}

func (x *PluginCouponDataInfo) GetBgColorName() string {
	if x != nil {
		return x.BgColorName
	}
	return ""
}

func (x *PluginCouponDataInfo) GetBgColorValue() string {
	if x != nil {
		return x.BgColorValue
	}
	return ""
}

func (x *PluginCouponDataInfo) GetExpireTypeName() string {
	if x != nil {
		return x.ExpireTypeName
	}
	return ""
}

func (x *PluginCouponDataInfo) GetUseLimitTypeName() string {
	if x != nil {
		return x.UseLimitTypeName
	}
	return ""
}

type PluginSeckillTimeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hours   int64  `protobuf:"varint,1,opt,name=hours,proto3" json:"hours"`
	Minutes int64  `protobuf:"varint,2,opt,name=minutes,proto3" json:"minutes"`
	Seconds int64  `protobuf:"varint,3,opt,name=seconds,proto3" json:"seconds"`
	Status  string `protobuf:"bytes,4,opt,name=status,proto3" json:"status"`
	Msg     string `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg"`
}

func (x *PluginSeckillTimeInfo) Reset() {
	*x = PluginSeckillTimeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_goodsService_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginSeckillTimeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginSeckillTimeInfo) ProtoMessage() {}

func (x *PluginSeckillTimeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_goodsService_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginSeckillTimeInfo.ProtoReflect.Descriptor instead.
func (*PluginSeckillTimeInfo) Descriptor() ([]byte, []int) {
	return file_goodsService_proto_rawDescGZIP(), []int{21, 0}
}

func (x *PluginSeckillTimeInfo) GetHours() int64 {
	if x != nil {
		return x.Hours
	}
	return 0
}

func (x *PluginSeckillTimeInfo) GetMinutes() int64 {
	if x != nil {
		return x.Minutes
	}
	return 0
}

func (x *PluginSeckillTimeInfo) GetSeconds() int64 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

func (x *PluginSeckillTimeInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PluginSeckillTimeInfo) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_goodsService_proto protoreflect.FileDescriptor

var file_goodsService_proto_rawDesc = []byte{
	0x0a, 0x12, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x11,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x11, 0x74, 0x65, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8b, 0x0d, 0x0a, 0x05, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x15,
	0x0a, 0x06, 0x73, 0x70, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x73, 0x70, 0x75, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x61,
	0x73, 0x74, 0x65, 0x72, 0x53, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x69, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x69, 0x6d, 0x70, 0x6c,
	0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f,
	0x72, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79,
	0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76,
	0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x68,
	0x75, 0x6d, 0x62, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x68, 0x75, 0x6d, 0x62, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x72,
	0x6c, 0x12, 0x20, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x6d, 0x61, 0x6e, 0x79, 0x5f, 0x73, 0x70, 0x65,
	0x63, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x4d, 0x61, 0x6e, 0x79, 0x53,
	0x70, 0x65, 0x63, 0x12, 0x34, 0x0a, 0x16, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x64, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x14, 0x69, 0x73, 0x44, 0x65, 0x64, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x76,
	0x6f, 0x72, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x46, 0x61, 0x76, 0x6f,
	0x72, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x72,
	0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x16, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x61, 0x78, 0x6f, 0x6e, 0x6f, 0x6d, 0x79, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x17,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x77, 0x65, 0x62, 0x18,
	0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x57, 0x65,
	0x62, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x70, 0x70,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x41,
	0x70, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70,
	0x72, 0x69, 0x63, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x69, 0x6e,
	0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x1f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x6d, 0x69, 0x6e, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x61, 0x78, 0x5f, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x20, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x21,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x69, 0x6e, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x22, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6d, 0x69, 0x6e, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x23, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x61, 0x78,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x67, 0x69, 0x76, 0x65, 0x5f, 0x69, 0x6e,
	0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x24, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x67, 0x69,
	0x76, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x75,
	0x79, 0x5f, 0x6d, 0x69, 0x6e, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x25, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x62, 0x75, 0x79, 0x4d, 0x69, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x24, 0x0a, 0x0e, 0x62, 0x75, 0x79, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x26, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x62, 0x75, 0x79, 0x4d, 0x61, 0x78,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x27, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x70, 0x68, 0x6f,
	0x74, 0x6f, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x61, 0x6c, 0x65, 0x73,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x61,
	0x6c, 0x65, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x29, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x42, 0x0a, 0x1e, 0x73,
	0x68, 0x6f, 0x77, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x2a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x1a, 0x73, 0x68, 0x6f, 0x77, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x31, 0x0a, 0x15, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x73, 0x68, 0x6f, 0x77, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x2c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x55, 0x72, 0x6c, 0x12,
	0x25, 0x0a, 0x0e, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x18, 0x2d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x62,
	0x61, 0x73, 0x65, 0x18, 0x2e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x65, 0x63, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x42, 0x61, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x0e,
	0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x2f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x2c, 0x0a, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x18, 0x30, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x52, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73,
	0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x3d, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x33, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x3a, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x34, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x3d, 0x0a, 0x0d, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x65, 0x63, 0x42,
	0x61, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x73, 0x22, 0x47, 0x0a, 0x12, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x06, 0x63, 0x68, 0x6f, 0x6f, 0x73,
	0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x65, 0x63, 0x43, 0x68, 0x6f, 0x6f,
	0x73, 0x65, 0x52, 0x06, 0x63, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x0f, 0x47,
	0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x65, 0x63, 0x43, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x34, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x65,
	0x63, 0x43, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x22, 0x47, 0x0a, 0x14, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x65, 0x63,
	0x43, 0x68, 0x6f, 0x6f, 0x73, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x3e, 0x0a, 0x0e,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x95, 0x01, 0x0a,
	0x0e, 0x53, 0x70, 0x65, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x39, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x70,
	0x65, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x42, 0x61, 0x73, 0x65,
	0x52, 0x08, 0x73, 0x70, 0x65, 0x63, 0x42, 0x61, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0f, 0x65, 0x78,
	0x74, 0x65, 0x6e, 0x64, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53,
	0x70, 0x65, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x45, 0x78, 0x74,
	0x65, 0x6e, 0x64, 0x73, 0x52, 0x0e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x45, 0x6c, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x73, 0x22, 0xfc, 0x01, 0x0a, 0x12, 0x53, 0x70, 0x65, 0x63, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x42, 0x61, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67,
	0x6f, 0x6f, 0x64, 0x73, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x77, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f,
	0x64, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x64, 0x69,
	0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x22, 0x2b, 0x0a, 0x15, 0x53, 0x70, 0x65, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x22, 0x5d, 0x0a, 0x0a, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0d, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x6f, 0x6c, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4f, 0x6c, 0x64, 0x55, 0x72, 0x6c, 0x22,
	0xbf, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x76, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x61,
	0x76, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x72,
	0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67,
	0x1a, 0x4f, 0x0a, 0x09, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x6f, 0x72, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0xf6, 0x02, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73,
	0x5f, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1b, 0x0a,
	0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73,
	0x5f, 0x61, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x69, 0x73, 0x41, 0x6e, 0x6f, 0x6e, 0x79, 0x6d, 0x6f, 0x75, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xbb, 0x01, 0x0a, 0x10, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74,
	0x69, 0x61, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x4f, 0x0a, 0x0d, 0x43, 0x61, 0x72, 0x74,
	0x54, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x79,
	0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62,
	0x75, 0x79, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74,
	0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xbf, 0x02, 0x0a, 0x09, 0x42, 0x75,
	0x79, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x62, 0x75, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x42, 0x75, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73,
	0x5f, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x53,
	0x68, 0x6f, 0x77, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x63, 0x61, 0x72, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x43, 0x61, 0x72, 0x74, 0x12, 0x31, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0x89, 0x01, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x38, 0x0a, 0x0c, 0x4d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x4e, 0x61, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x47, 0x0a, 0x0b, 0x4d, 0x6f, 0x72, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x4e, 0x61, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0xf9,
	0x07, 0x0a, 0x0c, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12,
	0x34, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0xcd, 0x02, 0x0a, 0x09,
	0x62, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x26,
	0x0a, 0x0f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x42,
	0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x32, 0x0a, 0x15, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x61,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73, 0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73,
	0x5f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f,
	0x70, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x69, 0x73, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x12,
	0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6e, 0x61, 0x76, 0x5f, 0x63, 0x6f, 0x75, 0x70,
	0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x70,
	0x4e, 0x61, 0x76, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a, 0xac, 0x04, 0x0a, 0x09,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f,
	0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x67,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x67,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x72,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65,
	0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61,
	0x62, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69,
	0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79,
	0x70, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x79, 0x70, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x67, 0x5f, 0x63, 0x6f,
	0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x62,
	0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x13, 0x75,
	0x73, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x75, 0x73, 0x65, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x14, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x6f,
	0x6f, 0x6c, 0x73, 0x12, 0x3e, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x62, 0x6f, 0x74, 0x74,
	0x6f, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x61, 0x73,
	0x65, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x42, 0x6f, 0x74,
	0x74, 0x6f, 0x6d, 0x12, 0x3e, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74,
	0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x70, 0x22, 0x3d, 0x0a, 0x13, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x42, 0x61, 0x73, 0x65, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x46, 0x0a, 0x13, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x6d, 0x73, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xae, 0x02, 0x0a, 0x0d, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x12, 0x20, 0x0a, 0x0c, 0x62, 0x67, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x67, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x35, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x2e, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x1a, 0x7f, 0x0a, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x68, 0x6f, 0x75, 0x72, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x68, 0x6f, 0x75, 0x72, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xe1, 0x04, 0x0a, 0x09,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x25, 0x0a, 0x05, 0x67, 0x6f, 0x6f,
	0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73,
	0x12, 0x36, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x43, 0x61, 0x72, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x63,
	0x61, 0x72, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x32, 0x0a, 0x0a, 0x62, 0x75, 0x79, 0x5f,
	0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x42, 0x75, 0x74, 0x74, 0x6f,
	0x6e, 0x52, 0x09, 0x62, 0x75, 0x79, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x0f,
	0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x5f, 0x6e, 0x61, 0x76, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x4e, 0x61, 0x76, 0x52, 0x0d, 0x6d,
	0x69, 0x64, 0x64, 0x6c, 0x65, 0x54, 0x61, 0x62, 0x4e, 0x61, 0x76, 0x73, 0x12, 0x3b, 0x0a, 0x0e,
	0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6e, 0x61, 0x76, 0x73, 0x18, 0x05,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x4d, 0x6f, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x76, 0x52, 0x0c, 0x6d, 0x6f, 0x72,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x76, 0x73, 0x12, 0x46, 0x0a, 0x13, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x73, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x52, 0x11,
	0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x49, 0x0a, 0x14, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x63,
	0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x12, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x73, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x50, 0x0a, 0x16,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x50,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x14, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x73, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x5f,
	0x0a, 0x1c, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x5f, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54,
	0x6f, 0x6f, 0x6c, 0x73, 0x52, 0x19, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x49, 0x6e, 0x74,
	0x65, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x6f, 0x6c, 0x73, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x5d, 0x0a, 0x0d, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x27, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x36,
	0x0a, 0x0d, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x25, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x65, 0x0a, 0x11, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x5d, 0x0a,
	0x0f, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x69, 0x0a, 0x13,
	0x47, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x3f, 0x0a, 0x11, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x52, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x6d, 0x0a, 0x15, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x6c, 0x0a, 0x17, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x53, 0x70, 0x65, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x70, 0x65, 0x63,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x86, 0x01, 0x0a, 0x11, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x53,
	0x70, 0x65, 0x63, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x70, 0x65, 0x63, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x70, 0x65, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x54, 0x0a, 0x16, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x73, 0x5f, 0x77, 0x68, 0x6f, 0x6c, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x57, 0x68, 0x6f, 0x6c, 0x65,
	0x73, 0x61, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x14, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x73, 0x57, 0x68, 0x6f, 0x6c, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x2a,
	0x0a, 0x14, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x57, 0x68, 0x6f, 0x6c, 0x65, 0x73, 0x61,
	0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x6d, 0x0a, 0x15, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x53, 0x70, 0x65, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x53, 0x70, 0x65, 0x63, 0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x8f, 0x05, 0x0a, 0x0c, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61,
	0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x73, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x6b, 0x75, 0x53, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x70, 0x75, 0x5f, 0x69,
	0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x70, 0x75, 0x49, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65,
	0x72, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x65, 0x72,
	0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x72, 0x6d, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x19, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68,
	0x6f, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65,
	0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65,
	0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f,
	0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x49,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x74, 0x61, 0x67, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x67,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2b,
	0x0a, 0x05, 0x73, 0x70, 0x65, 0x63, 0x73, 0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x73, 0x70, 0x65, 0x63, 0x73, 0x22, 0x37, 0x0a, 0x0b, 0x53,
	0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x32, 0x9a, 0x03, 0x0a, 0x0c, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12,
	0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3f, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3b, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43,
	0x0a, 0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f,
	0x6f, 0x64, 0x73, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x0a, 0x53, 0x70, 0x65, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x70, 0x65, 0x63, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x08,
	0x53, 0x70, 0x65, 0x63, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64,
	0x73, 0x53, 0x70, 0x65, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_goodsService_proto_rawDescOnce sync.Once
	file_goodsService_proto_rawDescData = file_goodsService_proto_rawDesc
)

func file_goodsService_proto_rawDescGZIP() []byte {
	file_goodsService_proto_rawDescOnce.Do(func() {
		file_goodsService_proto_rawDescData = protoimpl.X.CompressGZIP(file_goodsService_proto_rawDescData)
	})
	return file_goodsService_proto_rawDescData
}

var file_goodsService_proto_msgTypes = make([]protoimpl.MessageInfo, 41)
var file_goodsService_proto_goTypes = []interface{}{
	(*Goods)(nil),                   // 0: services.Goods
	(*GoodsSpecBase)(nil),           // 1: services.GoodsSpecBase
	(*GoodsSpecification)(nil),      // 2: services.GoodsSpecification
	(*GoodsSpecChoose)(nil),         // 3: services.GoodsSpecChoose
	(*GoodsSpecChooseValue)(nil),    // 4: services.GoodsSpecChooseValue
	(*GoodsParameter)(nil),          // 5: services.GoodsParameter
	(*SpecDetailData)(nil),          // 6: services.SpecDetailData
	(*SpecDetailDataBase)(nil),      // 7: services.SpecDetailDataBase
	(*SpecDetailDataExtends)(nil),   // 8: services.SpecDetailDataExtends
	(*GoodsPhoto)(nil),              // 9: services.GoodsPhoto
	(*CommentScore)(nil),            // 10: services.CommentScore
	(*CommentInfo)(nil),             // 11: services.CommentInfo
	(*PluginsPromotion)(nil),        // 12: services.PluginsPromotion
	(*CartTotalInfo)(nil),           // 13: services.CartTotalInfo
	(*BuyButton)(nil),               // 14: services.BuyButton
	(*MiddleTabNav)(nil),            // 15: services.MiddleTabNav
	(*MoreListNav)(nil),             // 16: services.MoreListNav
	(*PluginCoupon)(nil),            // 17: services.PluginCoupon
	(*PluginIntellectTools)(nil),    // 18: services.PluginIntellectTools
	(*IntellectBaseBottom)(nil),     // 19: services.IntellectBaseBottom
	(*IntellectContentTop)(nil),     // 20: services.IntellectContentTop
	(*PluginSeckill)(nil),           // 21: services.PluginSeckill
	(*GoodsData)(nil),               // 22: services.GoodsData
	(*GoodsResponse)(nil),           // 23: services.GoodsResponse
	(*GoodsListData)(nil),           // 24: services.GoodsListData
	(*GoodsListResponse)(nil),       // 25: services.GoodsListResponse
	(*GoodsSearchData)(nil),         // 26: services.GoodsSearchData
	(*GoodsSearchResponse)(nil),     // 27: services.GoodsSearchResponse
	(*GoodsCategoryData)(nil),       // 28: services.GoodsCategoryData
	(*GoodsCategoryResponse)(nil),   // 29: services.GoodsCategoryResponse
	(*GoodsSpecDetailResponse)(nil), // 30: services.GoodsSpecDetailResponse
	(*GoodsSpecTypeData)(nil),       // 31: services.GoodsSpecTypeData
	(*PluginsWholesaleData)(nil),    // 32: services.PluginsWholesaleData
	(*GoodsSpecTypeResponse)(nil),   // 33: services.GoodsSpecTypeResponse
	(*GoodsRequest)(nil),            // 34: services.GoodsRequest
	(*SpecReqInfo)(nil),             // 35: services.SpecReqInfo
	(*CommentScoreRateInfo)(nil),    // 36: services.CommentScore.rate_info
	(*BuyButtonDataList)(nil),       // 37: services.BuyButton.data_list
	(*PluginCouponBaseInfo)(nil),    // 38: services.PluginCoupon.base_info
	(*PluginCouponDataInfo)(nil),    // 39: services.PluginCoupon.data_info
	(*PluginSeckillTimeInfo)(nil),   // 40: services.PluginSeckill.time_info
	(*common.Error)(nil),            // 41: common.Error
	(*common.Pager)(nil),            // 42: common.Pager
	(*Term)(nil),                    // 43: services.Term
}
var file_goodsService_proto_depIdxs = []int32{
	1,  // 0: services.Goods.spec_base:type_name -> services.GoodsSpecBase
	2,  // 1: services.Goods.specifications:type_name -> services.GoodsSpecification
	9,  // 2: services.Goods.photos:type_name -> services.GoodsPhoto
	10, // 3: services.Goods.comments_score:type_name -> services.CommentScore
	11, // 4: services.Goods.comments_data:type_name -> services.CommentInfo
	3,  // 5: services.GoodsSpecification.choose:type_name -> services.GoodsSpecChoose
	4,  // 6: services.GoodsSpecChoose.value:type_name -> services.GoodsSpecChooseValue
	7,  // 7: services.SpecDetailData.spec_base:type_name -> services.SpecDetailDataBase
	8,  // 8: services.SpecDetailData.extend_elements:type_name -> services.SpecDetailDataExtends
	36, // 9: services.CommentScore.rating:type_name -> services.CommentScore.rate_info
	37, // 10: services.BuyButton.data:type_name -> services.BuyButton.data_list
	38, // 11: services.PluginCoupon.base:type_name -> services.PluginCoupon.base_info
	39, // 12: services.PluginCoupon.data:type_name -> services.PluginCoupon.data_info
	19, // 13: services.PluginIntellectTools.base_bottom:type_name -> services.IntellectBaseBottom
	20, // 14: services.PluginIntellectTools.content_top:type_name -> services.IntellectContentTop
	40, // 15: services.PluginSeckill.time:type_name -> services.PluginSeckill.time_info
	0,  // 16: services.GoodsData.goods:type_name -> services.Goods
	13, // 17: services.GoodsData.cart_total:type_name -> services.CartTotalInfo
	14, // 18: services.GoodsData.buy_button:type_name -> services.BuyButton
	15, // 19: services.GoodsData.middle_tab_navs:type_name -> services.MiddleTabNav
	16, // 20: services.GoodsData.more_list_navs:type_name -> services.MoreListNav
	17, // 21: services.GoodsData.plugins_coupon_data:type_name -> services.PluginCoupon
	21, // 22: services.GoodsData.Plugins_seckill_data:type_name -> services.PluginSeckill
	12, // 23: services.GoodsData.Plugins_promotion_data:type_name -> services.PluginsPromotion
	18, // 24: services.GoodsData.plugins_intellect_tools_data:type_name -> services.PluginIntellectTools
	22, // 25: services.GoodsResponse.data:type_name -> services.GoodsData
	41, // 26: services.GoodsResponse.error:type_name -> common.Error
	0,  // 27: services.GoodsListData.items:type_name -> services.Goods
	24, // 28: services.GoodsListResponse.data:type_name -> services.GoodsListData
	41, // 29: services.GoodsListResponse.error:type_name -> common.Error
	42, // 30: services.GoodsSearchData.pager:type_name -> common.Pager
	0,  // 31: services.GoodsSearchData.items:type_name -> services.Goods
	26, // 32: services.GoodsSearchResponse.data:type_name -> services.GoodsSearchData
	41, // 33: services.GoodsSearchResponse.error:type_name -> common.Error
	43, // 34: services.GoodsCategoryData.category:type_name -> services.Term
	28, // 35: services.GoodsCategoryResponse.data:type_name -> services.GoodsCategoryData
	41, // 36: services.GoodsCategoryResponse.error:type_name -> common.Error
	6,  // 37: services.GoodsSpecDetailResponse.data:type_name -> services.SpecDetailData
	41, // 38: services.GoodsSpecDetailResponse.error:type_name -> common.Error
	32, // 39: services.GoodsSpecTypeData.plugins_wholesale_data:type_name -> services.PluginsWholesaleData
	31, // 40: services.GoodsSpecTypeResponse.data:type_name -> services.GoodsSpecTypeData
	41, // 41: services.GoodsSpecTypeResponse.error:type_name -> common.Error
	35, // 42: services.GoodsRequest.specs:type_name -> services.SpecReqInfo
	34, // 43: services.GoodsService.Detail:input_type -> services.GoodsRequest
	34, // 44: services.GoodsService.Search:input_type -> services.GoodsRequest
	34, // 45: services.GoodsService.List:input_type -> services.GoodsRequest
	34, // 46: services.GoodsService.Category:input_type -> services.GoodsRequest
	34, // 47: services.GoodsService.SpecDetail:input_type -> services.GoodsRequest
	34, // 48: services.GoodsService.SpecType:input_type -> services.GoodsRequest
	23, // 49: services.GoodsService.Detail:output_type -> services.GoodsResponse
	27, // 50: services.GoodsService.Search:output_type -> services.GoodsSearchResponse
	25, // 51: services.GoodsService.List:output_type -> services.GoodsListResponse
	29, // 52: services.GoodsService.Category:output_type -> services.GoodsCategoryResponse
	30, // 53: services.GoodsService.SpecDetail:output_type -> services.GoodsSpecDetailResponse
	33, // 54: services.GoodsService.SpecType:output_type -> services.GoodsSpecTypeResponse
	49, // [49:55] is the sub-list for method output_type
	43, // [43:49] is the sub-list for method input_type
	43, // [43:43] is the sub-list for extension type_name
	43, // [43:43] is the sub-list for extension extendee
	0,  // [0:43] is the sub-list for field type_name
}

func init() { file_goodsService_proto_init() }
func file_goodsService_proto_init() {
	if File_goodsService_proto != nil {
		return
	}
	file_termService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_goodsService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Goods); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsSpecBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsSpecification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsSpecChoose); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsSpecChooseValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecDetailData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecDetailDataBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecDetailDataExtends); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsPhoto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentScore); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginsPromotion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CartTotalInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyButton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiddleTabNav); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoreListNav); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginCoupon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginIntellectTools); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntellectBaseBottom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntellectContentTop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginSeckill); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsListData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsSearchData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsCategoryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsSpecDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsSpecTypeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginsWholesaleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsSpecTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoodsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecReqInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentScoreRateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyButtonDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginCouponBaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginCouponDataInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_goodsService_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginSeckillTimeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_goodsService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   41,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_goodsService_proto_goTypes,
		DependencyIndexes: file_goodsService_proto_depIdxs,
		MessageInfos:      file_goodsService_proto_msgTypes,
	}.Build()
	File_goodsService_proto = out.File
	file_goodsService_proto_rawDesc = nil
	file_goodsService_proto_goTypes = nil
	file_goodsService_proto_depIdxs = nil
}
