// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: spuBrowseService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 商品浏览
type SpuBrowse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                //ID
	SpuId         int64                  `protobuf:"varint,2,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`             //SpuID
	MemberId      int64                  `protobuf:"varint,3,opt,name=member_id,json=memberId,proto3" json:"member_id"`    //会员ID
	CreatedAt     int64                  `protobuf:"varint,4,opt,name=created_at,json=createdAt,proto3" json:"created_at"` //创建时间
	UpdatedAt     int64                  `protobuf:"varint,5,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"` //修改时间
	Spu           *Spu                   `protobuf:"bytes,6,opt,name=spu,proto3" json:"spu"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpuBrowse) Reset() {
	*x = SpuBrowse{}
	mi := &file_spuBrowseService_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpuBrowse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpuBrowse) ProtoMessage() {}

func (x *SpuBrowse) ProtoReflect() protoreflect.Message {
	mi := &file_spuBrowseService_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpuBrowse.ProtoReflect.Descriptor instead.
func (*SpuBrowse) Descriptor() ([]byte, []int) {
	return file_spuBrowseService_proto_rawDescGZIP(), []int{0}
}

func (x *SpuBrowse) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpuBrowse) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *SpuBrowse) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *SpuBrowse) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *SpuBrowse) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *SpuBrowse) GetSpu() *Spu {
	if x != nil {
		return x.Spu
	}
	return nil
}

// 商品浏览请求参数
type SpuBrowseRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Top       int32                  `protobuf:"varint,1,opt,name=top,proto3" json:"top"`
	Paged     int64                  `protobuf:"varint,2,opt,name=paged,proto3" json:"paged"`
	PageSize  int64                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords  string                 `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords"`
	Sorts     []string               `protobuf:"bytes,5,rep,name=sorts,proto3" json:"sorts"`
	DateRange []string               `protobuf:"bytes,6,rep,name=date_range,json=dateRange,proto3" json:"date_range"`
	Ids       []int64                `protobuf:"varint,7,rep,packed,name=ids,proto3" json:"ids"`
	Id        int64                  `protobuf:"varint,8,opt,name=id,proto3" json:"id"`
	// 以下为自定义参数
	SpuId         int64 `protobuf:"varint,11,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`          //SpuID
	MemberId      int64 `protobuf:"varint,12,opt,name=member_id,json=memberId,proto3" json:"member_id"` //会员ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpuBrowseRequest) Reset() {
	*x = SpuBrowseRequest{}
	mi := &file_spuBrowseService_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpuBrowseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpuBrowseRequest) ProtoMessage() {}

func (x *SpuBrowseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_spuBrowseService_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpuBrowseRequest.ProtoReflect.Descriptor instead.
func (*SpuBrowseRequest) Descriptor() ([]byte, []int) {
	return file_spuBrowseService_proto_rawDescGZIP(), []int{1}
}

func (x *SpuBrowseRequest) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *SpuBrowseRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *SpuBrowseRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SpuBrowseRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *SpuBrowseRequest) GetSorts() []string {
	if x != nil {
		return x.Sorts
	}
	return nil
}

func (x *SpuBrowseRequest) GetDateRange() []string {
	if x != nil {
		return x.DateRange
	}
	return nil
}

func (x *SpuBrowseRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *SpuBrowseRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpuBrowseRequest) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *SpuBrowseRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

// 商品浏览响应数据
type SpuBrowseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           string                 `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg"`
	Pager         *common.Pager          `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Entity        *SpuBrowse             `protobuf:"bytes,3,opt,name=entity,proto3" json:"entity"`
	Items         []*SpuBrowse           `protobuf:"bytes,4,rep,name=items,proto3" json:"items"`
	Count         int64                  `protobuf:"varint,5,opt,name=count,proto3" json:"count"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpuBrowseResponse) Reset() {
	*x = SpuBrowseResponse{}
	mi := &file_spuBrowseService_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpuBrowseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpuBrowseResponse) ProtoMessage() {}

func (x *SpuBrowseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_spuBrowseService_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpuBrowseResponse.ProtoReflect.Descriptor instead.
func (*SpuBrowseResponse) Descriptor() ([]byte, []int) {
	return file_spuBrowseService_proto_rawDescGZIP(), []int{2}
}

func (x *SpuBrowseResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *SpuBrowseResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *SpuBrowseResponse) GetEntity() *SpuBrowse {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *SpuBrowseResponse) GetItems() []*SpuBrowse {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SpuBrowseResponse) GetCount() int64 {
	if x != nil {
		return x.Count
	}
	return 0
}

var File_spuBrowseService_proto protoreflect.FileDescriptor

const file_spuBrowseService_proto_rawDesc = "" +
	"\n" +
	"\x16spuBrowseService.proto\x12\bservices\x1a\x11common/base.proto\x1a\x10spuService.proto\"\xae\x01\n" +
	"\tSpuBrowse\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x15\n" +
	"\x06spu_id\x18\x02 \x01(\x03R\x05spuId\x12\x1b\n" +
	"\tmember_id\x18\x03 \x01(\x03R\bmemberId\x12\x1d\n" +
	"\n" +
	"created_at\x18\x04 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\x05 \x01(\x03R\tupdatedAt\x12\x1f\n" +
	"\x03spu\x18\x06 \x01(\v2\r.services.SpuR\x03spu\"\xfe\x01\n" +
	"\x10SpuBrowseRequest\x12\x10\n" +
	"\x03top\x18\x01 \x01(\x05R\x03top\x12\x14\n" +
	"\x05paged\x18\x02 \x01(\x03R\x05paged\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x03R\bpageSize\x12\x1a\n" +
	"\bkeywords\x18\x04 \x01(\tR\bkeywords\x12\x14\n" +
	"\x05sorts\x18\x05 \x03(\tR\x05sorts\x12\x1d\n" +
	"\n" +
	"date_range\x18\x06 \x03(\tR\tdateRange\x12\x10\n" +
	"\x03ids\x18\a \x03(\x03R\x03ids\x12\x0e\n" +
	"\x02id\x18\b \x01(\x03R\x02id\x12\x15\n" +
	"\x06spu_id\x18\v \x01(\x03R\x05spuId\x12\x1b\n" +
	"\tmember_id\x18\f \x01(\x03R\bmemberId\"\xb8\x01\n" +
	"\x11SpuBrowseResponse\x12\x10\n" +
	"\x03msg\x18\x01 \x01(\tR\x03msg\x12#\n" +
	"\x05pager\x18\x02 \x01(\v2\r.common.PagerR\x05pager\x12+\n" +
	"\x06entity\x18\x03 \x01(\v2\x13.services.SpuBrowseR\x06entity\x12)\n" +
	"\x05items\x18\x04 \x03(\v2\x13.services.SpuBrowseR\x05items\x12\x14\n" +
	"\x05count\x18\x05 \x01(\x03R\x05count2\xd2\x02\n" +
	"\x10SpuBrowseService\x12<\n" +
	"\x06Create\x12\x13.services.SpuBrowse\x1a\x1b.services.SpuBrowseResponse\"\x00\x12<\n" +
	"\x06Delete\x12\x13.services.SpuBrowse\x1a\x1b.services.SpuBrowseResponse\"\x00\x129\n" +
	"\x03Get\x12\x13.services.SpuBrowse\x1a\x1b.services.SpuBrowseResponse\"\x00\x12C\n" +
	"\x06Search\x12\x1a.services.SpuBrowseRequest\x1a\x1b.services.SpuBrowseResponse\"\x00\x12B\n" +
	"\x05Count\x12\x1a.services.SpuBrowseRequest\x1a\x1b.services.SpuBrowseResponse\"\x00B\rZ\v/.;servicesb\x06proto3"

var (
	file_spuBrowseService_proto_rawDescOnce sync.Once
	file_spuBrowseService_proto_rawDescData []byte
)

func file_spuBrowseService_proto_rawDescGZIP() []byte {
	file_spuBrowseService_proto_rawDescOnce.Do(func() {
		file_spuBrowseService_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_spuBrowseService_proto_rawDesc), len(file_spuBrowseService_proto_rawDesc)))
	})
	return file_spuBrowseService_proto_rawDescData
}

var file_spuBrowseService_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_spuBrowseService_proto_goTypes = []any{
	(*SpuBrowse)(nil),         // 0: services.SpuBrowse
	(*SpuBrowseRequest)(nil),  // 1: services.SpuBrowseRequest
	(*SpuBrowseResponse)(nil), // 2: services.SpuBrowseResponse
	(*Spu)(nil),               // 3: services.Spu
	(*common.Pager)(nil),      // 4: common.Pager
}
var file_spuBrowseService_proto_depIdxs = []int32{
	3, // 0: services.SpuBrowse.spu:type_name -> services.Spu
	4, // 1: services.SpuBrowseResponse.pager:type_name -> common.Pager
	0, // 2: services.SpuBrowseResponse.entity:type_name -> services.SpuBrowse
	0, // 3: services.SpuBrowseResponse.items:type_name -> services.SpuBrowse
	0, // 4: services.SpuBrowseService.Create:input_type -> services.SpuBrowse
	0, // 5: services.SpuBrowseService.Delete:input_type -> services.SpuBrowse
	0, // 6: services.SpuBrowseService.Get:input_type -> services.SpuBrowse
	1, // 7: services.SpuBrowseService.Search:input_type -> services.SpuBrowseRequest
	1, // 8: services.SpuBrowseService.Count:input_type -> services.SpuBrowseRequest
	2, // 9: services.SpuBrowseService.Create:output_type -> services.SpuBrowseResponse
	2, // 10: services.SpuBrowseService.Delete:output_type -> services.SpuBrowseResponse
	2, // 11: services.SpuBrowseService.Get:output_type -> services.SpuBrowseResponse
	2, // 12: services.SpuBrowseService.Search:output_type -> services.SpuBrowseResponse
	2, // 13: services.SpuBrowseService.Count:output_type -> services.SpuBrowseResponse
	9, // [9:14] is the sub-list for method output_type
	4, // [4:9] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_spuBrowseService_proto_init() }
func file_spuBrowseService_proto_init() {
	if File_spuBrowseService_proto != nil {
		return
	}
	file_spuService_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_spuBrowseService_proto_rawDesc), len(file_spuBrowseService_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_spuBrowseService_proto_goTypes,
		DependencyIndexes: file_spuBrowseService_proto_depIdxs,
		MessageInfos:      file_spuBrowseService_proto_msgTypes,
	}.Build()
	File_spuBrowseService_proto = out.File
	file_spuBrowseService_proto_goTypes = nil
	file_spuBrowseService_proto_depIdxs = nil
}
