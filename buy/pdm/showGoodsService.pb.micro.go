// Code generated by protoc-gen-micro. DO NOT EDIT.
// source: showGoodsService.proto

package services

import (
	fmt "fmt"
	_ "github.com/geiqin/micro-kit/protobuf/common"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

import (
	context "context"
	api "github.com/micro/go-micro/v2/api"
	client "github.com/micro/go-micro/v2/client"
	server "github.com/micro/go-micro/v2/server"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ api.Endpoint
var _ context.Context
var _ client.Option
var _ server.Option

// Api Endpoints for ShowGoodsService service

func NewShowGoodsServiceEndpoints() []*api.Endpoint {
	return []*api.Endpoint{}
}

// Client API for ShowGoodsService service

type ShowGoodsService interface {
	// 商品详情
	Detail(ctx context.Context, in *ShowGoodsRequest, opts ...client.CallOption) (*ShowGoodsResponse, error)
	// 商品列表
	List(ctx context.Context, in *ShowGoodsRequest, opts ...client.CallOption) (*ShowGoodsResponse, error)
	// 获取到手价
	RealPrice(ctx context.Context, in *ShowGoodsRequest, opts ...client.CallOption) (*ShowGoodsResponse, error)
	// 商品二维码
	Qrcode(ctx context.Context, in *ShowGoodsRequest, opts ...client.CallOption) (*ShowGoodsResponse, error)
	// 商品海报
	Poster(ctx context.Context, in *ShowGoodsRequest, opts ...client.CallOption) (*ShowGoodsResponse, error)
	// 获取属性
	GetAttr(ctx context.Context, in *ShowGoodsRequest, opts ...client.CallOption) (*ShowGoodsResponse, error)
}

type showGoodsService struct {
	c    client.Client
	name string
}

func NewShowGoodsService(name string, c client.Client) ShowGoodsService {
	return &showGoodsService{
		c:    c,
		name: name,
	}
}

func (c *showGoodsService) Detail(ctx context.Context, in *ShowGoodsRequest, opts ...client.CallOption) (*ShowGoodsResponse, error) {
	req := c.c.NewRequest(c.name, "ShowGoodsService.Detail", in)
	out := new(ShowGoodsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *showGoodsService) List(ctx context.Context, in *ShowGoodsRequest, opts ...client.CallOption) (*ShowGoodsResponse, error) {
	req := c.c.NewRequest(c.name, "ShowGoodsService.List", in)
	out := new(ShowGoodsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *showGoodsService) RealPrice(ctx context.Context, in *ShowGoodsRequest, opts ...client.CallOption) (*ShowGoodsResponse, error) {
	req := c.c.NewRequest(c.name, "ShowGoodsService.RealPrice", in)
	out := new(ShowGoodsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *showGoodsService) Qrcode(ctx context.Context, in *ShowGoodsRequest, opts ...client.CallOption) (*ShowGoodsResponse, error) {
	req := c.c.NewRequest(c.name, "ShowGoodsService.Qrcode", in)
	out := new(ShowGoodsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *showGoodsService) Poster(ctx context.Context, in *ShowGoodsRequest, opts ...client.CallOption) (*ShowGoodsResponse, error) {
	req := c.c.NewRequest(c.name, "ShowGoodsService.Poster", in)
	out := new(ShowGoodsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *showGoodsService) GetAttr(ctx context.Context, in *ShowGoodsRequest, opts ...client.CallOption) (*ShowGoodsResponse, error) {
	req := c.c.NewRequest(c.name, "ShowGoodsService.GetAttr", in)
	out := new(ShowGoodsResponse)
	err := c.c.Call(ctx, req, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ShowGoodsService service

type ShowGoodsServiceHandler interface {
	// 商品详情
	Detail(context.Context, *ShowGoodsRequest, *ShowGoodsResponse) error
	// 商品列表
	List(context.Context, *ShowGoodsRequest, *ShowGoodsResponse) error
	// 获取到手价
	RealPrice(context.Context, *ShowGoodsRequest, *ShowGoodsResponse) error
	// 商品二维码
	Qrcode(context.Context, *ShowGoodsRequest, *ShowGoodsResponse) error
	// 商品海报
	Poster(context.Context, *ShowGoodsRequest, *ShowGoodsResponse) error
	// 获取属性
	GetAttr(context.Context, *ShowGoodsRequest, *ShowGoodsResponse) error
}

func RegisterShowGoodsServiceHandler(s server.Server, hdlr ShowGoodsServiceHandler, opts ...server.HandlerOption) error {
	type showGoodsService interface {
		Detail(ctx context.Context, in *ShowGoodsRequest, out *ShowGoodsResponse) error
		List(ctx context.Context, in *ShowGoodsRequest, out *ShowGoodsResponse) error
		RealPrice(ctx context.Context, in *ShowGoodsRequest, out *ShowGoodsResponse) error
		Qrcode(ctx context.Context, in *ShowGoodsRequest, out *ShowGoodsResponse) error
		Poster(ctx context.Context, in *ShowGoodsRequest, out *ShowGoodsResponse) error
		GetAttr(ctx context.Context, in *ShowGoodsRequest, out *ShowGoodsResponse) error
	}
	type ShowGoodsService struct {
		showGoodsService
	}
	h := &showGoodsServiceHandler{hdlr}
	return s.Handle(s.NewHandler(&ShowGoodsService{h}, opts...))
}

type showGoodsServiceHandler struct {
	ShowGoodsServiceHandler
}

func (h *showGoodsServiceHandler) Detail(ctx context.Context, in *ShowGoodsRequest, out *ShowGoodsResponse) error {
	return h.ShowGoodsServiceHandler.Detail(ctx, in, out)
}

func (h *showGoodsServiceHandler) List(ctx context.Context, in *ShowGoodsRequest, out *ShowGoodsResponse) error {
	return h.ShowGoodsServiceHandler.List(ctx, in, out)
}

func (h *showGoodsServiceHandler) RealPrice(ctx context.Context, in *ShowGoodsRequest, out *ShowGoodsResponse) error {
	return h.ShowGoodsServiceHandler.RealPrice(ctx, in, out)
}

func (h *showGoodsServiceHandler) Qrcode(ctx context.Context, in *ShowGoodsRequest, out *ShowGoodsResponse) error {
	return h.ShowGoodsServiceHandler.Qrcode(ctx, in, out)
}

func (h *showGoodsServiceHandler) Poster(ctx context.Context, in *ShowGoodsRequest, out *ShowGoodsResponse) error {
	return h.ShowGoodsServiceHandler.Poster(ctx, in, out)
}

func (h *showGoodsServiceHandler) GetAttr(ctx context.Context, in *ShowGoodsRequest, out *ShowGoodsResponse) error {
	return h.ShowGoodsServiceHandler.GetAttr(ctx, in, out)
}
