// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: pageService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SpecDetailData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpecBase       *SpecDetailDataBase      `protobuf:"bytes,1,opt,name=spec_base,json=specBase,proto3" json:"spec_base"`
	ExtendElements []*SpecDetailDataExtends `protobuf:"bytes,2,rep,name=extend_elements,json=extendElements,proto3" json:"extend_elements"`
}

func (x *SpecDetailData) Reset() {
	*x = SpecDetailData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pageService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecDetailData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecDetailData) ProtoMessage() {}

func (x *SpecDetailData) ProtoReflect() protoreflect.Message {
	mi := &file_pageService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecDetailData.ProtoReflect.Descriptor instead.
func (*SpecDetailData) Descriptor() ([]byte, []int) {
	return file_pageService_proto_rawDescGZIP(), []int{0}
}

func (x *SpecDetailData) GetSpecBase() *SpecDetailDataBase {
	if x != nil {
		return x.SpecBase
	}
	return nil
}

func (x *SpecDetailData) GetExtendElements() []*SpecDetailDataExtends {
	if x != nil {
		return x.ExtendElements
	}
	return nil
}

type SpecDetailDataBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	GoodsId       int64  `protobuf:"varint,2,opt,name=goods_id,json=goodsId,proto3" json:"goods_id"`
	SkuId         int64  `protobuf:"varint,3,opt,name=sku_id,json=skuId,proto3" json:"sku_id"`
	Price         int64  `protobuf:"varint,4,opt,name=price,proto3" json:"price"`
	Inventory     int32  `protobuf:"varint,5,opt,name=inventory,proto3" json:"inventory"`
	Weight        int64  `protobuf:"varint,6,opt,name=weight,proto3" json:"weight"`
	Volume        int64  `protobuf:"varint,7,opt,name=volume,proto3" json:"volume"`
	Coding        string `protobuf:"bytes,8,opt,name=coding,proto3" json:"coding"`
	Barcode       string `protobuf:"bytes,9,opt,name=barcode,proto3" json:"barcode"`
	OriginalPrice int64  `protobuf:"varint,10,opt,name=original_price,json=originalPrice,proto3" json:"original_price"`
}

func (x *SpecDetailDataBase) Reset() {
	*x = SpecDetailDataBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pageService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecDetailDataBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecDetailDataBase) ProtoMessage() {}

func (x *SpecDetailDataBase) ProtoReflect() protoreflect.Message {
	mi := &file_pageService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecDetailDataBase.ProtoReflect.Descriptor instead.
func (*SpecDetailDataBase) Descriptor() ([]byte, []int) {
	return file_pageService_proto_rawDescGZIP(), []int{1}
}

func (x *SpecDetailDataBase) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SpecDetailDataBase) GetGoodsId() int64 {
	if x != nil {
		return x.GoodsId
	}
	return 0
}

func (x *SpecDetailDataBase) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *SpecDetailDataBase) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *SpecDetailDataBase) GetInventory() int32 {
	if x != nil {
		return x.Inventory
	}
	return 0
}

func (x *SpecDetailDataBase) GetWeight() int64 {
	if x != nil {
		return x.Weight
	}
	return 0
}

func (x *SpecDetailDataBase) GetVolume() int64 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *SpecDetailDataBase) GetCoding() string {
	if x != nil {
		return x.Coding
	}
	return ""
}

func (x *SpecDetailDataBase) GetBarcode() string {
	if x != nil {
		return x.Barcode
	}
	return ""
}

func (x *SpecDetailDataBase) GetOriginalPrice() int64 {
	if x != nil {
		return x.OriginalPrice
	}
	return 0
}

type SpecDetailDataExtends struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
}

func (x *SpecDetailDataExtends) Reset() {
	*x = SpecDetailDataExtends{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pageService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecDetailDataExtends) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecDetailDataExtends) ProtoMessage() {}

func (x *SpecDetailDataExtends) ProtoReflect() protoreflect.Message {
	mi := &file_pageService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecDetailDataExtends.ProtoReflect.Descriptor instead.
func (*SpecDetailDataExtends) Descriptor() ([]byte, []int) {
	return file_pageService_proto_rawDescGZIP(), []int{2}
}

func (x *SpecDetailDataExtends) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

//参与的活动
type PluginsPromotionData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                                       //活动ID
	Code              string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code"`                                                    //活动编码:如：coupon_20210101212
	Title             string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title"`                                                  //活动标题
	Type              string   `protobuf:"bytes,4,opt,name=type,proto3" json:"type"`                                                    //活动类型:Coupon优惠劵/满减送/限时折扣/秒杀/拼团/通用
	Subtype           string   `protobuf:"bytes,5,opt,name=subtype,proto3" json:"subtype"`                                              //活动子类型
	Tag               string   `protobuf:"bytes,6,opt,name=tag,proto3" json:"tag"`                                                      //标签
	PreferentialItems []string `protobuf:"bytes,7,rep,name=preferential_items,json=preferentialItems,proto3" json:"preferential_items"` //优惠项目描述
}

func (x *PluginsPromotionData) Reset() {
	*x = PluginsPromotionData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pageService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginsPromotionData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginsPromotionData) ProtoMessage() {}

func (x *PluginsPromotionData) ProtoReflect() protoreflect.Message {
	mi := &file_pageService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginsPromotionData.ProtoReflect.Descriptor instead.
func (*PluginsPromotionData) Descriptor() ([]byte, []int) {
	return file_pageService_proto_rawDescGZIP(), []int{3}
}

func (x *PluginsPromotionData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PluginsPromotionData) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PluginsPromotionData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PluginsPromotionData) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PluginsPromotionData) GetSubtype() string {
	if x != nil {
		return x.Subtype
	}
	return ""
}

func (x *PluginsPromotionData) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *PluginsPromotionData) GetPreferentialItems() []string {
	if x != nil {
		return x.PreferentialItems
	}
	return nil
}

type CartTotalInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuyNumber  int32 `protobuf:"varint,1,opt,name=buy_number,json=buyNumber,proto3" json:"buy_number"`
	TotalPrice int64 `protobuf:"varint,2,opt,name=total_price,json=totalPrice,proto3" json:"total_price"`
}

func (x *CartTotalInfo) Reset() {
	*x = CartTotalInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pageService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CartTotalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CartTotalInfo) ProtoMessage() {}

func (x *CartTotalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pageService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CartTotalInfo.ProtoReflect.Descriptor instead.
func (*CartTotalInfo) Descriptor() ([]byte, []int) {
	return file_pageService_proto_rawDescGZIP(), []int{4}
}

func (x *CartTotalInfo) GetBuyNumber() int32 {
	if x != nil {
		return x.BuyNumber
	}
	return 0
}

func (x *CartTotalInfo) GetTotalPrice() int64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

type BuyButton struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count  int32                `protobuf:"varint,1,opt,name=count,proto3" json:"count"`
	Error  string               `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
	IsBuy  bool                 `protobuf:"varint,3,opt,name=is_buy,json=isBuy,proto3" json:"is_buy"`
	IsShow bool                 `protobuf:"varint,4,opt,name=is_show,json=isShow,proto3" json:"is_show"`
	IsCart bool                 `protobuf:"varint,5,opt,name=is_cart,json=isCart,proto3" json:"is_cart"`
	Data   []*BuyButtonDataList `protobuf:"bytes,6,rep,name=data,proto3" json:"data"`
}

func (x *BuyButton) Reset() {
	*x = BuyButton{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pageService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyButton) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyButton) ProtoMessage() {}

func (x *BuyButton) ProtoReflect() protoreflect.Message {
	mi := &file_pageService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyButton.ProtoReflect.Descriptor instead.
func (*BuyButton) Descriptor() ([]byte, []int) {
	return file_pageService_proto_rawDescGZIP(), []int{5}
}

func (x *BuyButton) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *BuyButton) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *BuyButton) GetIsBuy() bool {
	if x != nil {
		return x.IsBuy
	}
	return false
}

func (x *BuyButton) GetIsShow() bool {
	if x != nil {
		return x.IsShow
	}
	return false
}

func (x *BuyButton) GetIsCart() bool {
	if x != nil {
		return x.IsCart
	}
	return false
}

func (x *BuyButton) GetData() []*BuyButtonDataList {
	if x != nil {
		return x.Data
	}
	return nil
}

//中间切换导航
type MiddleTabNav struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	Event string `protobuf:"bytes,2,opt,name=event,proto3" json:"event"`
}

func (x *MiddleTabNav) Reset() {
	*x = MiddleTabNav{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pageService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MiddleTabNav) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MiddleTabNav) ProtoMessage() {}

func (x *MiddleTabNav) ProtoReflect() protoreflect.Message {
	mi := &file_pageService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MiddleTabNav.ProtoReflect.Descriptor instead.
func (*MiddleTabNav) Descriptor() ([]byte, []int) {
	return file_pageService_proto_rawDescGZIP(), []int{6}
}

func (x *MiddleTabNav) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MiddleTabNav) GetEvent() string {
	if x != nil {
		return x.Event
	}
	return ""
}

//更多列表导航
type MoreListNav struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	Url  string `protobuf:"bytes,2,opt,name=url,proto3" json:"url"`
	Icon string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon"`
}

func (x *MoreListNav) Reset() {
	*x = MoreListNav{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pageService_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MoreListNav) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MoreListNav) ProtoMessage() {}

func (x *MoreListNav) ProtoReflect() protoreflect.Message {
	mi := &file_pageService_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MoreListNav.ProtoReflect.Descriptor instead.
func (*MoreListNav) Descriptor() ([]byte, []int) {
	return file_pageService_proto_rawDescGZIP(), []int{7}
}

func (x *MoreListNav) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MoreListNav) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *MoreListNav) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type PluginCouponData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base *PluginCouponDataBaseInfo `protobuf:"bytes,1,opt,name=base,proto3" json:"base"`
	Data *PluginCouponDataDataInfo `protobuf:"bytes,2,opt,name=data,proto3" json:"data"`
}

func (x *PluginCouponData) Reset() {
	*x = PluginCouponData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pageService_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginCouponData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginCouponData) ProtoMessage() {}

func (x *PluginCouponData) ProtoReflect() protoreflect.Message {
	mi := &file_pageService_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginCouponData.ProtoReflect.Descriptor instead.
func (*PluginCouponData) Descriptor() ([]byte, []int) {
	return file_pageService_proto_rawDescGZIP(), []int{8}
}

func (x *PluginCouponData) GetBase() *PluginCouponDataBaseInfo {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *PluginCouponData) GetData() *PluginCouponDataDataInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type PluginIntellectToolsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseBottom *IntellectBaseBottom `protobuf:"bytes,1,opt,name=base_bottom,json=baseBottom,proto3" json:"base_bottom"`
	ContentTop *IntellectContentTop `protobuf:"bytes,2,opt,name=content_top,json=contentTop,proto3" json:"content_top"`
}

func (x *PluginIntellectToolsData) Reset() {
	*x = PluginIntellectToolsData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pageService_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginIntellectToolsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginIntellectToolsData) ProtoMessage() {}

func (x *PluginIntellectToolsData) ProtoReflect() protoreflect.Message {
	mi := &file_pageService_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginIntellectToolsData.ProtoReflect.Descriptor instead.
func (*PluginIntellectToolsData) Descriptor() ([]byte, []int) {
	return file_pageService_proto_rawDescGZIP(), []int{9}
}

func (x *PluginIntellectToolsData) GetBaseBottom() *IntellectBaseBottom {
	if x != nil {
		return x.BaseBottom
	}
	return nil
}

func (x *PluginIntellectToolsData) GetContentTop() *IntellectContentTop {
	if x != nil {
		return x.ContentTop
	}
	return nil
}

type IntellectBaseBottom struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title"`
	Msg   string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg"`
}

func (x *IntellectBaseBottom) Reset() {
	*x = IntellectBaseBottom{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pageService_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntellectBaseBottom) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntellectBaseBottom) ProtoMessage() {}

func (x *IntellectBaseBottom) ProtoReflect() protoreflect.Message {
	mi := &file_pageService_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntellectBaseBottom.ProtoReflect.Descriptor instead.
func (*IntellectBaseBottom) Descriptor() ([]byte, []int) {
	return file_pageService_proto_rawDescGZIP(), []int{10}
}

func (x *IntellectBaseBottom) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *IntellectBaseBottom) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type IntellectContentTop struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title   string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title"`
	MsgList []string `protobuf:"bytes,2,rep,name=msg_list,json=msgList,proto3" json:"msg_list"`
}

func (x *IntellectContentTop) Reset() {
	*x = IntellectContentTop{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pageService_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntellectContentTop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntellectContentTop) ProtoMessage() {}

func (x *IntellectContentTop) ProtoReflect() protoreflect.Message {
	mi := &file_pageService_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntellectContentTop.ProtoReflect.Descriptor instead.
func (*IntellectContentTop) Descriptor() ([]byte, []int) {
	return file_pageService_proto_rawDescGZIP(), []int{11}
}

func (x *IntellectContentTop) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *IntellectContentTop) GetMsgList() []string {
	if x != nil {
		return x.MsgList
	}
	return nil
}

type PluginSeckillData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Icon       string                     `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon"`
	Title      string                     `protobuf:"bytes,2,opt,name=title,proto3" json:"title"`
	IsValid    bool                       `protobuf:"varint,3,opt,name=is_valid,json=isValid,proto3" json:"is_valid"`
	BgImageUrl string                     `protobuf:"bytes,4,opt,name=bg_image_url,json=bgImageUrl,proto3" json:"bg_image_url"`
	Time       *PluginSeckillDataTimeInfo `protobuf:"bytes,5,opt,name=time,proto3" json:"time"`
}

func (x *PluginSeckillData) Reset() {
	*x = PluginSeckillData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pageService_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginSeckillData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginSeckillData) ProtoMessage() {}

func (x *PluginSeckillData) ProtoReflect() protoreflect.Message {
	mi := &file_pageService_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginSeckillData.ProtoReflect.Descriptor instead.
func (*PluginSeckillData) Descriptor() ([]byte, []int) {
	return file_pageService_proto_rawDescGZIP(), []int{12}
}

func (x *PluginSeckillData) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *PluginSeckillData) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PluginSeckillData) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *PluginSeckillData) GetBgImageUrl() string {
	if x != nil {
		return x.BgImageUrl
	}
	return ""
}

func (x *PluginSeckillData) GetTime() *PluginSeckillDataTimeInfo {
	if x != nil {
		return x.Time
	}
	return nil
}

type PageDetailData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Goods                     *Goods                    `protobuf:"bytes,1,opt,name=goods,proto3" json:"goods"`
	CartTotal                 *CartTotalInfo            `protobuf:"bytes,2,opt,name=cart_total,json=cartTotal,proto3" json:"cart_total"`
	BuyButton                 *BuyButton                `protobuf:"bytes,3,opt,name=buy_button,json=buyButton,proto3" json:"buy_button"`
	MiddleTabNavs             []*MiddleTabNav           `protobuf:"bytes,4,rep,name=middle_tab_navs,json=middleTabNavs,proto3" json:"middle_tab_navs"`
	MoreListNavs              []*MoreListNav            `protobuf:"bytes,5,rep,name=more_list_navs,json=moreListNavs,proto3" json:"more_list_navs"`
	PluginsCouponData         *PluginCouponData         `protobuf:"bytes,6,opt,name=plugins_coupon_data,json=pluginsCouponData,proto3" json:"plugins_coupon_data"`
	PluginsSeckillData        *PluginSeckillData        `protobuf:"bytes,7,opt,name=Plugins_seckill_data,json=PluginsSeckillData,proto3" json:"Plugins_seckill_data"`
	PluginsPromotionData      *PluginsPromotionData     `protobuf:"bytes,8,opt,name=Plugins_promotion_data,json=PluginsPromotionData,proto3" json:"Plugins_promotion_data"`
	PluginsIntellectToolsData *PluginIntellectToolsData `protobuf:"bytes,9,opt,name=plugins_intellect_tools_data,json=pluginsIntellectToolsData,proto3" json:"plugins_intellect_tools_data"`
}

func (x *PageDetailData) Reset() {
	*x = PageDetailData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pageService_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageDetailData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageDetailData) ProtoMessage() {}

func (x *PageDetailData) ProtoReflect() protoreflect.Message {
	mi := &file_pageService_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageDetailData.ProtoReflect.Descriptor instead.
func (*PageDetailData) Descriptor() ([]byte, []int) {
	return file_pageService_proto_rawDescGZIP(), []int{13}
}

func (x *PageDetailData) GetGoods() *Goods {
	if x != nil {
		return x.Goods
	}
	return nil
}

func (x *PageDetailData) GetCartTotal() *CartTotalInfo {
	if x != nil {
		return x.CartTotal
	}
	return nil
}

func (x *PageDetailData) GetBuyButton() *BuyButton {
	if x != nil {
		return x.BuyButton
	}
	return nil
}

func (x *PageDetailData) GetMiddleTabNavs() []*MiddleTabNav {
	if x != nil {
		return x.MiddleTabNavs
	}
	return nil
}

func (x *PageDetailData) GetMoreListNavs() []*MoreListNav {
	if x != nil {
		return x.MoreListNavs
	}
	return nil
}

func (x *PageDetailData) GetPluginsCouponData() *PluginCouponData {
	if x != nil {
		return x.PluginsCouponData
	}
	return nil
}

func (x *PageDetailData) GetPluginsSeckillData() *PluginSeckillData {
	if x != nil {
		return x.PluginsSeckillData
	}
	return nil
}

func (x *PageDetailData) GetPluginsPromotionData() *PluginsPromotionData {
	if x != nil {
		return x.PluginsPromotionData
	}
	return nil
}

func (x *PageDetailData) GetPluginsIntellectToolsData() *PluginIntellectToolsData {
	if x != nil {
		return x.PluginsIntellectToolsData
	}
	return nil
}

type PageDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *PageDetailData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error   `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *PageDetailResponse) Reset() {
	*x = PageDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pageService_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageDetailResponse) ProtoMessage() {}

func (x *PageDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pageService_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageDetailResponse.ProtoReflect.Descriptor instead.
func (*PageDetailResponse) Descriptor() ([]byte, []int) {
	return file_pageService_proto_rawDescGZIP(), []int{14}
}

func (x *PageDetailResponse) GetData() *PageDetailData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PageDetailResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type PageSearchData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pager *common.Pager `protobuf:"bytes,1,opt,name=pager,proto3" json:"pager"`
	Items []*Goods      `protobuf:"bytes,2,rep,name=items,proto3" json:"items"`
}

func (x *PageSearchData) Reset() {
	*x = PageSearchData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pageService_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageSearchData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageSearchData) ProtoMessage() {}

func (x *PageSearchData) ProtoReflect() protoreflect.Message {
	mi := &file_pageService_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageSearchData.ProtoReflect.Descriptor instead.
func (*PageSearchData) Descriptor() ([]byte, []int) {
	return file_pageService_proto_rawDescGZIP(), []int{15}
}

func (x *PageSearchData) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *PageSearchData) GetItems() []*Goods {
	if x != nil {
		return x.Items
	}
	return nil
}

type PageSearchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *PageSearchData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error   `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *PageSearchResponse) Reset() {
	*x = PageSearchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pageService_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageSearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageSearchResponse) ProtoMessage() {}

func (x *PageSearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pageService_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageSearchResponse.ProtoReflect.Descriptor instead.
func (*PageSearchResponse) Descriptor() ([]byte, []int) {
	return file_pageService_proto_rawDescGZIP(), []int{16}
}

func (x *PageSearchResponse) GetData() *PageSearchData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PageSearchResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type PageCategoryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category []*Term `protobuf:"bytes,1,rep,name=category,proto3" json:"category"`
}

func (x *PageCategoryData) Reset() {
	*x = PageCategoryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pageService_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageCategoryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageCategoryData) ProtoMessage() {}

func (x *PageCategoryData) ProtoReflect() protoreflect.Message {
	mi := &file_pageService_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageCategoryData.ProtoReflect.Descriptor instead.
func (*PageCategoryData) Descriptor() ([]byte, []int) {
	return file_pageService_proto_rawDescGZIP(), []int{17}
}

func (x *PageCategoryData) GetCategory() []*Term {
	if x != nil {
		return x.Category
	}
	return nil
}

type PageCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *PageCategoryData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error     `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *PageCategoryResponse) Reset() {
	*x = PageCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pageService_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageCategoryResponse) ProtoMessage() {}

func (x *PageCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pageService_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageCategoryResponse.ProtoReflect.Descriptor instead.
func (*PageCategoryResponse) Descriptor() ([]byte, []int) {
	return file_pageService_proto_rawDescGZIP(), []int{18}
}

func (x *PageCategoryResponse) GetData() *PageCategoryData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PageCategoryResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type PageSpecDetailResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *SpecDetailData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error   `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *PageSpecDetailResponse) Reset() {
	*x = PageSpecDetailResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pageService_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageSpecDetailResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageSpecDetailResponse) ProtoMessage() {}

func (x *PageSpecDetailResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pageService_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageSpecDetailResponse.ProtoReflect.Descriptor instead.
func (*PageSpecDetailResponse) Descriptor() ([]byte, []int) {
	return file_pageService_proto_rawDescGZIP(), []int{19}
}

func (x *PageSpecDetailResponse) GetData() *SpecDetailData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PageSpecDetailResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type PageSpecTypeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpecType             []string              `protobuf:"bytes,1,rep,name=spec_type,json=specType,proto3" json:"spec_type"`
	PluginsWholesaleData *PluginsWholesaleData `protobuf:"bytes,2,opt,name=plugins_wholesale_data,json=pluginsWholesaleData,proto3" json:"plugins_wholesale_data"`
}

func (x *PageSpecTypeData) Reset() {
	*x = PageSpecTypeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pageService_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageSpecTypeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageSpecTypeData) ProtoMessage() {}

func (x *PageSpecTypeData) ProtoReflect() protoreflect.Message {
	mi := &file_pageService_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageSpecTypeData.ProtoReflect.Descriptor instead.
func (*PageSpecTypeData) Descriptor() ([]byte, []int) {
	return file_pageService_proto_rawDescGZIP(), []int{20}
}

func (x *PageSpecTypeData) GetSpecType() []string {
	if x != nil {
		return x.SpecType
	}
	return nil
}

func (x *PageSpecTypeData) GetPluginsWholesaleData() *PluginsWholesaleData {
	if x != nil {
		return x.PluginsWholesaleData
	}
	return nil
}

type PluginsWholesaleData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
}

func (x *PluginsWholesaleData) Reset() {
	*x = PluginsWholesaleData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pageService_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginsWholesaleData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginsWholesaleData) ProtoMessage() {}

func (x *PluginsWholesaleData) ProtoReflect() protoreflect.Message {
	mi := &file_pageService_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginsWholesaleData.ProtoReflect.Descriptor instead.
func (*PluginsWholesaleData) Descriptor() ([]byte, []int) {
	return file_pageService_proto_rawDescGZIP(), []int{21}
}

func (x *PluginsWholesaleData) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type PageSpecTypeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *PageSpecTypeData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error     `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *PageSpecTypeResponse) Reset() {
	*x = PageSpecTypeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pageService_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageSpecTypeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageSpecTypeResponse) ProtoMessage() {}

func (x *PageSpecTypeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pageService_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageSpecTypeResponse.ProtoReflect.Descriptor instead.
func (*PageSpecTypeResponse) Descriptor() ([]byte, []int) {
	return file_pageService_proto_rawDescGZIP(), []int{22}
}

func (x *PageSpecTypeResponse) GetData() *PageSpecTypeData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *PageSpecTypeResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

type PageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged      int64          `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize   int64          `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords   string         `protobuf:"bytes,3,opt,name=keywords,proto3" json:"keywords"`
	SkuId      int64          `protobuf:"varint,4,opt,name=sku_id,json=skuId,proto3" json:"sku_id"`
	SkuSn      string         `protobuf:"bytes,5,opt,name=sku_sn,json=skuSn,proto3" json:"sku_sn"`
	SpuId      int64          `protobuf:"varint,6,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`
	Code       string         `protobuf:"bytes,7,opt,name=code,proto3" json:"code"`
	Title      string         `protobuf:"bytes,8,opt,name=title,proto3" json:"title"`
	Type       string         `protobuf:"bytes,9,opt,name=type,proto3" json:"type"`
	ParentId   int64          `protobuf:"varint,10,opt,name=parent_id,json=parentId,proto3" json:"parent_id"`
	CategoryId int64          `protobuf:"varint,11,opt,name=category_id,json=categoryId,proto3" json:"category_id"`
	TermId     int32          `protobuf:"varint,12,opt,name=term_id,json=termId,proto3" json:"term_id"`
	TermName   string         `protobuf:"bytes,13,opt,name=term_name,json=termName,proto3" json:"term_name"`
	BrandId    int32          `protobuf:"varint,14,opt,name=brand_id,json=brandId,proto3" json:"brand_id"`
	ShopId     int64          `protobuf:"varint,15,opt,name=shop_id,json=shopId,proto3" json:"shop_id"`
	Status     string         `protobuf:"bytes,16,opt,name=status,proto3" json:"status"`
	StartDate  string         `protobuf:"bytes,17,opt,name=start_date,json=startDate,proto3" json:"start_date"`
	EndDate    string         `protobuf:"bytes,18,opt,name=end_date,json=endDate,proto3" json:"end_date"`
	ParamId    int32          `protobuf:"varint,19,opt,name=param_id,json=paramId,proto3" json:"param_id"`
	ParamValue string         `protobuf:"bytes,20,opt,name=param_value,json=paramValue,proto3" json:"param_value"`
	TagId      int32          `protobuf:"varint,21,opt,name=tag_id,json=tagId,proto3" json:"tag_id"`
	TagName    string         `protobuf:"bytes,22,opt,name=tag_name,json=tagName,proto3" json:"tag_name"`
	Subtype    string         `protobuf:"bytes,23,opt,name=subtype,proto3" json:"subtype"`
	Specs      []*SpecReqInfo `protobuf:"bytes,24,rep,name=specs,proto3" json:"specs"`
}

func (x *PageRequest) Reset() {
	*x = PageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pageService_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageRequest) ProtoMessage() {}

func (x *PageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pageService_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageRequest.ProtoReflect.Descriptor instead.
func (*PageRequest) Descriptor() ([]byte, []int) {
	return file_pageService_proto_rawDescGZIP(), []int{23}
}

func (x *PageRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *PageRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *PageRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *PageRequest) GetSkuId() int64 {
	if x != nil {
		return x.SkuId
	}
	return 0
}

func (x *PageRequest) GetSkuSn() string {
	if x != nil {
		return x.SkuSn
	}
	return ""
}

func (x *PageRequest) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *PageRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *PageRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *PageRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PageRequest) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *PageRequest) GetCategoryId() int64 {
	if x != nil {
		return x.CategoryId
	}
	return 0
}

func (x *PageRequest) GetTermId() int32 {
	if x != nil {
		return x.TermId
	}
	return 0
}

func (x *PageRequest) GetTermName() string {
	if x != nil {
		return x.TermName
	}
	return ""
}

func (x *PageRequest) GetBrandId() int32 {
	if x != nil {
		return x.BrandId
	}
	return 0
}

func (x *PageRequest) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *PageRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PageRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *PageRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *PageRequest) GetParamId() int32 {
	if x != nil {
		return x.ParamId
	}
	return 0
}

func (x *PageRequest) GetParamValue() string {
	if x != nil {
		return x.ParamValue
	}
	return ""
}

func (x *PageRequest) GetTagId() int32 {
	if x != nil {
		return x.TagId
	}
	return 0
}

func (x *PageRequest) GetTagName() string {
	if x != nil {
		return x.TagName
	}
	return ""
}

func (x *PageRequest) GetSubtype() string {
	if x != nil {
		return x.Subtype
	}
	return ""
}

func (x *PageRequest) GetSpecs() []*SpecReqInfo {
	if x != nil {
		return x.Specs
	}
	return nil
}

type SpecReqInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  string `protobuf:"bytes,1,opt,name=type,proto3" json:"type"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value"`
}

func (x *SpecReqInfo) Reset() {
	*x = SpecReqInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pageService_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpecReqInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpecReqInfo) ProtoMessage() {}

func (x *SpecReqInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pageService_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpecReqInfo.ProtoReflect.Descriptor instead.
func (*SpecReqInfo) Descriptor() ([]byte, []int) {
	return file_pageService_proto_rawDescGZIP(), []int{24}
}

func (x *SpecReqInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SpecReqInfo) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type BuyButtonDataList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Color string `protobuf:"bytes,1,opt,name=color,proto3" json:"color"`
	Type  string `protobuf:"bytes,2,opt,name=type,proto3" json:"type"`
	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title"`
	Name  string `protobuf:"bytes,4,opt,name=name,proto3" json:"name"`
	Class string `protobuf:"bytes,5,opt,name=class,proto3" json:"class"`
	Icon  string `protobuf:"bytes,6,opt,name=icon,proto3" json:"icon"`
}

func (x *BuyButtonDataList) Reset() {
	*x = BuyButtonDataList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pageService_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyButtonDataList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyButtonDataList) ProtoMessage() {}

func (x *BuyButtonDataList) ProtoReflect() protoreflect.Message {
	mi := &file_pageService_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyButtonDataList.ProtoReflect.Descriptor instead.
func (*BuyButtonDataList) Descriptor() ([]byte, []int) {
	return file_pageService_proto_rawDescGZIP(), []int{5, 0}
}

func (x *BuyButtonDataList) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *BuyButtonDataList) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *BuyButtonDataList) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *BuyButtonDataList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BuyButtonDataList) GetClass() string {
	if x != nil {
		return x.Class
	}
	return ""
}

func (x *BuyButtonDataList) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type PluginCouponDataBaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationName     string `protobuf:"bytes,1,opt,name=application_name,json=applicationName,proto3" json:"application_name"`
	BannerImageUrl      string `protobuf:"bytes,2,opt,name=banner_image_url,json=bannerImageUrl,proto3" json:"banner_image_url"`
	BannerBgColor       string `protobuf:"bytes,3,opt,name=banner_bg_color,json=bannerBgColor,proto3" json:"banner_bg_color"`
	ShopApplicationName string `protobuf:"bytes,4,opt,name=shop_application_name,json=shopApplicationName,proto3" json:"shop_application_name"`
	IsRepeatReceive     bool   `protobuf:"varint,5,opt,name=is_repeat_receive,json=isRepeatReceive,proto3" json:"is_repeat_receive"`
	IsShopCoupon        bool   `protobuf:"varint,6,opt,name=is_shop_coupon,json=isShopCoupon,proto3" json:"is_shop_coupon"`
	IsShopNavCoupon     bool   `protobuf:"varint,7,opt,name=is_shop_nav_coupon,json=isShopNavCoupon,proto3" json:"is_shop_nav_coupon"`
	Url                 string `protobuf:"bytes,8,opt,name=url,proto3" json:"url"`
}

func (x *PluginCouponDataBaseInfo) Reset() {
	*x = PluginCouponDataBaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pageService_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginCouponDataBaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginCouponDataBaseInfo) ProtoMessage() {}

func (x *PluginCouponDataBaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pageService_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginCouponDataBaseInfo.ProtoReflect.Descriptor instead.
func (*PluginCouponDataBaseInfo) Descriptor() ([]byte, []int) {
	return file_pageService_proto_rawDescGZIP(), []int{8, 0}
}

func (x *PluginCouponDataBaseInfo) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *PluginCouponDataBaseInfo) GetBannerImageUrl() string {
	if x != nil {
		return x.BannerImageUrl
	}
	return ""
}

func (x *PluginCouponDataBaseInfo) GetBannerBgColor() string {
	if x != nil {
		return x.BannerBgColor
	}
	return ""
}

func (x *PluginCouponDataBaseInfo) GetShopApplicationName() string {
	if x != nil {
		return x.ShopApplicationName
	}
	return ""
}

func (x *PluginCouponDataBaseInfo) GetIsRepeatReceive() bool {
	if x != nil {
		return x.IsRepeatReceive
	}
	return false
}

func (x *PluginCouponDataBaseInfo) GetIsShopCoupon() bool {
	if x != nil {
		return x.IsShopCoupon
	}
	return false
}

func (x *PluginCouponDataBaseInfo) GetIsShopNavCoupon() bool {
	if x != nil {
		return x.IsShopNavCoupon
	}
	return false
}

func (x *PluginCouponDataBaseInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type PluginCouponDataDataInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	ShopId           int64  `protobuf:"varint,2,opt,name=shop_id,json=shopId,proto3" json:"shop_id"`
	Name             string `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`
	Desc             string `protobuf:"bytes,4,opt,name=desc,proto3" json:"desc"`
	BgColor          string `protobuf:"bytes,5,opt,name=bg_color,json=bgColor,proto3" json:"bg_color"`
	Type             string `protobuf:"bytes,6,opt,name=type,proto3" json:"type"`
	DiscountValue    string `protobuf:"bytes,7,opt,name=discount_value,json=discountValue,proto3" json:"discount_value"`
	IsUserReceive    bool   `protobuf:"varint,8,opt,name=is_user_receive,json=isUserReceive,proto3" json:"is_user_receive"`
	IsRegisterSend   bool   `protobuf:"varint,9,opt,name=is_register_send,json=isRegisterSend,proto3" json:"is_register_send"`
	IsOperable       bool   `protobuf:"varint,10,opt,name=is_operable,json=isOperable,proto3" json:"is_operable"`
	IsOperableName   bool   `protobuf:"varint,11,opt,name=is_operable_name,json=isOperableName,proto3" json:"is_operable_name"`
	TypeName         string `protobuf:"bytes,12,opt,name=type_name,json=typeName,proto3" json:"type_name"`
	TypeUnit         string `protobuf:"bytes,13,opt,name=type_unit,json=typeUnit,proto3" json:"type_unit"`
	BgColorName      string `protobuf:"bytes,14,opt,name=bg_color_name,json=bgColorName,proto3" json:"bg_color_name"`
	BgColorValue     string `protobuf:"bytes,15,opt,name=bg_color_value,json=bgColorValue,proto3" json:"bg_color_value"`
	ExpireTypeName   string `protobuf:"bytes,16,opt,name=expire_type_name,json=expireTypeName,proto3" json:"expire_type_name"`
	UseLimitTypeName string `protobuf:"bytes,17,opt,name=use_limit_type_name,json=useLimitTypeName,proto3" json:"use_limit_type_name"`
}

func (x *PluginCouponDataDataInfo) Reset() {
	*x = PluginCouponDataDataInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pageService_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginCouponDataDataInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginCouponDataDataInfo) ProtoMessage() {}

func (x *PluginCouponDataDataInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pageService_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginCouponDataDataInfo.ProtoReflect.Descriptor instead.
func (*PluginCouponDataDataInfo) Descriptor() ([]byte, []int) {
	return file_pageService_proto_rawDescGZIP(), []int{8, 1}
}

func (x *PluginCouponDataDataInfo) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PluginCouponDataDataInfo) GetShopId() int64 {
	if x != nil {
		return x.ShopId
	}
	return 0
}

func (x *PluginCouponDataDataInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PluginCouponDataDataInfo) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *PluginCouponDataDataInfo) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *PluginCouponDataDataInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PluginCouponDataDataInfo) GetDiscountValue() string {
	if x != nil {
		return x.DiscountValue
	}
	return ""
}

func (x *PluginCouponDataDataInfo) GetIsUserReceive() bool {
	if x != nil {
		return x.IsUserReceive
	}
	return false
}

func (x *PluginCouponDataDataInfo) GetIsRegisterSend() bool {
	if x != nil {
		return x.IsRegisterSend
	}
	return false
}

func (x *PluginCouponDataDataInfo) GetIsOperable() bool {
	if x != nil {
		return x.IsOperable
	}
	return false
}

func (x *PluginCouponDataDataInfo) GetIsOperableName() bool {
	if x != nil {
		return x.IsOperableName
	}
	return false
}

func (x *PluginCouponDataDataInfo) GetTypeName() string {
	if x != nil {
		return x.TypeName
	}
	return ""
}

func (x *PluginCouponDataDataInfo) GetTypeUnit() string {
	if x != nil {
		return x.TypeUnit
	}
	return ""
}

func (x *PluginCouponDataDataInfo) GetBgColorName() string {
	if x != nil {
		return x.BgColorName
	}
	return ""
}

func (x *PluginCouponDataDataInfo) GetBgColorValue() string {
	if x != nil {
		return x.BgColorValue
	}
	return ""
}

func (x *PluginCouponDataDataInfo) GetExpireTypeName() string {
	if x != nil {
		return x.ExpireTypeName
	}
	return ""
}

func (x *PluginCouponDataDataInfo) GetUseLimitTypeName() string {
	if x != nil {
		return x.UseLimitTypeName
	}
	return ""
}

type PluginSeckillDataTimeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hours   int64  `protobuf:"varint,1,opt,name=hours,proto3" json:"hours"`
	Minutes int64  `protobuf:"varint,2,opt,name=minutes,proto3" json:"minutes"`
	Seconds int64  `protobuf:"varint,3,opt,name=seconds,proto3" json:"seconds"`
	Status  string `protobuf:"bytes,4,opt,name=status,proto3" json:"status"`
	Msg     string `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg"`
}

func (x *PluginSeckillDataTimeInfo) Reset() {
	*x = PluginSeckillDataTimeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pageService_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PluginSeckillDataTimeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PluginSeckillDataTimeInfo) ProtoMessage() {}

func (x *PluginSeckillDataTimeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pageService_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PluginSeckillDataTimeInfo.ProtoReflect.Descriptor instead.
func (*PluginSeckillDataTimeInfo) Descriptor() ([]byte, []int) {
	return file_pageService_proto_rawDescGZIP(), []int{12, 0}
}

func (x *PluginSeckillDataTimeInfo) GetHours() int64 {
	if x != nil {
		return x.Hours
	}
	return 0
}

func (x *PluginSeckillDataTimeInfo) GetMinutes() int64 {
	if x != nil {
		return x.Minutes
	}
	return 0
}

func (x *PluginSeckillDataTimeInfo) GetSeconds() int64 {
	if x != nil {
		return x.Seconds
	}
	return 0
}

func (x *PluginSeckillDataTimeInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *PluginSeckillDataTimeInfo) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_pageService_proto protoreflect.FileDescriptor

var file_pageService_proto_rawDesc = []byte{
	0x0a, 0x11, 0x70, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x11, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x11, 0x74, 0x65, 0x72, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x95, 0x01, 0x0a, 0x0e, 0x53, 0x70, 0x65, 0x63,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x09, 0x73, 0x70,
	0x65, 0x63, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x42, 0x61, 0x73, 0x65, 0x52, 0x08, 0x73, 0x70, 0x65,
	0x63, 0x42, 0x61, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0f, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f,
	0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x52,
	0x0e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22,
	0x93, 0x02, 0x0a, 0x12, 0x53, 0x70, 0x65, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x42, 0x61, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x49,
	0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x77, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f,
	0x64, 0x69, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x72, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x25,
	0x0a, 0x0e, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0x2b, 0x0a, 0x15, 0x53, 0x70, 0x65, 0x63, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x73, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0xbf, 0x01, 0x0a, 0x14, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x50, 0x72,
	0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x74, 0x61, 0x67, 0x12, 0x2d, 0x0a, 0x12, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x11, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0x4f, 0x0a, 0x0d, 0x43, 0x61, 0x72, 0x74, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x75, 0x79, 0x5f, 0x6e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x75, 0x79, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x22, 0xbf, 0x02, 0x0a, 0x09, 0x42, 0x75, 0x79, 0x42, 0x75, 0x74,
	0x74, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12,
	0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x62, 0x75, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x69, 0x73, 0x42, 0x75, 0x79, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f,
	0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x77, 0x12,
	0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x63, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x69, 0x73, 0x43, 0x61, 0x72, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x42, 0x75, 0x79, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x2e, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x89, 0x01, 0x0a, 0x09,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c,
	0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6c,
	0x61, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x38, 0x0a, 0x0c, 0x4d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x54, 0x61, 0x62, 0x4e, 0x61, 0x76, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x22, 0x47, 0x0a, 0x0b, 0x4d, 0x6f, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x76,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x22, 0x85, 0x08, 0x0a, 0x10, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x38, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43,
	0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x1a, 0xcd, 0x02, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x10,
	0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x5f, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x42, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x32,
	0x0a, 0x15, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x73,
	0x68, 0x6f, 0x70, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x5f,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69,
	0x73, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x24,
	0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x70, 0x43, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x12, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x6f, 0x70, 0x5f,
	0x6e, 0x61, 0x76, 0x5f, 0x63, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x69, 0x73, 0x53, 0x68, 0x6f, 0x70, 0x4e, 0x61, 0x76, 0x43, 0x6f, 0x75, 0x70, 0x6f,
	0x6e, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x1a, 0xac, 0x04, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65,
	0x73, 0x63, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x69, 0x73, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x12, 0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x73, 0x65, 0x6e, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73,
	0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x69, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x69,
	0x73, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x62, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x75, 0x6e, 0x69, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x69, 0x74, 0x12,
	0x22, 0x0a, 0x0d, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x67, 0x43,
	0x6f, 0x6c, 0x6f, 0x72, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x28, 0x0a, 0x10, 0x65, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x10, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x13, 0x75, 0x73, 0x65, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x75, 0x73, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x18, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x74,
	0x65, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x6f, 0x6c, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x3e, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x62, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x61, 0x73, 0x65, 0x42, 0x6f, 0x74,
	0x74, 0x6f, 0x6d, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x12,
	0x3e, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x6f, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x49, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x54, 0x6f, 0x70, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x54, 0x6f, 0x70, 0x22,
	0x3d, 0x0a, 0x13, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x42, 0x61, 0x73, 0x65,
	0x42, 0x6f, 0x74, 0x74, 0x6f, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x46,
	0x0a, 0x13, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x54, 0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6d,
	0x73, 0x67, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x73, 0x67, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xb6, 0x02, 0x0a, 0x11, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56, 0x61, 0x6c, 0x69,
	0x64, 0x12, 0x20, 0x0a, 0x0c, 0x62, 0x67, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72,
	0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x67, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x39, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x74,
	0x69, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x1a, 0x7f,
	0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x68,
	0x6f, 0x75, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x68, 0x6f, 0x75, 0x72,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x75, 0x74, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22,
	0xf6, 0x04, 0x0a, 0x0e, 0x50, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x25, 0x0a, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x52, 0x05, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x12, 0x36, 0x0a, 0x0a, 0x63, 0x61, 0x72,
	0x74, 0x5f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x72, 0x74, 0x54, 0x6f, 0x74,
	0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x63, 0x61, 0x72, 0x74, 0x54, 0x6f, 0x74, 0x61,
	0x6c, 0x12, 0x32, 0x0a, 0x0a, 0x62, 0x75, 0x79, 0x5f, 0x62, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x42, 0x75, 0x79, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x52, 0x09, 0x62, 0x75, 0x79, 0x42,
	0x75, 0x74, 0x74, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x0f, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x5f,
	0x74, 0x61, 0x62, 0x5f, 0x6e, 0x61, 0x76, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x69, 0x64, 0x64, 0x6c, 0x65,
	0x54, 0x61, 0x62, 0x4e, 0x61, 0x76, 0x52, 0x0d, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x54, 0x61,
	0x62, 0x4e, 0x61, 0x76, 0x73, 0x12, 0x3b, 0x0a, 0x0e, 0x6d, 0x6f, 0x72, 0x65, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x6e, 0x61, 0x76, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x72, 0x65, 0x4c, 0x69, 0x73,
	0x74, 0x4e, 0x61, 0x76, 0x52, 0x0c, 0x6d, 0x6f, 0x72, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61,
	0x76, 0x73, 0x12, 0x4a, 0x0a, 0x13, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x5f, 0x63, 0x6f,
	0x75, 0x70, 0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x11, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x73, 0x43, 0x6f, 0x75, 0x70, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4d,
	0x0a, 0x14, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x5f, 0x73, 0x65, 0x63, 0x6b, 0x69, 0x6c,
	0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53, 0x65,
	0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x12, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x73, 0x53, 0x65, 0x63, 0x6b, 0x69, 0x6c, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x54, 0x0a,
	0x16, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73,
	0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x14, 0x50,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x63, 0x0a, 0x1c, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x5f, 0x69,
	0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x73, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x49, 0x6e, 0x74, 0x65, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x6f, 0x6c, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x19, 0x70,
	0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x49, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x54,
	0x6f, 0x6f, 0x6c, 0x73, 0x44, 0x61, 0x74, 0x61, 0x22, 0x67, 0x0a, 0x12, 0x50, 0x61, 0x67, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x5c, 0x0a, 0x0e, 0x50, 0x61, 0x67, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65,
	0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x47, 0x6f, 0x6f, 0x64, 0x73, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22,
	0x67, 0x0a, 0x12, 0x50, 0x61, 0x67, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x3e, 0x0a, 0x10, 0x50, 0x61, 0x67, 0x65,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x52, 0x08,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x22, 0x6b, 0x0a, 0x14, 0x50, 0x61, 0x67, 0x65,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x6b, 0x0a, 0x16, 0x50, 0x61, 0x67, 0x65, 0x53, 0x70, 0x65,
	0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2c, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x22, 0x85, 0x01, 0x0a, 0x10, 0x50, 0x61, 0x67, 0x65, 0x53, 0x70, 0x65, 0x63, 0x54,
	0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x70, 0x65, 0x63, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x73, 0x70, 0x65, 0x63,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x54, 0x0a, 0x16, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x5f,
	0x77, 0x68, 0x6f, 0x6c, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x57, 0x68, 0x6f, 0x6c, 0x65, 0x73, 0x61, 0x6c, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x14, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x73, 0x57, 0x68, 0x6f,
	0x6c, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x2a, 0x0a, 0x14, 0x50, 0x6c,
	0x75, 0x67, 0x69, 0x6e, 0x73, 0x57, 0x68, 0x6f, 0x6c, 0x65, 0x73, 0x61, 0x6c, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x6b, 0x0a, 0x14, 0x50, 0x61, 0x67, 0x65, 0x53, 0x70,
	0x65, 0x63, 0x54, 0x79, 0x70, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x53, 0x70, 0x65, 0x63,
	0x54, 0x79, 0x70, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23,
	0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x22, 0x8e, 0x05, 0x0a, 0x0b, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72,
	0x64, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x6b, 0x75,
	0x5f, 0x73, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x6b, 0x75, 0x53, 0x6e,
	0x12, 0x15, 0x0a, 0x06, 0x73, 0x70, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x73, 0x70, 0x75, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x72, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x74, 0x65, 0x72, 0x6d, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x74, 0x65, 0x72, 0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x74, 0x65, 0x72, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x72, 0x61,
	0x6e, 0x64, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x69, 0x64, 0x18,
	0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x49, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x74,
	0x61, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x74, 0x61, 0x67,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x61, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x61, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x75, 0x62, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x73, 0x70, 0x65, 0x63, 0x73,
	0x18, 0x18, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x73,
	0x70, 0x65, 0x63, 0x73, 0x22, 0x37, 0x0a, 0x0b, 0x53, 0x70, 0x65, 0x63, 0x52, 0x65, 0x71, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0xd8, 0x02,
	0x0a, 0x0b, 0x50, 0x61, 0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a,
	0x06, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x06,
	0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x53, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x43, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45,
	0x0a, 0x0a, 0x53, 0x70, 0x65, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x15, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x53, 0x70, 0x65, 0x63, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x08, 0x53, 0x70, 0x65, 0x63, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x53, 0x70, 0x65, 0x63, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pageService_proto_rawDescOnce sync.Once
	file_pageService_proto_rawDescData = file_pageService_proto_rawDesc
)

func file_pageService_proto_rawDescGZIP() []byte {
	file_pageService_proto_rawDescOnce.Do(func() {
		file_pageService_proto_rawDescData = protoimpl.X.CompressGZIP(file_pageService_proto_rawDescData)
	})
	return file_pageService_proto_rawDescData
}

var file_pageService_proto_msgTypes = make([]protoimpl.MessageInfo, 29)
var file_pageService_proto_goTypes = []interface{}{
	(*SpecDetailData)(nil),            // 0: services.SpecDetailData
	(*SpecDetailDataBase)(nil),        // 1: services.SpecDetailDataBase
	(*SpecDetailDataExtends)(nil),     // 2: services.SpecDetailDataExtends
	(*PluginsPromotionData)(nil),      // 3: services.PluginsPromotionData
	(*CartTotalInfo)(nil),             // 4: services.CartTotalInfo
	(*BuyButton)(nil),                 // 5: services.BuyButton
	(*MiddleTabNav)(nil),              // 6: services.MiddleTabNav
	(*MoreListNav)(nil),               // 7: services.MoreListNav
	(*PluginCouponData)(nil),          // 8: services.PluginCouponData
	(*PluginIntellectToolsData)(nil),  // 9: services.PluginIntellectToolsData
	(*IntellectBaseBottom)(nil),       // 10: services.IntellectBaseBottom
	(*IntellectContentTop)(nil),       // 11: services.IntellectContentTop
	(*PluginSeckillData)(nil),         // 12: services.PluginSeckillData
	(*PageDetailData)(nil),            // 13: services.PageDetailData
	(*PageDetailResponse)(nil),        // 14: services.PageDetailResponse
	(*PageSearchData)(nil),            // 15: services.PageSearchData
	(*PageSearchResponse)(nil),        // 16: services.PageSearchResponse
	(*PageCategoryData)(nil),          // 17: services.PageCategoryData
	(*PageCategoryResponse)(nil),      // 18: services.PageCategoryResponse
	(*PageSpecDetailResponse)(nil),    // 19: services.PageSpecDetailResponse
	(*PageSpecTypeData)(nil),          // 20: services.PageSpecTypeData
	(*PluginsWholesaleData)(nil),      // 21: services.PluginsWholesaleData
	(*PageSpecTypeResponse)(nil),      // 22: services.PageSpecTypeResponse
	(*PageRequest)(nil),               // 23: services.PageRequest
	(*SpecReqInfo)(nil),               // 24: services.SpecReqInfo
	(*BuyButtonDataList)(nil),         // 25: services.BuyButton.data_list
	(*PluginCouponDataBaseInfo)(nil),  // 26: services.PluginCouponData.base_info
	(*PluginCouponDataDataInfo)(nil),  // 27: services.PluginCouponData.data_info
	(*PluginSeckillDataTimeInfo)(nil), // 28: services.PluginSeckillData.time_info
	(*Goods)(nil),                     // 29: services.Goods
	(*common.Error)(nil),              // 30: common.Error
	(*common.Pager)(nil),              // 31: common.Pager
	(*Term)(nil),                      // 32: services.Term
}
var file_pageService_proto_depIdxs = []int32{
	1,  // 0: services.SpecDetailData.spec_base:type_name -> services.SpecDetailDataBase
	2,  // 1: services.SpecDetailData.extend_elements:type_name -> services.SpecDetailDataExtends
	25, // 2: services.BuyButton.data:type_name -> services.BuyButton.data_list
	26, // 3: services.PluginCouponData.base:type_name -> services.PluginCouponData.base_info
	27, // 4: services.PluginCouponData.data:type_name -> services.PluginCouponData.data_info
	10, // 5: services.PluginIntellectToolsData.base_bottom:type_name -> services.IntellectBaseBottom
	11, // 6: services.PluginIntellectToolsData.content_top:type_name -> services.IntellectContentTop
	28, // 7: services.PluginSeckillData.time:type_name -> services.PluginSeckillData.time_info
	29, // 8: services.PageDetailData.goods:type_name -> services.Goods
	4,  // 9: services.PageDetailData.cart_total:type_name -> services.CartTotalInfo
	5,  // 10: services.PageDetailData.buy_button:type_name -> services.BuyButton
	6,  // 11: services.PageDetailData.middle_tab_navs:type_name -> services.MiddleTabNav
	7,  // 12: services.PageDetailData.more_list_navs:type_name -> services.MoreListNav
	8,  // 13: services.PageDetailData.plugins_coupon_data:type_name -> services.PluginCouponData
	12, // 14: services.PageDetailData.Plugins_seckill_data:type_name -> services.PluginSeckillData
	3,  // 15: services.PageDetailData.Plugins_promotion_data:type_name -> services.PluginsPromotionData
	9,  // 16: services.PageDetailData.plugins_intellect_tools_data:type_name -> services.PluginIntellectToolsData
	13, // 17: services.PageDetailResponse.data:type_name -> services.PageDetailData
	30, // 18: services.PageDetailResponse.error:type_name -> common.Error
	31, // 19: services.PageSearchData.pager:type_name -> common.Pager
	29, // 20: services.PageSearchData.items:type_name -> services.Goods
	15, // 21: services.PageSearchResponse.data:type_name -> services.PageSearchData
	30, // 22: services.PageSearchResponse.error:type_name -> common.Error
	32, // 23: services.PageCategoryData.category:type_name -> services.Term
	17, // 24: services.PageCategoryResponse.data:type_name -> services.PageCategoryData
	30, // 25: services.PageCategoryResponse.error:type_name -> common.Error
	0,  // 26: services.PageSpecDetailResponse.data:type_name -> services.SpecDetailData
	30, // 27: services.PageSpecDetailResponse.error:type_name -> common.Error
	21, // 28: services.PageSpecTypeData.plugins_wholesale_data:type_name -> services.PluginsWholesaleData
	20, // 29: services.PageSpecTypeResponse.data:type_name -> services.PageSpecTypeData
	30, // 30: services.PageSpecTypeResponse.error:type_name -> common.Error
	24, // 31: services.PageRequest.specs:type_name -> services.SpecReqInfo
	23, // 32: services.PageService.Detail:input_type -> services.PageRequest
	23, // 33: services.PageService.Search:input_type -> services.PageRequest
	23, // 34: services.PageService.Category:input_type -> services.PageRequest
	23, // 35: services.PageService.SpecDetail:input_type -> services.PageRequest
	23, // 36: services.PageService.SpecType:input_type -> services.PageRequest
	14, // 37: services.PageService.Detail:output_type -> services.PageDetailResponse
	16, // 38: services.PageService.Search:output_type -> services.PageSearchResponse
	18, // 39: services.PageService.Category:output_type -> services.PageCategoryResponse
	19, // 40: services.PageService.SpecDetail:output_type -> services.PageSpecDetailResponse
	22, // 41: services.PageService.SpecType:output_type -> services.PageSpecTypeResponse
	37, // [37:42] is the sub-list for method output_type
	32, // [32:37] is the sub-list for method input_type
	32, // [32:32] is the sub-list for extension type_name
	32, // [32:32] is the sub-list for extension extendee
	0,  // [0:32] is the sub-list for field type_name
}

func init() { file_pageService_proto_init() }
func file_pageService_proto_init() {
	if File_pageService_proto != nil {
		return
	}
	file_termService_proto_init()
	file_goodsService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_pageService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecDetailData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pageService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecDetailDataBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pageService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecDetailDataExtends); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pageService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginsPromotionData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pageService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CartTotalInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pageService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyButton); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pageService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MiddleTabNav); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pageService_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MoreListNav); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pageService_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginCouponData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pageService_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginIntellectToolsData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pageService_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntellectBaseBottom); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pageService_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntellectContentTop); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pageService_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginSeckillData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pageService_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageDetailData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pageService_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pageService_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageSearchData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pageService_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageSearchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pageService_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageCategoryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pageService_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pageService_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageSpecDetailResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pageService_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageSpecTypeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pageService_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginsWholesaleData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pageService_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageSpecTypeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pageService_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pageService_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpecReqInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pageService_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyButtonDataList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pageService_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginCouponDataBaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pageService_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginCouponDataDataInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pageService_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PluginSeckillDataTimeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pageService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   29,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pageService_proto_goTypes,
		DependencyIndexes: file_pageService_proto_depIdxs,
		MessageInfos:      file_pageService_proto_msgTypes,
	}.Build()
	File_pageService_proto = out.File
	file_pageService_proto_rawDesc = nil
	file_pageService_proto_goTypes = nil
	file_pageService_proto_depIdxs = nil
}
