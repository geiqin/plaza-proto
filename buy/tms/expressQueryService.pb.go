// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: expressQueryService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExpressQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                           //ID
	ExpressType   string `protobuf:"bytes,2,opt,name=express_type,json=expressType,proto3" json:"express_type"`       //快递类型
	ExpressName   string `protobuf:"bytes,3,opt,name=express_name,json=expressName,proto3" json:"express_name"`       //快递名称
	ExpressNumber string `protobuf:"bytes,4,opt,name=express_number,json=expressNumber,proto3" json:"express_number"` //快递单号
	ExpressCode   string `protobuf:"bytes,5,opt,name=express_code,json=expressCode,proto3" json:"express_code"`       //快递编码
	RequestParams string `protobuf:"bytes,6,opt,name=request_params,json=requestParams,proto3" json:"request_params"` //请求参数（数组则json字符串存储）
	ResponseData  string `protobuf:"bytes,7,opt,name=response_data,json=responseData,proto3" json:"response_data"`    //响应参数（数组则json字符串存储）
	Status        string `protobuf:"bytes,8,opt,name=status,proto3" json:"status"`                                    //状态
	CreatedAt     string `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt     string `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	StatusName    string `protobuf:"bytes,11,opt,name=status_name,json=statusName,proto3" json:"status_name"`
}

func (x *ExpressQuery) Reset() {
	*x = ExpressQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_expressQueryService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpressQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpressQuery) ProtoMessage() {}

func (x *ExpressQuery) ProtoReflect() protoreflect.Message {
	mi := &file_expressQueryService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpressQuery.ProtoReflect.Descriptor instead.
func (*ExpressQuery) Descriptor() ([]byte, []int) {
	return file_expressQueryService_proto_rawDescGZIP(), []int{0}
}

func (x *ExpressQuery) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ExpressQuery) GetExpressType() string {
	if x != nil {
		return x.ExpressType
	}
	return ""
}

func (x *ExpressQuery) GetExpressName() string {
	if x != nil {
		return x.ExpressName
	}
	return ""
}

func (x *ExpressQuery) GetExpressNumber() string {
	if x != nil {
		return x.ExpressNumber
	}
	return ""
}

func (x *ExpressQuery) GetExpressCode() string {
	if x != nil {
		return x.ExpressCode
	}
	return ""
}

func (x *ExpressQuery) GetRequestParams() string {
	if x != nil {
		return x.RequestParams
	}
	return ""
}

func (x *ExpressQuery) GetResponseData() string {
	if x != nil {
		return x.ResponseData
	}
	return ""
}

func (x *ExpressQuery) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ExpressQuery) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ExpressQuery) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *ExpressQuery) GetStatusName() string {
	if x != nil {
		return x.StatusName
	}
	return ""
}

type ExpressQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged    int64 `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize int64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	//以下为自定义参数
	StartAt       int64  `protobuf:"varint,3,opt,name=start_at,json=startAt,proto3" json:"start_at"`
	ExpressType   string `protobuf:"bytes,4,opt,name=express_type,json=expressType,proto3" json:"express_type"`
	ExpressName   string `protobuf:"bytes,8,opt,name=express_name,json=expressName,proto3" json:"express_name"`
	ExpressNumber string `protobuf:"bytes,9,opt,name=express_number,json=expressNumber,proto3" json:"express_number"`
	ExpressCode   string `protobuf:"bytes,10,opt,name=express_code,json=expressCode,proto3" json:"express_code"`
	Status        string `protobuf:"bytes,11,opt,name=status,proto3" json:"status"`
}

func (x *ExpressQueryRequest) Reset() {
	*x = ExpressQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_expressQueryService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpressQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpressQueryRequest) ProtoMessage() {}

func (x *ExpressQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_expressQueryService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpressQueryRequest.ProtoReflect.Descriptor instead.
func (*ExpressQueryRequest) Descriptor() ([]byte, []int) {
	return file_expressQueryService_proto_rawDescGZIP(), []int{1}
}

func (x *ExpressQueryRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *ExpressQueryRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ExpressQueryRequest) GetStartAt() int64 {
	if x != nil {
		return x.StartAt
	}
	return 0
}

func (x *ExpressQueryRequest) GetExpressType() string {
	if x != nil {
		return x.ExpressType
	}
	return ""
}

func (x *ExpressQueryRequest) GetExpressName() string {
	if x != nil {
		return x.ExpressName
	}
	return ""
}

func (x *ExpressQueryRequest) GetExpressNumber() string {
	if x != nil {
		return x.ExpressNumber
	}
	return ""
}

func (x *ExpressQueryRequest) GetExpressCode() string {
	if x != nil {
		return x.ExpressCode
	}
	return ""
}

func (x *ExpressQueryRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ExpressQueryTrace struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string                     `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`     //快递名称
	Code    string                     `protobuf:"bytes,2,opt,name=code,proto3" json:"code"`     //快递编号
	Number  string                     `protobuf:"bytes,3,opt,name=number,proto3" json:"number"` //快递单号
	LogoUrl string                     `protobuf:"bytes,4,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url"`
	Details []*ExpressQueryTraceDetail `protobuf:"bytes,6,rep,name=details,proto3" json:"details"`
}

func (x *ExpressQueryTrace) Reset() {
	*x = ExpressQueryTrace{}
	if protoimpl.UnsafeEnabled {
		mi := &file_expressQueryService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpressQueryTrace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpressQueryTrace) ProtoMessage() {}

func (x *ExpressQueryTrace) ProtoReflect() protoreflect.Message {
	mi := &file_expressQueryService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpressQueryTrace.ProtoReflect.Descriptor instead.
func (*ExpressQueryTrace) Descriptor() ([]byte, []int) {
	return file_expressQueryService_proto_rawDescGZIP(), []int{2}
}

func (x *ExpressQueryTrace) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExpressQueryTrace) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ExpressQueryTrace) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *ExpressQueryTrace) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *ExpressQueryTrace) GetDetails() []*ExpressQueryTraceDetail {
	if x != nil {
		return x.Details
	}
	return nil
}

type ExpressQueryTraceDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Desc     string `protobuf:"bytes,1,opt,name=desc,proto3" json:"desc"`         //描述
	Time     string `protobuf:"bytes,2,opt,name=time,proto3" json:"time"`         //时间
	Location string `protobuf:"bytes,3,opt,name=location,proto3" json:"location"` //地点
}

func (x *ExpressQueryTraceDetail) Reset() {
	*x = ExpressQueryTraceDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_expressQueryService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpressQueryTraceDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpressQueryTraceDetail) ProtoMessage() {}

func (x *ExpressQueryTraceDetail) ProtoReflect() protoreflect.Message {
	mi := &file_expressQueryService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpressQueryTraceDetail.ProtoReflect.Descriptor instead.
func (*ExpressQueryTraceDetail) Descriptor() ([]byte, []int) {
	return file_expressQueryService_proto_rawDescGZIP(), []int{3}
}

func (x *ExpressQueryTraceDetail) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ExpressQueryTraceDetail) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

func (x *ExpressQueryTraceDetail) GetLocation() string {
	if x != nil {
		return x.Location
	}
	return ""
}

type ExpressQueryTraceRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId       int64  `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id"`
	PacketId      int64  `protobuf:"varint,2,opt,name=packet_id,json=packetId,proto3" json:"packet_id"`
	CustomerName  string `protobuf:"bytes,3,opt,name=customer_name,json=customerName,proto3" json:"customer_name"`
	ExpressName   string `protobuf:"bytes,4,opt,name=express_name,json=expressName,proto3" json:"express_name"`
	ExpressNumber string `protobuf:"bytes,5,opt,name=express_number,json=expressNumber,proto3" json:"express_number"`
	ExpressCode   string `protobuf:"bytes,6,opt,name=express_code,json=expressCode,proto3" json:"express_code"`
	Status        string `protobuf:"bytes,7,opt,name=status,proto3" json:"status"`
}

func (x *ExpressQueryTraceRequest) Reset() {
	*x = ExpressQueryTraceRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_expressQueryService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpressQueryTraceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpressQueryTraceRequest) ProtoMessage() {}

func (x *ExpressQueryTraceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_expressQueryService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpressQueryTraceRequest.ProtoReflect.Descriptor instead.
func (*ExpressQueryTraceRequest) Descriptor() ([]byte, []int) {
	return file_expressQueryService_proto_rawDescGZIP(), []int{4}
}

func (x *ExpressQueryTraceRequest) GetOrderId() int64 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

func (x *ExpressQueryTraceRequest) GetPacketId() int64 {
	if x != nil {
		return x.PacketId
	}
	return 0
}

func (x *ExpressQueryTraceRequest) GetCustomerName() string {
	if x != nil {
		return x.CustomerName
	}
	return ""
}

func (x *ExpressQueryTraceRequest) GetExpressName() string {
	if x != nil {
		return x.ExpressName
	}
	return ""
}

func (x *ExpressQueryTraceRequest) GetExpressNumber() string {
	if x != nil {
		return x.ExpressNumber
	}
	return ""
}

func (x *ExpressQueryTraceRequest) GetExpressCode() string {
	if x != nil {
		return x.ExpressCode
	}
	return ""
}

func (x *ExpressQueryTraceRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ExpressQueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *ExpressQuery      `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager      `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*ExpressQuery    `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Trace  *ExpressQueryTrace `protobuf:"bytes,4,opt,name=trace,proto3" json:"trace"`
	Msg    string             `protobuf:"bytes,5,opt,name=msg,proto3" json:"msg"`
}

func (x *ExpressQueryResponse) Reset() {
	*x = ExpressQueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_expressQueryService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpressQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpressQueryResponse) ProtoMessage() {}

func (x *ExpressQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_expressQueryService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpressQueryResponse.ProtoReflect.Descriptor instead.
func (*ExpressQueryResponse) Descriptor() ([]byte, []int) {
	return file_expressQueryService_proto_rawDescGZIP(), []int{5}
}

func (x *ExpressQueryResponse) GetEntity() *ExpressQuery {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *ExpressQueryResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *ExpressQueryResponse) GetItems() []*ExpressQuery {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ExpressQueryResponse) GetTrace() *ExpressQueryTrace {
	if x != nil {
		return x.Trace
	}
	return nil
}

func (x *ExpressQueryResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_expressQueryService_proto protoreflect.FileDescriptor

var file_expressQueryService_proto_rawDesc = []byte{
	0x0a, 0x19, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61,
	0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf1, 0x02, 0x0a, 0x0c, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c,
	0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x8b, 0x02, 0x0a,
	0x13, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x41, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12,
	0x21, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xab, 0x01, 0x0a, 0x11, 0x45,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x72, 0x61, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x3b, 0x0a, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x54, 0x72, 0x61, 0x63, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x5d, 0x0a, 0x17, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x72, 0x61, 0x63, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xfc, 0x01, 0x0a, 0x18, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x21, 0x0a, 0x0c, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x0c, 0x65,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xde, 0x01, 0x0a, 0x14, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2e, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12,
	0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x31, 0x0a, 0x05, 0x74, 0x72, 0x61, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x72, 0x61, 0x63, 0x65, 0x52, 0x05,
	0x74, 0x72, 0x61, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x32, 0xf3, 0x01, 0x0a, 0x13, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x42, 0x0a, 0x06, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x1a, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1d, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d,
	0x0a, 0x05, 0x54, 0x72, 0x61, 0x63, 0x65, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54,
	0x72, 0x61, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a,
	0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_expressQueryService_proto_rawDescOnce sync.Once
	file_expressQueryService_proto_rawDescData = file_expressQueryService_proto_rawDesc
)

func file_expressQueryService_proto_rawDescGZIP() []byte {
	file_expressQueryService_proto_rawDescOnce.Do(func() {
		file_expressQueryService_proto_rawDescData = protoimpl.X.CompressGZIP(file_expressQueryService_proto_rawDescData)
	})
	return file_expressQueryService_proto_rawDescData
}

var file_expressQueryService_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_expressQueryService_proto_goTypes = []interface{}{
	(*ExpressQuery)(nil),             // 0: services.ExpressQuery
	(*ExpressQueryRequest)(nil),      // 1: services.ExpressQueryRequest
	(*ExpressQueryTrace)(nil),        // 2: services.ExpressQueryTrace
	(*ExpressQueryTraceDetail)(nil),  // 3: services.ExpressQueryTraceDetail
	(*ExpressQueryTraceRequest)(nil), // 4: services.ExpressQueryTraceRequest
	(*ExpressQueryResponse)(nil),     // 5: services.ExpressQueryResponse
	(*common.Pager)(nil),             // 6: common.Pager
}
var file_expressQueryService_proto_depIdxs = []int32{
	3, // 0: services.ExpressQueryTrace.details:type_name -> services.ExpressQueryTraceDetail
	0, // 1: services.ExpressQueryResponse.entity:type_name -> services.ExpressQuery
	6, // 2: services.ExpressQueryResponse.pager:type_name -> common.Pager
	0, // 3: services.ExpressQueryResponse.items:type_name -> services.ExpressQuery
	2, // 4: services.ExpressQueryResponse.trace:type_name -> services.ExpressQueryTrace
	0, // 5: services.ExpressQueryService.Detail:input_type -> services.ExpressQuery
	1, // 6: services.ExpressQueryService.Search:input_type -> services.ExpressQueryRequest
	4, // 7: services.ExpressQueryService.Trace:input_type -> services.ExpressQueryTraceRequest
	5, // 8: services.ExpressQueryService.Detail:output_type -> services.ExpressQueryResponse
	5, // 9: services.ExpressQueryService.Search:output_type -> services.ExpressQueryResponse
	5, // 10: services.ExpressQueryService.Trace:output_type -> services.ExpressQueryResponse
	8, // [8:11] is the sub-list for method output_type
	5, // [5:8] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_expressQueryService_proto_init() }
func file_expressQueryService_proto_init() {
	if File_expressQueryService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_expressQueryService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpressQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_expressQueryService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpressQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_expressQueryService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpressQueryTrace); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_expressQueryService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpressQueryTraceDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_expressQueryService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpressQueryTraceRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_expressQueryService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpressQueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_expressQueryService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_expressQueryService_proto_goTypes,
		DependencyIndexes: file_expressQueryService_proto_depIdxs,
		MessageInfos:      file_expressQueryService_proto_msgTypes,
	}.Build()
	File_expressQueryService_proto = out.File
	file_expressQueryService_proto_rawDesc = nil
	file_expressQueryService_proto_goTypes = nil
	file_expressQueryService_proto_depIdxs = nil
}
