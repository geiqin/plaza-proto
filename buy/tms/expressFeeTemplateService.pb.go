// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: expressFeeTemplateService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ExpressFeeTemplateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged      int64   `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize   int64   `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Sorting    string  `protobuf:"bytes,3,opt,name=sorting,proto3" json:"sorting"`
	Keywords   string  `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords"`
	Id         int64   `protobuf:"varint,5,opt,name=id,proto3" json:"id"`
	ExpressId  int64   `protobuf:"varint,6,opt,name=express_id,json=expressId,proto3" json:"express_id"`
	Ids        []int64 `protobuf:"varint,7,rep,packed,name=ids,proto3" json:"ids"`
	ExpressIds []int64 `protobuf:"varint,8,rep,packed,name=express_ids,json=expressIds,proto3" json:"express_ids"`
}

func (x *ExpressFeeTemplateRequest) Reset() {
	*x = ExpressFeeTemplateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_expressFeeTemplateService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpressFeeTemplateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpressFeeTemplateRequest) ProtoMessage() {}

func (x *ExpressFeeTemplateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_expressFeeTemplateService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpressFeeTemplateRequest.ProtoReflect.Descriptor instead.
func (*ExpressFeeTemplateRequest) Descriptor() ([]byte, []int) {
	return file_expressFeeTemplateService_proto_rawDescGZIP(), []int{0}
}

func (x *ExpressFeeTemplateRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *ExpressFeeTemplateRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ExpressFeeTemplateRequest) GetSorting() string {
	if x != nil {
		return x.Sorting
	}
	return ""
}

func (x *ExpressFeeTemplateRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *ExpressFeeTemplateRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ExpressFeeTemplateRequest) GetExpressId() int64 {
	if x != nil {
		return x.ExpressId
	}
	return 0
}

func (x *ExpressFeeTemplateRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ExpressFeeTemplateRequest) GetExpressIds() []int64 {
	if x != nil {
		return x.ExpressIds
	}
	return nil
}

type ExpressAdjustment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpuId      int64  `protobuf:"varint,1,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`
	Type       string `protobuf:"bytes,2,opt,name=type,proto3" json:"type"`
	Label      string `protobuf:"bytes,3,opt,name=label,proto3" json:"label"`
	TemplateId int64  `protobuf:"varint,4,opt,name=template_id,json=templateId,proto3" json:"template_id"`
	Price      int64  `protobuf:"varint,5,opt,name=price,proto3" json:"price"`
}

func (x *ExpressAdjustment) Reset() {
	*x = ExpressAdjustment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_expressFeeTemplateService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpressAdjustment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpressAdjustment) ProtoMessage() {}

func (x *ExpressAdjustment) ProtoReflect() protoreflect.Message {
	mi := &file_expressFeeTemplateService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpressAdjustment.ProtoReflect.Descriptor instead.
func (*ExpressAdjustment) Descriptor() ([]byte, []int) {
	return file_expressFeeTemplateService_proto_rawDescGZIP(), []int{1}
}

func (x *ExpressAdjustment) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *ExpressAdjustment) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ExpressAdjustment) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ExpressAdjustment) GetTemplateId() int64 {
	if x != nil {
		return x.TemplateId
	}
	return 0
}

func (x *ExpressAdjustment) GetPrice() int64 {
	if x != nil {
		return x.Price
	}
	return 0
}

type ExpressFeeTemplate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64                       `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	Name          string                      `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Method        string                      `protobuf:"bytes,3,opt,name=method,proto3" json:"method"`
	IsDefault     string                      `protobuf:"bytes,4,opt,name=is_default,json=isDefault,proto3" json:"is_default"`
	CreatedAt     string                      `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt     string                      `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	Details       []*ExpressFeeTemplateDetail `protobuf:"bytes,7,rep,name=details,proto3" json:"details"`
	UseSpuCount   int64                       `protobuf:"varint,8,opt,name=use_spu_count,json=useSpuCount,proto3" json:"use_spu_count"`
	MethodName    string                      `protobuf:"bytes,9,opt,name=method_name,json=methodName,proto3" json:"method_name"`
	IsDefaultName string                      `protobuf:"bytes,10,opt,name=is_default_name,json=isDefaultName,proto3" json:"is_default_name"`
}

func (x *ExpressFeeTemplate) Reset() {
	*x = ExpressFeeTemplate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_expressFeeTemplateService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpressFeeTemplate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpressFeeTemplate) ProtoMessage() {}

func (x *ExpressFeeTemplate) ProtoReflect() protoreflect.Message {
	mi := &file_expressFeeTemplateService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpressFeeTemplate.ProtoReflect.Descriptor instead.
func (*ExpressFeeTemplate) Descriptor() ([]byte, []int) {
	return file_expressFeeTemplateService_proto_rawDescGZIP(), []int{2}
}

func (x *ExpressFeeTemplate) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ExpressFeeTemplate) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExpressFeeTemplate) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *ExpressFeeTemplate) GetIsDefault() string {
	if x != nil {
		return x.IsDefault
	}
	return ""
}

func (x *ExpressFeeTemplate) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ExpressFeeTemplate) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *ExpressFeeTemplate) GetDetails() []*ExpressFeeTemplateDetail {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *ExpressFeeTemplate) GetUseSpuCount() int64 {
	if x != nil {
		return x.UseSpuCount
	}
	return 0
}

func (x *ExpressFeeTemplate) GetMethodName() string {
	if x != nil {
		return x.MethodName
	}
	return ""
}

func (x *ExpressFeeTemplate) GetIsDefaultName() string {
	if x != nil {
		return x.IsDefaultName
	}
	return ""
}

type ExpressFeeTemplateDetail struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstWeight      int64   `protobuf:"varint,3,opt,name=first_weight,json=firstWeight,proto3" json:"first_weight"`
	FirstNumber      int32   `protobuf:"varint,4,opt,name=first_number,json=firstNumber,proto3" json:"first_number"`
	ExpressFee       int64   `protobuf:"varint,5,opt,name=express_fee,json=expressFee,proto3" json:"express_fee"`
	AdditionalWeight int64   `protobuf:"varint,6,opt,name=additional_weight,json=additionalWeight,proto3" json:"additional_weight"`
	AdditionalNumber int32   `protobuf:"varint,7,opt,name=additional_number,json=additionalNumber,proto3" json:"additional_number"`
	AdditionalFee    int64   `protobuf:"varint,8,opt,name=additional_fee,json=additionalFee,proto3" json:"additional_fee"`
	CreatedAt        int64   `protobuf:"varint,9,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt        int64   `protobuf:"varint,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	RangeAreaText    string  `protobuf:"bytes,11,opt,name=range_area_text,json=rangeAreaText,proto3" json:"range_area_text"`
	RangeAreaIds     []int64 `protobuf:"varint,12,rep,packed,name=range_area_ids,json=rangeAreaIds,proto3" json:"range_area_ids"`
}

func (x *ExpressFeeTemplateDetail) Reset() {
	*x = ExpressFeeTemplateDetail{}
	if protoimpl.UnsafeEnabled {
		mi := &file_expressFeeTemplateService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpressFeeTemplateDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpressFeeTemplateDetail) ProtoMessage() {}

func (x *ExpressFeeTemplateDetail) ProtoReflect() protoreflect.Message {
	mi := &file_expressFeeTemplateService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpressFeeTemplateDetail.ProtoReflect.Descriptor instead.
func (*ExpressFeeTemplateDetail) Descriptor() ([]byte, []int) {
	return file_expressFeeTemplateService_proto_rawDescGZIP(), []int{3}
}

func (x *ExpressFeeTemplateDetail) GetFirstWeight() int64 {
	if x != nil {
		return x.FirstWeight
	}
	return 0
}

func (x *ExpressFeeTemplateDetail) GetFirstNumber() int32 {
	if x != nil {
		return x.FirstNumber
	}
	return 0
}

func (x *ExpressFeeTemplateDetail) GetExpressFee() int64 {
	if x != nil {
		return x.ExpressFee
	}
	return 0
}

func (x *ExpressFeeTemplateDetail) GetAdditionalWeight() int64 {
	if x != nil {
		return x.AdditionalWeight
	}
	return 0
}

func (x *ExpressFeeTemplateDetail) GetAdditionalNumber() int32 {
	if x != nil {
		return x.AdditionalNumber
	}
	return 0
}

func (x *ExpressFeeTemplateDetail) GetAdditionalFee() int64 {
	if x != nil {
		return x.AdditionalFee
	}
	return 0
}

func (x *ExpressFeeTemplateDetail) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *ExpressFeeTemplateDetail) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *ExpressFeeTemplateDetail) GetRangeAreaText() string {
	if x != nil {
		return x.RangeAreaText
	}
	return ""
}

func (x *ExpressFeeTemplateDetail) GetRangeAreaIds() []int64 {
	if x != nil {
		return x.RangeAreaIds
	}
	return nil
}

type ExpressFeeTemplateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *ExpressFeeTemplate   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager         `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*ExpressFeeTemplate `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Msg    string                `protobuf:"bytes,4,opt,name=msg,proto3" json:"msg"`
}

func (x *ExpressFeeTemplateResponse) Reset() {
	*x = ExpressFeeTemplateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_expressFeeTemplateService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpressFeeTemplateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpressFeeTemplateResponse) ProtoMessage() {}

func (x *ExpressFeeTemplateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_expressFeeTemplateService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpressFeeTemplateResponse.ProtoReflect.Descriptor instead.
func (*ExpressFeeTemplateResponse) Descriptor() ([]byte, []int) {
	return file_expressFeeTemplateService_proto_rawDescGZIP(), []int{4}
}

func (x *ExpressFeeTemplateResponse) GetEntity() *ExpressFeeTemplate {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *ExpressFeeTemplateResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *ExpressFeeTemplateResponse) GetItems() []*ExpressFeeTemplate {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ExpressFeeTemplateResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_expressFeeTemplateService_proto protoreflect.FileDescriptor

var file_expressFeeTemplateService_proto_rawDesc = []byte{
	0x0a, 0x1f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x46, 0x65, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe6,
	0x01, 0x0a, 0x19, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x46, 0x65, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x65, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x49, 0x64, 0x73, 0x22, 0x8b, 0x01, 0x0a, 0x11, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x15, 0x0a,
	0x06, 0x73, 0x70, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73,
	0x70, 0x75, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1f,
	0x0a, 0x0b, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0xd8, 0x02, 0x0a, 0x12, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x46, 0x65, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3c, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x46, 0x65, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x22, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x70, 0x75, 0x5f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x75, 0x73, 0x65, 0x53,
	0x70, 0x75, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x69, 0x73, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0x8e, 0x03, 0x0a, 0x18, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x46, 0x65, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x21, 0x0a,
	0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x72, 0x73, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x66,
	0x65, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x46, 0x65, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x10, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x57, 0x65, 0x69, 0x67, 0x68,
	0x74, 0x12, 0x2b, 0x0a, 0x11, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x61, 0x64,
	0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x25,
	0x0a, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x66, 0x65, 0x65,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x61, 0x6c, 0x46, 0x65, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x61, 0x72, 0x65,
	0x61, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x61,
	0x6e, 0x67, 0x65, 0x41, 0x72, 0x65, 0x61, 0x54, 0x65, 0x78, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x5f, 0x61, 0x72, 0x65, 0x61, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x0c, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x41, 0x72, 0x65, 0x61, 0x49, 0x64,
	0x73, 0x22, 0xbd, 0x01, 0x0a, 0x1a, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x46, 0x65, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x34, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x46, 0x65, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x06,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50,
	0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x46, 0x65, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73,
	0x67, 0x32, 0x95, 0x06, 0x0a, 0x19, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x46, 0x65, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x4e, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x46, 0x65, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x1a, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x46, 0x65, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x4e, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x46, 0x65, 0x65, 0x54,
	0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x1a, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x46, 0x65, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x53, 0x0a, 0x04, 0x43, 0x6f, 0x70, 0x79, 0x12, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x46, 0x65, 0x65, 0x54, 0x65, 0x6d,
	0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x46,
	0x65, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x23,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x46, 0x65, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x46, 0x65, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x55, 0x0a, 0x06, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x46, 0x65, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x46, 0x65, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x53, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x23, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x46, 0x65, 0x65,
	0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x46, 0x65, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4b, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x1c,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x46, 0x65, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x1a, 0x24, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x46,
	0x65, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x09, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x65,
	0x64, 0x12, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x46, 0x65, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x46, 0x65, 0x65, 0x54, 0x65, 0x6d, 0x70,
	0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x59,
	0x0a, 0x0a, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x46,
	0x65, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x46, 0x65, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_expressFeeTemplateService_proto_rawDescOnce sync.Once
	file_expressFeeTemplateService_proto_rawDescData = file_expressFeeTemplateService_proto_rawDesc
)

func file_expressFeeTemplateService_proto_rawDescGZIP() []byte {
	file_expressFeeTemplateService_proto_rawDescOnce.Do(func() {
		file_expressFeeTemplateService_proto_rawDescData = protoimpl.X.CompressGZIP(file_expressFeeTemplateService_proto_rawDescData)
	})
	return file_expressFeeTemplateService_proto_rawDescData
}

var file_expressFeeTemplateService_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_expressFeeTemplateService_proto_goTypes = []interface{}{
	(*ExpressFeeTemplateRequest)(nil),  // 0: services.ExpressFeeTemplateRequest
	(*ExpressAdjustment)(nil),          // 1: services.ExpressAdjustment
	(*ExpressFeeTemplate)(nil),         // 2: services.ExpressFeeTemplate
	(*ExpressFeeTemplateDetail)(nil),   // 3: services.ExpressFeeTemplateDetail
	(*ExpressFeeTemplateResponse)(nil), // 4: services.ExpressFeeTemplateResponse
	(*common.Pager)(nil),               // 5: common.Pager
}
var file_expressFeeTemplateService_proto_depIdxs = []int32{
	3,  // 0: services.ExpressFeeTemplate.details:type_name -> services.ExpressFeeTemplateDetail
	2,  // 1: services.ExpressFeeTemplateResponse.entity:type_name -> services.ExpressFeeTemplate
	5,  // 2: services.ExpressFeeTemplateResponse.pager:type_name -> common.Pager
	2,  // 3: services.ExpressFeeTemplateResponse.items:type_name -> services.ExpressFeeTemplate
	2,  // 4: services.ExpressFeeTemplateService.Create:input_type -> services.ExpressFeeTemplate
	2,  // 5: services.ExpressFeeTemplateService.Update:input_type -> services.ExpressFeeTemplate
	0,  // 6: services.ExpressFeeTemplateService.Copy:input_type -> services.ExpressFeeTemplateRequest
	0,  // 7: services.ExpressFeeTemplateService.Delete:input_type -> services.ExpressFeeTemplateRequest
	0,  // 8: services.ExpressFeeTemplateService.Search:input_type -> services.ExpressFeeTemplateRequest
	0,  // 9: services.ExpressFeeTemplateService.List:input_type -> services.ExpressFeeTemplateRequest
	2,  // 10: services.ExpressFeeTemplateService.Get:input_type -> services.ExpressFeeTemplate
	0,  // 11: services.ExpressFeeTemplateService.Defaulted:input_type -> services.ExpressFeeTemplateRequest
	0,  // 12: services.ExpressFeeTemplateService.GetDefault:input_type -> services.ExpressFeeTemplateRequest
	4,  // 13: services.ExpressFeeTemplateService.Create:output_type -> services.ExpressFeeTemplateResponse
	4,  // 14: services.ExpressFeeTemplateService.Update:output_type -> services.ExpressFeeTemplateResponse
	4,  // 15: services.ExpressFeeTemplateService.Copy:output_type -> services.ExpressFeeTemplateResponse
	4,  // 16: services.ExpressFeeTemplateService.Delete:output_type -> services.ExpressFeeTemplateResponse
	4,  // 17: services.ExpressFeeTemplateService.Search:output_type -> services.ExpressFeeTemplateResponse
	4,  // 18: services.ExpressFeeTemplateService.List:output_type -> services.ExpressFeeTemplateResponse
	4,  // 19: services.ExpressFeeTemplateService.Get:output_type -> services.ExpressFeeTemplateResponse
	4,  // 20: services.ExpressFeeTemplateService.Defaulted:output_type -> services.ExpressFeeTemplateResponse
	4,  // 21: services.ExpressFeeTemplateService.GetDefault:output_type -> services.ExpressFeeTemplateResponse
	13, // [13:22] is the sub-list for method output_type
	4,  // [4:13] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_expressFeeTemplateService_proto_init() }
func file_expressFeeTemplateService_proto_init() {
	if File_expressFeeTemplateService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_expressFeeTemplateService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpressFeeTemplateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_expressFeeTemplateService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpressAdjustment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_expressFeeTemplateService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpressFeeTemplate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_expressFeeTemplateService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpressFeeTemplateDetail); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_expressFeeTemplateService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpressFeeTemplateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_expressFeeTemplateService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_expressFeeTemplateService_proto_goTypes,
		DependencyIndexes: file_expressFeeTemplateService_proto_depIdxs,
		MessageInfos:      file_expressFeeTemplateService_proto_msgTypes,
	}.Build()
	File_expressFeeTemplateService_proto = out.File
	file_expressFeeTemplateService_proto_rawDesc = nil
	file_expressFeeTemplateService_proto_goTypes = nil
	file_expressFeeTemplateService_proto_depIdxs = nil
}
