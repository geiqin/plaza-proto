// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: calculatorService.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 配送选择数据
type BuyChoiceDeliveryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Flags                    []string                     `protobuf:"bytes,1,rep,name=flags,proto3" json:"flags"`                                                                            //物流模式：1-物流快递，2-同城配送，3-虚拟发货，4-用户自提
	HeaderNavs               []*BuyChoiceDeliveryDataItem `protobuf:"bytes,2,rep,name=header_navs,json=headerNavs,proto3" json:"header_navs"`                                                //头部导航
	CanExpressDelivery       bool                         `protobuf:"varint,6,opt,name=can_express_delivery,json=canExpressDelivery,proto3" json:"can_express_delivery"`                     //是否支持快递发货(0否，1是)
	CanLocalDelivery         bool                         `protobuf:"varint,7,opt,name=can_local_delivery,json=canLocalDelivery,proto3" json:"can_local_delivery"`                           //是否支持同城配送(0否，1是)
	CanMentionDelivery       bool                         `protobuf:"varint,8,opt,name=can_mention_delivery,json=canMentionDelivery,proto3" json:"can_mention_delivery"`                     //是否支持上门自提(0否，1是)
	CurrentLogisticsType     string                       `protobuf:"bytes,9,opt,name=current_logistics_type,json=currentLogisticsType,proto3" json:"current_logistics_type"`                //当前选中的配送方式值
	CurrentLogisticsTypeName string                       `protobuf:"bytes,10,opt,name=current_logistics_type_name,json=currentLogisticsTypeName,proto3" json:"current_logistics_type_name"` //当前选中的配送方式名称
	IsError                  string                       `protobuf:"bytes,11,opt,name=is_error,json=isError,proto3" json:"is_error"`                                                        //是否有错误 0否，1是
	ErrorMsg                 string                       `protobuf:"bytes,12,opt,name=error_msg,json=errorMsg,proto3" json:"error_msg"`                                                     //错误信息
}

func (x *BuyChoiceDeliveryData) Reset() {
	*x = BuyChoiceDeliveryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculatorService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyChoiceDeliveryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyChoiceDeliveryData) ProtoMessage() {}

func (x *BuyChoiceDeliveryData) ProtoReflect() protoreflect.Message {
	mi := &file_calculatorService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyChoiceDeliveryData.ProtoReflect.Descriptor instead.
func (*BuyChoiceDeliveryData) Descriptor() ([]byte, []int) {
	return file_calculatorService_proto_rawDescGZIP(), []int{0}
}

func (x *BuyChoiceDeliveryData) GetFlags() []string {
	if x != nil {
		return x.Flags
	}
	return nil
}

func (x *BuyChoiceDeliveryData) GetHeaderNavs() []*BuyChoiceDeliveryDataItem {
	if x != nil {
		return x.HeaderNavs
	}
	return nil
}

func (x *BuyChoiceDeliveryData) GetCanExpressDelivery() bool {
	if x != nil {
		return x.CanExpressDelivery
	}
	return false
}

func (x *BuyChoiceDeliveryData) GetCanLocalDelivery() bool {
	if x != nil {
		return x.CanLocalDelivery
	}
	return false
}

func (x *BuyChoiceDeliveryData) GetCanMentionDelivery() bool {
	if x != nil {
		return x.CanMentionDelivery
	}
	return false
}

func (x *BuyChoiceDeliveryData) GetCurrentLogisticsType() string {
	if x != nil {
		return x.CurrentLogisticsType
	}
	return ""
}

func (x *BuyChoiceDeliveryData) GetCurrentLogisticsTypeName() string {
	if x != nil {
		return x.CurrentLogisticsTypeName
	}
	return ""
}

func (x *BuyChoiceDeliveryData) GetIsError() string {
	if x != nil {
		return x.IsError
	}
	return ""
}

func (x *BuyChoiceDeliveryData) GetErrorMsg() string {
	if x != nil {
		return x.ErrorMsg
	}
	return ""
}

type CalculatorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProvinceId           int64           `protobuf:"varint,1,opt,name=province_id,json=provinceId,proto3" json:"province_id"` //所在省
	CityId               int64           `protobuf:"varint,2,opt,name=city_id,json=cityId,proto3" json:"city_id"`             //所在市
	CountyId             int64           `protobuf:"varint,3,opt,name=county_id,json=countyId,proto3" json:"county_id"`       //所在县
	Longitude            string          `protobuf:"bytes,4,opt,name=longitude,proto3" json:"longitude"`
	Latitude             string          `protobuf:"bytes,5,opt,name=latitude,proto3" json:"latitude"`
	SelectedDeliveryType string          `protobuf:"bytes,6,opt,name=selected_delivery_type,json=selectedDeliveryType,proto3" json:"selected_delivery_type"` //当前选中的配送方式
	CalculateFeeMethod   string          `protobuf:"bytes,7,opt,name=calculate_fee_method,json=calculateFeeMethod,proto3" json:"calculate_fee_method"`       //计算费用方法：1-组合计算，2-累加计算
	BuyCount             float32         `protobuf:"fixed32,8,opt,name=buy_count,json=buyCount,proto3" json:"buy_count"`                                     //购买总数
	BuyCountNumber       int64           `protobuf:"varint,9,opt,name=buy_count_number,json=buyCountNumber,proto3" json:"buy_count_number"`                  //购买总件数
	BuyCountWeighed      int64           `protobuf:"varint,10,opt,name=buy_count_weighed,json=buyCountWeighed,proto3" json:"buy_count_weighed"`              //购买总称重
	TotalAmount          int64           `protobuf:"varint,11,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount"`                            //订单单价
	FinalAmount          int64           `protobuf:"varint,12,opt,name=final_amount,json=finalAmount,proto3" json:"final_amount"`                            //订单实付
	IncreaseAmount       int64           `protobuf:"varint,13,opt,name=increase_amount,json=increaseAmount,proto3" json:"increase_amount"`                   //增加金额
	DiscountAmount       int64           `protobuf:"varint,14,opt,name=discount_amount,json=discountAmount,proto3" json:"discount_amount"`                   //优惠金额
	SpecTotalWeight      int64           `protobuf:"varint,15,opt,name=spec_total_weight,json=specTotalWeight,proto3" json:"spec_total_weight"`              //规格重量总计
	SpecTotalVolume      int64           `protobuf:"varint,16,opt,name=spec_total_volume,json=specTotalVolume,proto3" json:"spec_total_volume"`              //规格体积总计
	PurchaseItems        []*PurchaseItem `protobuf:"bytes,17,rep,name=purchase_items,json=purchaseItems,proto3" json:"purchase_items"`
}

func (x *CalculatorRequest) Reset() {
	*x = CalculatorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculatorService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculatorRequest) ProtoMessage() {}

func (x *CalculatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_calculatorService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculatorRequest.ProtoReflect.Descriptor instead.
func (*CalculatorRequest) Descriptor() ([]byte, []int) {
	return file_calculatorService_proto_rawDescGZIP(), []int{1}
}

func (x *CalculatorRequest) GetProvinceId() int64 {
	if x != nil {
		return x.ProvinceId
	}
	return 0
}

func (x *CalculatorRequest) GetCityId() int64 {
	if x != nil {
		return x.CityId
	}
	return 0
}

func (x *CalculatorRequest) GetCountyId() int64 {
	if x != nil {
		return x.CountyId
	}
	return 0
}

func (x *CalculatorRequest) GetLongitude() string {
	if x != nil {
		return x.Longitude
	}
	return ""
}

func (x *CalculatorRequest) GetLatitude() string {
	if x != nil {
		return x.Latitude
	}
	return ""
}

func (x *CalculatorRequest) GetSelectedDeliveryType() string {
	if x != nil {
		return x.SelectedDeliveryType
	}
	return ""
}

func (x *CalculatorRequest) GetCalculateFeeMethod() string {
	if x != nil {
		return x.CalculateFeeMethod
	}
	return ""
}

func (x *CalculatorRequest) GetBuyCount() float32 {
	if x != nil {
		return x.BuyCount
	}
	return 0
}

func (x *CalculatorRequest) GetBuyCountNumber() int64 {
	if x != nil {
		return x.BuyCountNumber
	}
	return 0
}

func (x *CalculatorRequest) GetBuyCountWeighed() int64 {
	if x != nil {
		return x.BuyCountWeighed
	}
	return 0
}

func (x *CalculatorRequest) GetTotalAmount() int64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

func (x *CalculatorRequest) GetFinalAmount() int64 {
	if x != nil {
		return x.FinalAmount
	}
	return 0
}

func (x *CalculatorRequest) GetIncreaseAmount() int64 {
	if x != nil {
		return x.IncreaseAmount
	}
	return 0
}

func (x *CalculatorRequest) GetDiscountAmount() int64 {
	if x != nil {
		return x.DiscountAmount
	}
	return 0
}

func (x *CalculatorRequest) GetSpecTotalWeight() int64 {
	if x != nil {
		return x.SpecTotalWeight
	}
	return 0
}

func (x *CalculatorRequest) GetSpecTotalVolume() int64 {
	if x != nil {
		return x.SpecTotalVolume
	}
	return 0
}

func (x *CalculatorRequest) GetPurchaseItems() []*PurchaseItem {
	if x != nil {
		return x.PurchaseItems
	}
	return nil
}

type PurchaseItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SpuId                int64  `protobuf:"varint,1,opt,name=spu_id,json=spuId,proto3" json:"spu_id"`
	SkuKey               string `protobuf:"bytes,2,opt,name=sku_key,json=skuKey,proto3" json:"sku_key"`
	Quantity             int64  `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity"`                                                          //购买数量
	SpecWeight           int64  `protobuf:"varint,4,opt,name=spec_weight,json=specWeight,proto3" json:"spec_weight"`                                    //规格重量
	SpecVolume           int64  `protobuf:"varint,5,opt,name=spec_volume,json=specVolume,proto3" json:"spec_volume"`                                    //规格体积
	UnitPrice            int64  `protobuf:"varint,6,opt,name=unit_price,json=unitPrice,proto3" json:"unit_price"`                                       //商品单价
	TotalPrice           int64  `protobuf:"varint,7,opt,name=total_price,json=totalPrice,proto3" json:"total_price"`                                    //合计价格
	ExpressFeeType       string `protobuf:"bytes,8,opt,name=express_fee_type,json=expressFeeType,proto3" json:"express_fee_type"`                       //快递运费类型
	ExpressUniformFee    int64  `protobuf:"varint,9,opt,name=express_uniform_fee,json=expressUniformFee,proto3" json:"express_uniform_fee"`             //快递统一运费
	ExpressFeeTemplateId int64  `protobuf:"varint,10,opt,name=express_fee_template_id,json=expressFeeTemplateId,proto3" json:"express_fee_template_id"` //快递运费模板
}

func (x *PurchaseItem) Reset() {
	*x = PurchaseItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculatorService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseItem) ProtoMessage() {}

func (x *PurchaseItem) ProtoReflect() protoreflect.Message {
	mi := &file_calculatorService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseItem.ProtoReflect.Descriptor instead.
func (*PurchaseItem) Descriptor() ([]byte, []int) {
	return file_calculatorService_proto_rawDescGZIP(), []int{2}
}

func (x *PurchaseItem) GetSpuId() int64 {
	if x != nil {
		return x.SpuId
	}
	return 0
}

func (x *PurchaseItem) GetSkuKey() string {
	if x != nil {
		return x.SkuKey
	}
	return ""
}

func (x *PurchaseItem) GetQuantity() int64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *PurchaseItem) GetSpecWeight() int64 {
	if x != nil {
		return x.SpecWeight
	}
	return 0
}

func (x *PurchaseItem) GetSpecVolume() int64 {
	if x != nil {
		return x.SpecVolume
	}
	return 0
}

func (x *PurchaseItem) GetUnitPrice() int64 {
	if x != nil {
		return x.UnitPrice
	}
	return 0
}

func (x *PurchaseItem) GetTotalPrice() int64 {
	if x != nil {
		return x.TotalPrice
	}
	return 0
}

func (x *PurchaseItem) GetExpressFeeType() string {
	if x != nil {
		return x.ExpressFeeType
	}
	return ""
}

func (x *PurchaseItem) GetExpressUniformFee() int64 {
	if x != nil {
		return x.ExpressUniformFee
	}
	return 0
}

func (x *PurchaseItem) GetExpressFeeTemplateId() int64 {
	if x != nil {
		return x.ExpressFeeTemplateId
	}
	return 0
}

type OrderIncreaseInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IncreaseType   string `protobuf:"bytes,1,opt,name=increase_type,json=increaseType,proto3" json:"increase_type"`        //增加类型
	IncreaseAmount int64  `protobuf:"varint,2,opt,name=increase_amount,json=increaseAmount,proto3" json:"increase_amount"` //增加金额
	RuleDetail     string `protobuf:"bytes,3,opt,name=rule_detail,json=ruleDetail,proto3" json:"rule_detail"`              //规则详情
}

func (x *OrderIncreaseInfo) Reset() {
	*x = OrderIncreaseInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculatorService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderIncreaseInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderIncreaseInfo) ProtoMessage() {}

func (x *OrderIncreaseInfo) ProtoReflect() protoreflect.Message {
	mi := &file_calculatorService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderIncreaseInfo.ProtoReflect.Descriptor instead.
func (*OrderIncreaseInfo) Descriptor() ([]byte, []int) {
	return file_calculatorService_proto_rawDescGZIP(), []int{3}
}

func (x *OrderIncreaseInfo) GetIncreaseType() string {
	if x != nil {
		return x.IncreaseType
	}
	return ""
}

func (x *OrderIncreaseInfo) GetIncreaseAmount() int64 {
	if x != nil {
		return x.IncreaseAmount
	}
	return 0
}

func (x *OrderIncreaseInfo) GetRuleDetail() string {
	if x != nil {
		return x.RuleDetail
	}
	return ""
}

type DeliveryFeeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeliveryFee int64                `protobuf:"varint,1,opt,name=delivery_fee,json=deliveryFee,proto3" json:"delivery_fee"`
	Increases   []*OrderIncreaseInfo `protobuf:"bytes,2,rep,name=increases,proto3" json:"increases"`
}

func (x *DeliveryFeeData) Reset() {
	*x = DeliveryFeeData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculatorService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryFeeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryFeeData) ProtoMessage() {}

func (x *DeliveryFeeData) ProtoReflect() protoreflect.Message {
	mi := &file_calculatorService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryFeeData.ProtoReflect.Descriptor instead.
func (*DeliveryFeeData) Descriptor() ([]byte, []int) {
	return file_calculatorService_proto_rawDescGZIP(), []int{4}
}

func (x *DeliveryFeeData) GetDeliveryFee() int64 {
	if x != nil {
		return x.DeliveryFee
	}
	return 0
}

func (x *DeliveryFeeData) GetIncreases() []*OrderIncreaseInfo {
	if x != nil {
		return x.Increases
	}
	return nil
}

type CalculatorResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuyChoiceDeliveryData  *BuyChoiceDeliveryData `protobuf:"bytes,1,opt,name=buy_choice_delivery_data,json=buyChoiceDeliveryData,proto3" json:"buy_choice_delivery_data"`
	ExpressDeliveryFeeData *DeliveryFeeData       `protobuf:"bytes,2,opt,name=express_delivery_fee_data,json=expressDeliveryFeeData,proto3" json:"express_delivery_fee_data"`
	LocalDeliveryFeeData   *DeliveryFeeData       `protobuf:"bytes,3,opt,name=local_delivery_fee_data,json=localDeliveryFeeData,proto3" json:"local_delivery_fee_data"`
}

func (x *CalculatorResponse) Reset() {
	*x = CalculatorResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculatorService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CalculatorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CalculatorResponse) ProtoMessage() {}

func (x *CalculatorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_calculatorService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CalculatorResponse.ProtoReflect.Descriptor instead.
func (*CalculatorResponse) Descriptor() ([]byte, []int) {
	return file_calculatorService_proto_rawDescGZIP(), []int{5}
}

func (x *CalculatorResponse) GetBuyChoiceDeliveryData() *BuyChoiceDeliveryData {
	if x != nil {
		return x.BuyChoiceDeliveryData
	}
	return nil
}

func (x *CalculatorResponse) GetExpressDeliveryFeeData() *DeliveryFeeData {
	if x != nil {
		return x.ExpressDeliveryFeeData
	}
	return nil
}

func (x *CalculatorResponse) GetLocalDeliveryFeeData() *DeliveryFeeData {
	if x != nil {
		return x.LocalDeliveryFeeData
	}
	return nil
}

// 配送选择项
type BuyChoiceDeliveryDataItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string                       `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`         //选项名称
	Value    string                       `protobuf:"bytes,2,opt,name=value,proto3" json:"value"`       //选项值
	Children []*BuyChoiceDeliveryDataItem `protobuf:"bytes,3,rep,name=children,proto3" json:"children"` //子项选择
}

func (x *BuyChoiceDeliveryDataItem) Reset() {
	*x = BuyChoiceDeliveryDataItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_calculatorService_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyChoiceDeliveryDataItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyChoiceDeliveryDataItem) ProtoMessage() {}

func (x *BuyChoiceDeliveryDataItem) ProtoReflect() protoreflect.Message {
	mi := &file_calculatorService_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyChoiceDeliveryDataItem.ProtoReflect.Descriptor instead.
func (*BuyChoiceDeliveryDataItem) Descriptor() ([]byte, []int) {
	return file_calculatorService_proto_rawDescGZIP(), []int{0, 0}
}

func (x *BuyChoiceDeliveryDataItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *BuyChoiceDeliveryDataItem) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *BuyChoiceDeliveryDataItem) GetChildren() []*BuyChoiceDeliveryDataItem {
	if x != nil {
		return x.Children
	}
	return nil
}

var File_calculatorService_proto protoreflect.FileDescriptor

var file_calculatorService_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x22, 0xa7, 0x04, 0x0a, 0x15, 0x42, 0x75, 0x79, 0x43, 0x68, 0x6f, 0x69, 0x63,
	0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a,
	0x05, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x66, 0x6c,
	0x61, 0x67, 0x73, 0x12, 0x45, 0x0a, 0x0b, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x6e, 0x61,
	0x76, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x69, 0x74, 0x65, 0x6d, 0x52, 0x0a,
	0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4e, 0x61, 0x76, 0x73, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x61,
	0x6e, 0x5f, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x63, 0x61, 0x6e, 0x45, 0x78, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x2c, 0x0a, 0x12,
	0x63, 0x61, 0x6e, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x63, 0x61, 0x6e, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x61,
	0x6e, 0x5f, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x63, 0x61, 0x6e, 0x4d, 0x65, 0x6e,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x34, 0x0a, 0x16,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x3d, 0x0a, 0x1b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x6f,
	0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74,
	0x4c, 0x6f, 0x67, 0x69, 0x73, 0x74, 0x69, 0x63, 0x73, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x73, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x1b, 0x0a, 0x09,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x73, 0x67, 0x1a, 0x72, 0x0a, 0x04, 0x69, 0x74, 0x65,
	0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x40, 0x0a, 0x08, 0x63,
	0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x43, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x2e, 0x69,
	0x74, 0x65, 0x6d, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0xae, 0x05,
	0x0a, 0x11, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e,
	0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f,
	0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c,
	0x6f, 0x6e, 0x67, 0x69, 0x74, 0x75, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x74, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x74, 0x69,
	0x74, 0x75, 0x64, 0x65, 0x12, 0x34, 0x0a, 0x16, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x61,
	0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x6d, 0x65, 0x74, 0x68,
	0x6f, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x63, 0x61, 0x6c, 0x63, 0x75, 0x6c,
	0x61, 0x74, 0x65, 0x46, 0x65, 0x65, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x62, 0x75, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x08, 0x62, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x75, 0x79,
	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0e, 0x62, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x62, 0x75, 0x79, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x62, 0x75, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x57, 0x65, 0x69, 0x67, 0x68, 0x65, 0x64, 0x12,
	0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73,
	0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e,
	0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27,
	0x0a, 0x0f, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x70, 0x65, 0x63, 0x5f,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0f, 0x73, 0x70, 0x65, 0x63, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x57, 0x65, 0x69,
	0x67, 0x68, 0x74, 0x12, 0x2a, 0x0a, 0x11, 0x73, 0x70, 0x65, 0x63, 0x5f, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x73, 0x70, 0x65, 0x63, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12,
	0x3d, 0x0a, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x0d, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x22, 0xed,
	0x02, 0x0a, 0x0c, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x15, 0x0a, 0x06, 0x73, 0x70, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x05, 0x73, 0x70, 0x75, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6b, 0x75, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6b, 0x75, 0x4b, 0x65, 0x79, 0x12,
	0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
	0x70, 0x65, 0x63, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x73, 0x70, 0x65, 0x63, 0x5f, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x73, 0x70, 0x65, 0x63, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x75, 0x6e, 0x69, 0x74, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x75, 0x6e, 0x69, 0x74, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x28, 0x0a,
	0x10, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x46, 0x65, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x13, 0x65, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x5f, 0x75, 0x6e, 0x69, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x11, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x55, 0x6e, 0x69,
	0x66, 0x6f, 0x72, 0x6d, 0x46, 0x65, 0x65, 0x12, 0x35, 0x0a, 0x17, 0x65, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x74, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x14, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x46, 0x65, 0x65, 0x54, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x49, 0x64, 0x22, 0x82,
	0x01, 0x0a, 0x11, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x63,
	0x72, 0x65, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x69, 0x6e, 0x63,
	0x72, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0e, 0x69, 0x6e, 0x63, 0x72, 0x65, 0x61, 0x73, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x75, 0x6c, 0x65, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x75, 0x6c, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x22, 0x6f, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46,
	0x65, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x64, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65, 0x12, 0x39, 0x0a, 0x09, 0x69, 0x6e, 0x63,
	0x72, 0x65, 0x61, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x63,
	0x72, 0x65, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x69, 0x6e, 0x63, 0x72, 0x65,
	0x61, 0x73, 0x65, 0x73, 0x22, 0x96, 0x02, 0x0a, 0x12, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x58, 0x0a, 0x18, 0x62,
	0x75, 0x79, 0x5f, 0x63, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65,
	0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x43, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x15,
	0x62, 0x75, 0x79, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x54, 0x0a, 0x19, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x16, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x44, 0x65, 0x6c, 0x69,
	0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x50, 0x0a, 0x17, 0x6c,
	0x6f, 0x63, 0x61, 0x6c, 0x5f, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x66, 0x65,
	0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x46, 0x65, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x14, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65, 0x44, 0x61, 0x74, 0x61, 0x32, 0x89, 0x02,
	0x0a, 0x11, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x50, 0x0a, 0x11, 0x42, 0x75, 0x79, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x12, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x12, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65, 0x12, 0x1b, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x10, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x46, 0x65, 0x65, 0x12, 0x1b, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x43, 0x61, 0x6c, 0x63, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_calculatorService_proto_rawDescOnce sync.Once
	file_calculatorService_proto_rawDescData = file_calculatorService_proto_rawDesc
)

func file_calculatorService_proto_rawDescGZIP() []byte {
	file_calculatorService_proto_rawDescOnce.Do(func() {
		file_calculatorService_proto_rawDescData = protoimpl.X.CompressGZIP(file_calculatorService_proto_rawDescData)
	})
	return file_calculatorService_proto_rawDescData
}

var file_calculatorService_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_calculatorService_proto_goTypes = []interface{}{
	(*BuyChoiceDeliveryData)(nil),     // 0: services.BuyChoiceDeliveryData
	(*CalculatorRequest)(nil),         // 1: services.CalculatorRequest
	(*PurchaseItem)(nil),              // 2: services.PurchaseItem
	(*OrderIncreaseInfo)(nil),         // 3: services.OrderIncreaseInfo
	(*DeliveryFeeData)(nil),           // 4: services.DeliveryFeeData
	(*CalculatorResponse)(nil),        // 5: services.CalculatorResponse
	(*BuyChoiceDeliveryDataItem)(nil), // 6: services.BuyChoiceDeliveryData.item
}
var file_calculatorService_proto_depIdxs = []int32{
	6,  // 0: services.BuyChoiceDeliveryData.header_navs:type_name -> services.BuyChoiceDeliveryData.item
	2,  // 1: services.CalculatorRequest.purchase_items:type_name -> services.PurchaseItem
	3,  // 2: services.DeliveryFeeData.increases:type_name -> services.OrderIncreaseInfo
	0,  // 3: services.CalculatorResponse.buy_choice_delivery_data:type_name -> services.BuyChoiceDeliveryData
	4,  // 4: services.CalculatorResponse.express_delivery_fee_data:type_name -> services.DeliveryFeeData
	4,  // 5: services.CalculatorResponse.local_delivery_fee_data:type_name -> services.DeliveryFeeData
	6,  // 6: services.BuyChoiceDeliveryData.item.children:type_name -> services.BuyChoiceDeliveryData.item
	1,  // 7: services.CalculatorService.BuyChoiceDelivery:input_type -> services.CalculatorRequest
	1,  // 8: services.CalculatorService.ExpressDeliveryFee:input_type -> services.CalculatorRequest
	1,  // 9: services.CalculatorService.LocalDeliveryFee:input_type -> services.CalculatorRequest
	5,  // 10: services.CalculatorService.BuyChoiceDelivery:output_type -> services.CalculatorResponse
	5,  // 11: services.CalculatorService.ExpressDeliveryFee:output_type -> services.CalculatorResponse
	5,  // 12: services.CalculatorService.LocalDeliveryFee:output_type -> services.CalculatorResponse
	10, // [10:13] is the sub-list for method output_type
	7,  // [7:10] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_calculatorService_proto_init() }
func file_calculatorService_proto_init() {
	if File_calculatorService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_calculatorService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyChoiceDeliveryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculatorService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculatorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculatorService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculatorService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderIncreaseInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculatorService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryFeeData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculatorService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CalculatorResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_calculatorService_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyChoiceDeliveryDataItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_calculatorService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_calculatorService_proto_goTypes,
		DependencyIndexes: file_calculatorService_proto_depIdxs,
		MessageInfos:      file_calculatorService_proto_msgTypes,
	}.Build()
	File_calculatorService_proto = out.File
	file_calculatorService_proto_rawDesc = nil
	file_calculatorService_proto_goTypes = nil
	file_calculatorService_proto_depIdxs = nil
}
