// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: expressCorpService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 快递公司
type ExpressCorp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                   //ID
	Code       string `protobuf:"bytes,2,opt,name=code,proto3" json:"code"`                                //编码
	Name       string `protobuf:"bytes,3,opt,name=name,proto3" json:"name"`                                //名称
	Type       string `protobuf:"bytes,4,opt,name=type,proto3" json:"type"`                                //类型
	LogoUrl    string `protobuf:"bytes,5,opt,name=logo_url,json=logoUrl,proto3" json:"logo_url"`           //Logo
	Tel        string `protobuf:"bytes,6,opt,name=tel,proto3" json:"tel"`                                  //联系电话
	IsSurface  string `protobuf:"bytes,7,opt,name=is_surface,json=isSurface,proto3" json:"is_surface"`     //电子面单
	Config     string `protobuf:"bytes,8,opt,name=config,proto3" json:"config"`                            //配置内容
	Desc       string `protobuf:"bytes,9,opt,name=desc,proto3" json:"desc"`                                //备注
	WeixinCode string `protobuf:"bytes,10,opt,name=weixin_code,json=weixinCode,proto3" json:"weixin_code"` //微信编码
	KdniaoCode string `protobuf:"bytes,11,opt,name=kdniao_code,json=kdniaoCode,proto3" json:"kdniao_code"` //快递鸟编码
	Kd100Code  string `protobuf:"bytes,12,opt,name=kd100_code,json=kd100Code,proto3" json:"kd100_code"`    //快递100编码
	Sort       int32  `protobuf:"varint,13,opt,name=sort,proto3" json:"sort"`                              //排序
	Status     string `protobuf:"bytes,14,opt,name=status,proto3" json:"status"`                           //状态
	CreatedAt  string `protobuf:"bytes,15,opt,name=created_at,json=createdAt,proto3" json:"created_at"`    //创建时间
	UpdatedAt  string `protobuf:"bytes,16,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`    //修改时间
	Checked    bool   `protobuf:"varint,17,opt,name=checked,proto3" json:"checked"`
}

func (x *ExpressCorp) Reset() {
	*x = ExpressCorp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_expressCorpService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpressCorp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpressCorp) ProtoMessage() {}

func (x *ExpressCorp) ProtoReflect() protoreflect.Message {
	mi := &file_expressCorpService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpressCorp.ProtoReflect.Descriptor instead.
func (*ExpressCorp) Descriptor() ([]byte, []int) {
	return file_expressCorpService_proto_rawDescGZIP(), []int{0}
}

func (x *ExpressCorp) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ExpressCorp) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ExpressCorp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExpressCorp) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ExpressCorp) GetLogoUrl() string {
	if x != nil {
		return x.LogoUrl
	}
	return ""
}

func (x *ExpressCorp) GetTel() string {
	if x != nil {
		return x.Tel
	}
	return ""
}

func (x *ExpressCorp) GetIsSurface() string {
	if x != nil {
		return x.IsSurface
	}
	return ""
}

func (x *ExpressCorp) GetConfig() string {
	if x != nil {
		return x.Config
	}
	return ""
}

func (x *ExpressCorp) GetDesc() string {
	if x != nil {
		return x.Desc
	}
	return ""
}

func (x *ExpressCorp) GetWeixinCode() string {
	if x != nil {
		return x.WeixinCode
	}
	return ""
}

func (x *ExpressCorp) GetKdniaoCode() string {
	if x != nil {
		return x.KdniaoCode
	}
	return ""
}

func (x *ExpressCorp) GetKd100Code() string {
	if x != nil {
		return x.Kd100Code
	}
	return ""
}

func (x *ExpressCorp) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ExpressCorp) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ExpressCorp) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *ExpressCorp) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *ExpressCorp) GetChecked() bool {
	if x != nil {
		return x.Checked
	}
	return false
}

// 快递公司请求参数
type ExpressCorpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Top       int32    `protobuf:"varint,1,opt,name=top,proto3" json:"top"`
	Paged     int64    `protobuf:"varint,2,opt,name=paged,proto3" json:"paged"`
	PageSize  int64    `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords  string   `protobuf:"bytes,4,opt,name=keywords,proto3" json:"keywords"`
	Sort      []string `protobuf:"bytes,5,rep,name=sort,proto3" json:"sort"`
	DateRange []string `protobuf:"bytes,6,rep,name=date_range,json=dateRange,proto3" json:"date_range"`
	Ids       []int32  `protobuf:"varint,7,rep,packed,name=ids,proto3" json:"ids"`
	Id        int32    `protobuf:"varint,8,opt,name=id,proto3" json:"id"`
	//以下为自定义参数
	Code      string   `protobuf:"bytes,11,opt,name=code,proto3" json:"code"`                            //编码
	Name      string   `protobuf:"bytes,12,opt,name=name,proto3" json:"name"`                            //名称
	Type      string   `protobuf:"bytes,13,opt,name=type,proto3" json:"type"`                            //类型
	IsSurface string   `protobuf:"bytes,14,opt,name=is_surface,json=isSurface,proto3" json:"is_surface"` //电子面单
	Status    string   `protobuf:"bytes,15,opt,name=status,proto3" json:"status"`                        //状态
	Codes     []string `protobuf:"bytes,16,rep,name=codes,proto3" json:"codes"`                          //编码
}

func (x *ExpressCorpRequest) Reset() {
	*x = ExpressCorpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_expressCorpService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpressCorpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpressCorpRequest) ProtoMessage() {}

func (x *ExpressCorpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_expressCorpService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpressCorpRequest.ProtoReflect.Descriptor instead.
func (*ExpressCorpRequest) Descriptor() ([]byte, []int) {
	return file_expressCorpService_proto_rawDescGZIP(), []int{1}
}

func (x *ExpressCorpRequest) GetTop() int32 {
	if x != nil {
		return x.Top
	}
	return 0
}

func (x *ExpressCorpRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *ExpressCorpRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ExpressCorpRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *ExpressCorpRequest) GetSort() []string {
	if x != nil {
		return x.Sort
	}
	return nil
}

func (x *ExpressCorpRequest) GetDateRange() []string {
	if x != nil {
		return x.DateRange
	}
	return nil
}

func (x *ExpressCorpRequest) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *ExpressCorpRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ExpressCorpRequest) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *ExpressCorpRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ExpressCorpRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ExpressCorpRequest) GetIsSurface() string {
	if x != nil {
		return x.IsSurface
	}
	return ""
}

func (x *ExpressCorpRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ExpressCorpRequest) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

// 快递公司响应数据
type ExpressCorpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg    string         `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg"`
	Pager  *common.Pager  `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Entity *ExpressCorp   `protobuf:"bytes,3,opt,name=entity,proto3" json:"entity"`
	Items  []*ExpressCorp `protobuf:"bytes,4,rep,name=items,proto3" json:"items"`
}

func (x *ExpressCorpResponse) Reset() {
	*x = ExpressCorpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_expressCorpService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExpressCorpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExpressCorpResponse) ProtoMessage() {}

func (x *ExpressCorpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_expressCorpService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExpressCorpResponse.ProtoReflect.Descriptor instead.
func (*ExpressCorpResponse) Descriptor() ([]byte, []int) {
	return file_expressCorpService_proto_rawDescGZIP(), []int{2}
}

func (x *ExpressCorpResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *ExpressCorpResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *ExpressCorpResponse) GetEntity() *ExpressCorp {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *ExpressCorpResponse) GetItems() []*ExpressCorp {
	if x != nil {
		return x.Items
	}
	return nil
}

var File_expressCorpService_proto protoreflect.FileDescriptor

var file_expressCorpService_proto_rawDesc = []byte{
	0x0a, 0x18, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x72, 0x70, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb6, 0x03, 0x0a, 0x0b, 0x45, 0x78, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x43, 0x6f, 0x72, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x6f, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x6f, 0x67, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x10,
	0x0a, 0x03, 0x74, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x65, 0x6c,
	0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f, 0x73, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69, 0x73, 0x53, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x65, 0x73, 0x63, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x65, 0x73, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x77,
	0x65, 0x69, 0x78, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x77, 0x65, 0x69, 0x78, 0x69, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
	0x6b, 0x64, 0x6e, 0x69, 0x61, 0x6f, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x6b, 0x64, 0x6e, 0x69, 0x61, 0x6f, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x6b, 0x64, 0x31, 0x30, 0x30, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6b, 0x64, 0x31, 0x30, 0x30, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65,
	0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64,
	0x22, 0xd3, 0x02, 0x0a, 0x12, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x72, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x6f, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x74, 0x6f, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x61, 0x74, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x64, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x73, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x73, 0x5f,
	0x73, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69,
	0x73, 0x53, 0x75, 0x72, 0x66, 0x61, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x22, 0xa8, 0x01, 0x0a, 0x13, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x43, 0x6f, 0x72, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x2d, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x72, 0x70, 0x52, 0x06, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x72, 0x70, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x32, 0xb5, 0x04, 0x0a, 0x12, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x72,
	0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x72, 0x70, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x72, 0x70,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x05, 0x41, 0x64,
	0x64, 0x54, 0x6f, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45,
	0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x72, 0x70, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x72,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x06, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x72, 0x70, 0x1a, 0x1d, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x43,
	0x6f, 0x72, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a,
	0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x72, 0x70, 0x1a, 0x1d,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x43, 0x6f, 0x72, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x3d, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x72, 0x70, 0x1a, 0x1d, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x43, 0x6f, 0x72, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47,
	0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x72, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x72, 0x70, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x43, 0x6f, 0x72, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x43, 0x6f, 0x72, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49,
	0x0a, 0x08, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x72,
	0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x45, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x72, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_expressCorpService_proto_rawDescOnce sync.Once
	file_expressCorpService_proto_rawDescData = file_expressCorpService_proto_rawDesc
)

func file_expressCorpService_proto_rawDescGZIP() []byte {
	file_expressCorpService_proto_rawDescOnce.Do(func() {
		file_expressCorpService_proto_rawDescData = protoimpl.X.CompressGZIP(file_expressCorpService_proto_rawDescData)
	})
	return file_expressCorpService_proto_rawDescData
}

var file_expressCorpService_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_expressCorpService_proto_goTypes = []interface{}{
	(*ExpressCorp)(nil),         // 0: services.ExpressCorp
	(*ExpressCorpRequest)(nil),  // 1: services.ExpressCorpRequest
	(*ExpressCorpResponse)(nil), // 2: services.ExpressCorpResponse
	(*common.Pager)(nil),        // 3: common.Pager
}
var file_expressCorpService_proto_depIdxs = []int32{
	3,  // 0: services.ExpressCorpResponse.pager:type_name -> common.Pager
	0,  // 1: services.ExpressCorpResponse.entity:type_name -> services.ExpressCorp
	0,  // 2: services.ExpressCorpResponse.items:type_name -> services.ExpressCorp
	0,  // 3: services.ExpressCorpService.Create:input_type -> services.ExpressCorp
	0,  // 4: services.ExpressCorpService.AddTo:input_type -> services.ExpressCorp
	0,  // 5: services.ExpressCorpService.Update:input_type -> services.ExpressCorp
	0,  // 6: services.ExpressCorpService.Delete:input_type -> services.ExpressCorp
	0,  // 7: services.ExpressCorpService.Get:input_type -> services.ExpressCorp
	1,  // 8: services.ExpressCorpService.Search:input_type -> services.ExpressCorpRequest
	1,  // 9: services.ExpressCorpService.List:input_type -> services.ExpressCorpRequest
	1,  // 10: services.ExpressCorpService.Selector:input_type -> services.ExpressCorpRequest
	2,  // 11: services.ExpressCorpService.Create:output_type -> services.ExpressCorpResponse
	2,  // 12: services.ExpressCorpService.AddTo:output_type -> services.ExpressCorpResponse
	2,  // 13: services.ExpressCorpService.Update:output_type -> services.ExpressCorpResponse
	2,  // 14: services.ExpressCorpService.Delete:output_type -> services.ExpressCorpResponse
	2,  // 15: services.ExpressCorpService.Get:output_type -> services.ExpressCorpResponse
	2,  // 16: services.ExpressCorpService.Search:output_type -> services.ExpressCorpResponse
	2,  // 17: services.ExpressCorpService.List:output_type -> services.ExpressCorpResponse
	2,  // 18: services.ExpressCorpService.Selector:output_type -> services.ExpressCorpResponse
	11, // [11:19] is the sub-list for method output_type
	3,  // [3:11] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_expressCorpService_proto_init() }
func file_expressCorpService_proto_init() {
	if File_expressCorpService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_expressCorpService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpressCorp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_expressCorpService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpressCorpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_expressCorpService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExpressCorpResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_expressCorpService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_expressCorpService_proto_goTypes,
		DependencyIndexes: file_expressCorpService_proto_depIdxs,
		MessageInfos:      file_expressCorpService_proto_msgTypes,
	}.Build()
	File_expressCorpService_proto = out.File
	file_expressCorpService_proto_rawDesc = nil
	file_expressCorpService_proto_goTypes = nil
	file_expressCorpService_proto_depIdxs = nil
}
