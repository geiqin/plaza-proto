// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: mentionConfigService.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 到店自提配置
type MentionConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CustomName string `protobuf:"bytes,1,opt,name=custom_name,json=customName,proto3" json:"custom_name"` //自定义名称
}

func (x *MentionConfig) Reset() {
	*x = MentionConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mentionConfigService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MentionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MentionConfig) ProtoMessage() {}

func (x *MentionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_mentionConfigService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MentionConfig.ProtoReflect.Descriptor instead.
func (*MentionConfig) Descriptor() ([]byte, []int) {
	return file_mentionConfigService_proto_rawDescGZIP(), []int{0}
}

func (x *MentionConfig) GetCustomName() string {
	if x != nil {
		return x.CustomName
	}
	return ""
}

type MentionPointRule struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reception              string              `protobuf:"bytes,9,opt,name=reception,proto3" json:"reception"`
	ReceptionRepeatWeeks   int32               `protobuf:"varint,10,opt,name=reception_repeat_weeks,json=receptionRepeatWeeks,proto3" json:"reception_repeat_weeks"`
	ReceptionRepeatWeekArr []int32             `protobuf:"varint,11,rep,packed,name=reception_repeat_week_arr,json=receptionRepeatWeekArr,proto3" json:"reception_repeat_week_arr"`
	IsFetchTime            bool                `protobuf:"varint,12,opt,name=is_fetch_time,json=isFetchTime,proto3" json:"is_fetch_time"`
	Fetch                  string              `protobuf:"bytes,13,opt,name=fetch,proto3" json:"fetch"`
	FetchRepeatWeeks       int32               `protobuf:"varint,14,opt,name=fetch_repeat_weeks,json=fetchRepeatWeeks,proto3" json:"fetch_repeat_weeks"`
	FetchRepeatWeekArr     []int32             `protobuf:"varint,15,rep,packed,name=fetch_repeat_week_arr,json=fetchRepeatWeekArr,proto3" json:"fetch_repeat_week_arr"`
	SubFetchTime           string              `protobuf:"bytes,16,opt,name=sub_fetch_time,json=subFetchTime,proto3" json:"sub_fetch_time"`
	Appointment            string              `protobuf:"bytes,17,opt,name=appointment,proto3" json:"appointment"`
	AppointmentNum         int32               `protobuf:"varint,18,opt,name=appointment_num,json=appointmentNum,proto3" json:"appointment_num"`
	MaxAppointmentNum      int32               `protobuf:"varint,19,opt,name=max_appointment_num,json=maxAppointmentNum,proto3" json:"max_appointment_num"`
	ReceptionTimes         []*MentionPointTime `protobuf:"bytes,23,rep,name=reception_times,json=receptionTimes,proto3" json:"reception_times"`
	FetchTimes             []*MentionPointTime `protobuf:"bytes,24,rep,name=fetch_times,json=fetchTimes,proto3" json:"fetch_times"`
}

func (x *MentionPointRule) Reset() {
	*x = MentionPointRule{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mentionConfigService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MentionPointRule) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MentionPointRule) ProtoMessage() {}

func (x *MentionPointRule) ProtoReflect() protoreflect.Message {
	mi := &file_mentionConfigService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MentionPointRule.ProtoReflect.Descriptor instead.
func (*MentionPointRule) Descriptor() ([]byte, []int) {
	return file_mentionConfigService_proto_rawDescGZIP(), []int{1}
}

func (x *MentionPointRule) GetReception() string {
	if x != nil {
		return x.Reception
	}
	return ""
}

func (x *MentionPointRule) GetReceptionRepeatWeeks() int32 {
	if x != nil {
		return x.ReceptionRepeatWeeks
	}
	return 0
}

func (x *MentionPointRule) GetReceptionRepeatWeekArr() []int32 {
	if x != nil {
		return x.ReceptionRepeatWeekArr
	}
	return nil
}

func (x *MentionPointRule) GetIsFetchTime() bool {
	if x != nil {
		return x.IsFetchTime
	}
	return false
}

func (x *MentionPointRule) GetFetch() string {
	if x != nil {
		return x.Fetch
	}
	return ""
}

func (x *MentionPointRule) GetFetchRepeatWeeks() int32 {
	if x != nil {
		return x.FetchRepeatWeeks
	}
	return 0
}

func (x *MentionPointRule) GetFetchRepeatWeekArr() []int32 {
	if x != nil {
		return x.FetchRepeatWeekArr
	}
	return nil
}

func (x *MentionPointRule) GetSubFetchTime() string {
	if x != nil {
		return x.SubFetchTime
	}
	return ""
}

func (x *MentionPointRule) GetAppointment() string {
	if x != nil {
		return x.Appointment
	}
	return ""
}

func (x *MentionPointRule) GetAppointmentNum() int32 {
	if x != nil {
		return x.AppointmentNum
	}
	return 0
}

func (x *MentionPointRule) GetMaxAppointmentNum() int32 {
	if x != nil {
		return x.MaxAppointmentNum
	}
	return 0
}

func (x *MentionPointRule) GetReceptionTimes() []*MentionPointTime {
	if x != nil {
		return x.ReceptionTimes
	}
	return nil
}

func (x *MentionPointRule) GetFetchTimes() []*MentionPointTime {
	if x != nil {
		return x.FetchTimes
	}
	return nil
}

type MentionPointTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type      string `protobuf:"bytes,3,opt,name=type,proto3" json:"type"`
	StartTime int64  `protobuf:"varint,4,opt,name=start_time,json=startTime,proto3" json:"start_time"`
	EndTime   int64  `protobuf:"varint,5,opt,name=end_time,json=endTime,proto3" json:"end_time"`
}

func (x *MentionPointTime) Reset() {
	*x = MentionPointTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mentionConfigService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MentionPointTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MentionPointTime) ProtoMessage() {}

func (x *MentionPointTime) ProtoReflect() protoreflect.Message {
	mi := &file_mentionConfigService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MentionPointTime.ProtoReflect.Descriptor instead.
func (*MentionPointTime) Descriptor() ([]byte, []int) {
	return file_mentionConfigService_proto_rawDescGZIP(), []int{2}
}

func (x *MentionPointTime) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *MentionPointTime) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *MentionPointTime) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

var File_mentionConfigService_proto protoreflect.FileDescriptor

var file_mentionConfigService_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6d, 0x65, 0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0x30, 0x0a, 0x0d, 0x4d, 0x65, 0x6e, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x75,
	0x73, 0x74, 0x6f, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xdf, 0x04, 0x0a, 0x10, 0x4d, 0x65, 0x6e,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x75, 0x6c, 0x65, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x72, 0x65, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x16, 0x72,
	0x65, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x5f,
	0x77, 0x65, 0x65, 0x6b, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x72, 0x65, 0x63,
	0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x57, 0x65, 0x65, 0x6b,
	0x73, 0x12, 0x39, 0x0a, 0x19, 0x72, 0x65, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x5f, 0x61, 0x72, 0x72, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x16, 0x72, 0x65, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x70, 0x65, 0x61, 0x74, 0x57, 0x65, 0x65, 0x6b, 0x41, 0x72, 0x72, 0x12, 0x22, 0x0a, 0x0d,
	0x69, 0x73, 0x5f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x46, 0x65, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x65, 0x74, 0x63, 0x68, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x66, 0x65, 0x74, 0x63, 0x68, 0x12, 0x2c, 0x0a, 0x12, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f,
	0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x73, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x10, 0x66, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74, 0x57,
	0x65, 0x65, 0x6b, 0x73, 0x12, 0x31, 0x0a, 0x15, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x72, 0x65,
	0x70, 0x65, 0x61, 0x74, 0x5f, 0x77, 0x65, 0x65, 0x6b, 0x5f, 0x61, 0x72, 0x72, 0x18, 0x0f, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x12, 0x66, 0x65, 0x74, 0x63, 0x68, 0x52, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x57, 0x65, 0x65, 0x6b, 0x41, 0x72, 0x72, 0x12, 0x24, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x5f, 0x66,
	0x65, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x73, 0x75, 0x62, 0x46, 0x65, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x27, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e,
	0x75, 0x6d, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x2e, 0x0a, 0x13, 0x6d, 0x61, 0x78, 0x5f,
	0x61, 0x70, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6d, 0x61, 0x78, 0x41, 0x70, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x43, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x65,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65, 0x6e,
	0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0e, 0x72,
	0x65, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x3b, 0x0a,
	0x0b, 0x66, 0x65, 0x74, 0x63, 0x68, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x18, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4d, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x0a,
	0x66, 0x65, 0x74, 0x63, 0x68, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x22, 0x60, 0x0a, 0x10, 0x4d, 0x65,
	0x6e, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x19, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x42, 0x0d, 0x5a, 0x0b,
	0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_mentionConfigService_proto_rawDescOnce sync.Once
	file_mentionConfigService_proto_rawDescData = file_mentionConfigService_proto_rawDesc
)

func file_mentionConfigService_proto_rawDescGZIP() []byte {
	file_mentionConfigService_proto_rawDescOnce.Do(func() {
		file_mentionConfigService_proto_rawDescData = protoimpl.X.CompressGZIP(file_mentionConfigService_proto_rawDescData)
	})
	return file_mentionConfigService_proto_rawDescData
}

var file_mentionConfigService_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_mentionConfigService_proto_goTypes = []interface{}{
	(*MentionConfig)(nil),    // 0: services.MentionConfig
	(*MentionPointRule)(nil), // 1: services.MentionPointRule
	(*MentionPointTime)(nil), // 2: services.MentionPointTime
}
var file_mentionConfigService_proto_depIdxs = []int32{
	2, // 0: services.MentionPointRule.reception_times:type_name -> services.MentionPointTime
	2, // 1: services.MentionPointRule.fetch_times:type_name -> services.MentionPointTime
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_mentionConfigService_proto_init() }
func file_mentionConfigService_proto_init() {
	if File_mentionConfigService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mentionConfigService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MentionConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mentionConfigService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MentionPointRule); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mentionConfigService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MentionPointTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mentionConfigService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mentionConfigService_proto_goTypes,
		DependencyIndexes: file_mentionConfigService_proto_depIdxs,
		MessageInfos:      file_mentionConfigService_proto_msgTypes,
	}.Build()
	File_mentionConfigService_proto = out.File
	file_mentionConfigService_proto_rawDesc = nil
	file_mentionConfigService_proto_goTypes = nil
	file_mentionConfigService_proto_depIdxs = nil
}
