// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: rankService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Rank struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               int32   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type             string  `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`
	MinPoints        int32   `protobuf:"varint,4,opt,name=min_points,json=minPoints,proto3" json:"min_points,omitempty"`
	MaxPoints        int32   `protobuf:"varint,5,opt,name=max_points,json=maxPoints,proto3" json:"max_points,omitempty"`
	Discount         float32 `protobuf:"fixed32,6,opt,name=discount,proto3" json:"discount,omitempty"`
	PointRate        float32 `protobuf:"fixed32,7,opt,name=point_rate,json=pointRate,proto3" json:"point_rate,omitempty"`
	NextRankId       int32   `protobuf:"varint,8,opt,name=next_rank_id,json=nextRankId,proto3" json:"next_rank_id,omitempty"`
	OrderLimitType   int32   `protobuf:"varint,9,opt,name=order_limit_type,json=orderLimitType,proto3" json:"order_limit_type,omitempty"`
	OrderLimitMoney  float32 `protobuf:"fixed32,10,opt,name=order_limit_money,json=orderLimitMoney,proto3" json:"order_limit_money,omitempty"`
	DepositLimit     int32   `protobuf:"varint,11,opt,name=deposit_limit,json=depositLimit,proto3" json:"deposit_limit,omitempty"`
	GrowthLimit      int32   `protobuf:"varint,12,opt,name=growth_limit,json=growthLimit,proto3" json:"growth_limit,omitempty"`
	PointExpiredDays int32   `protobuf:"varint,13,opt,name=point_expired_days,json=pointExpiredDays,proto3" json:"point_expired_days,omitempty"`
	IconId           int64   `protobuf:"varint,14,opt,name=icon_id,json=iconId,proto3" json:"icon_id,omitempty"`
	IconUrl          string  `protobuf:"bytes,15,opt,name=icon_url,json=iconUrl,proto3" json:"icon_url,omitempty"`
	BgColor          string  `protobuf:"bytes,16,opt,name=bg_color,json=bgColor,proto3" json:"bg_color,omitempty"`
	Defaulted        bool    `protobuf:"varint,17,opt,name=defaulted,proto3" json:"defaulted,omitempty"`
	Description      string  `protobuf:"bytes,18,opt,name=description,proto3" json:"description,omitempty"`
	IsPay            bool    `protobuf:"varint,19,opt,name=is_pay,json=isPay,proto3" json:"is_pay,omitempty"`
	IsFreePostage    bool    `protobuf:"varint,20,opt,name=is_free_postage,json=isFreePostage,proto3" json:"is_free_postage,omitempty"`
	IsAutoUpgrade    bool    `protobuf:"varint,21,opt,name=is_auto_upgrade,json=isAutoUpgrade,proto3" json:"is_auto_upgrade,omitempty"`
	Status           string  `protobuf:"bytes,22,opt,name=status,proto3" json:"status,omitempty"`
	CreatedAt        string  `protobuf:"bytes,23,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt        string  `protobuf:"bytes,24,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Rank) Reset() {
	*x = Rank{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rankService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rank) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rank) ProtoMessage() {}

func (x *Rank) ProtoReflect() protoreflect.Message {
	mi := &file_rankService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rank.ProtoReflect.Descriptor instead.
func (*Rank) Descriptor() ([]byte, []int) {
	return file_rankService_proto_rawDescGZIP(), []int{0}
}

func (x *Rank) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Rank) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Rank) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Rank) GetMinPoints() int32 {
	if x != nil {
		return x.MinPoints
	}
	return 0
}

func (x *Rank) GetMaxPoints() int32 {
	if x != nil {
		return x.MaxPoints
	}
	return 0
}

func (x *Rank) GetDiscount() float32 {
	if x != nil {
		return x.Discount
	}
	return 0
}

func (x *Rank) GetPointRate() float32 {
	if x != nil {
		return x.PointRate
	}
	return 0
}

func (x *Rank) GetNextRankId() int32 {
	if x != nil {
		return x.NextRankId
	}
	return 0
}

func (x *Rank) GetOrderLimitType() int32 {
	if x != nil {
		return x.OrderLimitType
	}
	return 0
}

func (x *Rank) GetOrderLimitMoney() float32 {
	if x != nil {
		return x.OrderLimitMoney
	}
	return 0
}

func (x *Rank) GetDepositLimit() int32 {
	if x != nil {
		return x.DepositLimit
	}
	return 0
}

func (x *Rank) GetGrowthLimit() int32 {
	if x != nil {
		return x.GrowthLimit
	}
	return 0
}

func (x *Rank) GetPointExpiredDays() int32 {
	if x != nil {
		return x.PointExpiredDays
	}
	return 0
}

func (x *Rank) GetIconId() int64 {
	if x != nil {
		return x.IconId
	}
	return 0
}

func (x *Rank) GetIconUrl() string {
	if x != nil {
		return x.IconUrl
	}
	return ""
}

func (x *Rank) GetBgColor() string {
	if x != nil {
		return x.BgColor
	}
	return ""
}

func (x *Rank) GetDefaulted() bool {
	if x != nil {
		return x.Defaulted
	}
	return false
}

func (x *Rank) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Rank) GetIsPay() bool {
	if x != nil {
		return x.IsPay
	}
	return false
}

func (x *Rank) GetIsFreePostage() bool {
	if x != nil {
		return x.IsFreePostage
	}
	return false
}

func (x *Rank) GetIsAutoUpgrade() bool {
	if x != nil {
		return x.IsAutoUpgrade
	}
	return false
}

func (x *Rank) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Rank) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Rank) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type RankRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged    int32 `protobuf:"varint,1,opt,name=paged,proto3" json:"paged,omitempty"`
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	//以下为自定义参数
	Id            int32   `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	Name          string  `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Type          string  `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`
	IsPay         bool    `protobuf:"varint,6,opt,name=is_pay,json=isPay,proto3" json:"is_pay,omitempty"`
	Status        string  `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	IsFreePostage bool    `protobuf:"varint,8,opt,name=is_free_postage,json=isFreePostage,proto3" json:"is_free_postage,omitempty"`
	Ids           []int32 `protobuf:"varint,9,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *RankRequest) Reset() {
	*x = RankRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rankService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankRequest) ProtoMessage() {}

func (x *RankRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rankService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankRequest.ProtoReflect.Descriptor instead.
func (*RankRequest) Descriptor() ([]byte, []int) {
	return file_rankService_proto_rawDescGZIP(), []int{1}
}

func (x *RankRequest) GetPaged() int32 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *RankRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *RankRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RankRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RankRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *RankRequest) GetIsPay() bool {
	if x != nil {
		return x.IsPay
	}
	return false
}

func (x *RankRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RankRequest) GetIsFreePostage() bool {
	if x != nil {
		return x.IsFreePostage
	}
	return false
}

func (x *RankRequest) GetIds() []int32 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type RankData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *Rank         `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager  *common.Pager `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items  []*Rank       `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Info   *common.Info  `protobuf:"bytes,4,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *RankData) Reset() {
	*x = RankData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rankService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankData) ProtoMessage() {}

func (x *RankData) ProtoReflect() protoreflect.Message {
	mi := &file_rankService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankData.ProtoReflect.Descriptor instead.
func (*RankData) Descriptor() ([]byte, []int) {
	return file_rankService_proto_rawDescGZIP(), []int{2}
}

func (x *RankData) GetEntity() *Rank {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *RankData) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *RankData) GetItems() []*Rank {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *RankData) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

type RankResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *RankData     `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Error *common.Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *RankResponse) Reset() {
	*x = RankResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rankService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RankResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RankResponse) ProtoMessage() {}

func (x *RankResponse) ProtoReflect() protoreflect.Message {
	mi := &file_rankService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RankResponse.ProtoReflect.Descriptor instead.
func (*RankResponse) Descriptor() ([]byte, []int) {
	return file_rankService_proto_rawDescGZIP(), []int{3}
}

func (x *RankResponse) GetData() *RankData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RankResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_rankService_proto protoreflect.FileDescriptor

var file_rankService_proto_rawDesc = []byte{
	0x0a, 0x11, 0x72, 0x61, 0x6e, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x11, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xf1, 0x05, 0x0a, 0x04, 0x52, 0x61, 0x6e, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x61, 0x78, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6d, 0x61, 0x78, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x08, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x09, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6e, 0x65,
	0x78, 0x74, 0x5f, 0x72, 0x61, 0x6e, 0x6b, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x52, 0x61, 0x6e, 0x6b, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x10,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0f, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x4d, 0x6f, 0x6e,
	0x65, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x5f, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x67, 0x72, 0x6f, 0x77, 0x74,
	0x68, 0x5f, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x67,
	0x72, 0x6f, 0x77, 0x74, 0x68, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x79, 0x73,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x45, 0x78, 0x70,
	0x69, 0x72, 0x65, 0x64, 0x44, 0x61, 0x79, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x63, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x69, 0x63, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x63, 0x6f, 0x6e, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x63, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x12, 0x19, 0x0a, 0x08,
	0x62, 0x67, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x62, 0x67, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x65, 0x64, 0x18, 0x11, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x65, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x70, 0x61,
	0x79, 0x18, 0x13, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x50, 0x61, 0x79, 0x12, 0x26,
	0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x67,
	0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x46, 0x72, 0x65, 0x65, 0x50,
	0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x61, 0x75, 0x74,
	0x6f, 0x5f, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0d, 0x69, 0x73, 0x41, 0x75, 0x74, 0x6f, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x22, 0xe1, 0x01, 0x0a, 0x0b, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x70, 0x61, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x69, 0x73, 0x50, 0x61, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26,
	0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x67,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x46, 0x72, 0x65, 0x65, 0x50,
	0x6f, 0x73, 0x74, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x09, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x9f, 0x01, 0x0a, 0x08, 0x52, 0x61, 0x6e,
	0x6b, 0x44, 0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a,
	0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x72, 0x12, 0x24, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x61, 0x6e,
	0x6b, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x20, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x5b, 0x0a, 0x0c, 0x52, 0x61,
	0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xce, 0x02, 0x0a, 0x0b, 0x52, 0x61, 0x6e, 0x6b,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x12, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x61, 0x6e,
	0x6b, 0x1a, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x61, 0x6e,
	0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x32, 0x0a, 0x06, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x1a, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x32, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x1a, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x0e, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x1a, 0x16, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x15,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x37, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x52, 0x61, 0x6e, 0x6b, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rankService_proto_rawDescOnce sync.Once
	file_rankService_proto_rawDescData = file_rankService_proto_rawDesc
)

func file_rankService_proto_rawDescGZIP() []byte {
	file_rankService_proto_rawDescOnce.Do(func() {
		file_rankService_proto_rawDescData = protoimpl.X.CompressGZIP(file_rankService_proto_rawDescData)
	})
	return file_rankService_proto_rawDescData
}

var file_rankService_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_rankService_proto_goTypes = []interface{}{
	(*Rank)(nil),         // 0: services.Rank
	(*RankRequest)(nil),  // 1: services.RankRequest
	(*RankData)(nil),     // 2: services.RankData
	(*RankResponse)(nil), // 3: services.RankResponse
	(*common.Pager)(nil), // 4: common.Pager
	(*common.Info)(nil),  // 5: common.Info
	(*common.Error)(nil), // 6: common.Error
}
var file_rankService_proto_depIdxs = []int32{
	0,  // 0: services.RankData.entity:type_name -> services.Rank
	4,  // 1: services.RankData.pager:type_name -> common.Pager
	0,  // 2: services.RankData.items:type_name -> services.Rank
	5,  // 3: services.RankData.info:type_name -> common.Info
	2,  // 4: services.RankResponse.data:type_name -> services.RankData
	6,  // 5: services.RankResponse.error:type_name -> common.Error
	0,  // 6: services.RankService.Create:input_type -> services.Rank
	0,  // 7: services.RankService.Update:input_type -> services.Rank
	0,  // 8: services.RankService.Delete:input_type -> services.Rank
	0,  // 9: services.RankService.Get:input_type -> services.Rank
	1,  // 10: services.RankService.Search:input_type -> services.RankRequest
	1,  // 11: services.RankService.List:input_type -> services.RankRequest
	3,  // 12: services.RankService.Create:output_type -> services.RankResponse
	3,  // 13: services.RankService.Update:output_type -> services.RankResponse
	3,  // 14: services.RankService.Delete:output_type -> services.RankResponse
	3,  // 15: services.RankService.Get:output_type -> services.RankResponse
	3,  // 16: services.RankService.Search:output_type -> services.RankResponse
	3,  // 17: services.RankService.List:output_type -> services.RankResponse
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_rankService_proto_init() }
func file_rankService_proto_init() {
	if File_rankService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rankService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rank); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rankService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rankService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rankService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RankResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rankService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rankService_proto_goTypes,
		DependencyIndexes: file_rankService_proto_depIdxs,
		MessageInfos:      file_rankService_proto_msgTypes,
	}.Build()
	File_rankService_proto = out.File
	file_rankService_proto_rawDesc = nil
	file_rankService_proto_goTypes = nil
	file_rankService_proto_depIdxs = nil
}
