// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: walletBalanceLogService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WalletBalanceLog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                               //ID
	MemberId       int64   `protobuf:"varint,2,opt,name=member_id,json=memberId,proto3" json:"member_id"`                   //用户ID
	WalletId       int64   `protobuf:"varint,3,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id"`                   //钱包ID
	BusinessType   string  `protobuf:"bytes,4,opt,name=business_type,json=businessType,proto3" json:"business_type"`        //业务类型：如 recharge 充值
	MoneyType      string  `protobuf:"bytes,5,opt,name=money_type,json=moneyType,proto3" json:"money_type"`                 //资金类型：0 赠送，1冻结
	OperationType  string  `protobuf:"bytes,6,opt,name=operation_type,json=operationType,proto3" json:"operation_type"`     //操作类型：0 减少，1增加
	OperationMoney int64   `protobuf:"varint,7,opt,name=operation_money,json=operationMoney,proto3" json:"operation_money"` //增减方向：增减金额
	OriginalMoney  int64   `protobuf:"varint,8,opt,name=original_money,json=originalMoney,proto3" json:"original_money"`    //充值金额
	LatestMoney    int64   `protobuf:"varint,9,opt,name=latest_money,json=latestMoney,proto3" json:"latest_money"`          //支付金额
	OperatorId     int64   `protobuf:"varint,10,opt,name=operator_id,json=operatorId,proto3" json:"operator_id"`            //操作员ID（涉及人工处理的需要记录操作员）
	Msg            string  `protobuf:"bytes,11,opt,name=msg,proto3" json:"msg"`                                             //描述：如：账户充值 [ 赠送500.00元 ]
	CreatedAt      string  `protobuf:"bytes,12,opt,name=created_at,json=createdAt,proto3" json:"created_at"`
	UpdatedAt      string  `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at"`
	Member         *Member `protobuf:"bytes,14,opt,name=member,proto3" json:"member"`
	Wallet         *Wallet `protobuf:"bytes,15,opt,name=wallet,proto3" json:"wallet"`
}

func (x *WalletBalanceLog) Reset() {
	*x = WalletBalanceLog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_walletBalanceLogService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletBalanceLog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletBalanceLog) ProtoMessage() {}

func (x *WalletBalanceLog) ProtoReflect() protoreflect.Message {
	mi := &file_walletBalanceLogService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletBalanceLog.ProtoReflect.Descriptor instead.
func (*WalletBalanceLog) Descriptor() ([]byte, []int) {
	return file_walletBalanceLogService_proto_rawDescGZIP(), []int{0}
}

func (x *WalletBalanceLog) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WalletBalanceLog) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *WalletBalanceLog) GetWalletId() int64 {
	if x != nil {
		return x.WalletId
	}
	return 0
}

func (x *WalletBalanceLog) GetBusinessType() string {
	if x != nil {
		return x.BusinessType
	}
	return ""
}

func (x *WalletBalanceLog) GetMoneyType() string {
	if x != nil {
		return x.MoneyType
	}
	return ""
}

func (x *WalletBalanceLog) GetOperationType() string {
	if x != nil {
		return x.OperationType
	}
	return ""
}

func (x *WalletBalanceLog) GetOperationMoney() int64 {
	if x != nil {
		return x.OperationMoney
	}
	return 0
}

func (x *WalletBalanceLog) GetOriginalMoney() int64 {
	if x != nil {
		return x.OriginalMoney
	}
	return 0
}

func (x *WalletBalanceLog) GetLatestMoney() int64 {
	if x != nil {
		return x.LatestMoney
	}
	return 0
}

func (x *WalletBalanceLog) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *WalletBalanceLog) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *WalletBalanceLog) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *WalletBalanceLog) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *WalletBalanceLog) GetMember() *Member {
	if x != nil {
		return x.Member
	}
	return nil
}

func (x *WalletBalanceLog) GetWallet() *Wallet {
	if x != nil {
		return x.Wallet
	}
	return nil
}

//查询参数
type WalletBalanceLogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged    int32 `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize int32 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	//以下为自定义参数
	MemberId      int64  `protobuf:"varint,3,opt,name=member_id,json=memberId,proto3" json:"member_id"`
	BusinessType  string `protobuf:"bytes,4,opt,name=business_type,json=businessType,proto3" json:"business_type"`
	MoneyType     string `protobuf:"bytes,5,opt,name=money_type,json=moneyType,proto3" json:"money_type"`
	OperationType string `protobuf:"bytes,6,opt,name=operation_type,json=operationType,proto3" json:"operation_type"`
	WalletId      int64  `protobuf:"varint,7,opt,name=wallet_id,json=walletId,proto3" json:"wallet_id"`
	Id            int64  `protobuf:"varint,8,opt,name=id,proto3" json:"id"`
	OperatorId    int64  `protobuf:"varint,9,opt,name=operator_id,json=operatorId,proto3" json:"operator_id"`
	Memo          string `protobuf:"bytes,10,opt,name=memo,proto3" json:"memo"`
	MinMoney      int64  `protobuf:"varint,11,opt,name=min_money,json=minMoney,proto3" json:"min_money"`
	MaxMoney      int64  `protobuf:"varint,12,opt,name=max_money,json=maxMoney,proto3" json:"max_money"`
}

func (x *WalletBalanceLogRequest) Reset() {
	*x = WalletBalanceLogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_walletBalanceLogService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletBalanceLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletBalanceLogRequest) ProtoMessage() {}

func (x *WalletBalanceLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_walletBalanceLogService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletBalanceLogRequest.ProtoReflect.Descriptor instead.
func (*WalletBalanceLogRequest) Descriptor() ([]byte, []int) {
	return file_walletBalanceLogService_proto_rawDescGZIP(), []int{1}
}

func (x *WalletBalanceLogRequest) GetPaged() int32 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *WalletBalanceLogRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *WalletBalanceLogRequest) GetMemberId() int64 {
	if x != nil {
		return x.MemberId
	}
	return 0
}

func (x *WalletBalanceLogRequest) GetBusinessType() string {
	if x != nil {
		return x.BusinessType
	}
	return ""
}

func (x *WalletBalanceLogRequest) GetMoneyType() string {
	if x != nil {
		return x.MoneyType
	}
	return ""
}

func (x *WalletBalanceLogRequest) GetOperationType() string {
	if x != nil {
		return x.OperationType
	}
	return ""
}

func (x *WalletBalanceLogRequest) GetWalletId() int64 {
	if x != nil {
		return x.WalletId
	}
	return 0
}

func (x *WalletBalanceLogRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WalletBalanceLogRequest) GetOperatorId() int64 {
	if x != nil {
		return x.OperatorId
	}
	return 0
}

func (x *WalletBalanceLogRequest) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *WalletBalanceLogRequest) GetMinMoney() int64 {
	if x != nil {
		return x.MinMoney
	}
	return 0
}

func (x *WalletBalanceLogRequest) GetMaxMoney() int64 {
	if x != nil {
		return x.MaxMoney
	}
	return 0
}

//
type WalletBalanceLogData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *WalletBalanceLog   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager       `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*WalletBalanceLog `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
	Info   *common.Info        `protobuf:"bytes,4,opt,name=info,proto3" json:"info"`
}

func (x *WalletBalanceLogData) Reset() {
	*x = WalletBalanceLogData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_walletBalanceLogService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletBalanceLogData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletBalanceLogData) ProtoMessage() {}

func (x *WalletBalanceLogData) ProtoReflect() protoreflect.Message {
	mi := &file_walletBalanceLogService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletBalanceLogData.ProtoReflect.Descriptor instead.
func (*WalletBalanceLogData) Descriptor() ([]byte, []int) {
	return file_walletBalanceLogService_proto_rawDescGZIP(), []int{2}
}

func (x *WalletBalanceLogData) GetEntity() *WalletBalanceLog {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *WalletBalanceLogData) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *WalletBalanceLogData) GetItems() []*WalletBalanceLog {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *WalletBalanceLogData) GetInfo() *common.Info {
	if x != nil {
		return x.Info
	}
	return nil
}

//
type WalletBalanceLogResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *WalletBalanceLogData `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error         `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *WalletBalanceLogResponse) Reset() {
	*x = WalletBalanceLogResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_walletBalanceLogService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletBalanceLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletBalanceLogResponse) ProtoMessage() {}

func (x *WalletBalanceLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_walletBalanceLogService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletBalanceLogResponse.ProtoReflect.Descriptor instead.
func (*WalletBalanceLogResponse) Descriptor() ([]byte, []int) {
	return file_walletBalanceLogService_proto_rawDescGZIP(), []int{3}
}

func (x *WalletBalanceLogResponse) GetData() *WalletBalanceLogData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *WalletBalanceLogResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_walletBalanceLogService_proto protoreflect.FileDescriptor

var file_walletBalanceLogService_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4c,
	0x6f, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x6d, 0x65,
	0x6d, 0x62, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x13, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xff, 0x03, 0x0a, 0x10, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d,
	0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73,
	0x73, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75,
	0x73, 0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f,
	0x6e, 0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x27, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f,
	0x6e, 0x65, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6f, 0x70, 0x65, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x6c, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x4d, 0x6f, 0x6e, 0x65, 0x79,
	0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x4d, 0x6f,
	0x6e, 0x65, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x28, 0x0a, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x4d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x52, 0x06, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28,
	0x0a, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x52, 0x06, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x22, 0xf0, 0x02, 0x0a, 0x17, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70,
	0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x65, 0x6d, 0x62, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x65, 0x6d, 0x62,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x75, 0x73, 0x69, 0x6e, 0x65, 0x73, 0x73,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x73,
	0x69, 0x6e, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x6e,
	0x65, 0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d,
	0x6f, 0x6e, 0x65, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x6f, 0x70, 0x65, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0a, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d,
	0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6d, 0x69, 0x6e, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x1b,
	0x0a, 0x09, 0x6d, 0x61, 0x78, 0x5f, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x6d, 0x61, 0x78, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x22, 0xc3, 0x01, 0x0a, 0x14,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x67,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x32, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x67,
	0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x30, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12,
	0x20, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x22, 0x73, 0x0a, 0x18, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e,
	0x63, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x32, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c,
	0x61, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x23, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0xcd, 0x02, 0x0a, 0x17, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x4a, 0x0a, 0x06, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x12, 0x1a, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a,
	0x0a, 0x06, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x64, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63,
	0x65, 0x4c, 0x6f, 0x67, 0x1a, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x03, 0x47, 0x65,
	0x74, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x1a, 0x22, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x51, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x21, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4c, 0x6f, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_walletBalanceLogService_proto_rawDescOnce sync.Once
	file_walletBalanceLogService_proto_rawDescData = file_walletBalanceLogService_proto_rawDesc
)

func file_walletBalanceLogService_proto_rawDescGZIP() []byte {
	file_walletBalanceLogService_proto_rawDescOnce.Do(func() {
		file_walletBalanceLogService_proto_rawDescData = protoimpl.X.CompressGZIP(file_walletBalanceLogService_proto_rawDescData)
	})
	return file_walletBalanceLogService_proto_rawDescData
}

var file_walletBalanceLogService_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_walletBalanceLogService_proto_goTypes = []interface{}{
	(*WalletBalanceLog)(nil),         // 0: services.WalletBalanceLog
	(*WalletBalanceLogRequest)(nil),  // 1: services.WalletBalanceLogRequest
	(*WalletBalanceLogData)(nil),     // 2: services.WalletBalanceLogData
	(*WalletBalanceLogResponse)(nil), // 3: services.WalletBalanceLogResponse
	(*Member)(nil),                   // 4: services.Member
	(*Wallet)(nil),                   // 5: services.Wallet
	(*common.Pager)(nil),             // 6: common.Pager
	(*common.Info)(nil),              // 7: common.Info
	(*common.Error)(nil),             // 8: common.Error
}
var file_walletBalanceLogService_proto_depIdxs = []int32{
	4,  // 0: services.WalletBalanceLog.member:type_name -> services.Member
	5,  // 1: services.WalletBalanceLog.wallet:type_name -> services.Wallet
	0,  // 2: services.WalletBalanceLogData.entity:type_name -> services.WalletBalanceLog
	6,  // 3: services.WalletBalanceLogData.pager:type_name -> common.Pager
	0,  // 4: services.WalletBalanceLogData.items:type_name -> services.WalletBalanceLog
	7,  // 5: services.WalletBalanceLogData.info:type_name -> common.Info
	2,  // 6: services.WalletBalanceLogResponse.data:type_name -> services.WalletBalanceLogData
	8,  // 7: services.WalletBalanceLogResponse.error:type_name -> common.Error
	0,  // 8: services.WalletBalanceLogService.Income:input_type -> services.WalletBalanceLog
	0,  // 9: services.WalletBalanceLogService.Expend:input_type -> services.WalletBalanceLog
	0,  // 10: services.WalletBalanceLogService.Get:input_type -> services.WalletBalanceLog
	1,  // 11: services.WalletBalanceLogService.Search:input_type -> services.WalletBalanceLogRequest
	3,  // 12: services.WalletBalanceLogService.Income:output_type -> services.WalletBalanceLogResponse
	3,  // 13: services.WalletBalanceLogService.Expend:output_type -> services.WalletBalanceLogResponse
	3,  // 14: services.WalletBalanceLogService.Get:output_type -> services.WalletBalanceLogResponse
	3,  // 15: services.WalletBalanceLogService.Search:output_type -> services.WalletBalanceLogResponse
	12, // [12:16] is the sub-list for method output_type
	8,  // [8:12] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_walletBalanceLogService_proto_init() }
func file_walletBalanceLogService_proto_init() {
	if File_walletBalanceLogService_proto != nil {
		return
	}
	file_memberService_proto_init()
	file_walletService_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_walletBalanceLogService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletBalanceLog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_walletBalanceLogService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletBalanceLogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_walletBalanceLogService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletBalanceLogData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_walletBalanceLogService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletBalanceLogResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_walletBalanceLogService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_walletBalanceLogService_proto_goTypes,
		DependencyIndexes: file_walletBalanceLogService_proto_depIdxs,
		MessageInfos:      file_walletBalanceLogService_proto_msgTypes,
	}.Build()
	File_walletBalanceLogService_proto = out.File
	file_walletBalanceLogService_proto_rawDesc = nil
	file_walletBalanceLogService_proto_goTypes = nil
	file_walletBalanceLogService_proto_depIdxs = nil
}
