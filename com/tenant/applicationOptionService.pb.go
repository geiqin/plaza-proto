// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: applicationOptionService.proto

package services

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 应用版本
type ApplicationOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              int32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id"`                                                 //ID
	ApplicationId   int32                 `protobuf:"varint,2,opt,name=application_id,json=applicationId,proto3" json:"application_id"`      //所属应用
	ApplicationCode string                `protobuf:"bytes,3,opt,name=application_code,json=applicationCode,proto3" json:"application_code"` //版本编码
	BaseConfig      *OptionBaseConfig     `protobuf:"bytes,4,opt,name=base_config,json=baseConfig,proto3" json:"base_config"`                //使用配置
	SecurityConfig  *OptionSecurityConfig `protobuf:"bytes,5,opt,name=security_config,json=securityConfig,proto3" json:"security_config"`    //安全配置
}

func (x *ApplicationOption) Reset() {
	*x = ApplicationOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_applicationOptionService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationOption) ProtoMessage() {}

func (x *ApplicationOption) ProtoReflect() protoreflect.Message {
	mi := &file_applicationOptionService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationOption.ProtoReflect.Descriptor instead.
func (*ApplicationOption) Descriptor() ([]byte, []int) {
	return file_applicationOptionService_proto_rawDescGZIP(), []int{0}
}

func (x *ApplicationOption) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ApplicationOption) GetApplicationId() int32 {
	if x != nil {
		return x.ApplicationId
	}
	return 0
}

func (x *ApplicationOption) GetApplicationCode() string {
	if x != nil {
		return x.ApplicationCode
	}
	return ""
}

func (x *ApplicationOption) GetBaseConfig() *OptionBaseConfig {
	if x != nil {
		return x.BaseConfig
	}
	return nil
}

func (x *ApplicationOption) GetSecurityConfig() *OptionSecurityConfig {
	if x != nil {
		return x.SecurityConfig
	}
	return nil
}

// 基本配置
type OptionBaseConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SITE_TITLE       string   `protobuf:"bytes,1,opt,name=SITE_TITLE,json=SITETITLE,proto3" json:"SITE_TITLE"`                   //系统标题
	SITE_DESCRIPTION string   `protobuf:"bytes,2,opt,name=SITE_DESCRIPTION,json=SITEDESCRIPTION,proto3" json:"SITE_DESCRIPTION"` //系统描述
	SITE_COPYRIGHT   string   `protobuf:"bytes,3,opt,name=SITE_COPYRIGHT,json=SITECOPYRIGHT,proto3" json:"SITE_COPYRIGHT"`       //版权信息
	SITE_BEIAN       string   `protobuf:"bytes,4,opt,name=SITE_BEIAN,json=SITEBEIAN,proto3" json:"SITE_BEIAN"`                   //备案号
	SITE_FAVICON     string   `protobuf:"bytes,5,opt,name=SITE_FAVICON,json=SITEFAVICON,proto3" json:"SITE_FAVICON"`             //favicon
	SITE_LOGO        string   `protobuf:"bytes,6,opt,name=SITE_LOGO,json=SITELOGO,proto3" json:"SITE_LOGO"`                      //系统LOGO
	SITE_AD_TYPE     string   `protobuf:"bytes,7,opt,name=SITE_AD_TYPE,json=SITEADTYPE,proto3" json:"SITE_AD_TYPE"`              //系统广告类型 1-封面，2-幻灯片
	SITE_AD_COVER    string   `protobuf:"bytes,8,opt,name=SITE_AD_COVER,json=SITEADCOVER,proto3" json:"SITE_AD_COVER"`           //系统广告封面
	SITE_AD_SLIDES   []string `protobuf:"bytes,9,rep,name=SITE_AD_SLIDES,json=SITEADSLIDES,proto3" json:"SITE_AD_SLIDES"`        //系统广告幻灯片
}

func (x *OptionBaseConfig) Reset() {
	*x = OptionBaseConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_applicationOptionService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptionBaseConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionBaseConfig) ProtoMessage() {}

func (x *OptionBaseConfig) ProtoReflect() protoreflect.Message {
	mi := &file_applicationOptionService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptionBaseConfig.ProtoReflect.Descriptor instead.
func (*OptionBaseConfig) Descriptor() ([]byte, []int) {
	return file_applicationOptionService_proto_rawDescGZIP(), []int{1}
}

func (x *OptionBaseConfig) GetSITE_TITLE() string {
	if x != nil {
		return x.SITE_TITLE
	}
	return ""
}

func (x *OptionBaseConfig) GetSITE_DESCRIPTION() string {
	if x != nil {
		return x.SITE_DESCRIPTION
	}
	return ""
}

func (x *OptionBaseConfig) GetSITE_COPYRIGHT() string {
	if x != nil {
		return x.SITE_COPYRIGHT
	}
	return ""
}

func (x *OptionBaseConfig) GetSITE_BEIAN() string {
	if x != nil {
		return x.SITE_BEIAN
	}
	return ""
}

func (x *OptionBaseConfig) GetSITE_FAVICON() string {
	if x != nil {
		return x.SITE_FAVICON
	}
	return ""
}

func (x *OptionBaseConfig) GetSITE_LOGO() string {
	if x != nil {
		return x.SITE_LOGO
	}
	return ""
}

func (x *OptionBaseConfig) GetSITE_AD_TYPE() string {
	if x != nil {
		return x.SITE_AD_TYPE
	}
	return ""
}

func (x *OptionBaseConfig) GetSITE_AD_COVER() string {
	if x != nil {
		return x.SITE_AD_COVER
	}
	return ""
}

func (x *OptionBaseConfig) GetSITE_AD_SLIDES() []string {
	if x != nil {
		return x.SITE_AD_SLIDES
	}
	return nil
}

// 安全配置
type OptionSecurityConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PASSWORD_ERROR_LOCK_COUNT        int32 `protobuf:"varint,1,opt,name=PASSWORD_ERROR_LOCK_COUNT,json=PASSWORDERRORLOCKCOUNT,proto3" json:"PASSWORD_ERROR_LOCK_COUNT"`                      //登录密码错误锁定账号的次数
	PASSWORD_ERROR_LOCK_MINUTES      int32 `protobuf:"varint,2,opt,name=PASSWORD_ERROR_LOCK_MINUTES,json=PASSWORDERRORLOCKMINUTES,proto3" json:"PASSWORD_ERROR_LOCK_MINUTES"`                //登录密码错误锁定账号的时间（min）
	PASSWORD_EXPIRATION_DAYS         int32 `protobuf:"varint,3,opt,name=PASSWORD_EXPIRATION_DAYS,json=PASSWORDEXPIRATIONDAYS,proto3" json:"PASSWORD_EXPIRATION_DAYS"`                        //密码有效期（天）
	PASSWORD_EXPIRATION_WARNING_DAYS int32 `protobuf:"varint,4,opt,name=PASSWORD_EXPIRATION_WARNING_DAYS,json=PASSWORDEXPIRATIONWARNINGDAYS,proto3" json:"PASSWORD_EXPIRATION_WARNING_DAYS"` //密码到期提前提示（天）
	PASSWORD_REPETITION_TIMES        int32 `protobuf:"varint,5,opt,name=PASSWORD_REPETITION_TIMES,json=PASSWORDREPETITIONTIMES,proto3" json:"PASSWORD_REPETITION_TIMES"`                     //密码重复使用次数
	PASSWORD_MIN_LENGTH              int32 `protobuf:"varint,6,opt,name=PASSWORD_MIN_LENGTH,json=PASSWORDMINLENGTH,proto3" json:"PASSWORD_MIN_LENGTH"`                                       //密码最小长度
}

func (x *OptionSecurityConfig) Reset() {
	*x = OptionSecurityConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_applicationOptionService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptionSecurityConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionSecurityConfig) ProtoMessage() {}

func (x *OptionSecurityConfig) ProtoReflect() protoreflect.Message {
	mi := &file_applicationOptionService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptionSecurityConfig.ProtoReflect.Descriptor instead.
func (*OptionSecurityConfig) Descriptor() ([]byte, []int) {
	return file_applicationOptionService_proto_rawDescGZIP(), []int{2}
}

func (x *OptionSecurityConfig) GetPASSWORD_ERROR_LOCK_COUNT() int32 {
	if x != nil {
		return x.PASSWORD_ERROR_LOCK_COUNT
	}
	return 0
}

func (x *OptionSecurityConfig) GetPASSWORD_ERROR_LOCK_MINUTES() int32 {
	if x != nil {
		return x.PASSWORD_ERROR_LOCK_MINUTES
	}
	return 0
}

func (x *OptionSecurityConfig) GetPASSWORD_EXPIRATION_DAYS() int32 {
	if x != nil {
		return x.PASSWORD_EXPIRATION_DAYS
	}
	return 0
}

func (x *OptionSecurityConfig) GetPASSWORD_EXPIRATION_WARNING_DAYS() int32 {
	if x != nil {
		return x.PASSWORD_EXPIRATION_WARNING_DAYS
	}
	return 0
}

func (x *OptionSecurityConfig) GetPASSWORD_REPETITION_TIMES() int32 {
	if x != nil {
		return x.PASSWORD_REPETITION_TIMES
	}
	return 0
}

func (x *OptionSecurityConfig) GetPASSWORD_MIN_LENGTH() int32 {
	if x != nil {
		return x.PASSWORD_MIN_LENGTH
	}
	return 0
}

// 应用版本请求参数
type ApplicationOptionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId   int32                 `protobuf:"varint,1,opt,name=application_id,json=applicationId,proto3" json:"application_id"`      //所属应用
	ApplicationCode string                `protobuf:"bytes,2,opt,name=application_code,json=applicationCode,proto3" json:"application_code"` //版本编码
	Type            string                `protobuf:"bytes,3,opt,name=type,proto3" json:"type"`                                              //类型
	BaseConfig      *OptionBaseConfig     `protobuf:"bytes,4,opt,name=base_config,json=baseConfig,proto3" json:"base_config"`                //使用配置
	SecurityConfig  *OptionSecurityConfig `protobuf:"bytes,5,opt,name=security_config,json=securityConfig,proto3" json:"security_config"`    //安全配置
}

func (x *ApplicationOptionRequest) Reset() {
	*x = ApplicationOptionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_applicationOptionService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationOptionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationOptionRequest) ProtoMessage() {}

func (x *ApplicationOptionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_applicationOptionService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationOptionRequest.ProtoReflect.Descriptor instead.
func (*ApplicationOptionRequest) Descriptor() ([]byte, []int) {
	return file_applicationOptionService_proto_rawDescGZIP(), []int{3}
}

func (x *ApplicationOptionRequest) GetApplicationId() int32 {
	if x != nil {
		return x.ApplicationId
	}
	return 0
}

func (x *ApplicationOptionRequest) GetApplicationCode() string {
	if x != nil {
		return x.ApplicationCode
	}
	return ""
}

func (x *ApplicationOptionRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ApplicationOptionRequest) GetBaseConfig() *OptionBaseConfig {
	if x != nil {
		return x.BaseConfig
	}
	return nil
}

func (x *ApplicationOptionRequest) GetSecurityConfig() *OptionSecurityConfig {
	if x != nil {
		return x.SecurityConfig
	}
	return nil
}

// 应用版本响应数据
type ApplicationOptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *ApplicationOption `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Type   string             `protobuf:"bytes,2,opt,name=type,proto3" json:"type"` //类型
	Msg    string             `protobuf:"bytes,3,opt,name=msg,proto3" json:"msg"`
}

func (x *ApplicationOptionResponse) Reset() {
	*x = ApplicationOptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_applicationOptionService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationOptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationOptionResponse) ProtoMessage() {}

func (x *ApplicationOptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_applicationOptionService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationOptionResponse.ProtoReflect.Descriptor instead.
func (*ApplicationOptionResponse) Descriptor() ([]byte, []int) {
	return file_applicationOptionService_proto_rawDescGZIP(), []int{4}
}

func (x *ApplicationOptionResponse) GetEntity() *ApplicationOption {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *ApplicationOptionResponse) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ApplicationOptionResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_applicationOptionService_proto protoreflect.FileDescriptor

var file_applicationOptionService_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x22, 0xfb, 0x01, 0x0a, 0x11, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x3b, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x47, 0x0a, 0x0f, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x0e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xce, 0x02, 0x0a, 0x10, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x1d, 0x0a,
	0x0a, 0x53, 0x49, 0x54, 0x45, 0x5f, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x53, 0x49, 0x54, 0x45, 0x54, 0x49, 0x54, 0x4c, 0x45, 0x12, 0x29, 0x0a, 0x10,
	0x53, 0x49, 0x54, 0x45, 0x5f, 0x44, 0x45, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x53, 0x49, 0x54, 0x45, 0x44, 0x45, 0x53, 0x43,
	0x52, 0x49, 0x50, 0x54, 0x49, 0x4f, 0x4e, 0x12, 0x25, 0x0a, 0x0e, 0x53, 0x49, 0x54, 0x45, 0x5f,
	0x43, 0x4f, 0x50, 0x59, 0x52, 0x49, 0x47, 0x48, 0x54, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x53, 0x49, 0x54, 0x45, 0x43, 0x4f, 0x50, 0x59, 0x52, 0x49, 0x47, 0x48, 0x54, 0x12, 0x1d,
	0x0a, 0x0a, 0x53, 0x49, 0x54, 0x45, 0x5f, 0x42, 0x45, 0x49, 0x41, 0x4e, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x53, 0x49, 0x54, 0x45, 0x42, 0x45, 0x49, 0x41, 0x4e, 0x12, 0x21, 0x0a,
	0x0c, 0x53, 0x49, 0x54, 0x45, 0x5f, 0x46, 0x41, 0x56, 0x49, 0x43, 0x4f, 0x4e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x49, 0x54, 0x45, 0x46, 0x41, 0x56, 0x49, 0x43, 0x4f, 0x4e,
	0x12, 0x1b, 0x0a, 0x09, 0x53, 0x49, 0x54, 0x45, 0x5f, 0x4c, 0x4f, 0x47, 0x4f, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x49, 0x54, 0x45, 0x4c, 0x4f, 0x47, 0x4f, 0x12, 0x20, 0x0a,
	0x0c, 0x53, 0x49, 0x54, 0x45, 0x5f, 0x41, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x53, 0x49, 0x54, 0x45, 0x41, 0x44, 0x54, 0x59, 0x50, 0x45, 0x12,
	0x22, 0x0a, 0x0d, 0x53, 0x49, 0x54, 0x45, 0x5f, 0x41, 0x44, 0x5f, 0x43, 0x4f, 0x56, 0x45, 0x52,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x53, 0x49, 0x54, 0x45, 0x41, 0x44, 0x43, 0x4f,
	0x56, 0x45, 0x52, 0x12, 0x24, 0x0a, 0x0e, 0x53, 0x49, 0x54, 0x45, 0x5f, 0x41, 0x44, 0x5f, 0x53,
	0x4c, 0x49, 0x44, 0x45, 0x53, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x53, 0x49, 0x54,
	0x45, 0x41, 0x44, 0x53, 0x4c, 0x49, 0x44, 0x45, 0x53, 0x22, 0xff, 0x02, 0x0a, 0x14, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x12, 0x39, 0x0a, 0x19, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x5f, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x5f, 0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x4c, 0x4f, 0x43, 0x4b, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x12, 0x3d, 0x0a,
	0x1b, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f,
	0x4c, 0x4f, 0x43, 0x4b, 0x5f, 0x4d, 0x49, 0x4e, 0x55, 0x54, 0x45, 0x53, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x18, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x52, 0x4f,
	0x52, 0x4c, 0x4f, 0x43, 0x4b, 0x4d, 0x49, 0x4e, 0x55, 0x54, 0x45, 0x53, 0x12, 0x38, 0x0a, 0x18,
	0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x41, 0x59, 0x53, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x16,
	0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x45, 0x58, 0x50, 0x49, 0x52, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x44, 0x41, 0x59, 0x53, 0x12, 0x47, 0x0a, 0x20, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f,
	0x52, 0x44, 0x5f, 0x45, 0x58, 0x50, 0x49, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x57, 0x41,
	0x52, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x44, 0x41, 0x59, 0x53, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x1d, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x45, 0x58, 0x50, 0x49, 0x52, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x57, 0x41, 0x52, 0x4e, 0x49, 0x4e, 0x47, 0x44, 0x41, 0x59, 0x53, 0x12,
	0x3a, 0x0a, 0x19, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x5f, 0x52, 0x45, 0x50, 0x45,
	0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x49, 0x4d, 0x45, 0x53, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x17, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x52, 0x45, 0x50, 0x45,
	0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x54, 0x49, 0x4d, 0x45, 0x53, 0x12, 0x2e, 0x0a, 0x13, 0x50,
	0x41, 0x53, 0x53, 0x57, 0x4f, 0x52, 0x44, 0x5f, 0x4d, 0x49, 0x4e, 0x5f, 0x4c, 0x45, 0x4e, 0x47,
	0x54, 0x48, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x50, 0x41, 0x53, 0x53, 0x57, 0x4f,
	0x52, 0x44, 0x4d, 0x49, 0x4e, 0x4c, 0x45, 0x4e, 0x47, 0x54, 0x48, 0x22, 0x86, 0x02, 0x0a, 0x18,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x29, 0x0a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3b,
	0x0a, 0x0b, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52,
	0x0a, 0x62, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x47, 0x0a, 0x0f, 0x73,
	0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x0e, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x22, 0x76, 0x0a, 0x19, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x33, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x32, 0xbf, 0x01, 0x0a,
	0x18, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x51, 0x0a, 0x04, 0x53, 0x61, 0x76,
	0x65, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x70, 0x70,
	0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x03,
	0x47, 0x65, 0x74, 0x12, 0x22, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d,
	0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_applicationOptionService_proto_rawDescOnce sync.Once
	file_applicationOptionService_proto_rawDescData = file_applicationOptionService_proto_rawDesc
)

func file_applicationOptionService_proto_rawDescGZIP() []byte {
	file_applicationOptionService_proto_rawDescOnce.Do(func() {
		file_applicationOptionService_proto_rawDescData = protoimpl.X.CompressGZIP(file_applicationOptionService_proto_rawDescData)
	})
	return file_applicationOptionService_proto_rawDescData
}

var file_applicationOptionService_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_applicationOptionService_proto_goTypes = []interface{}{
	(*ApplicationOption)(nil),         // 0: services.ApplicationOption
	(*OptionBaseConfig)(nil),          // 1: services.OptionBaseConfig
	(*OptionSecurityConfig)(nil),      // 2: services.OptionSecurityConfig
	(*ApplicationOptionRequest)(nil),  // 3: services.ApplicationOptionRequest
	(*ApplicationOptionResponse)(nil), // 4: services.ApplicationOptionResponse
}
var file_applicationOptionService_proto_depIdxs = []int32{
	1, // 0: services.ApplicationOption.base_config:type_name -> services.OptionBaseConfig
	2, // 1: services.ApplicationOption.security_config:type_name -> services.OptionSecurityConfig
	1, // 2: services.ApplicationOptionRequest.base_config:type_name -> services.OptionBaseConfig
	2, // 3: services.ApplicationOptionRequest.security_config:type_name -> services.OptionSecurityConfig
	0, // 4: services.ApplicationOptionResponse.entity:type_name -> services.ApplicationOption
	3, // 5: services.ApplicationOptionService.Save:input_type -> services.ApplicationOptionRequest
	3, // 6: services.ApplicationOptionService.Get:input_type -> services.ApplicationOptionRequest
	4, // 7: services.ApplicationOptionService.Save:output_type -> services.ApplicationOptionResponse
	4, // 8: services.ApplicationOptionService.Get:output_type -> services.ApplicationOptionResponse
	7, // [7:9] is the sub-list for method output_type
	5, // [5:7] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_applicationOptionService_proto_init() }
func file_applicationOptionService_proto_init() {
	if File_applicationOptionService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_applicationOptionService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_applicationOptionService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptionBaseConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_applicationOptionService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptionSecurityConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_applicationOptionService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationOptionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_applicationOptionService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationOptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_applicationOptionService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_applicationOptionService_proto_goTypes,
		DependencyIndexes: file_applicationOptionService_proto_depIdxs,
		MessageInfos:      file_applicationOptionService_proto_msgTypes,
	}.Build()
	File_applicationOptionService_proto = out.File
	file_applicationOptionService_proto_rawDesc = nil
	file_applicationOptionService_proto_goTypes = nil
	file_applicationOptionService_proto_depIdxs = nil
}
