// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: versionMenuService.proto

package services

import (
	common "../common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 超级用户菜单
type VersionMenu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64          `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                              //ID
	VersionId     int32          `protobuf:"varint,2,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`               //版本ID
	ParentId      int64          `protobuf:"varint,3,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`                  //父ID
	Title         string         `protobuf:"bytes,4,opt,name=title,proto3" json:"title,omitempty"`                                         //导航标题
	Type          string         `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`                                           //类型 1目录 2菜单 3按钮
	Path          string         `protobuf:"bytes,6,opt,name=path,proto3" json:"path,omitempty"`                                           //路由地址
	Name          string         `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`                                           //导航名称
	Component     string         `protobuf:"bytes,8,opt,name=component,proto3" json:"component,omitempty"`                                 //组件路径
	Redirect      string         `protobuf:"bytes,9,opt,name=redirect,proto3" json:"redirect,omitempty"`                                   //路由重定向
	Icon          string         `protobuf:"bytes,10,opt,name=icon,proto3" json:"icon,omitempty"`                                          //图标
	Permission    string         `protobuf:"bytes,11,opt,name=permission,proto3" json:"permission,omitempty"`                              //权限标识
	Locale        string         `protobuf:"bytes,12,opt,name=locale,proto3" json:"locale,omitempty"`                                      //语言包键名
	IsCache       string         `protobuf:"bytes,13,opt,name=is_cache,json=isCache,proto3" json:"is_cache,omitempty"`                     //是否缓存: 1是 0否
	IsHidden      string         `protobuf:"bytes,14,opt,name=is_hidden,json=isHidden,proto3" json:"is_hidden,omitempty"`                  //是否隐藏: 1是 0否
	IsExternal    string         `protobuf:"bytes,15,opt,name=is_external,json=isExternal,proto3" json:"is_external,omitempty"`            //是否外链: 1是 0否
	IsRequireAuth string         `protobuf:"bytes,16,opt,name=is_require_auth,json=isRequireAuth,proto3" json:"is_require_auth,omitempty"` //是否需要登录鉴权: 1是 0否
	Sort          int32          `protobuf:"varint,17,opt,name=sort,proto3" json:"sort,omitempty"`                                         //排序值
	Status        string         `protobuf:"bytes,18,opt,name=status,proto3" json:"status,omitempty"`                                      //状态: （1：启用；2：禁用）
	CreatedAt     string         `protobuf:"bytes,23,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string         `protobuf:"bytes,24,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Parent        *VersionMenu   `protobuf:"bytes,25,opt,name=parent,proto3" json:"parent,omitempty"`
	Children      []*VersionMenu `protobuf:"bytes,26,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *VersionMenu) Reset() {
	*x = VersionMenu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_versionMenuService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionMenu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionMenu) ProtoMessage() {}

func (x *VersionMenu) ProtoReflect() protoreflect.Message {
	mi := &file_versionMenuService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionMenu.ProtoReflect.Descriptor instead.
func (*VersionMenu) Descriptor() ([]byte, []int) {
	return file_versionMenuService_proto_rawDescGZIP(), []int{0}
}

func (x *VersionMenu) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VersionMenu) GetVersionId() int32 {
	if x != nil {
		return x.VersionId
	}
	return 0
}

func (x *VersionMenu) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *VersionMenu) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VersionMenu) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *VersionMenu) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *VersionMenu) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VersionMenu) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *VersionMenu) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *VersionMenu) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *VersionMenu) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *VersionMenu) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *VersionMenu) GetIsCache() string {
	if x != nil {
		return x.IsCache
	}
	return ""
}

func (x *VersionMenu) GetIsHidden() string {
	if x != nil {
		return x.IsHidden
	}
	return ""
}

func (x *VersionMenu) GetIsExternal() string {
	if x != nil {
		return x.IsExternal
	}
	return ""
}

func (x *VersionMenu) GetIsRequireAuth() string {
	if x != nil {
		return x.IsRequireAuth
	}
	return ""
}

func (x *VersionMenu) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *VersionMenu) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *VersionMenu) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *VersionMenu) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *VersionMenu) GetParent() *VersionMenu {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *VersionMenu) GetChildren() []*VersionMenu {
	if x != nil {
		return x.Children
	}
	return nil
}

type VersionMenuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged    int64  `protobuf:"varint,1,opt,name=paged,proto3" json:"paged,omitempty"`
	PageSize int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Sorting  string `protobuf:"bytes,3,opt,name=sorting,proto3" json:"sorting,omitempty"`
	//base params
	Id          int64   `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	Name        string  `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Title       string  `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	VersionId   int32   `protobuf:"varint,7,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`
	ParentId    int64   `protobuf:"varint,8,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	VersionCode string  `protobuf:"bytes,9,opt,name=version_code,json=versionCode,proto3" json:"version_code,omitempty"`
	IsAdmin     string  `protobuf:"bytes,11,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
	Ids         []int64 `protobuf:"varint,16,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *VersionMenuRequest) Reset() {
	*x = VersionMenuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_versionMenuService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionMenuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionMenuRequest) ProtoMessage() {}

func (x *VersionMenuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_versionMenuService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionMenuRequest.ProtoReflect.Descriptor instead.
func (*VersionMenuRequest) Descriptor() ([]byte, []int) {
	return file_versionMenuService_proto_rawDescGZIP(), []int{1}
}

func (x *VersionMenuRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *VersionMenuRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *VersionMenuRequest) GetSorting() string {
	if x != nil {
		return x.Sorting
	}
	return ""
}

func (x *VersionMenuRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *VersionMenuRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *VersionMenuRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *VersionMenuRequest) GetVersionId() int32 {
	if x != nil {
		return x.VersionId
	}
	return 0
}

func (x *VersionMenuRequest) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *VersionMenuRequest) GetVersionCode() string {
	if x != nil {
		return x.VersionCode
	}
	return ""
}

func (x *VersionMenuRequest) GetIsAdmin() string {
	if x != nil {
		return x.IsAdmin
	}
	return ""
}

func (x *VersionMenuRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

//
type VersionMenuResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *VersionMenu   `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager  *common.Pager  `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items  []*VersionMenu `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Info   string         `protobuf:"bytes,4,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *VersionMenuResponse) Reset() {
	*x = VersionMenuResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_versionMenuService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VersionMenuResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionMenuResponse) ProtoMessage() {}

func (x *VersionMenuResponse) ProtoReflect() protoreflect.Message {
	mi := &file_versionMenuService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionMenuResponse.ProtoReflect.Descriptor instead.
func (*VersionMenuResponse) Descriptor() ([]byte, []int) {
	return file_versionMenuService_proto_rawDescGZIP(), []int{2}
}

func (x *VersionMenuResponse) GetEntity() *VersionMenu {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *VersionMenuResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *VersionMenuResponse) GetItems() []*VersionMenu {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *VersionMenuResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

var File_versionMenuService_proto protoreflect.FileDescriptor

var file_versionMenuService_proto_rawDesc = []byte{
	0x0a, 0x18, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xfe, 0x04, 0x0a, 0x0b, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69,
	0x63, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69,
	0x73, 0x5f, 0x63, 0x61, 0x63, 0x68, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69,
	0x73, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x68, 0x69, 0x64,
	0x64, 0x65, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x73, 0x48, 0x69, 0x64,
	0x64, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x45, 0x78, 0x74, 0x65,
	0x72, 0x6e, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69,
	0x72, 0x65, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x2d, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x31, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x08,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0xa7, 0x02, 0x0a, 0x12, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05,
	0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69,
	0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69,
	0x64, 0x73, 0x22, 0xaa, 0x01, 0x0a, 0x13, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x06, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6e,
	0x75, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x2b,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x6e, 0x75, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x32,
	0xb6, 0x04, 0x0a, 0x12, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3d, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x15, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x4d, 0x65, 0x6e, 0x75, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12,
	0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0a, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x48, 0x69, 0x64, 0x65, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x1a, 0x1d,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x40, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6e, 0x75,
	0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x47, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1c, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x6e, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6e, 0x75,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x04, 0x4c, 0x69,
	0x73, 0x74, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x45, 0x0a, 0x04, 0x54, 0x72, 0x65, 0x65, 0x12, 0x1c, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6e, 0x75,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a, 0x0b, 0x2f, 0x2e, 0x3b, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_versionMenuService_proto_rawDescOnce sync.Once
	file_versionMenuService_proto_rawDescData = file_versionMenuService_proto_rawDesc
)

func file_versionMenuService_proto_rawDescGZIP() []byte {
	file_versionMenuService_proto_rawDescOnce.Do(func() {
		file_versionMenuService_proto_rawDescData = protoimpl.X.CompressGZIP(file_versionMenuService_proto_rawDescData)
	})
	return file_versionMenuService_proto_rawDescData
}

var file_versionMenuService_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_versionMenuService_proto_goTypes = []interface{}{
	(*VersionMenu)(nil),         // 0: services.VersionMenu
	(*VersionMenuRequest)(nil),  // 1: services.VersionMenuRequest
	(*VersionMenuResponse)(nil), // 2: services.VersionMenuResponse
	(*common.Pager)(nil),        // 3: common.Pager
}
var file_versionMenuService_proto_depIdxs = []int32{
	0,  // 0: services.VersionMenu.parent:type_name -> services.VersionMenu
	0,  // 1: services.VersionMenu.children:type_name -> services.VersionMenu
	0,  // 2: services.VersionMenuResponse.entity:type_name -> services.VersionMenu
	3,  // 3: services.VersionMenuResponse.pager:type_name -> common.Pager
	0,  // 4: services.VersionMenuResponse.items:type_name -> services.VersionMenu
	0,  // 5: services.VersionMenuService.Get:input_type -> services.VersionMenu
	0,  // 6: services.VersionMenuService.Create:input_type -> services.VersionMenu
	0,  // 7: services.VersionMenuService.Update:input_type -> services.VersionMenu
	0,  // 8: services.VersionMenuService.UpdateHide:input_type -> services.VersionMenu
	0,  // 9: services.VersionMenuService.Delete:input_type -> services.VersionMenu
	1,  // 10: services.VersionMenuService.Search:input_type -> services.VersionMenuRequest
	1,  // 11: services.VersionMenuService.List:input_type -> services.VersionMenuRequest
	1,  // 12: services.VersionMenuService.Tree:input_type -> services.VersionMenuRequest
	2,  // 13: services.VersionMenuService.Get:output_type -> services.VersionMenuResponse
	2,  // 14: services.VersionMenuService.Create:output_type -> services.VersionMenuResponse
	2,  // 15: services.VersionMenuService.Update:output_type -> services.VersionMenuResponse
	2,  // 16: services.VersionMenuService.UpdateHide:output_type -> services.VersionMenuResponse
	2,  // 17: services.VersionMenuService.Delete:output_type -> services.VersionMenuResponse
	2,  // 18: services.VersionMenuService.Search:output_type -> services.VersionMenuResponse
	2,  // 19: services.VersionMenuService.List:output_type -> services.VersionMenuResponse
	2,  // 20: services.VersionMenuService.Tree:output_type -> services.VersionMenuResponse
	13, // [13:21] is the sub-list for method output_type
	5,  // [5:13] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_versionMenuService_proto_init() }
func file_versionMenuService_proto_init() {
	if File_versionMenuService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_versionMenuService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionMenu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_versionMenuService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionMenuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_versionMenuService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VersionMenuResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_versionMenuService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_versionMenuService_proto_goTypes,
		DependencyIndexes: file_versionMenuService_proto_depIdxs,
		MessageInfos:      file_versionMenuService_proto_msgTypes,
	}.Build()
	File_versionMenuService_proto = out.File
	file_versionMenuService_proto_rawDesc = nil
	file_versionMenuService_proto_goTypes = nil
	file_versionMenuService_proto_depIdxs = nil
}
