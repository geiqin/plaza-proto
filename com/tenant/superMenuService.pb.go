// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: superMenuService.proto

package services

import (
	common "../common"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 超级用户菜单
type SuperMenu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                              //ID
	ParentId      int64        `protobuf:"varint,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`                  //父ID
	Title         string       `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`                                         //导航标题
	Type          string       `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`                                           //类型 1目录 2菜单 3按钮
	Path          string       `protobuf:"bytes,5,opt,name=path,proto3" json:"path,omitempty"`                                           //路由地址
	Name          string       `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`                                           //导航名称
	Component     string       `protobuf:"bytes,7,opt,name=component,proto3" json:"component,omitempty"`                                 //组件路径
	Redirect      string       `protobuf:"bytes,8,opt,name=redirect,proto3" json:"redirect,omitempty"`                                   //路由重定向
	Icon          string       `protobuf:"bytes,9,opt,name=icon,proto3" json:"icon,omitempty"`                                           //图标
	Permission    string       `protobuf:"bytes,10,opt,name=permission,proto3" json:"permission,omitempty"`                              //权限标识
	Locale        string       `protobuf:"bytes,11,opt,name=locale,proto3" json:"locale,omitempty"`                                      //语言包键名
	IsCache       string       `protobuf:"bytes,12,opt,name=is_cache,json=isCache,proto3" json:"is_cache,omitempty"`                     //是否缓存: 1是 0否
	IsHidden      string       `protobuf:"bytes,13,opt,name=is_hidden,json=isHidden,proto3" json:"is_hidden,omitempty"`                  //是否隐藏: 1是 0否
	IsExternal    string       `protobuf:"bytes,14,opt,name=is_external,json=isExternal,proto3" json:"is_external,omitempty"`            //是否外链: 1是 0否
	IsRequireAuth string       `protobuf:"bytes,15,opt,name=is_require_auth,json=isRequireAuth,proto3" json:"is_require_auth,omitempty"` //是否需要登录鉴权: 1是 0否
	Sort          int32        `protobuf:"varint,16,opt,name=sort,proto3" json:"sort,omitempty"`                                         //排序值
	Status        string       `protobuf:"bytes,17,opt,name=status,proto3" json:"status,omitempty"`                                      //状态: （1：启用；2：禁用）
	CreatedAt     string       `protobuf:"bytes,23,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     string       `protobuf:"bytes,24,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Parent        *SuperMenu   `protobuf:"bytes,25,opt,name=parent,proto3" json:"parent,omitempty"`
	Children      []*SuperMenu `protobuf:"bytes,26,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *SuperMenu) Reset() {
	*x = SuperMenu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superMenuService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuperMenu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuperMenu) ProtoMessage() {}

func (x *SuperMenu) ProtoReflect() protoreflect.Message {
	mi := &file_superMenuService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuperMenu.ProtoReflect.Descriptor instead.
func (*SuperMenu) Descriptor() ([]byte, []int) {
	return file_superMenuService_proto_rawDescGZIP(), []int{0}
}

func (x *SuperMenu) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SuperMenu) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *SuperMenu) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SuperMenu) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *SuperMenu) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *SuperMenu) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SuperMenu) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *SuperMenu) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *SuperMenu) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *SuperMenu) GetPermission() string {
	if x != nil {
		return x.Permission
	}
	return ""
}

func (x *SuperMenu) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *SuperMenu) GetIsCache() string {
	if x != nil {
		return x.IsCache
	}
	return ""
}

func (x *SuperMenu) GetIsHidden() string {
	if x != nil {
		return x.IsHidden
	}
	return ""
}

func (x *SuperMenu) GetIsExternal() string {
	if x != nil {
		return x.IsExternal
	}
	return ""
}

func (x *SuperMenu) GetIsRequireAuth() string {
	if x != nil {
		return x.IsRequireAuth
	}
	return ""
}

func (x *SuperMenu) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *SuperMenu) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *SuperMenu) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *SuperMenu) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *SuperMenu) GetParent() *SuperMenu {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *SuperMenu) GetChildren() []*SuperMenu {
	if x != nil {
		return x.Children
	}
	return nil
}

type UserSuperMenu struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string             `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`           //名称
	Path      string             `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`           //路径
	Redirect  string             `protobuf:"bytes,3,opt,name=redirect,proto3" json:"redirect,omitempty"`   //路由重定向
	Component string             `protobuf:"bytes,4,opt,name=component,proto3" json:"component,omitempty"` //组件路径
	Meta      *UserSuperMenuMeta `protobuf:"bytes,5,opt,name=meta,proto3" json:"meta,omitempty"`           //元素
	Children  []*UserSuperMenu   `protobuf:"bytes,6,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *UserSuperMenu) Reset() {
	*x = UserSuperMenu{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superMenuService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSuperMenu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSuperMenu) ProtoMessage() {}

func (x *UserSuperMenu) ProtoReflect() protoreflect.Message {
	mi := &file_superMenuService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSuperMenu.ProtoReflect.Descriptor instead.
func (*UserSuperMenu) Descriptor() ([]byte, []int) {
	return file_superMenuService_proto_rawDescGZIP(), []int{1}
}

func (x *UserSuperMenu) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserSuperMenu) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *UserSuperMenu) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *UserSuperMenu) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *UserSuperMenu) GetMeta() *UserSuperMenuMeta {
	if x != nil {
		return x.Meta
	}
	return nil
}

func (x *UserSuperMenu) GetChildren() []*UserSuperMenu {
	if x != nil {
		return x.Children
	}
	return nil
}

type UserSuperMenuMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Icon               string   `protobuf:"bytes,1,opt,name=icon,proto3" json:"icon,omitempty"`                              //菜单图标
	Locale             string   `protobuf:"bytes,2,opt,name=locale,proto3" json:"locale,omitempty"`                          //语言包键名
	RequiresAuth       bool     `protobuf:"varint,3,opt,name=requiresAuth,proto3" json:"requiresAuth,omitempty"`             //是否需要登录鉴权
	HideInMenu         bool     `protobuf:"varint,4,opt,name=hideInMenu,proto3" json:"hideInMenu,omitempty"`                 //是否在左侧菜单中隐藏该项
	HideChildrenInMenu bool     `protobuf:"varint,5,opt,name=hideChildrenInMenu,proto3" json:"hideChildrenInMenu,omitempty"` //强制在左侧菜单中显示单项
	NoAffix            bool     `protobuf:"varint,6,opt,name=noAffix,proto3" json:"noAffix,omitempty"`                       //如果设置为true，标签将不会添加到tab-bar中
	IgnoreCache        bool     `protobuf:"varint,7,opt,name=ignoreCache,proto3" json:"ignoreCache,omitempty"`               //如果设置为true页面将不会被缓存
	ActiveMenu         string   `protobuf:"bytes,8,opt,name=activeMenu,proto3" json:"activeMenu,omitempty"`                  //高亮设置的菜单项
	Order              int32    `protobuf:"varint,9,opt,name=order,proto3" json:"order,omitempty"`                           //排序路由菜单项。如果设置该值，值越高，越靠前
	Roles              []string `protobuf:"bytes,10,rep,name=roles,proto3" json:"roles,omitempty"`                           //配置能访问该页面的角色，如果不匹配，则会被禁止访问该路由页面
}

func (x *UserSuperMenuMeta) Reset() {
	*x = UserSuperMenuMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superMenuService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSuperMenuMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSuperMenuMeta) ProtoMessage() {}

func (x *UserSuperMenuMeta) ProtoReflect() protoreflect.Message {
	mi := &file_superMenuService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSuperMenuMeta.ProtoReflect.Descriptor instead.
func (*UserSuperMenuMeta) Descriptor() ([]byte, []int) {
	return file_superMenuService_proto_rawDescGZIP(), []int{2}
}

func (x *UserSuperMenuMeta) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *UserSuperMenuMeta) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *UserSuperMenuMeta) GetRequiresAuth() bool {
	if x != nil {
		return x.RequiresAuth
	}
	return false
}

func (x *UserSuperMenuMeta) GetHideInMenu() bool {
	if x != nil {
		return x.HideInMenu
	}
	return false
}

func (x *UserSuperMenuMeta) GetHideChildrenInMenu() bool {
	if x != nil {
		return x.HideChildrenInMenu
	}
	return false
}

func (x *UserSuperMenuMeta) GetNoAffix() bool {
	if x != nil {
		return x.NoAffix
	}
	return false
}

func (x *UserSuperMenuMeta) GetIgnoreCache() bool {
	if x != nil {
		return x.IgnoreCache
	}
	return false
}

func (x *UserSuperMenuMeta) GetActiveMenu() string {
	if x != nil {
		return x.ActiveMenu
	}
	return ""
}

func (x *UserSuperMenuMeta) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *UserSuperMenuMeta) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

type SuperMenuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged    int64  `protobuf:"varint,1,opt,name=paged,proto3" json:"paged,omitempty"`
	PageSize int64  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Sorting  string `protobuf:"bytes,3,opt,name=sorting,proto3" json:"sorting,omitempty"`
	//base params
	Id       int64   `protobuf:"varint,4,opt,name=id,proto3" json:"id,omitempty"`
	Name     string  `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Title    string  `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	ParentId int64   `protobuf:"varint,8,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	IsAdmin  string  `protobuf:"bytes,11,opt,name=is_admin,json=isAdmin,proto3" json:"is_admin,omitempty"`
	Ids      []int64 `protobuf:"varint,16,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *SuperMenuRequest) Reset() {
	*x = SuperMenuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superMenuService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuperMenuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuperMenuRequest) ProtoMessage() {}

func (x *SuperMenuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_superMenuService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuperMenuRequest.ProtoReflect.Descriptor instead.
func (*SuperMenuRequest) Descriptor() ([]byte, []int) {
	return file_superMenuService_proto_rawDescGZIP(), []int{3}
}

func (x *SuperMenuRequest) GetPaged() int64 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *SuperMenuRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *SuperMenuRequest) GetSorting() string {
	if x != nil {
		return x.Sorting
	}
	return ""
}

func (x *SuperMenuRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SuperMenuRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SuperMenuRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *SuperMenuRequest) GetParentId() int64 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *SuperMenuRequest) GetIsAdmin() string {
	if x != nil {
		return x.IsAdmin
	}
	return ""
}

func (x *SuperMenuRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

//
type SuperMenuResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *SuperMenu    `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity,omitempty"`
	Pager  *common.Pager `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager,omitempty"`
	Items  []*SuperMenu  `protobuf:"bytes,3,rep,name=items,proto3" json:"items,omitempty"`
	Info   string        `protobuf:"bytes,4,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *SuperMenuResponse) Reset() {
	*x = SuperMenuResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superMenuService_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SuperMenuResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SuperMenuResponse) ProtoMessage() {}

func (x *SuperMenuResponse) ProtoReflect() protoreflect.Message {
	mi := &file_superMenuService_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SuperMenuResponse.ProtoReflect.Descriptor instead.
func (*SuperMenuResponse) Descriptor() ([]byte, []int) {
	return file_superMenuService_proto_rawDescGZIP(), []int{4}
}

func (x *SuperMenuResponse) GetEntity() *SuperMenu {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *SuperMenuResponse) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *SuperMenuResponse) GetItems() []*SuperMenu {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *SuperMenuResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

type UserSuperMenuResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Menus     []*UserSuperMenu `protobuf:"bytes,1,rep,name=menus,proto3" json:"menus,omitempty"`
	UserRoles []string         `protobuf:"bytes,2,rep,name=user_roles,json=userRoles,proto3" json:"user_roles,omitempty"`
	Info      string           `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *UserSuperMenuResponse) Reset() {
	*x = UserSuperMenuResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_superMenuService_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSuperMenuResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSuperMenuResponse) ProtoMessage() {}

func (x *UserSuperMenuResponse) ProtoReflect() protoreflect.Message {
	mi := &file_superMenuService_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSuperMenuResponse.ProtoReflect.Descriptor instead.
func (*UserSuperMenuResponse) Descriptor() ([]byte, []int) {
	return file_superMenuService_proto_rawDescGZIP(), []int{5}
}

func (x *UserSuperMenuResponse) GetMenus() []*UserSuperMenu {
	if x != nil {
		return x.Menus
	}
	return nil
}

func (x *UserSuperMenuResponse) GetUserRoles() []string {
	if x != nil {
		return x.UserRoles
	}
	return nil
}

func (x *UserSuperMenuResponse) GetInfo() string {
	if x != nil {
		return x.Info
	}
	return ""
}

var File_superMenuService_proto protoreflect.FileDescriptor

var file_superMenuService_proto_rawDesc = []byte{
	0x0a, 0x16, 0x73, 0x75, 0x70, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x1a, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd9, 0x04, 0x0a, 0x09, 0x53, 0x75, 0x70, 0x65, 0x72, 0x4d,
	0x65, 0x6e, 0x75, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x63,
	0x61, 0x63, 0x68, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x73, 0x43, 0x61,
	0x63, 0x68, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x73, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e,
	0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x73, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x12, 0x26, 0x0a, 0x0f, 0x69, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x5f,
	0x61, 0x75, 0x74, 0x68, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x41, 0x75, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x2b, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53,
	0x75, 0x70, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x2f, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x1a, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x75,
	0x70, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x22, 0xd7, 0x01, 0x0a, 0x0d, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x70, 0x65, 0x72, 0x4d,
	0x65, 0x6e, 0x75, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x53, 0x75, 0x70, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x04, 0x6d, 0x65, 0x74, 0x61, 0x12, 0x33, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72,
	0x65, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x70, 0x65, 0x72, 0x4d, 0x65, 0x6e,
	0x75, 0x52, 0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0xbb, 0x02, 0x0a, 0x11,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x75, 0x70, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x4d, 0x65, 0x74,
	0x61, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x22, 0x0a,
	0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x41, 0x75, 0x74, 0x68, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x41, 0x75, 0x74,
	0x68, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x4d, 0x65, 0x6e,
	0x75, 0x12, 0x2e, 0x0a, 0x12, 0x68, 0x69, 0x64, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65,
	0x6e, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x68,
	0x69, 0x64, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x49, 0x6e, 0x4d, 0x65, 0x6e,
	0x75, 0x12, 0x18, 0x0a, 0x07, 0x6e, 0x6f, 0x41, 0x66, 0x66, 0x69, 0x78, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x6e, 0x6f, 0x41, 0x66, 0x66, 0x69, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x69,
	0x67, 0x6e, 0x6f, 0x72, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0b, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x43, 0x61, 0x63, 0x68, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x14, 0x0a,
	0x05, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x0a, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x22, 0xe3, 0x01, 0x0a, 0x10, 0x53, 0x75,
	0x70, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69, 0x73, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x10, 0x0a,
	0x03, 0x69, 0x64, 0x73, 0x18, 0x10, 0x20, 0x03, 0x28, 0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22,
	0xa4, 0x01, 0x0a, 0x11, 0x53, 0x75, 0x70, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73,
	0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72,
	0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x79, 0x0a, 0x15, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75,
	0x70, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2d, 0x0a, 0x05, 0x6d, 0x65, 0x6e, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x75,
	0x70, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x05, 0x6d, 0x65, 0x6e, 0x75, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x52, 0x6f, 0x6c, 0x65, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6e, 0x66,
	0x6f, 0x32, 0xd9, 0x04, 0x0a, 0x10, 0x53, 0x75, 0x70, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x39, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x13, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x4d, 0x65,
	0x6e, 0x75, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x75,
	0x70, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x3c, 0x0a, 0x06, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75,
	0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x70, 0x65,
	0x72, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x3c, 0x0a, 0x06, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x1a, 0x1b,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x4d,
	0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x40, 0x0a,
	0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x69, 0x64, 0x65, 0x12, 0x13, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75,
	0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x70, 0x65,
	0x72, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x3c, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x12, 0x13, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x1a, 0x1b,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x4d,
	0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a,
	0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53,
	0x75, 0x70, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x41, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x04, 0x54, 0x72, 0x65, 0x65, 0x12, 0x1a, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x4d, 0x65,
	0x6e, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x06, 0x52, 0x6f, 0x75, 0x74,
	0x65, 0x73, 0x12, 0x1a, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x75,
	0x70, 0x65, 0x72, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x53, 0x75, 0x70, 0x65, 0x72, 0x4d,
	0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0d, 0x5a,
	0x0b, 0x2f, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_superMenuService_proto_rawDescOnce sync.Once
	file_superMenuService_proto_rawDescData = file_superMenuService_proto_rawDesc
)

func file_superMenuService_proto_rawDescGZIP() []byte {
	file_superMenuService_proto_rawDescOnce.Do(func() {
		file_superMenuService_proto_rawDescData = protoimpl.X.CompressGZIP(file_superMenuService_proto_rawDescData)
	})
	return file_superMenuService_proto_rawDescData
}

var file_superMenuService_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_superMenuService_proto_goTypes = []interface{}{
	(*SuperMenu)(nil),             // 0: services.SuperMenu
	(*UserSuperMenu)(nil),         // 1: services.UserSuperMenu
	(*UserSuperMenuMeta)(nil),     // 2: services.UserSuperMenuMeta
	(*SuperMenuRequest)(nil),      // 3: services.SuperMenuRequest
	(*SuperMenuResponse)(nil),     // 4: services.SuperMenuResponse
	(*UserSuperMenuResponse)(nil), // 5: services.UserSuperMenuResponse
	(*common.Pager)(nil),          // 6: common.Pager
}
var file_superMenuService_proto_depIdxs = []int32{
	0,  // 0: services.SuperMenu.parent:type_name -> services.SuperMenu
	0,  // 1: services.SuperMenu.children:type_name -> services.SuperMenu
	2,  // 2: services.UserSuperMenu.meta:type_name -> services.UserSuperMenuMeta
	1,  // 3: services.UserSuperMenu.children:type_name -> services.UserSuperMenu
	0,  // 4: services.SuperMenuResponse.entity:type_name -> services.SuperMenu
	6,  // 5: services.SuperMenuResponse.pager:type_name -> common.Pager
	0,  // 6: services.SuperMenuResponse.items:type_name -> services.SuperMenu
	1,  // 7: services.UserSuperMenuResponse.menus:type_name -> services.UserSuperMenu
	0,  // 8: services.SuperMenuService.Get:input_type -> services.SuperMenu
	0,  // 9: services.SuperMenuService.Create:input_type -> services.SuperMenu
	0,  // 10: services.SuperMenuService.Update:input_type -> services.SuperMenu
	0,  // 11: services.SuperMenuService.UpdateHide:input_type -> services.SuperMenu
	0,  // 12: services.SuperMenuService.Delete:input_type -> services.SuperMenu
	3,  // 13: services.SuperMenuService.Search:input_type -> services.SuperMenuRequest
	3,  // 14: services.SuperMenuService.List:input_type -> services.SuperMenuRequest
	3,  // 15: services.SuperMenuService.Tree:input_type -> services.SuperMenuRequest
	3,  // 16: services.SuperMenuService.Routes:input_type -> services.SuperMenuRequest
	4,  // 17: services.SuperMenuService.Get:output_type -> services.SuperMenuResponse
	4,  // 18: services.SuperMenuService.Create:output_type -> services.SuperMenuResponse
	4,  // 19: services.SuperMenuService.Update:output_type -> services.SuperMenuResponse
	4,  // 20: services.SuperMenuService.UpdateHide:output_type -> services.SuperMenuResponse
	4,  // 21: services.SuperMenuService.Delete:output_type -> services.SuperMenuResponse
	4,  // 22: services.SuperMenuService.Search:output_type -> services.SuperMenuResponse
	4,  // 23: services.SuperMenuService.List:output_type -> services.SuperMenuResponse
	4,  // 24: services.SuperMenuService.Tree:output_type -> services.SuperMenuResponse
	4,  // 25: services.SuperMenuService.Routes:output_type -> services.SuperMenuResponse
	17, // [17:26] is the sub-list for method output_type
	8,  // [8:17] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_superMenuService_proto_init() }
func file_superMenuService_proto_init() {
	if File_superMenuService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_superMenuService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuperMenu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superMenuService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSuperMenu); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superMenuService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSuperMenuMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superMenuService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuperMenuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superMenuService_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SuperMenuResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_superMenuService_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSuperMenuResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_superMenuService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_superMenuService_proto_goTypes,
		DependencyIndexes: file_superMenuService_proto_depIdxs,
		MessageInfos:      file_superMenuService_proto_msgTypes,
	}.Build()
	File_superMenuService_proto = out.File
	file_superMenuService_proto_rawDesc = nil
	file_superMenuService_proto_goTypes = nil
	file_superMenuService_proto_depIdxs = nil
}
