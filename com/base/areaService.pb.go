// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: areaService.proto

package services

import (
	common "github.com/geiqin/micro-kit/protobuf/common"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// 区域信息
type Area struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id"`
	AreaId            int64   `protobuf:"varint,2,opt,name=area_id,json=areaId,proto3" json:"area_id"`
	LevelType         string  `protobuf:"bytes,3,opt,name=level_type,json=levelType,proto3" json:"level_type"`
	Name              string  `protobuf:"bytes,4,opt,name=name,proto3" json:"name"`
	Shortname         string  `protobuf:"bytes,5,opt,name=shortname,proto3" json:"shortname"`
	ParentPath        string  `protobuf:"bytes,6,opt,name=parent_path,json=parentPath,proto3" json:"parent_path"`
	Province          string  `protobuf:"bytes,7,opt,name=province,proto3" json:"province"`
	City              string  `protobuf:"bytes,8,opt,name=city,proto3" json:"city"`
	District          string  `protobuf:"bytes,9,opt,name=district,proto3" json:"district"`
	ProvinceShortname string  `protobuf:"bytes,10,opt,name=province_shortname,json=provinceShortname,proto3" json:"province_shortname"`
	CityShortname     string  `protobuf:"bytes,11,opt,name=city_shortname,json=cityShortname,proto3" json:"city_shortname"`
	DistrictShortname string  `protobuf:"bytes,12,opt,name=district_shortname,json=districtShortname,proto3" json:"district_shortname"`
	ProvincePinyin    string  `protobuf:"bytes,13,opt,name=province_pinyin,json=provincePinyin,proto3" json:"province_pinyin"`
	CityPinyin        string  `protobuf:"bytes,14,opt,name=city_pinyin,json=cityPinyin,proto3" json:"city_pinyin"`
	DistrictPinyin    string  `protobuf:"bytes,15,opt,name=district_pinyin,json=districtPinyin,proto3" json:"district_pinyin"`
	Pinyin            string  `protobuf:"bytes,16,opt,name=pinyin,proto3" json:"pinyin"`
	Jianpin           string  `protobuf:"bytes,17,opt,name=jianpin,proto3" json:"jianpin"`
	FirstChar         string  `protobuf:"bytes,18,opt,name=first_char,json=firstChar,proto3" json:"first_char"`
	CityCode          string  `protobuf:"bytes,19,opt,name=city_code,json=cityCode,proto3" json:"city_code"`
	ZipCode           string  `protobuf:"bytes,20,opt,name=zip_code,json=zipCode,proto3" json:"zip_code"`
	Lng               string  `protobuf:"bytes,21,opt,name=lng,proto3" json:"lng"`
	Lat               string  `protobuf:"bytes,22,opt,name=lat,proto3" json:"lat"`
	Remark1           string  `protobuf:"bytes,23,opt,name=remark1,proto3" json:"remark1"`
	Remark2           string  `protobuf:"bytes,24,opt,name=remark2,proto3" json:"remark2"`
	Children          []*Area `protobuf:"bytes,25,rep,name=children,proto3" json:"children"`
}

func (x *Area) Reset() {
	*x = Area{}
	if protoimpl.UnsafeEnabled {
		mi := &file_areaService_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Area) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Area) ProtoMessage() {}

func (x *Area) ProtoReflect() protoreflect.Message {
	mi := &file_areaService_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Area.ProtoReflect.Descriptor instead.
func (*Area) Descriptor() ([]byte, []int) {
	return file_areaService_proto_rawDescGZIP(), []int{0}
}

func (x *Area) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Area) GetAreaId() int64 {
	if x != nil {
		return x.AreaId
	}
	return 0
}

func (x *Area) GetLevelType() string {
	if x != nil {
		return x.LevelType
	}
	return ""
}

func (x *Area) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Area) GetShortname() string {
	if x != nil {
		return x.Shortname
	}
	return ""
}

func (x *Area) GetParentPath() string {
	if x != nil {
		return x.ParentPath
	}
	return ""
}

func (x *Area) GetProvince() string {
	if x != nil {
		return x.Province
	}
	return ""
}

func (x *Area) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *Area) GetDistrict() string {
	if x != nil {
		return x.District
	}
	return ""
}

func (x *Area) GetProvinceShortname() string {
	if x != nil {
		return x.ProvinceShortname
	}
	return ""
}

func (x *Area) GetCityShortname() string {
	if x != nil {
		return x.CityShortname
	}
	return ""
}

func (x *Area) GetDistrictShortname() string {
	if x != nil {
		return x.DistrictShortname
	}
	return ""
}

func (x *Area) GetProvincePinyin() string {
	if x != nil {
		return x.ProvincePinyin
	}
	return ""
}

func (x *Area) GetCityPinyin() string {
	if x != nil {
		return x.CityPinyin
	}
	return ""
}

func (x *Area) GetDistrictPinyin() string {
	if x != nil {
		return x.DistrictPinyin
	}
	return ""
}

func (x *Area) GetPinyin() string {
	if x != nil {
		return x.Pinyin
	}
	return ""
}

func (x *Area) GetJianpin() string {
	if x != nil {
		return x.Jianpin
	}
	return ""
}

func (x *Area) GetFirstChar() string {
	if x != nil {
		return x.FirstChar
	}
	return ""
}

func (x *Area) GetCityCode() string {
	if x != nil {
		return x.CityCode
	}
	return ""
}

func (x *Area) GetZipCode() string {
	if x != nil {
		return x.ZipCode
	}
	return ""
}

func (x *Area) GetLng() string {
	if x != nil {
		return x.Lng
	}
	return ""
}

func (x *Area) GetLat() string {
	if x != nil {
		return x.Lat
	}
	return ""
}

func (x *Area) GetRemark1() string {
	if x != nil {
		return x.Remark1
	}
	return ""
}

func (x *Area) GetRemark2() string {
	if x != nil {
		return x.Remark2
	}
	return ""
}

func (x *Area) GetChildren() []*Area {
	if x != nil {
		return x.Children
	}
	return nil
}

//查询参数
type AreaRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Paged    int32  `protobuf:"varint,1,opt,name=paged,proto3" json:"paged"`
	PageSize int32  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size"`
	Keywords string `protobuf:"bytes,3,opt,name=keywords,proto3" json:"keywords"`
	//以下为自定义参数
	Id     int64   `protobuf:"varint,4,opt,name=id,proto3" json:"id"`
	Name   string  `protobuf:"bytes,5,opt,name=name,proto3" json:"name"`
	Type   string  `protobuf:"bytes,6,opt,name=type,proto3" json:"type"`
	Status string  `protobuf:"bytes,7,opt,name=status,proto3" json:"status"`
	Ids    []int64 `protobuf:"varint,8,rep,packed,name=ids,proto3" json:"ids"`
}

func (x *AreaRequest) Reset() {
	*x = AreaRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_areaService_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaRequest) ProtoMessage() {}

func (x *AreaRequest) ProtoReflect() protoreflect.Message {
	mi := &file_areaService_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaRequest.ProtoReflect.Descriptor instead.
func (*AreaRequest) Descriptor() ([]byte, []int) {
	return file_areaService_proto_rawDescGZIP(), []int{1}
}

func (x *AreaRequest) GetPaged() int32 {
	if x != nil {
		return x.Paged
	}
	return 0
}

func (x *AreaRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *AreaRequest) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *AreaRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AreaRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AreaRequest) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AreaRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *AreaRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type AreaData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entity *Area         `protobuf:"bytes,1,opt,name=entity,proto3" json:"entity"`
	Pager  *common.Pager `protobuf:"bytes,2,opt,name=pager,proto3" json:"pager"`
	Items  []*Area       `protobuf:"bytes,3,rep,name=items,proto3" json:"items"`
}

func (x *AreaData) Reset() {
	*x = AreaData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_areaService_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaData) ProtoMessage() {}

func (x *AreaData) ProtoReflect() protoreflect.Message {
	mi := &file_areaService_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaData.ProtoReflect.Descriptor instead.
func (*AreaData) Descriptor() ([]byte, []int) {
	return file_areaService_proto_rawDescGZIP(), []int{2}
}

func (x *AreaData) GetEntity() *Area {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *AreaData) GetPager() *common.Pager {
	if x != nil {
		return x.Pager
	}
	return nil
}

func (x *AreaData) GetItems() []*Area {
	if x != nil {
		return x.Items
	}
	return nil
}

type AreaResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  *AreaData     `protobuf:"bytes,1,opt,name=data,proto3" json:"data"`
	Error *common.Error `protobuf:"bytes,2,opt,name=error,proto3" json:"error"`
}

func (x *AreaResponse) Reset() {
	*x = AreaResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_areaService_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AreaResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AreaResponse) ProtoMessage() {}

func (x *AreaResponse) ProtoReflect() protoreflect.Message {
	mi := &file_areaService_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AreaResponse.ProtoReflect.Descriptor instead.
func (*AreaResponse) Descriptor() ([]byte, []int) {
	return file_areaService_proto_rawDescGZIP(), []int{3}
}

func (x *AreaResponse) GetData() *AreaData {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *AreaResponse) GetError() *common.Error {
	if x != nil {
		return x.Error
	}
	return nil
}

var File_areaService_proto protoreflect.FileDescriptor

var file_areaService_proto_rawDesc = []byte{
	0x0a, 0x11, 0x61, 0x72, 0x65, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x08, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x11, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xf2, 0x05, 0x0a, 0x04, 0x41, 0x72, 0x65, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x61, 0x72, 0x65,
	0x61, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x61, 0x72, 0x65, 0x61,
	0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x63, 0x69, 0x74, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74,
	0x12, 0x2d, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x5f, 0x73, 0x68, 0x6f,
	0x72, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x72,
	0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x53, 0x68, 0x6f, 0x72, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x25, 0x0a, 0x0e, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x69, 0x74, 0x79, 0x53, 0x68, 0x6f,
	0x72, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x5f, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x53, 0x68, 0x6f, 0x72,
	0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63,
	0x65, 0x5f, 0x70, 0x69, 0x6e, 0x79, 0x69, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x70, 0x72, 0x6f, 0x76, 0x69, 0x6e, 0x63, 0x65, 0x50, 0x69, 0x6e, 0x79, 0x69, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x69, 0x74, 0x79, 0x5f, 0x70, 0x69, 0x6e, 0x79, 0x69, 0x6e, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x69, 0x74, 0x79, 0x50, 0x69, 0x6e, 0x79, 0x69, 0x6e, 0x12,
	0x27, 0x0a, 0x0f, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x63, 0x74, 0x5f, 0x70, 0x69, 0x6e, 0x79,
	0x69, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69,
	0x63, 0x74, 0x50, 0x69, 0x6e, 0x79, 0x69, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x69, 0x6e, 0x79,
	0x69, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x69, 0x6e, 0x79, 0x69, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x6a, 0x69, 0x61, 0x6e, 0x70, 0x69, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6a, 0x69, 0x61, 0x6e, 0x70, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x72, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x43, 0x68, 0x61, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x69, 0x74,
	0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x69,
	0x74, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x7a, 0x69, 0x70, 0x5f, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x7a, 0x69, 0x70, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x6e, 0x67, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6c, 0x6e, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x6c, 0x61, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6c, 0x61, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x31,
	0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x31, 0x12,
	0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x32, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x32, 0x12, 0x2a, 0x0a, 0x08, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x19, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x52, 0x08, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0xbe, 0x01, 0x0a, 0x0b, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x70,
	0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x7d, 0x0a, 0x08, 0x41, 0x72, 0x65, 0x61, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x26, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x72,
	0x65, 0x61, 0x52, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x23, 0x0a, 0x05, 0x70, 0x61,
	0x67, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x50, 0x61, 0x67, 0x65, 0x72, 0x52, 0x05, 0x70, 0x61, 0x67, 0x65, 0x72, 0x12,
	0x24, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x52, 0x05,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x5b, 0x0a, 0x0c, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41,
	0x72, 0x65, 0x61, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a,
	0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x05, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x32, 0xeb, 0x01, 0x0a, 0x0b, 0x41, 0x72, 0x65, 0x61, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x2f, 0x0a, 0x03, 0x47, 0x65, 0x74, 0x12, 0x0e, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x1a, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x39, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x15, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e,
	0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x37,
	0x0a, 0x04, 0x54, 0x72, 0x65, 0x65, 0x12, 0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x37, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x15, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x2e, 0x41, 0x72, 0x65, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_areaService_proto_rawDescOnce sync.Once
	file_areaService_proto_rawDescData = file_areaService_proto_rawDesc
)

func file_areaService_proto_rawDescGZIP() []byte {
	file_areaService_proto_rawDescOnce.Do(func() {
		file_areaService_proto_rawDescData = protoimpl.X.CompressGZIP(file_areaService_proto_rawDescData)
	})
	return file_areaService_proto_rawDescData
}

var file_areaService_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_areaService_proto_goTypes = []interface{}{
	(*Area)(nil),         // 0: services.Area
	(*AreaRequest)(nil),  // 1: services.AreaRequest
	(*AreaData)(nil),     // 2: services.AreaData
	(*AreaResponse)(nil), // 3: services.AreaResponse
	(*common.Pager)(nil), // 4: common.Pager
	(*common.Error)(nil), // 5: common.Error
}
var file_areaService_proto_depIdxs = []int32{
	0,  // 0: services.Area.children:type_name -> services.Area
	0,  // 1: services.AreaData.entity:type_name -> services.Area
	4,  // 2: services.AreaData.pager:type_name -> common.Pager
	0,  // 3: services.AreaData.items:type_name -> services.Area
	2,  // 4: services.AreaResponse.data:type_name -> services.AreaData
	5,  // 5: services.AreaResponse.error:type_name -> common.Error
	0,  // 6: services.AreaService.Get:input_type -> services.Area
	1,  // 7: services.AreaService.Search:input_type -> services.AreaRequest
	1,  // 8: services.AreaService.Tree:input_type -> services.AreaRequest
	1,  // 9: services.AreaService.List:input_type -> services.AreaRequest
	3,  // 10: services.AreaService.Get:output_type -> services.AreaResponse
	3,  // 11: services.AreaService.Search:output_type -> services.AreaResponse
	3,  // 12: services.AreaService.Tree:output_type -> services.AreaResponse
	3,  // 13: services.AreaService.List:output_type -> services.AreaResponse
	10, // [10:14] is the sub-list for method output_type
	6,  // [6:10] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_areaService_proto_init() }
func file_areaService_proto_init() {
	if File_areaService_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_areaService_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Area); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_areaService_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_areaService_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_areaService_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AreaResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_areaService_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_areaService_proto_goTypes,
		DependencyIndexes: file_areaService_proto_depIdxs,
		MessageInfos:      file_areaService_proto_msgTypes,
	}.Build()
	File_areaService_proto = out.File
	file_areaService_proto_rawDesc = nil
	file_areaService_proto_goTypes = nil
	file_areaService_proto_depIdxs = nil
}
